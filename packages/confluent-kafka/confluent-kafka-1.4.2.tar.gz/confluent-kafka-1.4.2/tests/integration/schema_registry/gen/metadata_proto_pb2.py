# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: metadata_proto.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='metadata_proto.proto',
  package='Criteo.Glup',
  syntax='proto3',
  serialized_pb=_b('\n\x14metadata_proto.proto\x12\x0b\x43riteo.Glup\x1a google/protobuf/descriptor.proto\"$\n\x13KafkaMessageOptions\x12\r\n\x05topic\x18\x01 \x03(\t\"\x80\x02\n\x07\x44\x61taSet\x12\n\n\x02id\x18\x01 \x01(\t\x12*\n\x06\x66ormat\x18\x02 \x03(\x0b\x32\x1a.Criteo.Glup.DataSetFormat\x12\x36\n\x10partition_scheme\x18\x03 \x01(\x0e\x32\x1c.Criteo.Glup.PartitionScheme\x12\x12\n\njava_class\x18\x04 \x01(\t\x12\x11\n\tfor_tests\x18\x05 \x01(\x08\x12\r\n\x05owner\x18\x06 \x01(\t\x12\x0f\n\x07private\x18\x07 \x01(\x08\x12&\n\x04kind\x18\x08 \x01(\x0e\x32\x18.Criteo.Glup.DataSetKind\x12\x16\n\x0eretention_days\x18\t \x01(\x05\"x\n\x0c\x44\x61taSetChunk\x12)\n\tpartition\x18\x01 \x03(\x0b\x32\x16.Criteo.Glup.Partition\x12*\n\x06\x66ormat\x18\x02 \x01(\x0b\x32\x1a.Criteo.Glup.DataSetFormat\x12\x11\n\tdatasetId\x18\x03 \x01(\t\"\xe6\x02\n\rDataSetFormat\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x30\n\x0b\x66ile_format\x18\x02 \x01(\x0e\x32\x1b.Criteo.Glup.HDFSDataFormat\x12\x36\n\x10partition_scheme\x18\x03 \x01(\x0e\x32\x1c.Criteo.Glup.PartitionScheme\x12\x33\n\x0fstart_partition\x18\x04 \x01(\x0b\x32\x1a.Criteo.Glup.HDFSPartition\x12\x31\n\rend_partition\x18\x05 \x01(\x0b\x32\x1a.Criteo.Glup.HDFSPartition\x12\x16\n\x0eretention_days\x18\x07 \x01(\x05\x12\x10\n\x08priority\x18\x08 \x01(\x05\x12\r\n\x05label\x18\t \x01(\t\x12\x36\n\x10monitoring_level\x18\n \x01(\x0e\x32\x1c.Criteo.Glup.MonitoringLevelJ\x04\x08\x06\x10\x07\"\xce\x19\n\x0bHDFSOptions\x12\x36\n\x06import\x18\x03 \x03(\x0b\x32&.Criteo.Glup.HDFSOptions.ImportOptions\x1a\x86\x19\n\rImportOptions\x12\r\n\x05owner\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x32\n\x0cpartitioning\x18\x04 \x01(\x0e\x32\x1c.Criteo.Glup.PartitionScheme\x12+\n\x06\x66ormat\x18\x05 \x01(\x0e\x32\x1b.Criteo.Glup.HDFSDataFormat\x12\x0f\n\x07private\x18\x06 \x01(\x08\x12\x43\n\tgenerator\x18\x0b \x03(\x0b\x32\x30.Criteo.Glup.HDFSOptions.ImportOptions.Generator\x12\x39\n\x04view\x18\x0c \x03(\x0b\x32+.Criteo.Glup.HDFSOptions.ImportOptions.View\x1a\x90\x01\n\x04View\x12\x45\n\x04hive\x18\n \x01(\x0b\x32\x37.Criteo.Glup.HDFSOptions.ImportOptions.View.HiveOptions\x1a\x41\n\x0bHiveOptions\x12\x32\n\x0cpartitioning\x18\x03 \x01(\x0e\x32\x1c.Criteo.Glup.PartitionScheme\x1a\xd2\x15\n\tGenerator\x12V\n\ndataloader\x18\x01 \x01(\x0b\x32\x42.Criteo.Glup.HDFSOptions.ImportOptions.Generator.DataloaderOptions\x12V\n\nkafka2hdfs\x18\x02 \x01(\x0b\x32\x42.Criteo.Glup.HDFSOptions.ImportOptions.Generator.Kafka2HdfsOptions\x12J\n\x04sync\x18\x03 \x01(\x0b\x32<.Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions\x12R\n\x08\x65xternal\x18\x04 \x01(\x0b\x32@.Criteo.Glup.HDFSOptions.ImportOptions.Generator.ExternalOptions\x12N\n\x06\x62\x61\x63kup\x18\x05 \x01(\x0b\x32>.Criteo.Glup.HDFSOptions.ImportOptions.Generator.BackupOptions\x12X\n\x0btranscoding\x18\x06 \x01(\x0b\x32\x43.Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions\x12N\n\x06kacoha\x18\x07 \x01(\x0b\x32>.Criteo.Glup.HDFSOptions.ImportOptions.Generator.KaCoHaOptions\x12R\n\x0b\x64\x65\x64uplicate\x18\x08 \x01(\x0b\x32=.Criteo.Glup.HDFSOptions.ImportOptions.Generator.DedupOptions\x12P\n\x07sampler\x18\t \x01(\x0b\x32?.Criteo.Glup.HDFSOptions.ImportOptions.Generator.SamplerOptions\x12V\n\ncomparator\x18\n \x01(\x0b\x32\x42.Criteo.Glup.HDFSOptions.ImportOptions.Generator.ComparatorOptions\x12\"\n\x02to\x18\xfa\x01 \x03(\x0b\x32\x15.Criteo.Glup.Location\x12\x12\n\tnamespace\x18\xfb\x01 \x01(\t\x12\x13\n\nstart_date\x18\xfd\x01 \x01(\t\x12\x12\n\tstop_date\x18\xfe\x01 \x01(\t\x12\x12\n\tignore_cn\x18\xff\x01 \x01(\x08\x1a\x9a\x01\n\x0c\x44\x65\x64upOptions\x12\x18\n\x10input_dataset_id\x18\x01 \x01(\t\x12\x1a\n\x12input_format_label\x18\x02 \x01(\t\x12\x19\n\x11output_dataset_id\x18\x03 \x01(\t\x12\x1b\n\x13output_format_label\x18\x04 \x01(\t\x12\x1c\n\x14use_hippo_cuttle_job\x18\x05 \x01(\x08\x1au\n\x11Kafka2HdfsOptions\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65\x64uplicate\x18\x03 \x01(\x08\x12\x19\n\x11output_dataset_id\x18\x04 \x01(\t\x12\x1b\n\x13output_format_label\x18\x05 \x01(\tJ\x04\x08\x02\x10\x03\x1aK\n\x0cKacohaConfig\x12\x1b\n\x13partitions_per_task\x18\x01 \x01(\x05\x12\x1e\n\x16poll_buffer_size_bytes\x18\x02 \x01(\x05\x1a\x87\x01\n\x11KacohaConfigPerDc\x12#\n\x02\x64\x63\x18\x01 \x01(\x0e\x32\x17.Criteo.Glup.DataCenter\x12M\n\x06\x63onfig\x18\x02 \x01(\x0b\x32=.Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfig\x1a\x95\x02\n\rKaCoHaOptions\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x19\n\x11output_dataset_id\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65\x64uplicate\x18\x03 \x01(\x08\x12M\n\x06\x63onfig\x18\x04 \x01(\x0b\x32=.Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfig\x12\x1b\n\x13output_format_label\x18\x05 \x01(\t\x12Y\n\rconfig_per_dc\x18\x06 \x03(\x0b\x32\x42.Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfigPerDc\x1a<\n\x11\x44\x61taloaderOptions\x12\'\n\x08platform\x18\x01 \x03(\x0e\x32\x15.Criteo.Glup.Platform\x1a\xf1\x01\n\x0bSyncOptions\x12#\n\x04\x66rom\x18\x01 \x01(\x0b\x32\x15.Criteo.Glup.Location\x12\x18\n\x10source_namespace\x18\x03 \x01(\t\x12(\n\tplatforms\x18\x06 \x03(\x0e\x32\x15.Criteo.Glup.Platform\x12\x16\n\x0eis_backfilling\x18\x08 \x01(\x08\x12\x10\n\x08to_label\x18\t \x01(\t\x12\x15\n\rto_dataset_id\x18\n \x01(\t\x12\x18\n\x10with_backfilling\x18\x0b \x01(\x08\x12\x1e\n\x16is_scheduled_on_source\x18\x0c \x01(\x08\x1ax\n\rBackupOptions\x12#\n\x04\x66rom\x18\x01 \x01(\x0b\x32\x15.Criteo.Glup.Location\x12\x18\n\x10source_namespace\x18\x02 \x01(\t\x12(\n\tplatforms\x18\x03 \x03(\x0e\x32\x15.Criteo.Glup.Platform\x1a\x83\x02\n\x12TranscodingOptions\x12\x18\n\x10input_dataset_id\x18\x01 \x01(\t\x12\x19\n\x11output_dataset_id\x18\x02 \x01(\t\x12\x31\n\x0cinput_format\x18\x03 \x01(\x0e\x32\x1b.Criteo.Glup.HDFSDataFormat\x12\x32\n\routput_format\x18\x04 \x01(\x0e\x32\x1b.Criteo.Glup.HDFSDataFormat\x12\x1b\n\x13input_dataset_label\x18\x05 \x01(\t\x12\x1c\n\x14output_dataset_label\x18\x06 \x01(\t\x12\x16\n\x0eis_by_platform\x18\x07 \x01(\x08\x1a\x95\x01\n\x0eSamplerOptions\x12\x18\n\x10input_dataset_id\x18\x01 \x01(\t\x12\x1a\n\x12input_format_label\x18\x02 \x01(\t\x12\x19\n\x11output_dataset_id\x18\x03 \x01(\t\x12\x1b\n\x13output_format_label\x18\x04 \x01(\t\x12\x15\n\rsampling_rate\x18\x05 \x01(\x02\x1a\xa7\x01\n\x11\x43omparatorOptions\x12\x17\n\x0fleft_dataset_id\x18\x01 \x01(\t\x12\x19\n\x11left_format_label\x18\x02 \x01(\t\x12\x18\n\x10right_dataset_id\x18\x03 \x01(\t\x12\x1a\n\x12right_format_label\x18\x04 \x01(\t\x12\x10\n\x08hostname\x18\x05 \x01(\t\x12\x16\n\x0eignored_fields\x18\x06 \x01(\t\x1a\x11\n\x0f\x45xternalOptions\"9\n\x18ProducerTransportOptions\x12\x0e\n\x06syslog\x18\x01 \x01(\x08\x12\r\n\x05kafka\x18\x02 \x01(\x08\"8\n\x0fPropertyOptions\x12\x10\n\x08valuable\x18\x01 \x01(\x08\x12\x13\n\x0bhigh_volume\x18\x02 \x01(\x08\"\xcb\x02\n\x0bGlupOptions\x12/\n\x05kafka\x18\x01 \x01(\x0b\x32 .Criteo.Glup.KafkaMessageOptions\x12&\n\x04hdfs\x18\x02 \x01(\x0b\x32\x18.Criteo.Glup.HDFSOptions\x12\x14\n\x0csampling_pct\x18\x03 \x01(\r\x12\x1c\n\x14preprod_sampling_pct\x18\x04 \x01(\r\x12%\n\x07\x64\x61taset\x18\x05 \x03(\x0b\x32\x14.Criteo.Glup.DataSet\x12\x1c\n\x14message_sampling_pct\x18\x06 \x01(\r\x12\x38\n\tproducers\x18\x07 \x01(\x0b\x32%.Criteo.Glup.ProducerTransportOptions\x12\x30\n\nproperties\x18\x08 \x01(\x0b\x32\x1c.Criteo.Glup.PropertyOptions\"\xb1\x01\n\x10GlupFieldOptions\x12\x0f\n\x07sampled\x18\x01 \x01(\x08\x12\x14\n\x0csampling_key\x18\x02 \x01(\x08\x12\x30\n\x11\x64isabled_platform\x18\x03 \x03(\x0e\x32\x15.Criteo.Glup.Platform\x12\x18\n\x10should_clean_pii\x18\x04 \x01(\x08\x12\x18\n\x10pending_deletion\x18\x05 \x01(\x08\x12\x10\n\x08\x61\x64\x64\x65\x64_at\x18\x06 \x01(\t\")\n\x0bJsonMapping\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04skip\x18\x02 \x01(\x08\"4\n\tJsonAlias\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x19\n\x11use_enum_field_id\x18\x03 \x01(\x08\"\xb5\x02\n\x0f\x42\x61seGlupMessage\x12(\n\x0bglup_origin\x18\x01 \x01(\x0b\x32\x13.Criteo.Glup.Origin\x12)\n\tpartition\x18\x02 \x01(\x0b\x32\x16.Criteo.Glup.Partition\x12\x41\n\nset_fields\x18\xda\x86\x03 \x03(\x0b\x32+.Criteo.Glup.BaseGlupMessage.SetFieldsEntry\x12R\n\x0f\x63ontrol_message\x18\xff\xff\x7f \x03(\x0b\x32%.Criteo.Glup.ControlMessage.WatermarkB\x10\x92\xb5\x18\x0c\n\n__metadata\x1a\x30\n\x0eSetFieldsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01:\x04\x88\xb5\x18\x01\"\xf2\x01\n\x19\x46orwardedWatermarkMessage\x12\x1d\n\x15original_kafka_offset\x18\x05 \x01(\x03\x12\x11\n\ttimestamp\x18\x06 \x01(\x03\x12\x1d\n\x15\x63onsolidation_enabled\x18\x07 \x01(\x08\x12\x12\n\ndataset_id\x18\n \x01(\t\x12\x1c\n\x14\x64\x61taset_format_label\x18\x0b \x01(\t\x12R\n\x0f\x63ontrol_message\x18\xff\xff\x7f \x03(\x0b\x32%.Criteo.Glup.ControlMessage.WatermarkB\x10\x92\xb5\x18\x0c\n\n__metadata\"y\n\x08Location\x12%\n\x03\x65nv\x18\x01 \x01(\x0e\x32\x18.Criteo.Glup.Environment\x12#\n\x02\x64\x63\x18\x02 \x01(\x0e\x32\x17.Criteo.Glup.DataCenter\x12\r\n\x05label\x18\x03 \x01(\t\x12\x12\n\ndataset_id\x18\x04 \x01(\t\"\xa2\x01\n\x06Origin\x12+\n\ndatacenter\x18\x01 \x01(\x0e\x32\x17.Criteo.Glup.DataCenter\x12\x1a\n\x03ip4\x18\x02 \x01(\x07\x42\r\x8a\xb5\x18\t\n\x07host_ip\x12\x10\n\x08hostname\x18\x03 \x01(\t\x12\x1e\n\x0e\x63ontainer_task\x18\x04 \x01(\tB\x06\x8a\xb5\x18\x02\x10\x01\x12\x1d\n\rcontainer_app\x18\x05 \x01(\tB\x06\x8a\xb5\x18\x02\x10\x01\"\x89\x05\n\x0e\x43ontrolMessage\x12\x38\n\twatermark\x18\x01 \x01(\x0b\x32%.Criteo.Glup.ControlMessage.Watermark\x1a\x89\x01\n\x0fWatermarkOrigin\x12\x13\n\x0bkafka_topic\x18\x01 \x01(\t\x12+\n\ndatacenter\x18\x02 \x01(\x0e\x32\x17.Criteo.Glup.DataCenter\x12\x34\n\x07\x63luster\x18\x03 \x01(\x0e\x32#.Criteo.Glup.ControlMessage.Cluster\x1a\xe8\x02\n\tWatermark\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x10\n\x08hostname\x18\x02 \x01(\t\x12\x13\n\x0bkafka_topic\x18\x03 \x01(\t\x12\x11\n\tpartition\x18\x04 \x01(\x05\x12\x17\n\x0fpartition_count\x18\x05 \x01(\x05\x12\x14\n\x0cprocess_uuid\x18\x06 \x01(\x0c\x12\x0e\n\x06region\x18\x07 \x01(\t\x12*\n\x11timestamp_seconds\x18\x08 \x01(\x05\x42\x0f\x92\xb5\x18\x0b\n\ttimestamp\x12\x0f\n\x07\x63luster\x18\t \x01(\t\x12\x13\n\x0b\x65nvironment\x18\n \x01(\t\x12J\n\nset_fields\x18\xda\x86\x03 \x03(\x0b\x32\x34.Criteo.Glup.ControlMessage.Watermark.SetFieldsEntry\x1a\x30\n\x0eSetFieldsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01:\x04\x88\xb5\x18\x01\"F\n\x07\x43luster\x12\x17\n\x13UNSUPPORTED_CLUSTER\x10\x00\x12\t\n\x05LOCAL\x10\x02\x12\x0b\n\x07\x43\x45NTRAL\x10\x03\x12\n\n\x06STREAM\x10\x04\"\x99\x01\n\tPartition\x12*\n\x11timestamp_seconds\x18\x01 \x01(\x04\x42\x0f\x8a\xb5\x18\x0b\n\ttimestamp\x12,\n\rhost_platform\x18\x02 \x01(\x0e\x32\x15.Criteo.Glup.Platform\x12\x32\n\nevent_type\x18\x03 \x01(\x0e\x32\x16.Criteo.Glup.EventTypeB\x06\x8a\xb5\x18\x02\x10\x01\"\x93\x01\n\rHDFSPartition\x12\x19\n\x11timestamp_seconds\x18\x01 \x01(\x04\x12,\n\rhost_platform\x18\x02 \x01(\x0e\x32\x15.Criteo.Glup.Platform\x12*\n\nevent_type\x18\x03 \x01(\x0e\x32\x16.Criteo.Glup.EventType\x12\r\n\x05\x64\x65pth\x18\x04 \x01(\x05\"\xa5\x01\n\x07Hash128\x12\x15\n\rmost_sig_bits\x18\x01 \x01(\x06\x12\x16\n\x0eleast_sig_bits\x18\x02 \x01(\x06\x12\x39\n\nset_fields\x18\xda\x86\x03 \x03(\x0b\x32#.Criteo.Glup.Hash128.SetFieldsEntry\x1a\x30\n\x0eSetFieldsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01*~\n\x0fPartitionScheme\x12 \n\x1cUNSUPPORTED_PARTITION_SCHEME\x10\x00\x12\t\n\x05\x44\x41ILY\x10\x02\x12\n\n\x06HOURLY\x10\x03\x12\x13\n\x0fPLATFORM_HOURLY\x10\x04\x12\x1d\n\x19\x45VENTTYPE_PLATFORM_HOURLY\x10\x05*?\n\rMessageFormat\x12\x16\n\x12UNSUPPORTED_FORMAT\x10\x00\x12\x08\n\x04JSON\x10\x01\x12\x0c\n\x08PROTOBUF\x10\x02*d\n\x0eHDFSDataFormat\x12\x1b\n\x17UNSUPPORTED_DATA_FORMAT\x10\x00\x12\r\n\tJSON_PAIL\x10\x02\x12\x10\n\x0cPROTOBUF_SEQ\x10\x03\x12\x14\n\x10PROTOBUF_PARQUET\x10\x04*3\n\x0b\x44\x61taSetKind\x12\x14\n\x10UNSUPPORTED_KIND\x10\x00\x12\x0e\n\nTIMESERIES\x10\x01*\x9a\x01\n\x0fMonitoringLevel\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\x15\n\x11REMOVE_MONITORING\x10\x01\x12\x1a\n\x16INFORMATIVE_MONITORING\x10\x02\x12\x15\n\x11\x43ONSENSUS_IGNORED\x10\x03\x12\x30\n,CONSENSUS_IGNORED_AND_INFORMATIVE_MONITORING\x10\x04*\x8b\x01\n\nDataCenter\x12\x1a\n\x16UNSUPPORTED_DATACENTER\x10\x00\x12\x07\n\x03\x41M5\x10\x02\x12\x07\n\x03HK5\x10\x03\x12\x07\n\x03NY8\x10\x04\x12\x07\n\x03PAR\x10\x05\x12\x07\n\x03PA4\x10\x06\x12\x07\n\x03SH5\x10\x07\x12\x07\n\x03SV6\x10\x08\x12\x07\n\x03TY5\x10\t\x12\x07\n\x03VA1\x10\n\x12\x07\n\x03\x41M6\x10\x0b\x12\x07\n\x03\x44\x41\x31\x10\x0c*A\n\x0b\x45nvironment\x12\x1b\n\x17UNSUPPORTED_ENVIRONMENT\x10\x00\x12\x0b\n\x07PREPROD\x10\x01\x12\x08\n\x04PROD\x10\x02*D\n\x08Platform\x12\x18\n\x14UNSUPPORTED_PLATFORM\x10\x00\x12\x06\n\x02\x45U\x10\x02\x12\x06\n\x02US\x10\x03\x12\x06\n\x02\x41S\x10\x04\x12\x06\n\x02\x43N\x10\x05*[\n\tEventType\x12\x1a\n\x16UNSUPPORTED_EVENT_TYPE\x10\x00\x12\x10\n\x0cItemPageView\x10\x02\x12\t\n\x05Sales\x10\x03\x12\n\n\x06\x42\x61sket\x10\x04\x12\t\n\x05Other\x10\x05*%\n\x05YesNo\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x06\n\x02NO\x10\x01\x12\x07\n\x03YES\x10\x02:I\n\x04glup\x12\x1f.google.protobuf.MessageOptions\x18\xd0\x86\x03 \x01(\x0b\x32\x18.Criteo.Glup.GlupOptions:C\n\x18\x63ontains_nullable_fields\x12\x1f.google.protobuf.MessageOptions\x18\xd1\x86\x03 \x01(\x08:Q\n\tglupfield\x12\x1d.google.protobuf.FieldOptions\x18\xd0\x86\x03 \x01(\x0b\x32\x1d.Criteo.Glup.GlupFieldOptions:O\n\x0cjson_mapping\x12\x1d.google.protobuf.FieldOptions\x18\xd1\x86\x03 \x01(\x0b\x32\x18.Criteo.Glup.JsonMapping:E\n\x04json\x12\x1d.google.protobuf.FieldOptions\x18\xd2\x86\x03 \x01(\x0b\x32\x16.Criteo.Glup.JsonAliasB\x11\n\x0f\x63om.criteo.glupb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_descriptor__pb2.DESCRIPTOR,])

_PARTITIONSCHEME = _descriptor.EnumDescriptor(
  name='PartitionScheme',
  full_name='Criteo.Glup.PartitionScheme',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSUPPORTED_PARTITION_SCHEME', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DAILY', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOURLY', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PLATFORM_HOURLY', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EVENTTYPE_PLATFORM_HOURLY', index=4, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6831,
  serialized_end=6957,
)
_sym_db.RegisterEnumDescriptor(_PARTITIONSCHEME)

PartitionScheme = enum_type_wrapper.EnumTypeWrapper(_PARTITIONSCHEME)
_MESSAGEFORMAT = _descriptor.EnumDescriptor(
  name='MessageFormat',
  full_name='Criteo.Glup.MessageFormat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSUPPORTED_FORMAT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JSON', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROTOBUF', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6959,
  serialized_end=7022,
)
_sym_db.RegisterEnumDescriptor(_MESSAGEFORMAT)

MessageFormat = enum_type_wrapper.EnumTypeWrapper(_MESSAGEFORMAT)
_HDFSDATAFORMAT = _descriptor.EnumDescriptor(
  name='HDFSDataFormat',
  full_name='Criteo.Glup.HDFSDataFormat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSUPPORTED_DATA_FORMAT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JSON_PAIL', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROTOBUF_SEQ', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROTOBUF_PARQUET', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7024,
  serialized_end=7124,
)
_sym_db.RegisterEnumDescriptor(_HDFSDATAFORMAT)

HDFSDataFormat = enum_type_wrapper.EnumTypeWrapper(_HDFSDATAFORMAT)
_DATASETKIND = _descriptor.EnumDescriptor(
  name='DataSetKind',
  full_name='Criteo.Glup.DataSetKind',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSUPPORTED_KIND', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIMESERIES', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7126,
  serialized_end=7177,
)
_sym_db.RegisterEnumDescriptor(_DATASETKIND)

DataSetKind = enum_type_wrapper.EnumTypeWrapper(_DATASETKIND)
_MONITORINGLEVEL = _descriptor.EnumDescriptor(
  name='MonitoringLevel',
  full_name='Criteo.Glup.MonitoringLevel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DEFAULT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REMOVE_MONITORING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INFORMATIVE_MONITORING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONSENSUS_IGNORED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONSENSUS_IGNORED_AND_INFORMATIVE_MONITORING', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7180,
  serialized_end=7334,
)
_sym_db.RegisterEnumDescriptor(_MONITORINGLEVEL)

MonitoringLevel = enum_type_wrapper.EnumTypeWrapper(_MONITORINGLEVEL)
_DATACENTER = _descriptor.EnumDescriptor(
  name='DataCenter',
  full_name='Criteo.Glup.DataCenter',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSUPPORTED_DATACENTER', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AM5', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HK5', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NY8', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PAR', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PA4', index=5, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SH5', index=6, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SV6', index=7, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TY5', index=8, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VA1', index=9, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AM6', index=10, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DA1', index=11, number=12,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7337,
  serialized_end=7476,
)
_sym_db.RegisterEnumDescriptor(_DATACENTER)

DataCenter = enum_type_wrapper.EnumTypeWrapper(_DATACENTER)
_ENVIRONMENT = _descriptor.EnumDescriptor(
  name='Environment',
  full_name='Criteo.Glup.Environment',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSUPPORTED_ENVIRONMENT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PREPROD', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROD', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7478,
  serialized_end=7543,
)
_sym_db.RegisterEnumDescriptor(_ENVIRONMENT)

Environment = enum_type_wrapper.EnumTypeWrapper(_ENVIRONMENT)
_PLATFORM = _descriptor.EnumDescriptor(
  name='Platform',
  full_name='Criteo.Glup.Platform',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSUPPORTED_PLATFORM', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EU', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='US', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AS', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CN', index=4, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7545,
  serialized_end=7613,
)
_sym_db.RegisterEnumDescriptor(_PLATFORM)

Platform = enum_type_wrapper.EnumTypeWrapper(_PLATFORM)
_EVENTTYPE = _descriptor.EnumDescriptor(
  name='EventType',
  full_name='Criteo.Glup.EventType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSUPPORTED_EVENT_TYPE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ItemPageView', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Sales', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Basket', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Other', index=4, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7615,
  serialized_end=7706,
)
_sym_db.RegisterEnumDescriptor(_EVENTTYPE)

EventType = enum_type_wrapper.EnumTypeWrapper(_EVENTTYPE)
_YESNO = _descriptor.EnumDescriptor(
  name='YesNo',
  full_name='Criteo.Glup.YesNo',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='YES', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7708,
  serialized_end=7745,
)
_sym_db.RegisterEnumDescriptor(_YESNO)

YesNo = enum_type_wrapper.EnumTypeWrapper(_YESNO)
UNSUPPORTED_PARTITION_SCHEME = 0
DAILY = 2
HOURLY = 3
PLATFORM_HOURLY = 4
EVENTTYPE_PLATFORM_HOURLY = 5
UNSUPPORTED_FORMAT = 0
JSON = 1
PROTOBUF = 2
UNSUPPORTED_DATA_FORMAT = 0
JSON_PAIL = 2
PROTOBUF_SEQ = 3
PROTOBUF_PARQUET = 4
UNSUPPORTED_KIND = 0
TIMESERIES = 1
DEFAULT = 0
REMOVE_MONITORING = 1
INFORMATIVE_MONITORING = 2
CONSENSUS_IGNORED = 3
CONSENSUS_IGNORED_AND_INFORMATIVE_MONITORING = 4
UNSUPPORTED_DATACENTER = 0
AM5 = 2
HK5 = 3
NY8 = 4
PAR = 5
PA4 = 6
SH5 = 7
SV6 = 8
TY5 = 9
VA1 = 10
AM6 = 11
DA1 = 12
UNSUPPORTED_ENVIRONMENT = 0
PREPROD = 1
PROD = 2
UNSUPPORTED_PLATFORM = 0
EU = 2
US = 3
AS = 4
CN = 5
UNSUPPORTED_EVENT_TYPE = 0
ItemPageView = 2
Sales = 3
Basket = 4
Other = 5
UNKNOWN = 0
NO = 1
YES = 2

GLUP_FIELD_NUMBER = 50000
glup = _descriptor.FieldDescriptor(
  name='glup', full_name='Criteo.Glup.glup', index=0,
  number=50000, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None, file=DESCRIPTOR)
CONTAINS_NULLABLE_FIELDS_FIELD_NUMBER = 50001
contains_nullable_fields = _descriptor.FieldDescriptor(
  name='contains_nullable_fields', full_name='Criteo.Glup.contains_nullable_fields', index=1,
  number=50001, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None, file=DESCRIPTOR)
GLUPFIELD_FIELD_NUMBER = 50000
glupfield = _descriptor.FieldDescriptor(
  name='glupfield', full_name='Criteo.Glup.glupfield', index=2,
  number=50000, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None, file=DESCRIPTOR)
JSON_MAPPING_FIELD_NUMBER = 50001
json_mapping = _descriptor.FieldDescriptor(
  name='json_mapping', full_name='Criteo.Glup.json_mapping', index=3,
  number=50001, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None, file=DESCRIPTOR)
JSON_FIELD_NUMBER = 50002
json = _descriptor.FieldDescriptor(
  name='json', full_name='Criteo.Glup.json', index=4,
  number=50002, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None, file=DESCRIPTOR)

_CONTROLMESSAGE_CLUSTER = _descriptor.EnumDescriptor(
  name='Cluster',
  full_name='Criteo.Glup.ControlMessage.Cluster',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSUPPORTED_CLUSTER', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOCAL', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CENTRAL', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STREAM', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6285,
  serialized_end=6355,
)
_sym_db.RegisterEnumDescriptor(_CONTROLMESSAGE_CLUSTER)


_KAFKAMESSAGEOPTIONS = _descriptor.Descriptor(
  name='KafkaMessageOptions',
  full_name='Criteo.Glup.KafkaMessageOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='Criteo.Glup.KafkaMessageOptions.topic', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=107,
)


_DATASET = _descriptor.Descriptor(
  name='DataSet',
  full_name='Criteo.Glup.DataSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Criteo.Glup.DataSet.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='format', full_name='Criteo.Glup.DataSet.format', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='partition_scheme', full_name='Criteo.Glup.DataSet.partition_scheme', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='java_class', full_name='Criteo.Glup.DataSet.java_class', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='for_tests', full_name='Criteo.Glup.DataSet.for_tests', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='owner', full_name='Criteo.Glup.DataSet.owner', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='private', full_name='Criteo.Glup.DataSet.private', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kind', full_name='Criteo.Glup.DataSet.kind', index=7,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='retention_days', full_name='Criteo.Glup.DataSet.retention_days', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=366,
)


_DATASETCHUNK = _descriptor.Descriptor(
  name='DataSetChunk',
  full_name='Criteo.Glup.DataSetChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='partition', full_name='Criteo.Glup.DataSetChunk.partition', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='format', full_name='Criteo.Glup.DataSetChunk.format', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='datasetId', full_name='Criteo.Glup.DataSetChunk.datasetId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=368,
  serialized_end=488,
)


_DATASETFORMAT = _descriptor.Descriptor(
  name='DataSetFormat',
  full_name='Criteo.Glup.DataSetFormat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='Criteo.Glup.DataSetFormat.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file_format', full_name='Criteo.Glup.DataSetFormat.file_format', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='partition_scheme', full_name='Criteo.Glup.DataSetFormat.partition_scheme', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_partition', full_name='Criteo.Glup.DataSetFormat.start_partition', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_partition', full_name='Criteo.Glup.DataSetFormat.end_partition', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='retention_days', full_name='Criteo.Glup.DataSetFormat.retention_days', index=5,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='priority', full_name='Criteo.Glup.DataSetFormat.priority', index=6,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='label', full_name='Criteo.Glup.DataSetFormat.label', index=7,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='monitoring_level', full_name='Criteo.Glup.DataSetFormat.monitoring_level', index=8,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=491,
  serialized_end=849,
)


_HDFSOPTIONS_IMPORTOPTIONS_VIEW_HIVEOPTIONS = _descriptor.Descriptor(
  name='HiveOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.View.HiveOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='partitioning', full_name='Criteo.Glup.HDFSOptions.ImportOptions.View.HiveOptions.partitioning', index=0,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1292,
  serialized_end=1357,
)

_HDFSOPTIONS_IMPORTOPTIONS_VIEW = _descriptor.Descriptor(
  name='View',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.View',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hive', full_name='Criteo.Glup.HDFSOptions.ImportOptions.View.hive', index=0,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_HDFSOPTIONS_IMPORTOPTIONS_VIEW_HIVEOPTIONS, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1213,
  serialized_end=1357,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DEDUPOPTIONS = _descriptor.Descriptor(
  name='DedupOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.DedupOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.DedupOptions.input_dataset_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_format_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.DedupOptions.input_format_label', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.DedupOptions.output_dataset_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_format_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.DedupOptions.output_format_label', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='use_hippo_cuttle_job', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.DedupOptions.use_hippo_cuttle_job', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2331,
  serialized_end=2485,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KAFKA2HDFSOPTIONS = _descriptor.Descriptor(
  name='Kafka2HdfsOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.Kafka2HdfsOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.Kafka2HdfsOptions.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='deduplicate', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.Kafka2HdfsOptions.deduplicate', index=1,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.Kafka2HdfsOptions.output_dataset_id', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_format_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.Kafka2HdfsOptions.output_format_label', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2487,
  serialized_end=2604,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIG = _descriptor.Descriptor(
  name='KacohaConfig',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='partitions_per_task', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfig.partitions_per_task', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='poll_buffer_size_bytes', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfig.poll_buffer_size_bytes', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2606,
  serialized_end=2681,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIGPERDC = _descriptor.Descriptor(
  name='KacohaConfigPerDc',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfigPerDc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dc', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfigPerDc.dc', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='config', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfigPerDc.config', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2684,
  serialized_end=2819,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHAOPTIONS = _descriptor.Descriptor(
  name='KaCoHaOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KaCoHaOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KaCoHaOptions.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KaCoHaOptions.output_dataset_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='deduplicate', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KaCoHaOptions.deduplicate', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='config', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KaCoHaOptions.config', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_format_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KaCoHaOptions.output_format_label', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='config_per_dc', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.KaCoHaOptions.config_per_dc', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2822,
  serialized_end=3099,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DATALOADEROPTIONS = _descriptor.Descriptor(
  name='DataloaderOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.DataloaderOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='platform', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.DataloaderOptions.platform', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3101,
  serialized_end=3161,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SYNCOPTIONS = _descriptor.Descriptor(
  name='SyncOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions.from', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_namespace', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions.source_namespace', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='platforms', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions.platforms', index=2,
      number=6, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_backfilling', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions.is_backfilling', index=3,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions.to_label', index=4,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions.to_dataset_id', index=5,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='with_backfilling', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions.with_backfilling', index=6,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_scheduled_on_source', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions.is_scheduled_on_source', index=7,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3164,
  serialized_end=3405,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_BACKUPOPTIONS = _descriptor.Descriptor(
  name='BackupOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.BackupOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.BackupOptions.from', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_namespace', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.BackupOptions.source_namespace', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='platforms', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.BackupOptions.platforms', index=2,
      number=3, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3407,
  serialized_end=3527,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_TRANSCODINGOPTIONS = _descriptor.Descriptor(
  name='TranscodingOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions.input_dataset_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions.output_dataset_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_format', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions.input_format', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_format', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions.output_format', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_dataset_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions.input_dataset_label', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_dataset_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions.output_dataset_label', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_by_platform', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions.is_by_platform', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3530,
  serialized_end=3789,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SAMPLEROPTIONS = _descriptor.Descriptor(
  name='SamplerOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SamplerOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SamplerOptions.input_dataset_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input_format_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SamplerOptions.input_format_label', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SamplerOptions.output_dataset_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_format_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SamplerOptions.output_format_label', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sampling_rate', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.SamplerOptions.sampling_rate', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3792,
  serialized_end=3941,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_COMPARATOROPTIONS = _descriptor.Descriptor(
  name='ComparatorOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.ComparatorOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='left_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.ComparatorOptions.left_dataset_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='left_format_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.ComparatorOptions.left_format_label', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='right_dataset_id', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.ComparatorOptions.right_dataset_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='right_format_label', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.ComparatorOptions.right_format_label', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hostname', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.ComparatorOptions.hostname', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ignored_fields', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.ComparatorOptions.ignored_fields', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3944,
  serialized_end=4111,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_EXTERNALOPTIONS = _descriptor.Descriptor(
  name='ExternalOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.ExternalOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4113,
  serialized_end=4130,
)

_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR = _descriptor.Descriptor(
  name='Generator',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataloader', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.dataloader', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kafka2hdfs', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.kafka2hdfs', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sync', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.sync', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='external', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.external', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='backup', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.backup', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='transcoding', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.transcoding', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kacoha', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.kacoha', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='deduplicate', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.deduplicate', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sampler', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.sampler', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='comparator', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.comparator', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.to', index=10,
      number=250, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.namespace', index=11,
      number=251, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_date', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.start_date', index=12,
      number=253, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stop_date', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.stop_date', index=13,
      number=254, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ignore_cn', full_name='Criteo.Glup.HDFSOptions.ImportOptions.Generator.ignore_cn', index=14,
      number=255, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DEDUPOPTIONS, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KAFKA2HDFSOPTIONS, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIG, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIGPERDC, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHAOPTIONS, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DATALOADEROPTIONS, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SYNCOPTIONS, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_BACKUPOPTIONS, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_TRANSCODINGOPTIONS, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SAMPLEROPTIONS, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_COMPARATOROPTIONS, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_EXTERNALOPTIONS, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1360,
  serialized_end=4130,
)

_HDFSOPTIONS_IMPORTOPTIONS = _descriptor.Descriptor(
  name='ImportOptions',
  full_name='Criteo.Glup.HDFSOptions.ImportOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='owner', full_name='Criteo.Glup.HDFSOptions.ImportOptions.owner', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='Criteo.Glup.HDFSOptions.ImportOptions.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='partitioning', full_name='Criteo.Glup.HDFSOptions.ImportOptions.partitioning', index=2,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='format', full_name='Criteo.Glup.HDFSOptions.ImportOptions.format', index=3,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='private', full_name='Criteo.Glup.HDFSOptions.ImportOptions.private', index=4,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='generator', full_name='Criteo.Glup.HDFSOptions.ImportOptions.generator', index=5,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='view', full_name='Criteo.Glup.HDFSOptions.ImportOptions.view', index=6,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_HDFSOPTIONS_IMPORTOPTIONS_VIEW, _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=924,
  serialized_end=4130,
)

_HDFSOPTIONS = _descriptor.Descriptor(
  name='HDFSOptions',
  full_name='Criteo.Glup.HDFSOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='import', full_name='Criteo.Glup.HDFSOptions.import', index=0,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_HDFSOPTIONS_IMPORTOPTIONS, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=852,
  serialized_end=4130,
)


_PRODUCERTRANSPORTOPTIONS = _descriptor.Descriptor(
  name='ProducerTransportOptions',
  full_name='Criteo.Glup.ProducerTransportOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='syslog', full_name='Criteo.Glup.ProducerTransportOptions.syslog', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kafka', full_name='Criteo.Glup.ProducerTransportOptions.kafka', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4132,
  serialized_end=4189,
)


_PROPERTYOPTIONS = _descriptor.Descriptor(
  name='PropertyOptions',
  full_name='Criteo.Glup.PropertyOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='valuable', full_name='Criteo.Glup.PropertyOptions.valuable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='high_volume', full_name='Criteo.Glup.PropertyOptions.high_volume', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4191,
  serialized_end=4247,
)


_GLUPOPTIONS = _descriptor.Descriptor(
  name='GlupOptions',
  full_name='Criteo.Glup.GlupOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafka', full_name='Criteo.Glup.GlupOptions.kafka', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hdfs', full_name='Criteo.Glup.GlupOptions.hdfs', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sampling_pct', full_name='Criteo.Glup.GlupOptions.sampling_pct', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='preprod_sampling_pct', full_name='Criteo.Glup.GlupOptions.preprod_sampling_pct', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset', full_name='Criteo.Glup.GlupOptions.dataset', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message_sampling_pct', full_name='Criteo.Glup.GlupOptions.message_sampling_pct', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='producers', full_name='Criteo.Glup.GlupOptions.producers', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='properties', full_name='Criteo.Glup.GlupOptions.properties', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4250,
  serialized_end=4581,
)


_GLUPFIELDOPTIONS = _descriptor.Descriptor(
  name='GlupFieldOptions',
  full_name='Criteo.Glup.GlupFieldOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sampled', full_name='Criteo.Glup.GlupFieldOptions.sampled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sampling_key', full_name='Criteo.Glup.GlupFieldOptions.sampling_key', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='disabled_platform', full_name='Criteo.Glup.GlupFieldOptions.disabled_platform', index=2,
      number=3, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='should_clean_pii', full_name='Criteo.Glup.GlupFieldOptions.should_clean_pii', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pending_deletion', full_name='Criteo.Glup.GlupFieldOptions.pending_deletion', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='added_at', full_name='Criteo.Glup.GlupFieldOptions.added_at', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4584,
  serialized_end=4761,
)


_JSONMAPPING = _descriptor.Descriptor(
  name='JsonMapping',
  full_name='Criteo.Glup.JsonMapping',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Criteo.Glup.JsonMapping.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='skip', full_name='Criteo.Glup.JsonMapping.skip', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4763,
  serialized_end=4804,
)


_JSONALIAS = _descriptor.Descriptor(
  name='JsonAlias',
  full_name='Criteo.Glup.JsonAlias',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Criteo.Glup.JsonAlias.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='use_enum_field_id', full_name='Criteo.Glup.JsonAlias.use_enum_field_id', index=1,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4806,
  serialized_end=4858,
)


_BASEGLUPMESSAGE_SETFIELDSENTRY = _descriptor.Descriptor(
  name='SetFieldsEntry',
  full_name='Criteo.Glup.BaseGlupMessage.SetFieldsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Criteo.Glup.BaseGlupMessage.SetFieldsEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Criteo.Glup.BaseGlupMessage.SetFieldsEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5116,
  serialized_end=5164,
)

_BASEGLUPMESSAGE = _descriptor.Descriptor(
  name='BaseGlupMessage',
  full_name='Criteo.Glup.BaseGlupMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='glup_origin', full_name='Criteo.Glup.BaseGlupMessage.glup_origin', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='partition', full_name='Criteo.Glup.BaseGlupMessage.partition', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='set_fields', full_name='Criteo.Glup.BaseGlupMessage.set_fields', index=2,
      number=50010, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='control_message', full_name='Criteo.Glup.BaseGlupMessage.control_message', index=3,
      number=2097151, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222\265\030\014\n\n__metadata')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_BASEGLUPMESSAGE_SETFIELDSENTRY, ],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\210\265\030\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4861,
  serialized_end=5170,
)


_FORWARDEDWATERMARKMESSAGE = _descriptor.Descriptor(
  name='ForwardedWatermarkMessage',
  full_name='Criteo.Glup.ForwardedWatermarkMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='original_kafka_offset', full_name='Criteo.Glup.ForwardedWatermarkMessage.original_kafka_offset', index=0,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='Criteo.Glup.ForwardedWatermarkMessage.timestamp', index=1,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='consolidation_enabled', full_name='Criteo.Glup.ForwardedWatermarkMessage.consolidation_enabled', index=2,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset_id', full_name='Criteo.Glup.ForwardedWatermarkMessage.dataset_id', index=3,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset_format_label', full_name='Criteo.Glup.ForwardedWatermarkMessage.dataset_format_label', index=4,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='control_message', full_name='Criteo.Glup.ForwardedWatermarkMessage.control_message', index=5,
      number=2097151, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222\265\030\014\n\n__metadata')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5173,
  serialized_end=5415,
)


_LOCATION = _descriptor.Descriptor(
  name='Location',
  full_name='Criteo.Glup.Location',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='env', full_name='Criteo.Glup.Location.env', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dc', full_name='Criteo.Glup.Location.dc', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='label', full_name='Criteo.Glup.Location.label', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset_id', full_name='Criteo.Glup.Location.dataset_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5417,
  serialized_end=5538,
)


_ORIGIN = _descriptor.Descriptor(
  name='Origin',
  full_name='Criteo.Glup.Origin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='datacenter', full_name='Criteo.Glup.Origin.datacenter', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ip4', full_name='Criteo.Glup.Origin.ip4', index=1,
      number=2, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\t\n\007host_ip')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hostname', full_name='Criteo.Glup.Origin.hostname', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='container_task', full_name='Criteo.Glup.Origin.container_task', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\002\020\001')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='container_app', full_name='Criteo.Glup.Origin.container_app', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\002\020\001')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5541,
  serialized_end=5703,
)


_CONTROLMESSAGE_WATERMARKORIGIN = _descriptor.Descriptor(
  name='WatermarkOrigin',
  full_name='Criteo.Glup.ControlMessage.WatermarkOrigin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafka_topic', full_name='Criteo.Glup.ControlMessage.WatermarkOrigin.kafka_topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='datacenter', full_name='Criteo.Glup.ControlMessage.WatermarkOrigin.datacenter', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cluster', full_name='Criteo.Glup.ControlMessage.WatermarkOrigin.cluster', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5783,
  serialized_end=5920,
)

_CONTROLMESSAGE_WATERMARK_SETFIELDSENTRY = _descriptor.Descriptor(
  name='SetFieldsEntry',
  full_name='Criteo.Glup.ControlMessage.Watermark.SetFieldsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Criteo.Glup.ControlMessage.Watermark.SetFieldsEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Criteo.Glup.ControlMessage.Watermark.SetFieldsEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5116,
  serialized_end=5164,
)

_CONTROLMESSAGE_WATERMARK = _descriptor.Descriptor(
  name='Watermark',
  full_name='Criteo.Glup.ControlMessage.Watermark',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='Criteo.Glup.ControlMessage.Watermark.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hostname', full_name='Criteo.Glup.ControlMessage.Watermark.hostname', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kafka_topic', full_name='Criteo.Glup.ControlMessage.Watermark.kafka_topic', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='partition', full_name='Criteo.Glup.ControlMessage.Watermark.partition', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='partition_count', full_name='Criteo.Glup.ControlMessage.Watermark.partition_count', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='process_uuid', full_name='Criteo.Glup.ControlMessage.Watermark.process_uuid', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='region', full_name='Criteo.Glup.ControlMessage.Watermark.region', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp_seconds', full_name='Criteo.Glup.ControlMessage.Watermark.timestamp_seconds', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222\265\030\013\n\ttimestamp')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cluster', full_name='Criteo.Glup.ControlMessage.Watermark.cluster', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='environment', full_name='Criteo.Glup.ControlMessage.Watermark.environment', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='set_fields', full_name='Criteo.Glup.ControlMessage.Watermark.set_fields', index=10,
      number=50010, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONTROLMESSAGE_WATERMARK_SETFIELDSENTRY, ],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\210\265\030\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5923,
  serialized_end=6283,
)

_CONTROLMESSAGE = _descriptor.Descriptor(
  name='ControlMessage',
  full_name='Criteo.Glup.ControlMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='watermark', full_name='Criteo.Glup.ControlMessage.watermark', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONTROLMESSAGE_WATERMARKORIGIN, _CONTROLMESSAGE_WATERMARK, ],
  enum_types=[
    _CONTROLMESSAGE_CLUSTER,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5706,
  serialized_end=6355,
)


_PARTITION = _descriptor.Descriptor(
  name='Partition',
  full_name='Criteo.Glup.Partition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp_seconds', full_name='Criteo.Glup.Partition.timestamp_seconds', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\013\n\ttimestamp')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='host_platform', full_name='Criteo.Glup.Partition.host_platform', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='event_type', full_name='Criteo.Glup.Partition.event_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\002\020\001')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6358,
  serialized_end=6511,
)


_HDFSPARTITION = _descriptor.Descriptor(
  name='HDFSPartition',
  full_name='Criteo.Glup.HDFSPartition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp_seconds', full_name='Criteo.Glup.HDFSPartition.timestamp_seconds', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='host_platform', full_name='Criteo.Glup.HDFSPartition.host_platform', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='event_type', full_name='Criteo.Glup.HDFSPartition.event_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='depth', full_name='Criteo.Glup.HDFSPartition.depth', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6514,
  serialized_end=6661,
)


_HASH128_SETFIELDSENTRY = _descriptor.Descriptor(
  name='SetFieldsEntry',
  full_name='Criteo.Glup.Hash128.SetFieldsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Criteo.Glup.Hash128.SetFieldsEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Criteo.Glup.Hash128.SetFieldsEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5116,
  serialized_end=5164,
)

_HASH128 = _descriptor.Descriptor(
  name='Hash128',
  full_name='Criteo.Glup.Hash128',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='most_sig_bits', full_name='Criteo.Glup.Hash128.most_sig_bits', index=0,
      number=1, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='least_sig_bits', full_name='Criteo.Glup.Hash128.least_sig_bits', index=1,
      number=2, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='set_fields', full_name='Criteo.Glup.Hash128.set_fields', index=2,
      number=50010, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_HASH128_SETFIELDSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6664,
  serialized_end=6829,
)

_DATASET.fields_by_name['format'].message_type = _DATASETFORMAT
_DATASET.fields_by_name['partition_scheme'].enum_type = _PARTITIONSCHEME
_DATASET.fields_by_name['kind'].enum_type = _DATASETKIND
_DATASETCHUNK.fields_by_name['partition'].message_type = _PARTITION
_DATASETCHUNK.fields_by_name['format'].message_type = _DATASETFORMAT
_DATASETFORMAT.fields_by_name['file_format'].enum_type = _HDFSDATAFORMAT
_DATASETFORMAT.fields_by_name['partition_scheme'].enum_type = _PARTITIONSCHEME
_DATASETFORMAT.fields_by_name['start_partition'].message_type = _HDFSPARTITION
_DATASETFORMAT.fields_by_name['end_partition'].message_type = _HDFSPARTITION
_DATASETFORMAT.fields_by_name['monitoring_level'].enum_type = _MONITORINGLEVEL
_HDFSOPTIONS_IMPORTOPTIONS_VIEW_HIVEOPTIONS.fields_by_name['partitioning'].enum_type = _PARTITIONSCHEME
_HDFSOPTIONS_IMPORTOPTIONS_VIEW_HIVEOPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_VIEW
_HDFSOPTIONS_IMPORTOPTIONS_VIEW.fields_by_name['hive'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_VIEW_HIVEOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_VIEW.containing_type = _HDFSOPTIONS_IMPORTOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DEDUPOPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KAFKA2HDFSOPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIG.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIGPERDC.fields_by_name['dc'].enum_type = _DATACENTER
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIGPERDC.fields_by_name['config'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIG
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIGPERDC.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHAOPTIONS.fields_by_name['config'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIG
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHAOPTIONS.fields_by_name['config_per_dc'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIGPERDC
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHAOPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DATALOADEROPTIONS.fields_by_name['platform'].enum_type = _PLATFORM
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DATALOADEROPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SYNCOPTIONS.fields_by_name['from'].message_type = _LOCATION
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SYNCOPTIONS.fields_by_name['platforms'].enum_type = _PLATFORM
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SYNCOPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_BACKUPOPTIONS.fields_by_name['from'].message_type = _LOCATION
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_BACKUPOPTIONS.fields_by_name['platforms'].enum_type = _PLATFORM
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_BACKUPOPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_TRANSCODINGOPTIONS.fields_by_name['input_format'].enum_type = _HDFSDATAFORMAT
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_TRANSCODINGOPTIONS.fields_by_name['output_format'].enum_type = _HDFSDATAFORMAT
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_TRANSCODINGOPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SAMPLEROPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_COMPARATOROPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_EXTERNALOPTIONS.containing_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['dataloader'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DATALOADEROPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['kafka2hdfs'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KAFKA2HDFSOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['sync'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SYNCOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['external'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_EXTERNALOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['backup'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_BACKUPOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['transcoding'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_TRANSCODINGOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['kacoha'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHAOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['deduplicate'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DEDUPOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['sampler'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SAMPLEROPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['comparator'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_COMPARATOROPTIONS
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.fields_by_name['to'].message_type = _LOCATION
_HDFSOPTIONS_IMPORTOPTIONS_GENERATOR.containing_type = _HDFSOPTIONS_IMPORTOPTIONS
_HDFSOPTIONS_IMPORTOPTIONS.fields_by_name['partitioning'].enum_type = _PARTITIONSCHEME
_HDFSOPTIONS_IMPORTOPTIONS.fields_by_name['format'].enum_type = _HDFSDATAFORMAT
_HDFSOPTIONS_IMPORTOPTIONS.fields_by_name['generator'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR
_HDFSOPTIONS_IMPORTOPTIONS.fields_by_name['view'].message_type = _HDFSOPTIONS_IMPORTOPTIONS_VIEW
_HDFSOPTIONS_IMPORTOPTIONS.containing_type = _HDFSOPTIONS
_HDFSOPTIONS.fields_by_name['import'].message_type = _HDFSOPTIONS_IMPORTOPTIONS
_GLUPOPTIONS.fields_by_name['kafka'].message_type = _KAFKAMESSAGEOPTIONS
_GLUPOPTIONS.fields_by_name['hdfs'].message_type = _HDFSOPTIONS
_GLUPOPTIONS.fields_by_name['dataset'].message_type = _DATASET
_GLUPOPTIONS.fields_by_name['producers'].message_type = _PRODUCERTRANSPORTOPTIONS
_GLUPOPTIONS.fields_by_name['properties'].message_type = _PROPERTYOPTIONS
_GLUPFIELDOPTIONS.fields_by_name['disabled_platform'].enum_type = _PLATFORM
_BASEGLUPMESSAGE_SETFIELDSENTRY.containing_type = _BASEGLUPMESSAGE
_BASEGLUPMESSAGE.fields_by_name['glup_origin'].message_type = _ORIGIN
_BASEGLUPMESSAGE.fields_by_name['partition'].message_type = _PARTITION
_BASEGLUPMESSAGE.fields_by_name['set_fields'].message_type = _BASEGLUPMESSAGE_SETFIELDSENTRY
_BASEGLUPMESSAGE.fields_by_name['control_message'].message_type = _CONTROLMESSAGE_WATERMARK
_FORWARDEDWATERMARKMESSAGE.fields_by_name['control_message'].message_type = _CONTROLMESSAGE_WATERMARK
_LOCATION.fields_by_name['env'].enum_type = _ENVIRONMENT
_LOCATION.fields_by_name['dc'].enum_type = _DATACENTER
_ORIGIN.fields_by_name['datacenter'].enum_type = _DATACENTER
_CONTROLMESSAGE_WATERMARKORIGIN.fields_by_name['datacenter'].enum_type = _DATACENTER
_CONTROLMESSAGE_WATERMARKORIGIN.fields_by_name['cluster'].enum_type = _CONTROLMESSAGE_CLUSTER
_CONTROLMESSAGE_WATERMARKORIGIN.containing_type = _CONTROLMESSAGE
_CONTROLMESSAGE_WATERMARK_SETFIELDSENTRY.containing_type = _CONTROLMESSAGE_WATERMARK
_CONTROLMESSAGE_WATERMARK.fields_by_name['set_fields'].message_type = _CONTROLMESSAGE_WATERMARK_SETFIELDSENTRY
_CONTROLMESSAGE_WATERMARK.containing_type = _CONTROLMESSAGE
_CONTROLMESSAGE.fields_by_name['watermark'].message_type = _CONTROLMESSAGE_WATERMARK
_CONTROLMESSAGE_CLUSTER.containing_type = _CONTROLMESSAGE
_PARTITION.fields_by_name['host_platform'].enum_type = _PLATFORM
_PARTITION.fields_by_name['event_type'].enum_type = _EVENTTYPE
_HDFSPARTITION.fields_by_name['host_platform'].enum_type = _PLATFORM
_HDFSPARTITION.fields_by_name['event_type'].enum_type = _EVENTTYPE
_HASH128_SETFIELDSENTRY.containing_type = _HASH128
_HASH128.fields_by_name['set_fields'].message_type = _HASH128_SETFIELDSENTRY
DESCRIPTOR.message_types_by_name['KafkaMessageOptions'] = _KAFKAMESSAGEOPTIONS
DESCRIPTOR.message_types_by_name['DataSet'] = _DATASET
DESCRIPTOR.message_types_by_name['DataSetChunk'] = _DATASETCHUNK
DESCRIPTOR.message_types_by_name['DataSetFormat'] = _DATASETFORMAT
DESCRIPTOR.message_types_by_name['HDFSOptions'] = _HDFSOPTIONS
DESCRIPTOR.message_types_by_name['ProducerTransportOptions'] = _PRODUCERTRANSPORTOPTIONS
DESCRIPTOR.message_types_by_name['PropertyOptions'] = _PROPERTYOPTIONS
DESCRIPTOR.message_types_by_name['GlupOptions'] = _GLUPOPTIONS
DESCRIPTOR.message_types_by_name['GlupFieldOptions'] = _GLUPFIELDOPTIONS
DESCRIPTOR.message_types_by_name['JsonMapping'] = _JSONMAPPING
DESCRIPTOR.message_types_by_name['JsonAlias'] = _JSONALIAS
DESCRIPTOR.message_types_by_name['BaseGlupMessage'] = _BASEGLUPMESSAGE
DESCRIPTOR.message_types_by_name['ForwardedWatermarkMessage'] = _FORWARDEDWATERMARKMESSAGE
DESCRIPTOR.message_types_by_name['Location'] = _LOCATION
DESCRIPTOR.message_types_by_name['Origin'] = _ORIGIN
DESCRIPTOR.message_types_by_name['ControlMessage'] = _CONTROLMESSAGE
DESCRIPTOR.message_types_by_name['Partition'] = _PARTITION
DESCRIPTOR.message_types_by_name['HDFSPartition'] = _HDFSPARTITION
DESCRIPTOR.message_types_by_name['Hash128'] = _HASH128
DESCRIPTOR.enum_types_by_name['PartitionScheme'] = _PARTITIONSCHEME
DESCRIPTOR.enum_types_by_name['MessageFormat'] = _MESSAGEFORMAT
DESCRIPTOR.enum_types_by_name['HDFSDataFormat'] = _HDFSDATAFORMAT
DESCRIPTOR.enum_types_by_name['DataSetKind'] = _DATASETKIND
DESCRIPTOR.enum_types_by_name['MonitoringLevel'] = _MONITORINGLEVEL
DESCRIPTOR.enum_types_by_name['DataCenter'] = _DATACENTER
DESCRIPTOR.enum_types_by_name['Environment'] = _ENVIRONMENT
DESCRIPTOR.enum_types_by_name['Platform'] = _PLATFORM
DESCRIPTOR.enum_types_by_name['EventType'] = _EVENTTYPE
DESCRIPTOR.enum_types_by_name['YesNo'] = _YESNO
DESCRIPTOR.extensions_by_name['glup'] = glup
DESCRIPTOR.extensions_by_name['contains_nullable_fields'] = contains_nullable_fields
DESCRIPTOR.extensions_by_name['glupfield'] = glupfield
DESCRIPTOR.extensions_by_name['json_mapping'] = json_mapping
DESCRIPTOR.extensions_by_name['json'] = json
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

KafkaMessageOptions = _reflection.GeneratedProtocolMessageType('KafkaMessageOptions', (_message.Message,), dict(
  DESCRIPTOR = _KAFKAMESSAGEOPTIONS,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.KafkaMessageOptions)
  ))
_sym_db.RegisterMessage(KafkaMessageOptions)

DataSet = _reflection.GeneratedProtocolMessageType('DataSet', (_message.Message,), dict(
  DESCRIPTOR = _DATASET,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.DataSet)
  ))
_sym_db.RegisterMessage(DataSet)

DataSetChunk = _reflection.GeneratedProtocolMessageType('DataSetChunk', (_message.Message,), dict(
  DESCRIPTOR = _DATASETCHUNK,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.DataSetChunk)
  ))
_sym_db.RegisterMessage(DataSetChunk)

DataSetFormat = _reflection.GeneratedProtocolMessageType('DataSetFormat', (_message.Message,), dict(
  DESCRIPTOR = _DATASETFORMAT,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.DataSetFormat)
  ))
_sym_db.RegisterMessage(DataSetFormat)

HDFSOptions = _reflection.GeneratedProtocolMessageType('HDFSOptions', (_message.Message,), dict(

  ImportOptions = _reflection.GeneratedProtocolMessageType('ImportOptions', (_message.Message,), dict(

    View = _reflection.GeneratedProtocolMessageType('View', (_message.Message,), dict(

      HiveOptions = _reflection.GeneratedProtocolMessageType('HiveOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_VIEW_HIVEOPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.View.HiveOptions)
        ))
      ,
      DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_VIEW,
      __module__ = 'metadata_proto_pb2'
      # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.View)
      ))
    ,

    Generator = _reflection.GeneratedProtocolMessageType('Generator', (_message.Message,), dict(

      DedupOptions = _reflection.GeneratedProtocolMessageType('DedupOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DEDUPOPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.DedupOptions)
        ))
      ,

      Kafka2HdfsOptions = _reflection.GeneratedProtocolMessageType('Kafka2HdfsOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KAFKA2HDFSOPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.Kafka2HdfsOptions)
        ))
      ,

      KacohaConfig = _reflection.GeneratedProtocolMessageType('KacohaConfig', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIG,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfig)
        ))
      ,

      KacohaConfigPerDc = _reflection.GeneratedProtocolMessageType('KacohaConfigPerDc', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHACONFIGPERDC,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.KacohaConfigPerDc)
        ))
      ,

      KaCoHaOptions = _reflection.GeneratedProtocolMessageType('KaCoHaOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_KACOHAOPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.KaCoHaOptions)
        ))
      ,

      DataloaderOptions = _reflection.GeneratedProtocolMessageType('DataloaderOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_DATALOADEROPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.DataloaderOptions)
        ))
      ,

      SyncOptions = _reflection.GeneratedProtocolMessageType('SyncOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SYNCOPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.SyncOptions)
        ))
      ,

      BackupOptions = _reflection.GeneratedProtocolMessageType('BackupOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_BACKUPOPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.BackupOptions)
        ))
      ,

      TranscodingOptions = _reflection.GeneratedProtocolMessageType('TranscodingOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_TRANSCODINGOPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.TranscodingOptions)
        ))
      ,

      SamplerOptions = _reflection.GeneratedProtocolMessageType('SamplerOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_SAMPLEROPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.SamplerOptions)
        ))
      ,

      ComparatorOptions = _reflection.GeneratedProtocolMessageType('ComparatorOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_COMPARATOROPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.ComparatorOptions)
        ))
      ,

      ExternalOptions = _reflection.GeneratedProtocolMessageType('ExternalOptions', (_message.Message,), dict(
        DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR_EXTERNALOPTIONS,
        __module__ = 'metadata_proto_pb2'
        # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator.ExternalOptions)
        ))
      ,
      DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS_GENERATOR,
      __module__ = 'metadata_proto_pb2'
      # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions.Generator)
      ))
    ,
    DESCRIPTOR = _HDFSOPTIONS_IMPORTOPTIONS,
    __module__ = 'metadata_proto_pb2'
    # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions.ImportOptions)
    ))
  ,
  DESCRIPTOR = _HDFSOPTIONS,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSOptions)
  ))
_sym_db.RegisterMessage(HDFSOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.View)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.View.HiveOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.DedupOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.Kafka2HdfsOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.KacohaConfig)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.KacohaConfigPerDc)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.KaCoHaOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.DataloaderOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.SyncOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.BackupOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.TranscodingOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.SamplerOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.ComparatorOptions)
_sym_db.RegisterMessage(HDFSOptions.ImportOptions.Generator.ExternalOptions)

ProducerTransportOptions = _reflection.GeneratedProtocolMessageType('ProducerTransportOptions', (_message.Message,), dict(
  DESCRIPTOR = _PRODUCERTRANSPORTOPTIONS,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.ProducerTransportOptions)
  ))
_sym_db.RegisterMessage(ProducerTransportOptions)

PropertyOptions = _reflection.GeneratedProtocolMessageType('PropertyOptions', (_message.Message,), dict(
  DESCRIPTOR = _PROPERTYOPTIONS,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.PropertyOptions)
  ))
_sym_db.RegisterMessage(PropertyOptions)

GlupOptions = _reflection.GeneratedProtocolMessageType('GlupOptions', (_message.Message,), dict(
  DESCRIPTOR = _GLUPOPTIONS,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.GlupOptions)
  ))
_sym_db.RegisterMessage(GlupOptions)

GlupFieldOptions = _reflection.GeneratedProtocolMessageType('GlupFieldOptions', (_message.Message,), dict(
  DESCRIPTOR = _GLUPFIELDOPTIONS,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.GlupFieldOptions)
  ))
_sym_db.RegisterMessage(GlupFieldOptions)

JsonMapping = _reflection.GeneratedProtocolMessageType('JsonMapping', (_message.Message,), dict(
  DESCRIPTOR = _JSONMAPPING,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.JsonMapping)
  ))
_sym_db.RegisterMessage(JsonMapping)

JsonAlias = _reflection.GeneratedProtocolMessageType('JsonAlias', (_message.Message,), dict(
  DESCRIPTOR = _JSONALIAS,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.JsonAlias)
  ))
_sym_db.RegisterMessage(JsonAlias)

BaseGlupMessage = _reflection.GeneratedProtocolMessageType('BaseGlupMessage', (_message.Message,), dict(

  SetFieldsEntry = _reflection.GeneratedProtocolMessageType('SetFieldsEntry', (_message.Message,), dict(
    DESCRIPTOR = _BASEGLUPMESSAGE_SETFIELDSENTRY,
    __module__ = 'metadata_proto_pb2'
    # @@protoc_insertion_point(class_scope:Criteo.Glup.BaseGlupMessage.SetFieldsEntry)
    ))
  ,
  DESCRIPTOR = _BASEGLUPMESSAGE,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.BaseGlupMessage)
  ))
_sym_db.RegisterMessage(BaseGlupMessage)
_sym_db.RegisterMessage(BaseGlupMessage.SetFieldsEntry)

ForwardedWatermarkMessage = _reflection.GeneratedProtocolMessageType('ForwardedWatermarkMessage', (_message.Message,), dict(
  DESCRIPTOR = _FORWARDEDWATERMARKMESSAGE,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.ForwardedWatermarkMessage)
  ))
_sym_db.RegisterMessage(ForwardedWatermarkMessage)

Location = _reflection.GeneratedProtocolMessageType('Location', (_message.Message,), dict(
  DESCRIPTOR = _LOCATION,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.Location)
  ))
_sym_db.RegisterMessage(Location)

Origin = _reflection.GeneratedProtocolMessageType('Origin', (_message.Message,), dict(
  DESCRIPTOR = _ORIGIN,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.Origin)
  ))
_sym_db.RegisterMessage(Origin)

ControlMessage = _reflection.GeneratedProtocolMessageType('ControlMessage', (_message.Message,), dict(

  WatermarkOrigin = _reflection.GeneratedProtocolMessageType('WatermarkOrigin', (_message.Message,), dict(
    DESCRIPTOR = _CONTROLMESSAGE_WATERMARKORIGIN,
    __module__ = 'metadata_proto_pb2'
    # @@protoc_insertion_point(class_scope:Criteo.Glup.ControlMessage.WatermarkOrigin)
    ))
  ,

  Watermark = _reflection.GeneratedProtocolMessageType('Watermark', (_message.Message,), dict(

    SetFieldsEntry = _reflection.GeneratedProtocolMessageType('SetFieldsEntry', (_message.Message,), dict(
      DESCRIPTOR = _CONTROLMESSAGE_WATERMARK_SETFIELDSENTRY,
      __module__ = 'metadata_proto_pb2'
      # @@protoc_insertion_point(class_scope:Criteo.Glup.ControlMessage.Watermark.SetFieldsEntry)
      ))
    ,
    DESCRIPTOR = _CONTROLMESSAGE_WATERMARK,
    __module__ = 'metadata_proto_pb2'
    # @@protoc_insertion_point(class_scope:Criteo.Glup.ControlMessage.Watermark)
    ))
  ,
  DESCRIPTOR = _CONTROLMESSAGE,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.ControlMessage)
  ))
_sym_db.RegisterMessage(ControlMessage)
_sym_db.RegisterMessage(ControlMessage.WatermarkOrigin)
_sym_db.RegisterMessage(ControlMessage.Watermark)
_sym_db.RegisterMessage(ControlMessage.Watermark.SetFieldsEntry)

Partition = _reflection.GeneratedProtocolMessageType('Partition', (_message.Message,), dict(
  DESCRIPTOR = _PARTITION,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.Partition)
  ))
_sym_db.RegisterMessage(Partition)

HDFSPartition = _reflection.GeneratedProtocolMessageType('HDFSPartition', (_message.Message,), dict(
  DESCRIPTOR = _HDFSPARTITION,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.HDFSPartition)
  ))
_sym_db.RegisterMessage(HDFSPartition)

Hash128 = _reflection.GeneratedProtocolMessageType('Hash128', (_message.Message,), dict(

  SetFieldsEntry = _reflection.GeneratedProtocolMessageType('SetFieldsEntry', (_message.Message,), dict(
    DESCRIPTOR = _HASH128_SETFIELDSENTRY,
    __module__ = 'metadata_proto_pb2'
    # @@protoc_insertion_point(class_scope:Criteo.Glup.Hash128.SetFieldsEntry)
    ))
  ,
  DESCRIPTOR = _HASH128,
  __module__ = 'metadata_proto_pb2'
  # @@protoc_insertion_point(class_scope:Criteo.Glup.Hash128)
  ))
_sym_db.RegisterMessage(Hash128)
_sym_db.RegisterMessage(Hash128.SetFieldsEntry)

glup.message_type = _GLUPOPTIONS
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(glup)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(contains_nullable_fields)
glupfield.message_type = _GLUPFIELDOPTIONS
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(glupfield)
json_mapping.message_type = _JSONMAPPING
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(json_mapping)
json.message_type = _JSONALIAS
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(json)

DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\017com.criteo.glup'))
_BASEGLUPMESSAGE_SETFIELDSENTRY.has_options = True
_BASEGLUPMESSAGE_SETFIELDSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_BASEGLUPMESSAGE.fields_by_name['control_message'].has_options = True
_BASEGLUPMESSAGE.fields_by_name['control_message']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222\265\030\014\n\n__metadata'))
_BASEGLUPMESSAGE.has_options = True
_BASEGLUPMESSAGE._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\210\265\030\001'))
_FORWARDEDWATERMARKMESSAGE.fields_by_name['control_message'].has_options = True
_FORWARDEDWATERMARKMESSAGE.fields_by_name['control_message']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222\265\030\014\n\n__metadata'))
_ORIGIN.fields_by_name['ip4'].has_options = True
_ORIGIN.fields_by_name['ip4']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\t\n\007host_ip'))
_ORIGIN.fields_by_name['container_task'].has_options = True
_ORIGIN.fields_by_name['container_task']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\002\020\001'))
_ORIGIN.fields_by_name['container_app'].has_options = True
_ORIGIN.fields_by_name['container_app']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\002\020\001'))
_CONTROLMESSAGE_WATERMARK_SETFIELDSENTRY.has_options = True
_CONTROLMESSAGE_WATERMARK_SETFIELDSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONTROLMESSAGE_WATERMARK.fields_by_name['timestamp_seconds'].has_options = True
_CONTROLMESSAGE_WATERMARK.fields_by_name['timestamp_seconds']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222\265\030\013\n\ttimestamp'))
_CONTROLMESSAGE_WATERMARK.has_options = True
_CONTROLMESSAGE_WATERMARK._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\210\265\030\001'))
_PARTITION.fields_by_name['timestamp_seconds'].has_options = True
_PARTITION.fields_by_name['timestamp_seconds']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\013\n\ttimestamp'))
_PARTITION.fields_by_name['event_type'].has_options = True
_PARTITION.fields_by_name['event_type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\212\265\030\002\020\001'))
_HASH128_SETFIELDSENTRY.has_options = True
_HASH128_SETFIELDSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
