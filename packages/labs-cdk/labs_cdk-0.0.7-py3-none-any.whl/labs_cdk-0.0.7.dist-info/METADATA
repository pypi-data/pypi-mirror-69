Metadata-Version: 2.1
Name: labs-cdk
Version: 0.0.7
Summary: GIC Labs AWS CDK constructs
Home-page: https://github.com/GICLabs/labs-cdk
Author: Vaibhav Bansal
Author-email: vaibhavbansal@gic.com.sg
License: UNKNOWN
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: attrs (==19.3.0)
Requires-Dist: aws-cdk.assets (==1.38.0)
Requires-Dist: aws-cdk.aws-apigateway (==1.38.0)
Requires-Dist: aws-cdk.aws-applicationautoscaling (==1.38.0)
Requires-Dist: aws-cdk.aws-autoscaling (==1.38.0)
Requires-Dist: aws-cdk.aws-autoscaling-common (==1.38.0)
Requires-Dist: aws-cdk.aws-autoscaling-hooktargets (==1.38.0)
Requires-Dist: aws-cdk.aws-batch (==1.38.0)
Requires-Dist: aws-cdk.aws-certificatemanager (==1.38.0)
Requires-Dist: aws-cdk.aws-cloudformation (==1.38.0)
Requires-Dist: aws-cdk.aws-cloudfront (==1.38.0)
Requires-Dist: aws-cdk.aws-cloudwatch (==1.38.0)
Requires-Dist: aws-cdk.aws-codebuild (==1.38.0)
Requires-Dist: aws-cdk.aws-codecommit (==1.38.0)
Requires-Dist: aws-cdk.aws-codepipeline (==1.38.0)
Requires-Dist: aws-cdk.aws-cognito (==1.38.0)
Requires-Dist: aws-cdk.aws-ec2 (==1.38.0)
Requires-Dist: aws-cdk.aws-ecr (==1.38.0)
Requires-Dist: aws-cdk.aws-ecr-assets (==1.38.0)
Requires-Dist: aws-cdk.aws-ecs (==1.38.0)
Requires-Dist: aws-cdk.aws-ecs-patterns (==1.38.0)
Requires-Dist: aws-cdk.aws-elasticache (==1.38.0)
Requires-Dist: aws-cdk.aws-elasticloadbalancing (==1.38.0)
Requires-Dist: aws-cdk.aws-elasticloadbalancingv2 (==1.38.0)
Requires-Dist: aws-cdk.aws-events (==1.38.0)
Requires-Dist: aws-cdk.aws-events-targets (==1.38.0)
Requires-Dist: aws-cdk.aws-iam (==1.38.0)
Requires-Dist: aws-cdk.aws-kms (==1.38.0)
Requires-Dist: aws-cdk.aws-lambda (==1.38.0)
Requires-Dist: aws-cdk.aws-logs (==1.38.0)
Requires-Dist: aws-cdk.aws-rds (==1.38.0)
Requires-Dist: aws-cdk.aws-route53 (==1.38.0)
Requires-Dist: aws-cdk.aws-route53-targets (==1.38.0)
Requires-Dist: aws-cdk.aws-s3 (==1.38.0)
Requires-Dist: aws-cdk.aws-s3-assets (==1.38.0)
Requires-Dist: aws-cdk.aws-sam (==1.38.0)
Requires-Dist: aws-cdk.aws-secretsmanager (==1.38.0)
Requires-Dist: aws-cdk.aws-servicediscovery (==1.38.0)
Requires-Dist: aws-cdk.aws-sns (==1.38.0)
Requires-Dist: aws-cdk.aws-sns-subscriptions (==1.38.0)
Requires-Dist: aws-cdk.aws-sqs (==1.38.0)
Requires-Dist: aws-cdk.aws-ssm (==1.38.0)
Requires-Dist: aws-cdk.aws-stepfunctions (==1.38.0)
Requires-Dist: aws-cdk.cloud-assembly-schema (==1.38.0)
Requires-Dist: aws-cdk.core (==1.38.0)
Requires-Dist: aws-cdk.custom-resources (==1.38.0)
Requires-Dist: aws-cdk.cx-api (==1.38.0)
Requires-Dist: aws-cdk.region-info (==1.38.0)
Requires-Dist: cattrs (==1.0.0)
Requires-Dist: constructs (==3.0.3)
Requires-Dist: jsii (==1.5.0)
Requires-Dist: publication (==0.0.3)
Requires-Dist: python-dateutil (==2.8.1)
Requires-Dist: six (==1.14.0)
Requires-Dist: typing-extensions (==3.7.4.2)


# Welcome to your CDK Python project!

This is a blank project for Python development with CDK.

The `cdk.json` file tells the CDK Toolkit how to execute your app.

This project is set up like a standard Python project.  The initialization
process also creates a virtualenv within this project, stored under the .env
directory.  To create the virtualenv it assumes that there is a `python3`
(or `python` for Windows) executable in your path with access to the `venv`
package. If for any reason the automatic creation of the virtualenv fails,
you can create the virtualenv manually.

To manually create a virtualenv on MacOS and Linux:

```
$ python3 -m venv .env
```

After the init process completes and the virtualenv is created, you can use the following
step to activate your virtualenv.

```
$ source .env/bin/activate
```

If you are a Windows platform, you would activate the virtualenv like this:

```
% .env\Scripts\activate.bat
```

Once the virtualenv is activated, you can install the required dependencies.

```
$ pip install -r requirements.txt
```

At this point you can now synthesize the CloudFormation template for this code.

```
$ cdk synth
```

To add additional dependencies, for example other CDK libraries, just add
them to your `setup.py` file and rerun the `pip install -r requirements.txt`
command.

## Useful commands

 * `cdk ls`          list all stacks in the app
 * `cdk synth`       emits the synthesized CloudFormation template
 * `cdk deploy`      deploy this stack to your default AWS account/region
 * `cdk diff`        compare deployed stack with current state
 * `cdk docs`        open CDK documentation

Enjoy!


