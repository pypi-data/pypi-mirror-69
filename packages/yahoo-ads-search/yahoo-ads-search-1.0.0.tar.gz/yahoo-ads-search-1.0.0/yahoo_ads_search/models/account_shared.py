# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_search.configuration import Configuration


class AccountShared(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'member_count': 'int',
        'name': 'str',
        'reference_count': 'int',
        'shared_list_id': 'int'
    }

    attribute_map = {
        'account_id': 'accountId',
        'member_count': 'memberCount',
        'name': 'name',
        'reference_count': 'referenceCount',
        'shared_list_id': 'sharedListId'
    }

    def __init__(self, account_id=None, member_count=None, name=None, reference_count=None, shared_list_id=None, local_vars_configuration=None):  # noqa: E501
        """AccountShared - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._member_count = None
        self._name = None
        self._reference_count = None
        self._shared_list_id = None
        self.discriminator = None

        self.account_id = account_id
        self.member_count = member_count
        self.name = name
        self.reference_count = reference_count
        self.shared_list_id = shared_list_id

    @property
    def account_id(self):
        """Gets the account_id of this AccountShared.  # noqa: E501

        <div lang=\"ja\">アカウントIDです。</div> <div lang=\"en\">Account ID.</div>   # noqa: E501

        :return: The account_id of this AccountShared.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AccountShared.

        <div lang=\"ja\">アカウントIDです。</div> <div lang=\"en\">Account ID.</div>   # noqa: E501

        :param account_id: The account_id of this AccountShared.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def member_count(self):
        """Gets the member_count of this AccountShared.  # noqa: E501

        <div lang=\"ja\">対象外キーワードリストに含まれるアイテム（検索対象外キーワード）数です。</div> <div lang=\"en\">Number of items on Negative keyword list (keyword excluded on search).</div>   # noqa: E501

        :return: The member_count of this AccountShared.  # noqa: E501
        :rtype: int
        """
        return self._member_count

    @member_count.setter
    def member_count(self, member_count):
        """Sets the member_count of this AccountShared.

        <div lang=\"ja\">対象外キーワードリストに含まれるアイテム（検索対象外キーワード）数です。</div> <div lang=\"en\">Number of items on Negative keyword list (keyword excluded on search).</div>   # noqa: E501

        :param member_count: The member_count of this AccountShared.  # noqa: E501
        :type: int
        """

        self._member_count = member_count

    @property
    def name(self):
        """Gets the name of this AccountShared.  # noqa: E501

        <div lang=\"ja\">対象外キーワードリスト名です。<br>ADDおよびSET時、このフィールドは必須となります。</div> <div lang=\"en\">Negative keyword list name.<br>This field is required in ADD and SET operation.</div>   # noqa: E501

        :return: The name of this AccountShared.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AccountShared.

        <div lang=\"ja\">対象外キーワードリスト名です。<br>ADDおよびSET時、このフィールドは必須となります。</div> <div lang=\"en\">Negative keyword list name.<br>This field is required in ADD and SET operation.</div>   # noqa: E501

        :param name: The name of this AccountShared.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def reference_count(self):
        """Gets the reference_count of this AccountShared.  # noqa: E501

        <div lang=\"ja\">対象外キーワードリストを使用している キャンペーン数です。</div> <div lang=\"en\">Number of campaigns which use negative keyword list.</div>   # noqa: E501

        :return: The reference_count of this AccountShared.  # noqa: E501
        :rtype: int
        """
        return self._reference_count

    @reference_count.setter
    def reference_count(self, reference_count):
        """Sets the reference_count of this AccountShared.

        <div lang=\"ja\">対象外キーワードリストを使用している キャンペーン数です。</div> <div lang=\"en\">Number of campaigns which use negative keyword list.</div>   # noqa: E501

        :param reference_count: The reference_count of this AccountShared.  # noqa: E501
        :type: int
        """

        self._reference_count = reference_count

    @property
    def shared_list_id(self):
        """Gets the shared_list_id of this AccountShared.  # noqa: E501

        <div lang=\"ja\">対象外キーワードリストIDです。<br>SETおよびREMOVE時、このフィールドは必須となります。</div> <div lang=\"en\">Negative keyword list ID.<br>This field is required in SET and REMOVE operation.</div>   # noqa: E501

        :return: The shared_list_id of this AccountShared.  # noqa: E501
        :rtype: int
        """
        return self._shared_list_id

    @shared_list_id.setter
    def shared_list_id(self, shared_list_id):
        """Sets the shared_list_id of this AccountShared.

        <div lang=\"ja\">対象外キーワードリストIDです。<br>SETおよびREMOVE時、このフィールドは必須となります。</div> <div lang=\"en\">Negative keyword list ID.<br>This field is required in SET and REMOVE operation.</div>   # noqa: E501

        :param shared_list_id: The shared_list_id of this AccountShared.  # noqa: E501
        :type: int
        """

        self._shared_list_id = shared_list_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AccountShared):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AccountShared):
            return True

        return self.to_dict() != other.to_dict()
