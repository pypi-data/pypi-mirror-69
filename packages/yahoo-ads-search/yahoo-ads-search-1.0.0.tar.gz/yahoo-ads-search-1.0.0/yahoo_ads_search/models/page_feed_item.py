# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_search.configuration import Configuration


class PageFeedItem(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'approval_status': 'PageFeedItemServiceApprovalStatus',
        'disapproval_reason_codes': 'list[str]',
        'disapproval_reason_comment': 'str',
        'feed_id': 'int',
        'page_feed_custom_label': 'str',
        'page_feed_item_id': 'int',
        'page_feed_url': 'str'
    }

    attribute_map = {
        'account_id': 'accountId',
        'approval_status': 'approvalStatus',
        'disapproval_reason_codes': 'disapprovalReasonCodes',
        'disapproval_reason_comment': 'disapprovalReasonComment',
        'feed_id': 'feedId',
        'page_feed_custom_label': 'pageFeedCustomLabel',
        'page_feed_item_id': 'pageFeedItemId',
        'page_feed_url': 'pageFeedUrl'
    }

    def __init__(self, account_id=None, approval_status=None, disapproval_reason_codes=None, disapproval_reason_comment=None, feed_id=None, page_feed_custom_label=None, page_feed_item_id=None, page_feed_url=None, local_vars_configuration=None):  # noqa: E501
        """PageFeedItem - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._approval_status = None
        self._disapproval_reason_codes = None
        self._disapproval_reason_comment = None
        self._feed_id = None
        self._page_feed_custom_label = None
        self._page_feed_item_id = None
        self._page_feed_url = None
        self.discriminator = None

        self.account_id = account_id
        self.approval_status = approval_status
        self.disapproval_reason_codes = disapproval_reason_codes
        self.disapproval_reason_comment = disapproval_reason_comment
        self.feed_id = feed_id
        self.page_feed_custom_label = page_feed_custom_label
        self.page_feed_item_id = page_feed_item_id
        self.page_feed_url = page_feed_url

    @property
    def account_id(self):
        """Gets the account_id of this PageFeedItem.  # noqa: E501

        <div lang=\"ja\">アカウントID</div> <div lang=\"en\">Account ID</div>   # noqa: E501

        :return: The account_id of this PageFeedItem.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this PageFeedItem.

        <div lang=\"ja\">アカウントID</div> <div lang=\"en\">Account ID</div>   # noqa: E501

        :param account_id: The account_id of this PageFeedItem.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def approval_status(self):
        """Gets the approval_status of this PageFeedItem.  # noqa: E501


        :return: The approval_status of this PageFeedItem.  # noqa: E501
        :rtype: PageFeedItemServiceApprovalStatus
        """
        return self._approval_status

    @approval_status.setter
    def approval_status(self, approval_status):
        """Sets the approval_status of this PageFeedItem.


        :param approval_status: The approval_status of this PageFeedItem.  # noqa: E501
        :type: PageFeedItemServiceApprovalStatus
        """

        self._approval_status = approval_status

    @property
    def disapproval_reason_codes(self):
        """Gets the disapproval_reason_codes of this PageFeedItem.  # noqa: E501

        <div lang=\"ja\">審査否認理由コード</div> <div lang=\"en\">Codes of disapproval reason</div>   # noqa: E501

        :return: The disapproval_reason_codes of this PageFeedItem.  # noqa: E501
        :rtype: list[str]
        """
        return self._disapproval_reason_codes

    @disapproval_reason_codes.setter
    def disapproval_reason_codes(self, disapproval_reason_codes):
        """Sets the disapproval_reason_codes of this PageFeedItem.

        <div lang=\"ja\">審査否認理由コード</div> <div lang=\"en\">Codes of disapproval reason</div>   # noqa: E501

        :param disapproval_reason_codes: The disapproval_reason_codes of this PageFeedItem.  # noqa: E501
        :type: list[str]
        """

        self._disapproval_reason_codes = disapproval_reason_codes

    @property
    def disapproval_reason_comment(self):
        """Gets the disapproval_reason_comment of this PageFeedItem.  # noqa: E501

        <div lang=\"ja\">審査否認理由のコメント</div> <div lang=\"en\">Comment of disapproval reason</div>   # noqa: E501

        :return: The disapproval_reason_comment of this PageFeedItem.  # noqa: E501
        :rtype: str
        """
        return self._disapproval_reason_comment

    @disapproval_reason_comment.setter
    def disapproval_reason_comment(self, disapproval_reason_comment):
        """Sets the disapproval_reason_comment of this PageFeedItem.

        <div lang=\"ja\">審査否認理由のコメント</div> <div lang=\"en\">Comment of disapproval reason</div>   # noqa: E501

        :param disapproval_reason_comment: The disapproval_reason_comment of this PageFeedItem.  # noqa: E501
        :type: str
        """

        self._disapproval_reason_comment = disapproval_reason_comment

    @property
    def feed_id(self):
        """Gets the feed_id of this PageFeedItem.  # noqa: E501

        <div lang=\"ja\">フィードID</div> <div lang=\"en\">Feed ID</div>   # noqa: E501

        :return: The feed_id of this PageFeedItem.  # noqa: E501
        :rtype: int
        """
        return self._feed_id

    @feed_id.setter
    def feed_id(self, feed_id):
        """Sets the feed_id of this PageFeedItem.

        <div lang=\"ja\">フィードID</div> <div lang=\"en\">Feed ID</div>   # noqa: E501

        :param feed_id: The feed_id of this PageFeedItem.  # noqa: E501
        :type: int
        """

        self._feed_id = feed_id

    @property
    def page_feed_custom_label(self):
        """Gets the page_feed_custom_label of this PageFeedItem.  # noqa: E501

        <div lang=\"ja\">ページフィードアイテムのカスタムラベル<br> 複数ある場合はカンマ区切り</div> <div lang=\"en\">Custom label of Page feed item.<br> If multiple, comma separated.</div>   # noqa: E501

        :return: The page_feed_custom_label of this PageFeedItem.  # noqa: E501
        :rtype: str
        """
        return self._page_feed_custom_label

    @page_feed_custom_label.setter
    def page_feed_custom_label(self, page_feed_custom_label):
        """Sets the page_feed_custom_label of this PageFeedItem.

        <div lang=\"ja\">ページフィードアイテムのカスタムラベル<br> 複数ある場合はカンマ区切り</div> <div lang=\"en\">Custom label of Page feed item.<br> If multiple, comma separated.</div>   # noqa: E501

        :param page_feed_custom_label: The page_feed_custom_label of this PageFeedItem.  # noqa: E501
        :type: str
        """

        self._page_feed_custom_label = page_feed_custom_label

    @property
    def page_feed_item_id(self):
        """Gets the page_feed_item_id of this PageFeedItem.  # noqa: E501

        <div lang=\"ja\">ページフィードアイテムID</div> <div lang=\"en\">Page feed item ID</div>   # noqa: E501

        :return: The page_feed_item_id of this PageFeedItem.  # noqa: E501
        :rtype: int
        """
        return self._page_feed_item_id

    @page_feed_item_id.setter
    def page_feed_item_id(self, page_feed_item_id):
        """Sets the page_feed_item_id of this PageFeedItem.

        <div lang=\"ja\">ページフィードアイテムID</div> <div lang=\"en\">Page feed item ID</div>   # noqa: E501

        :param page_feed_item_id: The page_feed_item_id of this PageFeedItem.  # noqa: E501
        :type: int
        """

        self._page_feed_item_id = page_feed_item_id

    @property
    def page_feed_url(self):
        """Gets the page_feed_url of this PageFeedItem.  # noqa: E501

        <div lang=\"ja\">ページフィードURL。</div> <div lang=\"en\">Url of page feed</div>   # noqa: E501

        :return: The page_feed_url of this PageFeedItem.  # noqa: E501
        :rtype: str
        """
        return self._page_feed_url

    @page_feed_url.setter
    def page_feed_url(self, page_feed_url):
        """Sets the page_feed_url of this PageFeedItem.

        <div lang=\"ja\">ページフィードURL。</div> <div lang=\"en\">Url of page feed</div>   # noqa: E501

        :param page_feed_url: The page_feed_url of this PageFeedItem.  # noqa: E501
        :type: str
        """

        self._page_feed_url = page_feed_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PageFeedItem):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PageFeedItem):
            return True

        return self.to_dict() != other.to_dict()
