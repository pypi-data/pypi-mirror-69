# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_search.configuration import Configuration


class AdGroupBidMultiplier(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'ad_group_id': 'int',
        'bid_multiplier': 'float',
        'campaign_id': 'int',
        'platform_type': 'AdGroupBidMultiplierServicePlatformType'
    }

    attribute_map = {
        'account_id': 'accountId',
        'ad_group_id': 'adGroupId',
        'bid_multiplier': 'bidMultiplier',
        'campaign_id': 'campaignId',
        'platform_type': 'platformType'
    }

    def __init__(self, account_id=None, ad_group_id=None, bid_multiplier=None, campaign_id=None, platform_type=None, local_vars_configuration=None):  # noqa: E501
        """AdGroupBidMultiplier - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._ad_group_id = None
        self._bid_multiplier = None
        self._campaign_id = None
        self._platform_type = None
        self.discriminator = None

        self.account_id = account_id
        self.ad_group_id = ad_group_id
        self.bid_multiplier = bid_multiplier
        self.campaign_id = campaign_id
        self.platform_type = platform_type

    @property
    def account_id(self):
        """Gets the account_id of this AdGroupBidMultiplier.  # noqa: E501

        <div lang=\"ja\">アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account ID.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The account_id of this AdGroupBidMultiplier.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AdGroupBidMultiplier.

        <div lang=\"ja\">アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account ID.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param account_id: The account_id of this AdGroupBidMultiplier.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def ad_group_id(self):
        """Gets the ad_group_id of this AdGroupBidMultiplier.  # noqa: E501

        <div lang=\"ja\">広告グループIDです。<br> SETおよびREMOVE時、このフィールドは必須となります。</div> <div lang=\"en\">Ad group ID.<br> This field is required in SET and REMOVE operation.</div>   # noqa: E501

        :return: The ad_group_id of this AdGroupBidMultiplier.  # noqa: E501
        :rtype: int
        """
        return self._ad_group_id

    @ad_group_id.setter
    def ad_group_id(self, ad_group_id):
        """Sets the ad_group_id of this AdGroupBidMultiplier.

        <div lang=\"ja\">広告グループIDです。<br> SETおよびREMOVE時、このフィールドは必須となります。</div> <div lang=\"en\">Ad group ID.<br> This field is required in SET and REMOVE operation.</div>   # noqa: E501

        :param ad_group_id: The ad_group_id of this AdGroupBidMultiplier.  # noqa: E501
        :type: int
        """

        self._ad_group_id = ad_group_id

    @property
    def bid_multiplier(self):
        """Gets the bid_multiplier of this AdGroupBidMultiplier.  # noqa: E501

        <div lang=\"ja\">入札調整率です。0～10.0まで指定できます。0を指定した場合、広告は配信されません。<br> SET時、このフィールドは必須となります。</div> <div lang=\"en\">Bid adjustment rate.<br> Can be specified between  0 to 10.0.<br> When specified &#39;0&#39;, the ad will not be delivered.<br> This field is required in SET operation.</div>   # noqa: E501

        :return: The bid_multiplier of this AdGroupBidMultiplier.  # noqa: E501
        :rtype: float
        """
        return self._bid_multiplier

    @bid_multiplier.setter
    def bid_multiplier(self, bid_multiplier):
        """Sets the bid_multiplier of this AdGroupBidMultiplier.

        <div lang=\"ja\">入札調整率です。0～10.0まで指定できます。0を指定した場合、広告は配信されません。<br> SET時、このフィールドは必須となります。</div> <div lang=\"en\">Bid adjustment rate.<br> Can be specified between  0 to 10.0.<br> When specified &#39;0&#39;, the ad will not be delivered.<br> This field is required in SET operation.</div>   # noqa: E501

        :param bid_multiplier: The bid_multiplier of this AdGroupBidMultiplier.  # noqa: E501
        :type: float
        """

        self._bid_multiplier = bid_multiplier

    @property
    def campaign_id(self):
        """Gets the campaign_id of this AdGroupBidMultiplier.  # noqa: E501

        <div lang=\"ja\">キャンペーンIDです。<br> SETおよびREMOVE時、このフィールドは必須となります。</div> <div lang=\"en\">Campaign ID.<br> This field is required in SET and REMOVE operation.</div>   # noqa: E501

        :return: The campaign_id of this AdGroupBidMultiplier.  # noqa: E501
        :rtype: int
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this AdGroupBidMultiplier.

        <div lang=\"ja\">キャンペーンIDです。<br> SETおよびREMOVE時、このフィールドは必須となります。</div> <div lang=\"en\">Campaign ID.<br> This field is required in SET and REMOVE operation.</div>   # noqa: E501

        :param campaign_id: The campaign_id of this AdGroupBidMultiplier.  # noqa: E501
        :type: int
        """

        self._campaign_id = campaign_id

    @property
    def platform_type(self):
        """Gets the platform_type of this AdGroupBidMultiplier.  # noqa: E501


        :return: The platform_type of this AdGroupBidMultiplier.  # noqa: E501
        :rtype: AdGroupBidMultiplierServicePlatformType
        """
        return self._platform_type

    @platform_type.setter
    def platform_type(self, platform_type):
        """Sets the platform_type of this AdGroupBidMultiplier.


        :param platform_type: The platform_type of this AdGroupBidMultiplier.  # noqa: E501
        :type: AdGroupBidMultiplierServicePlatformType
        """

        self._platform_type = platform_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdGroupBidMultiplier):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AdGroupBidMultiplier):
            return True

        return self.to_dict() != other.to_dict()
