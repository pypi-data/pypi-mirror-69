# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_search.configuration import Configuration


class AdGroupCriterion(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'ad_group_id': 'int',
        'ad_group_name': 'str',
        'ad_group_track_id': 'int',
        'biddable_ad_group_criterion': 'AdGroupCriterionServiceBiddableAdGroupCriterion',
        'campaign_id': 'int',
        'campaign_name': 'str',
        'campaign_track_id': 'int',
        'criterion': 'AdGroupCriterionServiceCriterion',
        'labels': 'list[AdGroupCriterionServiceLabel]',
        'use': 'AdGroupCriterionServiceUse',
        'trademark_status': 'AdGroupCriterionServiceTrademarkStatus',
        'invalided_trademarks': 'list[str]'
    }

    attribute_map = {
        'account_id': 'accountId',
        'ad_group_id': 'adGroupId',
        'ad_group_name': 'adGroupName',
        'ad_group_track_id': 'adGroupTrackId',
        'biddable_ad_group_criterion': 'biddableAdGroupCriterion',
        'campaign_id': 'campaignId',
        'campaign_name': 'campaignName',
        'campaign_track_id': 'campaignTrackId',
        'criterion': 'criterion',
        'labels': 'labels',
        'use': 'use',
        'trademark_status': 'trademarkStatus',
        'invalided_trademarks': 'invalidedTrademarks'
    }

    def __init__(self, account_id=None, ad_group_id=None, ad_group_name=None, ad_group_track_id=None, biddable_ad_group_criterion=None, campaign_id=None, campaign_name=None, campaign_track_id=None, criterion=None, labels=None, use=None, trademark_status=None, invalided_trademarks=None, local_vars_configuration=None):  # noqa: E501
        """AdGroupCriterion - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._ad_group_id = None
        self._ad_group_name = None
        self._ad_group_track_id = None
        self._biddable_ad_group_criterion = None
        self._campaign_id = None
        self._campaign_name = None
        self._campaign_track_id = None
        self._criterion = None
        self._labels = None
        self._use = None
        self._trademark_status = None
        self._invalided_trademarks = None
        self.discriminator = None

        self.account_id = account_id
        self.ad_group_id = ad_group_id
        self.ad_group_name = ad_group_name
        self.ad_group_track_id = ad_group_track_id
        self.biddable_ad_group_criterion = biddable_ad_group_criterion
        self.campaign_id = campaign_id
        self.campaign_name = campaign_name
        self.campaign_track_id = campaign_track_id
        self.criterion = criterion
        self.labels = labels
        self.use = use
        self.trademark_status = trademark_status
        self.invalided_trademarks = invalided_trademarks

    @property
    def account_id(self):
        """Gets the account_id of this AdGroupCriterion.  # noqa: E501

        <div lang=\"ja\">アカウントIDです。</div> <div lang=\"en\">Account ID.</div>   # noqa: E501

        :return: The account_id of this AdGroupCriterion.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AdGroupCriterion.

        <div lang=\"ja\">アカウントIDです。</div> <div lang=\"en\">Account ID.</div>   # noqa: E501

        :param account_id: The account_id of this AdGroupCriterion.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def ad_group_id(self):
        """Gets the ad_group_id of this AdGroupCriterion.  # noqa: E501

        <div lang=\"ja\">広告グループIDです。<br> このフィールドは、いずれの場合でも必須となります。</div> <div lang=\"en\">Ad group ID.<br> This field is required in any cases.</div>   # noqa: E501

        :return: The ad_group_id of this AdGroupCriterion.  # noqa: E501
        :rtype: int
        """
        return self._ad_group_id

    @ad_group_id.setter
    def ad_group_id(self, ad_group_id):
        """Sets the ad_group_id of this AdGroupCriterion.

        <div lang=\"ja\">広告グループIDです。<br> このフィールドは、いずれの場合でも必須となります。</div> <div lang=\"en\">Ad group ID.<br> This field is required in any cases.</div>   # noqa: E501

        :param ad_group_id: The ad_group_id of this AdGroupCriterion.  # noqa: E501
        :type: int
        """

        self._ad_group_id = ad_group_id

    @property
    def ad_group_name(self):
        """Gets the ad_group_name of this AdGroupCriterion.  # noqa: E501

        <div lang=\"ja\">広告グループ名です。</div> <div lang=\"en\">Ad group name.</div>   # noqa: E501

        :return: The ad_group_name of this AdGroupCriterion.  # noqa: E501
        :rtype: str
        """
        return self._ad_group_name

    @ad_group_name.setter
    def ad_group_name(self, ad_group_name):
        """Sets the ad_group_name of this AdGroupCriterion.

        <div lang=\"ja\">広告グループ名です。</div> <div lang=\"en\">Ad group name.</div>   # noqa: E501

        :param ad_group_name: The ad_group_name of this AdGroupCriterion.  # noqa: E501
        :type: str
        """

        self._ad_group_name = ad_group_name

    @property
    def ad_group_track_id(self):
        """Gets the ad_group_track_id of this AdGroupCriterion.  # noqa: E501

        <div lang=\"ja\">トラッキング用広告グループIDです。</div> <div lang=\"en\">Ad group ID for tracking.</div>   # noqa: E501

        :return: The ad_group_track_id of this AdGroupCriterion.  # noqa: E501
        :rtype: int
        """
        return self._ad_group_track_id

    @ad_group_track_id.setter
    def ad_group_track_id(self, ad_group_track_id):
        """Sets the ad_group_track_id of this AdGroupCriterion.

        <div lang=\"ja\">トラッキング用広告グループIDです。</div> <div lang=\"en\">Ad group ID for tracking.</div>   # noqa: E501

        :param ad_group_track_id: The ad_group_track_id of this AdGroupCriterion.  # noqa: E501
        :type: int
        """

        self._ad_group_track_id = ad_group_track_id

    @property
    def biddable_ad_group_criterion(self):
        """Gets the biddable_ad_group_criterion of this AdGroupCriterion.  # noqa: E501


        :return: The biddable_ad_group_criterion of this AdGroupCriterion.  # noqa: E501
        :rtype: AdGroupCriterionServiceBiddableAdGroupCriterion
        """
        return self._biddable_ad_group_criterion

    @biddable_ad_group_criterion.setter
    def biddable_ad_group_criterion(self, biddable_ad_group_criterion):
        """Sets the biddable_ad_group_criterion of this AdGroupCriterion.


        :param biddable_ad_group_criterion: The biddable_ad_group_criterion of this AdGroupCriterion.  # noqa: E501
        :type: AdGroupCriterionServiceBiddableAdGroupCriterion
        """

        self._biddable_ad_group_criterion = biddable_ad_group_criterion

    @property
    def campaign_id(self):
        """Gets the campaign_id of this AdGroupCriterion.  # noqa: E501

        <div lang=\"ja\">キャンペーンIDです。<br> このフィールドは、いずれの場合でも必須となります。</div> <div lang=\"en\">Campaign ID.<br> This field is required in any cases.</div>   # noqa: E501

        :return: The campaign_id of this AdGroupCriterion.  # noqa: E501
        :rtype: int
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this AdGroupCriterion.

        <div lang=\"ja\">キャンペーンIDです。<br> このフィールドは、いずれの場合でも必須となります。</div> <div lang=\"en\">Campaign ID.<br> This field is required in any cases.</div>   # noqa: E501

        :param campaign_id: The campaign_id of this AdGroupCriterion.  # noqa: E501
        :type: int
        """

        self._campaign_id = campaign_id

    @property
    def campaign_name(self):
        """Gets the campaign_name of this AdGroupCriterion.  # noqa: E501

        <div lang=\"ja\">キャンペーン名です。</div> <div lang=\"en\">Campaign name.</div>   # noqa: E501

        :return: The campaign_name of this AdGroupCriterion.  # noqa: E501
        :rtype: str
        """
        return self._campaign_name

    @campaign_name.setter
    def campaign_name(self, campaign_name):
        """Sets the campaign_name of this AdGroupCriterion.

        <div lang=\"ja\">キャンペーン名です。</div> <div lang=\"en\">Campaign name.</div>   # noqa: E501

        :param campaign_name: The campaign_name of this AdGroupCriterion.  # noqa: E501
        :type: str
        """

        self._campaign_name = campaign_name

    @property
    def campaign_track_id(self):
        """Gets the campaign_track_id of this AdGroupCriterion.  # noqa: E501

        <div lang=\"ja\">トラッキング用キャンペーンIDです。</div> <div lang=\"en\">Campaign ID for tracking.</div>   # noqa: E501

        :return: The campaign_track_id of this AdGroupCriterion.  # noqa: E501
        :rtype: int
        """
        return self._campaign_track_id

    @campaign_track_id.setter
    def campaign_track_id(self, campaign_track_id):
        """Sets the campaign_track_id of this AdGroupCriterion.

        <div lang=\"ja\">トラッキング用キャンペーンIDです。</div> <div lang=\"en\">Campaign ID for tracking.</div>   # noqa: E501

        :param campaign_track_id: The campaign_track_id of this AdGroupCriterion.  # noqa: E501
        :type: int
        """

        self._campaign_track_id = campaign_track_id

    @property
    def criterion(self):
        """Gets the criterion of this AdGroupCriterion.  # noqa: E501


        :return: The criterion of this AdGroupCriterion.  # noqa: E501
        :rtype: AdGroupCriterionServiceCriterion
        """
        return self._criterion

    @criterion.setter
    def criterion(self, criterion):
        """Sets the criterion of this AdGroupCriterion.


        :param criterion: The criterion of this AdGroupCriterion.  # noqa: E501
        :type: AdGroupCriterionServiceCriterion
        """

        self._criterion = criterion

    @property
    def labels(self):
        """Gets the labels of this AdGroupCriterion.  # noqa: E501


        :return: The labels of this AdGroupCriterion.  # noqa: E501
        :rtype: list[AdGroupCriterionServiceLabel]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this AdGroupCriterion.


        :param labels: The labels of this AdGroupCriterion.  # noqa: E501
        :type: list[AdGroupCriterionServiceLabel]
        """

        self._labels = labels

    @property
    def use(self):
        """Gets the use of this AdGroupCriterion.  # noqa: E501


        :return: The use of this AdGroupCriterion.  # noqa: E501
        :rtype: AdGroupCriterionServiceUse
        """
        return self._use

    @use.setter
    def use(self, use):
        """Sets the use of this AdGroupCriterion.


        :param use: The use of this AdGroupCriterion.  # noqa: E501
        :type: AdGroupCriterionServiceUse
        """

        self._use = use

    @property
    def trademark_status(self):
        """Gets the trademark_status of this AdGroupCriterion.  # noqa: E501


        :return: The trademark_status of this AdGroupCriterion.  # noqa: E501
        :rtype: AdGroupCriterionServiceTrademarkStatus
        """
        return self._trademark_status

    @trademark_status.setter
    def trademark_status(self, trademark_status):
        """Sets the trademark_status of this AdGroupCriterion.


        :param trademark_status: The trademark_status of this AdGroupCriterion.  # noqa: E501
        :type: AdGroupCriterionServiceTrademarkStatus
        """

        self._trademark_status = trademark_status

    @property
    def invalided_trademarks(self):
        """Gets the invalided_trademarks of this AdGroupCriterion.  # noqa: E501

        <div lang=\"ja\">制限された商標です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\">Invalided trademarks.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The invalided_trademarks of this AdGroupCriterion.  # noqa: E501
        :rtype: list[str]
        """
        return self._invalided_trademarks

    @invalided_trademarks.setter
    def invalided_trademarks(self, invalided_trademarks):
        """Sets the invalided_trademarks of this AdGroupCriterion.

        <div lang=\"ja\">制限された商標です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\">Invalided trademarks.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param invalided_trademarks: The invalided_trademarks of this AdGroupCriterion.  # noqa: E501
        :type: list[str]
        """

        self._invalided_trademarks = invalided_trademarks

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdGroupCriterion):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AdGroupCriterion):
            return True

        return self.to_dict() != other.to_dict()
