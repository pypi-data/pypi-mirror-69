# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_search.configuration import Configuration


class FeedItem(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'approval_status': 'FeedItemServiceApprovalStatus',
        'custom_parameters': 'FeedItemServiceCustomParameters',
        'device_preference': 'FeedItemServiceDevicePreference',
        'disapproval_reason_codes': 'list[str]',
        'end_date': 'str',
        'feed_id': 'int',
        'feed_item_attribute': 'list[FeedItemServiceAttribute]',
        'feed_item_id': 'int',
        'feed_item_track_id': 'int',
        'invalided_trademarks': 'list[str]',
        'location': 'FeedItemServiceLocation',
        'placeholder_type': 'FeedItemServicePlaceholderType',
        'review_custom_parameters': 'FeedItemServiceCustomParameters',
        'scheduling': 'FeedItemServiceScheduling',
        'start_date': 'str',
        'targeting_ad_group': 'FeedItemServiceTargetingAdGroup',
        'targeting_campaign': 'FeedItemServiceTargetingCampaign',
        'targeting_keyword': 'FeedItemServiceTargetingKeyword',
        'trademark_status': 'FeedItemServiceTrademarkStatus'
    }

    attribute_map = {
        'account_id': 'accountId',
        'approval_status': 'approvalStatus',
        'custom_parameters': 'customParameters',
        'device_preference': 'devicePreference',
        'disapproval_reason_codes': 'disapprovalReasonCodes',
        'end_date': 'endDate',
        'feed_id': 'feedId',
        'feed_item_attribute': 'feedItemAttribute',
        'feed_item_id': 'feedItemId',
        'feed_item_track_id': 'feedItemTrackId',
        'invalided_trademarks': 'invalidedTrademarks',
        'location': 'location',
        'placeholder_type': 'placeholderType',
        'review_custom_parameters': 'reviewCustomParameters',
        'scheduling': 'scheduling',
        'start_date': 'startDate',
        'targeting_ad_group': 'targetingAdGroup',
        'targeting_campaign': 'targetingCampaign',
        'targeting_keyword': 'targetingKeyword',
        'trademark_status': 'trademarkStatus'
    }

    def __init__(self, account_id=None, approval_status=None, custom_parameters=None, device_preference=None, disapproval_reason_codes=None, end_date=None, feed_id=None, feed_item_attribute=None, feed_item_id=None, feed_item_track_id=None, invalided_trademarks=None, location=None, placeholder_type=None, review_custom_parameters=None, scheduling=None, start_date=None, targeting_ad_group=None, targeting_campaign=None, targeting_keyword=None, trademark_status=None, local_vars_configuration=None):  # noqa: E501
        """FeedItem - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._approval_status = None
        self._custom_parameters = None
        self._device_preference = None
        self._disapproval_reason_codes = None
        self._end_date = None
        self._feed_id = None
        self._feed_item_attribute = None
        self._feed_item_id = None
        self._feed_item_track_id = None
        self._invalided_trademarks = None
        self._location = None
        self._placeholder_type = None
        self._review_custom_parameters = None
        self._scheduling = None
        self._start_date = None
        self._targeting_ad_group = None
        self._targeting_campaign = None
        self._targeting_keyword = None
        self._trademark_status = None
        self.discriminator = None

        self.account_id = account_id
        self.approval_status = approval_status
        self.custom_parameters = custom_parameters
        self.device_preference = device_preference
        self.disapproval_reason_codes = disapproval_reason_codes
        self.end_date = end_date
        self.feed_id = feed_id
        self.feed_item_attribute = feed_item_attribute
        self.feed_item_id = feed_item_id
        self.feed_item_track_id = feed_item_track_id
        self.invalided_trademarks = invalided_trademarks
        self.location = location
        self.placeholder_type = placeholder_type
        self.review_custom_parameters = review_custom_parameters
        self.scheduling = scheduling
        self.start_date = start_date
        self.targeting_ad_group = targeting_ad_group
        self.targeting_campaign = targeting_campaign
        self.targeting_keyword = targeting_keyword
        self.trademark_status = trademark_status

    @property
    def account_id(self):
        """Gets the account_id of this FeedItem.  # noqa: E501

        <div lang=\"ja\">アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account ID.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The account_id of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this FeedItem.

        <div lang=\"ja\">アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account ID.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param account_id: The account_id of this FeedItem.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def approval_status(self):
        """Gets the approval_status of this FeedItem.  # noqa: E501


        :return: The approval_status of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceApprovalStatus
        """
        return self._approval_status

    @approval_status.setter
    def approval_status(self, approval_status):
        """Sets the approval_status of this FeedItem.


        :param approval_status: The approval_status of this FeedItem.  # noqa: E501
        :type: FeedItemServiceApprovalStatus
        """

        self._approval_status = approval_status

    @property
    def custom_parameters(self):
        """Gets the custom_parameters of this FeedItem.  # noqa: E501


        :return: The custom_parameters of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceCustomParameters
        """
        return self._custom_parameters

    @custom_parameters.setter
    def custom_parameters(self, custom_parameters):
        """Sets the custom_parameters of this FeedItem.


        :param custom_parameters: The custom_parameters of this FeedItem.  # noqa: E501
        :type: FeedItemServiceCustomParameters
        """

        self._custom_parameters = custom_parameters

    @property
    def device_preference(self):
        """Gets the device_preference of this FeedItem.  # noqa: E501


        :return: The device_preference of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceDevicePreference
        """
        return self._device_preference

    @device_preference.setter
    def device_preference(self, device_preference):
        """Sets the device_preference of this FeedItem.


        :param device_preference: The device_preference of this FeedItem.  # noqa: E501
        :type: FeedItemServiceDevicePreference
        """

        self._device_preference = device_preference

    @property
    def disapproval_reason_codes(self):
        """Gets the disapproval_reason_codes of this FeedItem.  # noqa: E501

        <div lang=\"ja\">審査否認理由です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Reject reason on editorial review.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The disapproval_reason_codes of this FeedItem.  # noqa: E501
        :rtype: list[str]
        """
        return self._disapproval_reason_codes

    @disapproval_reason_codes.setter
    def disapproval_reason_codes(self, disapproval_reason_codes):
        """Sets the disapproval_reason_codes of this FeedItem.

        <div lang=\"ja\">審査否認理由です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Reject reason on editorial review.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param disapproval_reason_codes: The disapproval_reason_codes of this FeedItem.  # noqa: E501
        :type: list[str]
        """

        self._disapproval_reason_codes = disapproval_reason_codes

    @property
    def end_date(self):
        """Gets the end_date of this FeedItem.  # noqa: E501

        <div lang=\"ja\">配信終了日です。<br>※空で設定すると、既存の配信終了日は削除されます。<br> このフィールドは、ADDおよびSET時に省略可能となり、REMOVE時に無視されます。</div> <div lang=\"en\">End date of ad display.<br>∗By setting blank, existing end date of ad display will be deleted. <br>This field is optional in ADD and SET operation, and will be ignored in REMOVE operation.</div>   # noqa: E501

        :return: The end_date of this FeedItem.  # noqa: E501
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this FeedItem.

        <div lang=\"ja\">配信終了日です。<br>※空で設定すると、既存の配信終了日は削除されます。<br> このフィールドは、ADDおよびSET時に省略可能となり、REMOVE時に無視されます。</div> <div lang=\"en\">End date of ad display.<br>∗By setting blank, existing end date of ad display will be deleted. <br>This field is optional in ADD and SET operation, and will be ignored in REMOVE operation.</div>   # noqa: E501

        :param end_date: The end_date of this FeedItem.  # noqa: E501
        :type: str
        """

        self._end_date = end_date

    @property
    def feed_id(self):
        """Gets the feed_id of this FeedItem.  # noqa: E501

        <div lang=\"ja\">フィードIDです。<br> このフィールドはレスポンスの際に返却されますが、リクエストの際には無視されます。<br> ※アドカスタマイザーの場合は、ADD時に必須となります。</div> <div lang=\"en\">Feed ID.<br>Although this field will be returned in the response, it will be ignored on input.<br> *For AD_CUSTOMIZER, this field is required in ADD operation.</div>   # noqa: E501

        :return: The feed_id of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._feed_id

    @feed_id.setter
    def feed_id(self, feed_id):
        """Sets the feed_id of this FeedItem.

        <div lang=\"ja\">フィードIDです。<br> このフィールドはレスポンスの際に返却されますが、リクエストの際には無視されます。<br> ※アドカスタマイザーの場合は、ADD時に必須となります。</div> <div lang=\"en\">Feed ID.<br>Although this field will be returned in the response, it will be ignored on input.<br> *For AD_CUSTOMIZER, this field is required in ADD operation.</div>   # noqa: E501

        :param feed_id: The feed_id of this FeedItem.  # noqa: E501
        :type: int
        """

        self._feed_id = feed_id

    @property
    def feed_item_attribute(self):
        """Gets the feed_item_attribute of this FeedItem.  # noqa: E501


        :return: The feed_item_attribute of this FeedItem.  # noqa: E501
        :rtype: list[FeedItemServiceAttribute]
        """
        return self._feed_item_attribute

    @feed_item_attribute.setter
    def feed_item_attribute(self, feed_item_attribute):
        """Sets the feed_item_attribute of this FeedItem.


        :param feed_item_attribute: The feed_item_attribute of this FeedItem.  # noqa: E501
        :type: list[FeedItemServiceAttribute]
        """

        self._feed_item_attribute = feed_item_attribute

    @property
    def feed_item_id(self):
        """Gets the feed_item_id of this FeedItem.  # noqa: E501

        <div lang=\"ja\">フィードアイテムIDです。<br> このフィールドは、SETおよびREMOVE時に必須となり、ADD時に無視されます。</div> <div lang=\"en\">Feed Item ID.<br>This field is required in SET and REMOVE operation, and will be ignored in ADD operation.</div>   # noqa: E501

        :return: The feed_item_id of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._feed_item_id

    @feed_item_id.setter
    def feed_item_id(self, feed_item_id):
        """Sets the feed_item_id of this FeedItem.

        <div lang=\"ja\">フィードアイテムIDです。<br> このフィールドは、SETおよびREMOVE時に必須となり、ADD時に無視されます。</div> <div lang=\"en\">Feed Item ID.<br>This field is required in SET and REMOVE operation, and will be ignored in ADD operation.</div>   # noqa: E501

        :param feed_item_id: The feed_item_id of this FeedItem.  # noqa: E501
        :type: int
        """

        self._feed_item_id = feed_item_id

    @property
    def feed_item_track_id(self):
        """Gets the feed_item_track_id of this FeedItem.  # noqa: E501

        <div lang=\"ja\">トラッキング用フィードアイテムIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Feed Item ID for tracking.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The feed_item_track_id of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._feed_item_track_id

    @feed_item_track_id.setter
    def feed_item_track_id(self, feed_item_track_id):
        """Sets the feed_item_track_id of this FeedItem.

        <div lang=\"ja\">トラッキング用フィードアイテムIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Feed Item ID for tracking.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param feed_item_track_id: The feed_item_track_id of this FeedItem.  # noqa: E501
        :type: int
        """

        self._feed_item_track_id = feed_item_track_id

    @property
    def invalided_trademarks(self):
        """Gets the invalided_trademarks of this FeedItem.  # noqa: E501

        <div lang=\"ja\">制限された商標です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\">Invalided trademarks.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :return: The invalided_trademarks of this FeedItem.  # noqa: E501
        :rtype: list[str]
        """
        return self._invalided_trademarks

    @invalided_trademarks.setter
    def invalided_trademarks(self, invalided_trademarks):
        """Sets the invalided_trademarks of this FeedItem.

        <div lang=\"ja\">制限された商標です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\">Invalided trademarks.<br> Although this field will be returned in the response, it will be ignored on input.</div>   # noqa: E501

        :param invalided_trademarks: The invalided_trademarks of this FeedItem.  # noqa: E501
        :type: list[str]
        """

        self._invalided_trademarks = invalided_trademarks

    @property
    def location(self):
        """Gets the location of this FeedItem.  # noqa: E501


        :return: The location of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this FeedItem.


        :param location: The location of this FeedItem.  # noqa: E501
        :type: FeedItemServiceLocation
        """

        self._location = location

    @property
    def placeholder_type(self):
        """Gets the placeholder_type of this FeedItem.  # noqa: E501


        :return: The placeholder_type of this FeedItem.  # noqa: E501
        :rtype: FeedItemServicePlaceholderType
        """
        return self._placeholder_type

    @placeholder_type.setter
    def placeholder_type(self, placeholder_type):
        """Sets the placeholder_type of this FeedItem.


        :param placeholder_type: The placeholder_type of this FeedItem.  # noqa: E501
        :type: FeedItemServicePlaceholderType
        """

        self._placeholder_type = placeholder_type

    @property
    def review_custom_parameters(self):
        """Gets the review_custom_parameters of this FeedItem.  # noqa: E501


        :return: The review_custom_parameters of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceCustomParameters
        """
        return self._review_custom_parameters

    @review_custom_parameters.setter
    def review_custom_parameters(self, review_custom_parameters):
        """Sets the review_custom_parameters of this FeedItem.


        :param review_custom_parameters: The review_custom_parameters of this FeedItem.  # noqa: E501
        :type: FeedItemServiceCustomParameters
        """

        self._review_custom_parameters = review_custom_parameters

    @property
    def scheduling(self):
        """Gets the scheduling of this FeedItem.  # noqa: E501


        :return: The scheduling of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceScheduling
        """
        return self._scheduling

    @scheduling.setter
    def scheduling(self, scheduling):
        """Sets the scheduling of this FeedItem.


        :param scheduling: The scheduling of this FeedItem.  # noqa: E501
        :type: FeedItemServiceScheduling
        """

        self._scheduling = scheduling

    @property
    def start_date(self):
        """Gets the start_date of this FeedItem.  # noqa: E501

        <div lang=\"ja\">配信開始日です。<br> ※空で設定すると、既存の配信開始日は削除されます。<br> このフィールドは、ADDおよびSET時に省略可能となり、REMOVE時に無視されます。</div> <div lang=\"en\">Start date of ad display<br> ∗On setting blank, existing start date of ad display will be deleted.<br> This field is optional in ADD and SET operation, and will be ignored in REMOVE operation.</div>   # noqa: E501

        :return: The start_date of this FeedItem.  # noqa: E501
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this FeedItem.

        <div lang=\"ja\">配信開始日です。<br> ※空で設定すると、既存の配信開始日は削除されます。<br> このフィールドは、ADDおよびSET時に省略可能となり、REMOVE時に無視されます。</div> <div lang=\"en\">Start date of ad display<br> ∗On setting blank, existing start date of ad display will be deleted.<br> This field is optional in ADD and SET operation, and will be ignored in REMOVE operation.</div>   # noqa: E501

        :param start_date: The start_date of this FeedItem.  # noqa: E501
        :type: str
        """

        self._start_date = start_date

    @property
    def targeting_ad_group(self):
        """Gets the targeting_ad_group of this FeedItem.  # noqa: E501


        :return: The targeting_ad_group of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceTargetingAdGroup
        """
        return self._targeting_ad_group

    @targeting_ad_group.setter
    def targeting_ad_group(self, targeting_ad_group):
        """Sets the targeting_ad_group of this FeedItem.


        :param targeting_ad_group: The targeting_ad_group of this FeedItem.  # noqa: E501
        :type: FeedItemServiceTargetingAdGroup
        """

        self._targeting_ad_group = targeting_ad_group

    @property
    def targeting_campaign(self):
        """Gets the targeting_campaign of this FeedItem.  # noqa: E501


        :return: The targeting_campaign of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceTargetingCampaign
        """
        return self._targeting_campaign

    @targeting_campaign.setter
    def targeting_campaign(self, targeting_campaign):
        """Sets the targeting_campaign of this FeedItem.


        :param targeting_campaign: The targeting_campaign of this FeedItem.  # noqa: E501
        :type: FeedItemServiceTargetingCampaign
        """

        self._targeting_campaign = targeting_campaign

    @property
    def targeting_keyword(self):
        """Gets the targeting_keyword of this FeedItem.  # noqa: E501


        :return: The targeting_keyword of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceTargetingKeyword
        """
        return self._targeting_keyword

    @targeting_keyword.setter
    def targeting_keyword(self, targeting_keyword):
        """Sets the targeting_keyword of this FeedItem.


        :param targeting_keyword: The targeting_keyword of this FeedItem.  # noqa: E501
        :type: FeedItemServiceTargetingKeyword
        """

        self._targeting_keyword = targeting_keyword

    @property
    def trademark_status(self):
        """Gets the trademark_status of this FeedItem.  # noqa: E501


        :return: The trademark_status of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceTrademarkStatus
        """
        return self._trademark_status

    @trademark_status.setter
    def trademark_status(self, trademark_status):
        """Sets the trademark_status of this FeedItem.


        :param trademark_status: The trademark_status of this FeedItem.  # noqa: E501
        :type: FeedItemServiceTrademarkStatus
        """

        self._trademark_status = trademark_status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FeedItem):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FeedItem):
            return True

        return self.to_dict() != other.to_dict()
