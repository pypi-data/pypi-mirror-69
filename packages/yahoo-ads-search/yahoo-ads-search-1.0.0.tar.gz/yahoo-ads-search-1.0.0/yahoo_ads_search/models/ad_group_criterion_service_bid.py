# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_search.configuration import Configuration


class AdGroupCriterionServiceBid(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'ad_group_max_cpc': 'int',
        'bid_source': 'AdGroupCriterionServiceBidSource',
        'keyword_max_cpc': 'int',
        'max_cpc': 'int'
    }

    attribute_map = {
        'ad_group_max_cpc': 'adGroupMaxCpc',
        'bid_source': 'bidSource',
        'keyword_max_cpc': 'keywordMaxCpc',
        'max_cpc': 'maxCpc'
    }

    def __init__(self, ad_group_max_cpc=None, bid_source=None, keyword_max_cpc=None, max_cpc=None, local_vars_configuration=None):  # noqa: E501
        """AdGroupCriterionServiceBid - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._ad_group_max_cpc = None
        self._bid_source = None
        self._keyword_max_cpc = None
        self._max_cpc = None
        self.discriminator = None

        self.ad_group_max_cpc = ad_group_max_cpc
        self.bid_source = bid_source
        self.keyword_max_cpc = keyword_max_cpc
        self.max_cpc = max_cpc

    @property
    def ad_group_max_cpc(self):
        """Gets the ad_group_max_cpc of this AdGroupCriterionServiceBid.  # noqa: E501

        <div lang=\"ja\">広告グループ入札価格です。</div> <div lang=\"en\">CPC of Ad group.</div>   # noqa: E501

        :return: The ad_group_max_cpc of this AdGroupCriterionServiceBid.  # noqa: E501
        :rtype: int
        """
        return self._ad_group_max_cpc

    @ad_group_max_cpc.setter
    def ad_group_max_cpc(self, ad_group_max_cpc):
        """Sets the ad_group_max_cpc of this AdGroupCriterionServiceBid.

        <div lang=\"ja\">広告グループ入札価格です。</div> <div lang=\"en\">CPC of Ad group.</div>   # noqa: E501

        :param ad_group_max_cpc: The ad_group_max_cpc of this AdGroupCriterionServiceBid.  # noqa: E501
        :type: int
        """

        self._ad_group_max_cpc = ad_group_max_cpc

    @property
    def bid_source(self):
        """Gets the bid_source of this AdGroupCriterionServiceBid.  # noqa: E501


        :return: The bid_source of this AdGroupCriterionServiceBid.  # noqa: E501
        :rtype: AdGroupCriterionServiceBidSource
        """
        return self._bid_source

    @bid_source.setter
    def bid_source(self, bid_source):
        """Sets the bid_source of this AdGroupCriterionServiceBid.


        :param bid_source: The bid_source of this AdGroupCriterionServiceBid.  # noqa: E501
        :type: AdGroupCriterionServiceBidSource
        """

        self._bid_source = bid_source

    @property
    def keyword_max_cpc(self):
        """Gets the keyword_max_cpc of this AdGroupCriterionServiceBid.  # noqa: E501

        <div lang=\"ja\">キーワード入札価格です。</div> <div lang=\"en\">CPC of Keyword.</div>   # noqa: E501

        :return: The keyword_max_cpc of this AdGroupCriterionServiceBid.  # noqa: E501
        :rtype: int
        """
        return self._keyword_max_cpc

    @keyword_max_cpc.setter
    def keyword_max_cpc(self, keyword_max_cpc):
        """Sets the keyword_max_cpc of this AdGroupCriterionServiceBid.

        <div lang=\"ja\">キーワード入札価格です。</div> <div lang=\"en\">CPC of Keyword.</div>   # noqa: E501

        :param keyword_max_cpc: The keyword_max_cpc of this AdGroupCriterionServiceBid.  # noqa: E501
        :type: int
        """

        self._keyword_max_cpc = keyword_max_cpc

    @property
    def max_cpc(self):
        """Gets the max_cpc of this AdGroupCriterionServiceBid.  # noqa: E501

        <div lang=\"ja\">キーワード入札価格です。<br> このフィールドは、省略可能となります。その際、ADD時のデフォルト設定値は1となります。<br> ※maxCpcが0の場合は、設定なしと同様です。</div> <div lang=\"en\">CPC of Keyword.<br> This field is optional. The default value in ADD operation will be 1.<br> *Confirmed as no setting, if value is set &#34;0&#34;.</div>   # noqa: E501

        :return: The max_cpc of this AdGroupCriterionServiceBid.  # noqa: E501
        :rtype: int
        """
        return self._max_cpc

    @max_cpc.setter
    def max_cpc(self, max_cpc):
        """Sets the max_cpc of this AdGroupCriterionServiceBid.

        <div lang=\"ja\">キーワード入札価格です。<br> このフィールドは、省略可能となります。その際、ADD時のデフォルト設定値は1となります。<br> ※maxCpcが0の場合は、設定なしと同様です。</div> <div lang=\"en\">CPC of Keyword.<br> This field is optional. The default value in ADD operation will be 1.<br> *Confirmed as no setting, if value is set &#34;0&#34;.</div>   # noqa: E501

        :param max_cpc: The max_cpc of this AdGroupCriterionServiceBid.  # noqa: E501
        :type: int
        """

        self._max_cpc = max_cpc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdGroupCriterionServiceBid):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AdGroupCriterionServiceBid):
            return True

        return self.to_dict() != other.to_dict()
