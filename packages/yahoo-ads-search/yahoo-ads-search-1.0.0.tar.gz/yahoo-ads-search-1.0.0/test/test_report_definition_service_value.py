# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_ads_search
from yahoo_ads_search.models.report_definition_service_value import ReportDefinitionServiceValue  # noqa: E501
from yahoo_ads_search.rest import ApiException

class TestReportDefinitionServiceValue(unittest.TestCase):
    """ReportDefinitionServiceValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ReportDefinitionServiceValue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_ads_search.models.report_definition_service_value.ReportDefinitionServiceValue()  # noqa: E501
        if include_optional :
            return ReportDefinitionServiceValue(
                errors = [
                    yahoo_ads_search.models.error.Error(
                        code = '0',
                        message = '0',
                        details = [
                            yahoo_ads_search.models.error_detail.ErrorDetail(
                                request_key = '0',
                                request_value = '0', )
                            ], )
                    ],
                operation_succeeded = True,
                report_definition = yahoo_ads_search.models.report_definition.ReportDefinition(
                    account_id = 56,
                    complete_time = '0',
                    date_range = yahoo_ads_search.models.report_definition_service_report_date_range.ReportDefinitionServiceReportDateRange(
                        end_date = '0',
                        start_date = '0', ),
                    fields = [
                        '0'
                        ],
                    filters = [
                        yahoo_ads_search.models.report_definition_service_report_filter.ReportDefinitionServiceReportFilter(
                            field = '0',
                            report_operator = 'EQUALS',
                            value = [
                                '0'
                                ], )
                        ],
                    report_compress_type = 'NONE',
                    report_date_range_type = 'TODAY',
                    report_download_encode = 'UTF-8',
                    report_download_format = 'CSV',
                    report_include_deleted = 'TRUE',
                    report_include_zero_impressions = 'TRUE',
                    report_job_error_detail = '0',
                    report_job_id = 56,
                    report_job_status = 'WAIT',
                    report_language = 'JA',
                    report_name = '0',
                    report_type = 'ACCOUNT',
                    request_time = '0',
                    sort_fields = [
                        yahoo_ads_search.models.report_definition_service_report_sort_field.ReportDefinitionServiceReportSortField(
                            field = '0',
                            report_sort_type = 'ASC', )
                        ], )
            )
        else :
            return ReportDefinitionServiceValue(
        )

    def testReportDefinitionServiceValue(self):
        """Test ReportDefinitionServiceValue"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
