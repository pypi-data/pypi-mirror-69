Metadata-Version: 2.1
Name: vaderSentiment-fr
Version: 0.13
Summary: UNKNOWN
Home-page: https://github.com/thomas7lieues/vader_FR
Author: DEPREZ Olivier, EK Thomas
Author-email: olivier@7lieues.io, thomas@7lieues.io
License: MIT
Download-URL: https://github.com/thomas7lieues/vader_FR/archive/v_0.1.tar.gz
Description: ====================================
        VADER-Sentiment-Analysis-FR
        ====================================
        
        This is a French version of VADER (Valence Aware Dictionary and Sentiment Reasoner). Please visit <https://github.com/cjhutto/vaderSentiment> to see the original version. Vader_FR possesses a manually translated french lexicon.
        VADER is a lexicon and rule-based sentiment analysis tool that is *specifically attuned to sentiments expressed in social media*. It is fully open-sourced under the `[MIT License] <http://choosealicense.com/>`_ (VADER sincerely appreciate all attributions and readily accept most contributions, but please don't hold us liable).
        
        
        
        ==============================
        **HOW TO USE Vader-FR**
        ==============================
        >>>>>>> a2bbbaa7bea95f96d7384471871c7836cdedc0a2
        
        from vaderSentiment_fr.vaderSentiment import SentimentIntensityAnalyzer
        
        SIA = SentimentIntensityAnalyzer()
        
        phrase = "Une phrase très cool à analyser"
        
        
        score = SIA.polarity_scores(phrase)
        
        >>>>>>> a2bbbaa7bea95f96d7384471871c7836cdedc0a2
        print(score)
        
        ## Output : {'neg': 0.0, 'neu': 0.725, 'pos': 0.275, 'compound': 0.2247}
        
        
        
        # Note : You can use polarity_scores_max instead of polarity_scores. polarity_scores_max uses fuzzywuzzy to get the most similar words with your inputs. For example "connar" won't be detected with polarity_scores but with polarity_scores_max
        
Keywords: Vader_FR,vaderSentiment,Vader,Sentiment,French,Analysis
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Description-Content-Type: text/x-rst
