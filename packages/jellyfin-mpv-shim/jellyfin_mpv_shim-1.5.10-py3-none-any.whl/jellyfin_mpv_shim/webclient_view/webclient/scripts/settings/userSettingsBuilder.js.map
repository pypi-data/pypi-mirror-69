{"version":3,"sources":["scripts/settings/userSettingsBuilder.js"],"names":["define","appSettings","events","onSaveTimeout","this","saveTimeout","currentApiClient","updateDisplayPreferences","displayPrefs","currentUserId","UserSettings","prototype","setUserInfo","userId","apiClient","clearTimeout","Promise","resolve","self","getDisplayPreferences","then","result","CustomPrefs","getData","importFrom","instance","set","name","value","enableOnServer","currentValue","get","toString","saveServerPreferences","setTimeout","bind","trigger","serverConfig","config","updateUserConfiguration","getUser","user","Configuration","enableCinemaMode","val","enableNextVideoInfoOverlay","enableThemeSongs","enableThemeVideos","enableFastFadein","enableBackdrops","language","dateTimeLocale","skipBackLength","parseInt","skipForwardLength","dashboardTheme","skin","theme","screensaver","soundEffects","loadQuerySettings","key","query","values","JSON","parse","Object","assign","saveQuerySettings","SortBy","SortOrder","stringify","getSubtitleAppearanceSettings","setSubtitleAppearanceSettings","setFilter","getFilter"],"mappings":"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","file":"userSettingsBuilder.js","sourcesContent":["define(['appSettings', 'events'], function (appSettings, events) {\n    'use strict';\n\n    function onSaveTimeout() {\n        var self = this;\n        self.saveTimeout = null;\n        self.currentApiClient.updateDisplayPreferences('usersettings', self.displayPrefs, self.currentUserId, 'emby');\n    }\n\n    function saveServerPreferences(instance) {\n        if (instance.saveTimeout) {\n            clearTimeout(instance.saveTimeout);\n        }\n\n        instance.saveTimeout = setTimeout(onSaveTimeout.bind(instance), 50);\n    }\n\n    function UserSettings() {\n    }\n\n    UserSettings.prototype.setUserInfo = function (userId, apiClient) {\n        if (this.saveTimeout) {\n            clearTimeout(this.saveTimeout);\n        }\n\n        this.currentUserId = userId;\n        this.currentApiClient = apiClient;\n\n        if (!userId) {\n            this.displayPrefs = null;\n            return Promise.resolve();\n        }\n\n        var self = this;\n\n        return apiClient.getDisplayPreferences('usersettings', userId, 'emby').then(function (result) {\n            result.CustomPrefs = result.CustomPrefs || {};\n            self.displayPrefs = result;\n        });\n    };\n\n    UserSettings.prototype.getData = function () {\n        return this.displayPrefs;\n    };\n\n    UserSettings.prototype.importFrom = function (instance) {\n        this.displayPrefs = instance.getData();\n    };\n\n    UserSettings.prototype.set = function (name, value, enableOnServer) {\n        var userId = this.currentUserId;\n        var currentValue = this.get(name, enableOnServer);\n        var result = appSettings.set(name, value, userId);\n\n        if (enableOnServer !== false && this.displayPrefs) {\n            this.displayPrefs.CustomPrefs[name] = value == null ? value : value.toString();\n            saveServerPreferences(this);\n        }\n\n        if (currentValue !== value) {\n            events.trigger(this, 'change', [name]);\n        }\n\n        return result;\n    };\n\n    UserSettings.prototype.get = function (name, enableOnServer) {\n        var userId = this.currentUserId;\n        if (enableOnServer !== false && this.displayPrefs) {\n            return this.displayPrefs.CustomPrefs[name];\n        }\n\n        return appSettings.get(name, userId);\n    };\n\n    UserSettings.prototype.serverConfig = function (config) {\n        var apiClient = this.currentApiClient;\n        if (config) {\n            return apiClient.updateUserConfiguration(this.currentUserId, config);\n        }\n\n        return apiClient.getUser(this.currentUserId).then(function (user) {\n            return user.Configuration;\n        });\n    };\n\n    UserSettings.prototype.enableCinemaMode = function (val) {\n        if (val != null) {\n            return this.set('enableCinemaMode', val.toString(), false);\n        }\n\n        val = this.get('enableCinemaMode', false);\n        return val !== 'false';\n    };\n\n    UserSettings.prototype.enableNextVideoInfoOverlay = function (val) {\n        if (val != null) {\n            return this.set('enableNextVideoInfoOverlay', val.toString());\n        }\n\n        val = this.get('enableNextVideoInfoOverlay', false);\n        return val !== 'false';\n    };\n\n    UserSettings.prototype.enableThemeSongs = function (val) {\n        if (val != null) {\n            return this.set('enableThemeSongs', val.toString(), false);\n        }\n\n        val = this.get('enableThemeSongs', false);\n        return val !== 'false';\n    };\n\n    UserSettings.prototype.enableThemeVideos = function (val) {\n        if (val != null) {\n            return this.set('enableThemeVideos', val.toString(), false);\n        }\n\n        val = this.get('enableThemeVideos', false);\n        return val !== 'false';\n    };\n\n    UserSettings.prototype.enableFastFadein = function (val) {\n        if (val != null) {\n            return this.set('fastFadein', val.toString(), false);\n        }\n\n        val = this.get('fastFadein', false);\n        return val !== 'false';\n    };\n\n    UserSettings.prototype.enableBackdrops = function (val) {\n        if (val != null) {\n            return this.set('enableBackdrops', val.toString(), false);\n        }\n\n        val = this.get('enableBackdrops', false);\n        return val !== 'false';\n    };\n\n    UserSettings.prototype.language = function (val) {\n        if (val != null) {\n            return this.set('language', val.toString(), false);\n        }\n\n        return this.get('language', false);\n    };\n\n    UserSettings.prototype.dateTimeLocale = function (val) {\n        if (val != null) {\n            return this.set('datetimelocale', val.toString(), false);\n        }\n\n        return this.get('datetimelocale', false);\n    };\n\n    UserSettings.prototype.skipBackLength = function (val) {\n        if (val != null) {\n            return this.set('skipBackLength', val.toString());\n        }\n\n        return parseInt(this.get('skipBackLength') || '10000');\n    };\n\n    UserSettings.prototype.skipForwardLength = function (val) {\n        if (val != null) {\n            return this.set('skipForwardLength', val.toString());\n        }\n\n        return parseInt(this.get('skipForwardLength') || '30000');\n    };\n\n    UserSettings.prototype.dashboardTheme = function (val) {\n        if (val != null) {\n            return this.set('dashboardTheme', val);\n        }\n\n        return this.get('dashboardTheme');\n    };\n\n    UserSettings.prototype.skin = function (val) {\n        if (val != null) {\n            return this.set('skin', val, false);\n        }\n\n        return this.get('skin', false);\n    };\n\n    UserSettings.prototype.theme = function (val) {\n        if (val != null) {\n            return this.set('appTheme', val, false);\n        }\n\n        return this.get('appTheme', false);\n    };\n\n    UserSettings.prototype.screensaver = function (val) {\n        if (val != null) {\n            return this.set('screensaver', val, false);\n        }\n\n        return this.get('screensaver', false);\n    };\n\n    UserSettings.prototype.soundEffects = function (val) {\n        if (val != null) {\n            return this.set('soundeffects', val, false);\n        }\n\n        return this.get('soundeffects', false);\n    };\n\n    UserSettings.prototype.loadQuerySettings = function (key, query) {\n        var values = this.get(key);\n        if (values) {\n            values = JSON.parse(values);\n            return Object.assign(query, values);\n        }\n\n        return query;\n    };\n\n    UserSettings.prototype.saveQuerySettings = function (key, query) {\n        var values = {};\n        if (query.SortBy) {\n            values.SortBy = query.SortBy;\n        }\n\n        if (query.SortOrder) {\n            values.SortOrder = query.SortOrder;\n        }\n\n        return this.set(key, JSON.stringify(values));\n    };\n\n    UserSettings.prototype.getSubtitleAppearanceSettings = function (key) {\n        key = key || 'localplayersubtitleappearance3';\n        return JSON.parse(this.get(key, false) || '{}');\n    };\n\n    UserSettings.prototype.setSubtitleAppearanceSettings = function (value, key) {\n        key = key || 'localplayersubtitleappearance3';\n        return this.set(key, JSON.stringify(value), false);\n    };\n\n    UserSettings.prototype.setFilter = function (key, value) {\n        return this.set(key, value, true);\n    };\n\n    UserSettings.prototype.getFilter = function (key) {\n        return this.get(key, true);\n    };\n\n    return UserSettings;\n});\n"]}