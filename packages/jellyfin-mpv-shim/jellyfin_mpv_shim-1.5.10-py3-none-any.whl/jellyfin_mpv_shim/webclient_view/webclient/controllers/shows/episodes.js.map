{"version":3,"sources":["controllers/shows/episodes.js"],"names":["define","loading","events","libraryBrowser","imageLoader","listView","cardBuilder","view","params","tabContent","getPageData","context","key","getSavedQueryKey","pageData","data","query","SortBy","SortOrder","IncludeItemTypes","Recursive","Fields","IsMissing","ImageTypeLimit","EnableImageTypes","StartIndex","Limit","pageSize","getSavedView","ParentId","topParentId","loadSavedQueryValues","getQuery","savedQueryKey","onViewStyleChange","viewStyle","self","getCurrentViewStyle","itemsContainer","querySelector","classList","add","remove","innerHTML","reloadItems","page","show","isLoading","ApiClient","getItems","Dashboard","getCurrentUserId","then","result","onNextPageClick","onPreviousPageClick","html","window","scrollTo","i","length","elems","pagingHtml","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","addLayoutButton","sortButton","filterButton","getListViewHtml","items","Items","sortBy","showParentTitle","getCardsHtml","shape","showTitle","scalable","cardLayout","overlayText","centerText","overlayPlayButton","querySelectorAll","addEventListener","lazyChildren","saveQueryValues","hide","require","autoFocuser","autoFocus","this","showFilterMenu","filterDialogFactory","filterDialog","mode","serverId","on","initPage","e","showSortMenu","name","Globalize","translate","id","callback","button","target","btnSelectView","showLayoutMenu","split","detail","saveViewSetting","renderTab","destroy"],"mappings":"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","file":"episodes.js","sourcesContent":["define([\"loading\", \"events\", \"libraryBrowser\", \"imageLoader\", \"listView\", \"cardBuilder\", \"emby-itemscontainer\"], function (loading, events, libraryBrowser, imageLoader, listView, cardBuilder) {\n    \"use strict\";\n\n    return function (view, params, tabContent) {\n        function getPageData(context) {\n            var key = getSavedQueryKey(context);\n            var pageData = data[key];\n\n            if (!pageData) {\n                pageData = data[key] = {\n                    query: {\n                        SortBy: \"SeriesSortName,SortName\",\n                        SortOrder: \"Ascending\",\n                        IncludeItemTypes: \"Episode\",\n                        Recursive: true,\n                        Fields: \"PrimaryImageAspectRatio,MediaSourceCount,UserData\",\n                        IsMissing: false,\n                        ImageTypeLimit: 1,\n                        EnableImageTypes: \"Primary,Backdrop,Thumb\",\n                        StartIndex: 0,\n                        Limit: pageSize\n                    },\n                    view: libraryBrowser.getSavedView(key) || \"Poster\"\n                };\n                pageData.query.ParentId = params.topParentId;\n                libraryBrowser.loadSavedQueryValues(key, pageData.query);\n            }\n\n            return pageData;\n        }\n\n        function getQuery(context) {\n            return getPageData(context).query;\n        }\n\n        function getSavedQueryKey(context) {\n            if (!context.savedQueryKey) {\n                context.savedQueryKey = libraryBrowser.getSavedQueryKey(\"episodes\");\n            }\n\n            return context.savedQueryKey;\n        }\n\n        function onViewStyleChange() {\n            var viewStyle = self.getCurrentViewStyle();\n            var itemsContainer = tabContent.querySelector(\".itemsContainer\");\n\n            if (\"List\" == viewStyle) {\n                itemsContainer.classList.add(\"vertical-list\");\n                itemsContainer.classList.remove(\"vertical-wrap\");\n            } else {\n                itemsContainer.classList.remove(\"vertical-list\");\n                itemsContainer.classList.add(\"vertical-wrap\");\n            }\n\n            itemsContainer.innerHTML = \"\";\n        }\n\n        function reloadItems(page) {\n            loading.show();\n            isLoading = true;\n            var query = getQuery(page);\n            ApiClient.getItems(Dashboard.getCurrentUserId(), query).then(function (result) {\n                function onNextPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    query.StartIndex += query.Limit;\n                    reloadItems(tabContent);\n                }\n\n                function onPreviousPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    query.StartIndex -= query.Limit;\n                    reloadItems(tabContent);\n                }\n\n                window.scrollTo(0, 0);\n                var html;\n                var pagingHtml = libraryBrowser.getQueryPagingHtml({\n                    startIndex: query.StartIndex,\n                    limit: query.Limit,\n                    totalRecordCount: result.TotalRecordCount,\n                    showLimit: false,\n                    updatePageSizeSetting: false,\n                    addLayoutButton: false,\n                    sortButton: false,\n                    filterButton: false\n                });\n                var viewStyle = self.getCurrentViewStyle();\n                var itemsContainer = tabContent.querySelector(\".itemsContainer\");\n                if (viewStyle == \"List\") {\n                    html = listView.getListViewHtml({\n                        items: result.Items,\n                        sortBy: query.SortBy,\n                        showParentTitle: true\n                    });\n                } else if (viewStyle == \"PosterCard\") {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: \"backdrop\",\n                        showTitle: true,\n                        showParentTitle: true,\n                        scalable: true,\n                        cardLayout: true\n                    });\n                } else {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: \"backdrop\",\n                        showTitle: true,\n                        showParentTitle: true,\n                        overlayText: false,\n                        centerText: true,\n                        scalable: true,\n                        overlayPlayButton: true\n                    });\n                }\n                var i;\n                var length;\n                var elems;\n\n                elems = tabContent.querySelectorAll(\".paging\");\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].innerHTML = pagingHtml;\n                }\n\n                elems = tabContent.querySelectorAll(\".btnNextPage\");\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener(\"click\", onNextPageClick);\n                }\n\n                elems = tabContent.querySelectorAll(\".btnPreviousPage\");\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener(\"click\", onPreviousPageClick);\n                }\n\n                itemsContainer.innerHTML = html;\n                imageLoader.lazyChildren(itemsContainer);\n                libraryBrowser.saveQueryValues(getSavedQueryKey(page), query);\n                loading.hide();\n                isLoading = false;\n\n                require([\"autoFocuser\"], function (autoFocuser) {\n                    autoFocuser.autoFocus(page);\n                });\n            });\n        }\n\n        var self = this;\n        var pageSize = 100;\n        var data = {};\n        var isLoading = false;\n\n        self.showFilterMenu = function () {\n            require([\"components/filterdialog/filterdialog\"], function (filterDialogFactory) {\n                var filterDialog = new filterDialogFactory({\n                    query: getQuery(tabContent),\n                    mode: \"episodes\",\n                    serverId: ApiClient.serverId()\n                });\n                events.on(filterDialog, \"filterchange\", function () {\n                    reloadItems(tabContent);\n                });\n                filterDialog.show();\n            });\n        };\n\n        self.getCurrentViewStyle = function () {\n            return getPageData(tabContent).view;\n        };\n\n        function initPage(tabContent) {\n            tabContent.querySelector(\".btnFilter\").addEventListener(\"click\", function () {\n                self.showFilterMenu();\n            });\n            tabContent.querySelector(\".btnSort\").addEventListener(\"click\", function (e) {\n                libraryBrowser.showSortMenu({\n                    items: [{\n                        name: Globalize.translate(\"OptionNameSort\"),\n                        id: \"SeriesSortName,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionTvdbRating\"),\n                        id: \"CommunityRating,SeriesSortName,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionDateAdded\"),\n                        id: \"DateCreated,SeriesSortName,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionPremiereDate\"),\n                        id: \"PremiereDate,SeriesSortName,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionDatePlayed\"),\n                        id: \"DatePlayed,SeriesSortName,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionParentalRating\"),\n                        id: \"OfficialRating,SeriesSortName,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionPlayCount\"),\n                        id: \"PlayCount,SeriesSortName,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionRuntime\"),\n                        id: \"Runtime,SeriesSortName,SortName\"\n                    }],\n                    callback: function () {\n                        reloadItems(tabContent);\n                    },\n                    query: getQuery(tabContent),\n                    button: e.target\n                });\n            });\n            var btnSelectView = tabContent.querySelector(\".btnSelectView\");\n            btnSelectView.addEventListener(\"click\", function (e) {\n                libraryBrowser.showLayoutMenu(e.target, self.getCurrentViewStyle(), \"List,Poster,PosterCard\".split(\",\"));\n            });\n            btnSelectView.addEventListener(\"layoutchange\", function (e) {\n                var viewStyle = e.detail.viewStyle;\n                getPageData(tabContent).view = viewStyle;\n                libraryBrowser.saveViewSetting(getSavedQueryKey(tabContent), viewStyle);\n                onViewStyleChange();\n                reloadItems(tabContent);\n            });\n        }\n\n        initPage(tabContent);\n        onViewStyleChange();\n\n        self.renderTab = function () {\n            reloadItems(tabContent);\n        };\n\n        self.destroy = function () {};\n    };\n});\n"]}