{"version":3,"sources":["controllers/usernew.js"],"names":["define","$","loading","loadUser","page","val","show","promiseFolders","ApiClient","getJSON","getUrl","IsHidden","promiseChannels","Promise","all","then","responses","loadMediaFolders","mediaFolders","html","Globalize","translate","i","length","folder","Id","Name","trigger","checked","Items","loadChannels","channels","hide","onSubmit","this","parents","saveUser","user","Password","createUser","Policy","EnableAllFolders","EnabledFolders","get","filter","map","getAttribute","EnableAllChannels","EnabledChannels","updateUserPolicy","Dashboard","navigate","response","require","toast","document","on","off","loadData"],"mappings":"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","file":"usernew.js","sourcesContent":["define([\"jQuery\", \"loading\", \"fnchecked\", \"emby-checkbox\"], function ($, loading) {\n    \"use strict\";\n\n    function loadMediaFolders(page, mediaFolders) {\n        var html = \"\";\n        html += '<h3 class=\"checkboxListLabel\">' + Globalize.translate(\"HeaderLibraries\") + \"</h3>\";\n        html += '<div class=\"checkboxList paperList\" style=\"padding:.5em 1em;\">';\n\n        for (var i = 0; i < mediaFolders.length; i++) {\n            var folder = mediaFolders[i];\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkFolder\" data-id=\"' + folder.Id + '\" checked=\"checked\"/><span>' + folder.Name + \"</span></label>\";\n        }\n\n        html += \"</div>\";\n        $(\".folderAccess\", page).html(html).trigger(\"create\");\n        $(\"#chkEnableAllFolders\", page).checked(true).trigger(\"change\");\n    }\n\n    function loadChannels(page, channels) {\n        var html = \"\";\n        html += '<h3 class=\"checkboxListLabel\">' + Globalize.translate(\"HeaderChannels\") + \"</h3>\";\n        html += '<div class=\"checkboxList paperList\" style=\"padding:.5em 1em;\">';\n\n        for (var i = 0; i < channels.length; i++) {\n            var folder = channels[i];\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkChannel\" data-id=\"' + folder.Id + '\" checked=\"checked\"/><span>' + folder.Name + \"</span></label>\";\n        }\n\n        html += \"</div>\";\n        $(\".channelAccess\", page).show().html(html).trigger(\"create\");\n\n        if (channels.length) {\n            $(\".channelAccessContainer\", page).show();\n        } else {\n            $(\".channelAccessContainer\", page).hide();\n        }\n\n        $(\"#chkEnableAllChannels\", page).checked(true).trigger(\"change\");\n    }\n\n    function loadUser(page) {\n        $(\"#txtUsername\", page).val(\"\");\n        $(\"#txtPassword\", page).val(\"\");\n        loading.show();\n        var promiseFolders = ApiClient.getJSON(ApiClient.getUrl(\"Library/MediaFolders\", {\n            IsHidden: false\n        }));\n        var promiseChannels = ApiClient.getJSON(ApiClient.getUrl(\"Channels\"));\n        Promise.all([promiseFolders, promiseChannels]).then(function (responses) {\n            loadMediaFolders(page, responses[0].Items);\n            loadChannels(page, responses[1].Items);\n            loading.hide();\n        });\n    }\n\n    function saveUser(page) {\n        var user = {};\n        user.Name = $(\"#txtUsername\", page).val();\n        user.Password = $(\"#txtPassword\", page).val();\n        ApiClient.createUser(user).then(function (user) {\n            user.Policy.EnableAllFolders = $(\"#chkEnableAllFolders\", page).checked();\n            user.Policy.EnabledFolders = [];\n\n            if (!user.Policy.EnableAllFolders) {\n                user.Policy.EnabledFolders = $(\".chkFolder\", page).get().filter(function (i) {\n                    return i.checked;\n                }).map(function (i) {\n                    return i.getAttribute(\"data-id\");\n                });\n            }\n\n            user.Policy.EnableAllChannels = $(\"#chkEnableAllChannels\", page).checked();\n            user.Policy.EnabledChannels = [];\n\n            if (!user.Policy.EnableAllChannels) {\n                user.Policy.EnabledChannels = $(\".chkChannel\", page).get().filter(function (i) {\n                    return i.checked;\n                }).map(function (i) {\n                    return i.getAttribute(\"data-id\");\n                });\n            }\n\n            ApiClient.updateUserPolicy(user.Id, user.Policy).then(function () {\n                Dashboard.navigate(\"useredit.html?userId=\" + user.Id);\n            });\n        }, function (response) {\n            require([\"toast\"], function (toast) {\n                toast(Globalize.translate(\"DefaultErrorMessage\"));\n            });\n\n            loading.hide();\n        });\n    }\n\n    function onSubmit() {\n        var page = $(this).parents(\".page\")[0];\n        loading.show();\n        saveUser(page);\n        return false;\n    }\n\n    function loadData(page) {\n        loadUser(page);\n    }\n\n    $(document).on(\"pageinit\", \"#newUserPage\", function () {\n        var page = this;\n        $(\"#chkEnableAllChannels\", page).on(\"change\", function () {\n            if (this.checked) {\n                $(\".channelAccessListContainer\", page).hide();\n            } else {\n                $(\".channelAccessListContainer\", page).show();\n            }\n        });\n        $(\"#chkEnableAllFolders\", page).on(\"change\", function () {\n            if (this.checked) {\n                $(\".folderAccessListContainer\", page).hide();\n            } else {\n                $(\".folderAccessListContainer\", page).show();\n            }\n        });\n        $(\".newUserProfileForm\").off(\"submit\", onSubmit).on(\"submit\", onSubmit);\n    }).on(\"pageshow\", \"#newUserPage\", function () {\n        loadData(this);\n    });\n});\n"]}