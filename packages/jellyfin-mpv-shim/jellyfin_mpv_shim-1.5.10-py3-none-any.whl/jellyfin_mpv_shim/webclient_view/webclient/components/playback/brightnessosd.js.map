{"version":3,"sources":["components/playback/brightnessosd.js"],"names":["define","events","playbackManager","dom","browser","currentPlayer","osdElement","iconElement","progressElement","enableAnimation","hideTimeout","onHideComplete","this","classList","add","clearHideTimeout","clearTimeout","hideOsd","elem","offsetWidth","requestAnimationFrame","addEventListener","whichTransitionEvent","once","call","setIcon","icon","remove","onBrightnessChanged","e","ensureOsdElement","supportsCssAnimation","document","createElement","innerHTML","getOsdElementHtml","html","querySelector","body","appendChild","updateElementsFromPlayer","brightness","style","width","getBrightness","showOsd","removeEventListener","setTimeout","bindToPlayer","player","releaseCurrentPlayer","off","on","getCurrentPlayer"],"mappings":"AAAA,aAAAA,OAAO,CAAC,SAAU,kBAAmB,MAAO,UAAW,gBAAiB,mBAAmB,SAAUC,OAAQC,gBAAiBC,IAAKC,SAG/H,IAAIC,cACAC,WACAC,YACAC,gBAEAC,gBAsCAC,YAJJ,SAASC,iBACLC,KAAKC,UAAUC,IAAI,QA0BvB,SAASC,mBACDL,cACAM,aAAaN,aACbA,YAAc,MAItB,SAASO,UAELF,mBAEA,IAAIG,KAAOZ,WACPY,OAEIT,iBAEKS,KAAKC,YAEVC,uBAAsB,WAClBF,KAAKL,UAAUC,IAAI,kBAEnBX,IAAIkB,iBAAiBH,KAAMf,IAAImB,uBAAwBX,eAAgB,CACnEY,MAAM,QAIdZ,eAAea,KAAKN,OAKhC,SAASO,QAAQlB,YAAamB,MAC1BnB,YAAYM,UAAUc,OAAO,mBAC7BpB,YAAYM,UAAUc,OAAO,qBAC7BpB,YAAYM,UAAUc,OAAO,kBAC7BpB,YAAYM,UAAUC,IAAIY,MA8B9B,SAASE,oBAAoBC,IAlH7B,SAASC,mBAEL,IAAIZ,KAAOZ,WACNY,OAEDT,gBAAkBL,QAAQ2B,wBAE1Bb,KAAOc,SAASC,cAAc,QACzBpB,UAAUC,IAAI,QACnBI,KAAKL,UAAUC,IAAI,WACnBI,KAAKL,UAAUC,IAAI,kBACnBI,KAAKL,UAAUC,IAAI,iBACnBI,KAAKgB,UAtBb,SAASC,oBAOL,MAJQ,6DAEA,8GAARC,wKAiBqBD,GAEjB5B,YAAcW,KAAKmB,cAAc,KACjC7B,gBAAkBU,KAAKmB,cAAc,yBAErCL,SAASM,KAAKC,YAAYrB,MAC1BZ,WAAaY,MAoGjBY,GA/BJ,SAASU,yBAAyBC,YAE1BlC,aAEIkB,QAAQlB,YADRkC,YAAc,GACO,kBACdA,YAAc,GACA,oBAEA,kBAGzBjC,kBACAA,gBAAgBkC,MAAMC,OAASF,YAAc,GAAK,KAqBtDD,CAAyBtC,gBAAgB0C,cAJ5BhC,OAzFjB,SAASiC,UAEL9B,mBAEA,IAAIG,KAAOZ,WAEXH,IAAI2C,oBAAoB5B,KAAMf,IAAImB,uBAAwBX,eAAgB,CACtEY,MAAM,IAGVL,KAAKL,UAAUc,OAAO,QAGjBT,KAAKC,YAEVC,uBAAsB,WAClBF,KAAKL,UAAUc,OAAO,kBAEtBjB,YAAcqC,WAAW9B,QAAS,QA6EtC4B,GAGJ,SAASG,aAAaC,QAEdA,SAAW5C,iBAxBnB,SAAS6C,uBAEL,IAAID,OAAS5C,cAET4C,SACAhD,OAAOkD,IAAIF,OAAQ,mBAAoBrB,qBACvC3B,OAAOkD,IAAIF,OAAQ,eAAgBhC,SACnCZ,cAAgB,MAqBpB6C,GAEA7C,cAAgB4C,OAEXA,SAILhC,UACAhB,OAAOmD,GAAGH,OAAQ,mBAAoBrB,qBACtC3B,OAAOmD,GAAGH,OAAQ,eAAgBhC,WAGtChB,OAAOmD,GAAGlD,gBAAiB,gBAAgB,WACvC8C,aAAa9C,gBAAgBmD,uBAGjCL,aAAa9C,gBAAgBmD","file":"brightnessosd.js","sourcesContent":["define(['events', 'playbackManager', 'dom', 'browser', 'css!./iconosd', 'material-icons'], function (events, playbackManager, dom, browser) {\n    'use strict';\n\n    var currentPlayer;\n    var osdElement;\n    var iconElement;\n    var progressElement;\n\n    var enableAnimation;\n\n    function getOsdElementHtml() {\n        var html = '';\n\n        html += '<i class=\"material-icons iconOsdIcon brightness_high\"></i>';\n\n        html += '<div class=\"iconOsdProgressOuter\"><div class=\"iconOsdProgressInner brightnessOsdProgressInner\"></div></div>';\n\n        return html;\n    }\n\n    function ensureOsdElement() {\n\n        var elem = osdElement;\n        if (!elem) {\n\n            enableAnimation = browser.supportsCssAnimation();\n\n            elem = document.createElement('div');\n            elem.classList.add('hide');\n            elem.classList.add('iconOsd');\n            elem.classList.add('iconOsd-hidden');\n            elem.classList.add('brightnessOsd');\n            elem.innerHTML = getOsdElementHtml();\n\n            iconElement = elem.querySelector('i');\n            progressElement = elem.querySelector('.iconOsdProgressInner');\n\n            document.body.appendChild(elem);\n            osdElement = elem;\n        }\n    }\n\n    function onHideComplete() {\n        this.classList.add('hide');\n    }\n\n    var hideTimeout;\n    function showOsd() {\n\n        clearHideTimeout();\n\n        var elem = osdElement;\n\n        dom.removeEventListener(elem, dom.whichTransitionEvent(), onHideComplete, {\n            once: true\n        });\n\n        elem.classList.remove('hide');\n\n        // trigger reflow\n        void elem.offsetWidth;\n\n        requestAnimationFrame(function () {\n            elem.classList.remove('iconOsd-hidden');\n\n            hideTimeout = setTimeout(hideOsd, 3000);\n        });\n    }\n\n    function clearHideTimeout() {\n        if (hideTimeout) {\n            clearTimeout(hideTimeout);\n            hideTimeout = null;\n        }\n    }\n\n    function hideOsd() {\n\n        clearHideTimeout();\n\n        var elem = osdElement;\n        if (elem) {\n\n            if (enableAnimation) {\n                // trigger reflow\n                void elem.offsetWidth;\n\n                requestAnimationFrame(function () {\n                    elem.classList.add('iconOsd-hidden');\n\n                    dom.addEventListener(elem, dom.whichTransitionEvent(), onHideComplete, {\n                        once: true\n                    });\n                });\n            } else {\n                onHideComplete.call(elem);\n            }\n        }\n    }\n\n    function setIcon(iconElement, icon) {\n        iconElement.classList.remove('brightness_high');\n        iconElement.classList.remove('brightness_medium');\n        iconElement.classList.remove('brightness_low');\n        iconElement.classList.add(icon);\n    }\n\n    function updateElementsFromPlayer(brightness) {\n\n        if (iconElement) {\n            if (brightness >= 80) {\n                setIcon(iconElement, 'brightness_high');\n            } else if (brightness >= 20) {\n                setIcon(iconElement, 'brightness_medium');\n            } else {\n                setIcon(iconElement, 'brightness_low');\n            }\n        }\n        if (progressElement) {\n            progressElement.style.width = (brightness || 0) + '%';\n        }\n    }\n\n    function releaseCurrentPlayer() {\n\n        var player = currentPlayer;\n\n        if (player) {\n            events.off(player, 'brightnesschange', onBrightnessChanged);\n            events.off(player, 'playbackstop', hideOsd);\n            currentPlayer = null;\n        }\n    }\n\n    function onBrightnessChanged(e) {\n\n        var player = this;\n\n        ensureOsdElement();\n\n        updateElementsFromPlayer(playbackManager.getBrightness(player));\n\n        showOsd();\n    }\n\n    function bindToPlayer(player) {\n\n        if (player === currentPlayer) {\n            return;\n        }\n\n        releaseCurrentPlayer();\n\n        currentPlayer = player;\n\n        if (!player) {\n            return;\n        }\n\n        hideOsd();\n        events.on(player, 'brightnesschange', onBrightnessChanged);\n        events.on(player, 'playbackstop', hideOsd);\n    }\n\n    events.on(playbackManager, 'playerchange', function () {\n        bindToPlayer(playbackManager.getCurrentPlayer());\n    });\n\n    bindToPlayer(playbackManager.getCurrentPlayer());\n\n});\n"]}