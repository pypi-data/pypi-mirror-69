{"version":3,"sources":["components/serverNotifications.js"],"names":["define","connectionManager","playbackManager","events","inputManager","focusManager","appRouter","serverNotifications","notifyApp","notify","processGeneralCommand","cmd","apiClient","console","debug","Name","trigger","playTrailers","itemId","getItem","getCurrentUserId","then","item","Arguments","ItemId","setRepeatMode","RepeatMode","setVolume","Volume","setAudioStreamIndex","parseInt","Index","setSubtitleStreamIndex","displayContent","isPlayingLocally","showItem","serverId","displayMessage","args","TimeoutMs","require","toast","title","Header","text","Text","alert","sendText","String","onMessageReceived","e","msg","MessageType","this","serverInfo","Id","Data","PlayCommand","queueNext","ids","ItemIds","queue","play","startPositionTicks","StartPositionTicks","mediaSourceId","MediaSourceId","audioStreamIndex","AudioStreamIndex","subtitleStreamIndex","SubtitleStreamIndex","startIndex","StartIndex","Command","seek","SeekPositionTicks","UserId","i","length","UserDataList","bindEvents","off","on","getApiClients","forEach","newApiClient"],"mappings":"AAAA,aAAAA,OAAO,CAAC,oBAAqB,kBAAmB,SAAU,eAAgB,eAAgB,cAAc,SAAUC,kBAAmBC,gBAAiBC,OAAQC,aAAcC,aAAcC,WAGtL,IAAIC,oBAAsB,GAE1B,SAASC,YACLJ,aAAaK,SA4BjB,SAASC,sBAAsBC,IAAKC,WAEhC,OADAC,QAAQC,MAAM,qBAAuBH,IAAII,MACjCJ,IAAII,MACR,IAAK,SAED,YADAX,aAAaY,QAAQ,UAEzB,IAAK,OAED,YADAZ,aAAaY,QAAQ,QAEzB,IAAK,SAED,YADAZ,aAAaY,QAAQ,MAEzB,IAAK,WAED,YADAZ,aAAaY,QAAQ,QAEzB,IAAK,WAED,YADAZ,aAAaY,QAAQ,QAEzB,IAAK,YAED,YADAZ,aAAaY,QAAQ,SAEzB,IAAK,SAED,YADAZ,aAAaY,QAAQ,UAEzB,IAAK,WAED,YADAZ,aAAaY,QAAQ,YAEzB,IAAK,gBAjCb,SAASC,aAAaL,UAAWM,QAC7BN,UAAUO,QAAQP,UAAUQ,mBAAoBF,QAAQG,MAAK,SAAUC,MACnEpB,gBAAgBe,aAAaK,SAgCzBL,CAAaL,UAAWD,IAAIY,UAAUC,QACtC,MACJ,IAAK,gBACDtB,gBAAgBuB,cAAcd,IAAIY,UAAUG,YAC5C,MACJ,IAAK,WAED,YADAtB,aAAaY,QAAQ,YAEzB,IAAK,aAED,YADAZ,aAAaY,QAAQ,cAEzB,IAAK,YAED,YADAZ,aAAaY,QAAQ,aAEzB,IAAK,cAED,YADAZ,aAAaY,QAAQ,eAEzB,IAAK,OAED,YADAZ,aAAaY,QAAQ,QAEzB,IAAK,SAED,YADAZ,aAAaY,QAAQ,UAEzB,IAAK,aAED,YADAZ,aAAaY,QAAQ,cAEzB,IAAK,YACDR,YACAN,gBAAgByB,UAAUhB,IAAIY,UAAUK,QACxC,MACJ,IAAK,sBACDpB,YACAN,gBAAgB2B,oBAAoBC,SAASnB,IAAIY,UAAUQ,QAC3D,MACJ,IAAK,yBACDvB,YACAN,gBAAgB8B,uBAAuBF,SAASnB,IAAIY,UAAUQ,QAC9D,MACJ,IAAK,mBAED,YADA3B,aAAaY,QAAQ,oBAEzB,IAAK,SAED,YADAZ,aAAaY,QAAQ,QAEzB,IAAK,eAED,YADAZ,aAAaY,QAAQ,YAEzB,IAAK,kBAvFb,SAASiB,eAAetB,IAAKC,WACpBV,gBAAgBgC,iBAAiB,CAAC,QAAS,UAC5C5B,UAAU6B,SAASxB,IAAIY,UAAUC,OAAQZ,UAAUwB,YAsF/CH,CAAetB,IAAKC,WACpB,MACJ,IAAK,aAED,YADAR,aAAaY,QAAQ,UAEzB,IAAK,kBA1Gb,SAASqB,eAAe1B,KACpB,IAAI2B,KAAO3B,IAAIY,UACXe,KAAKC,UACLC,QAAQ,CAAC,UAAU,SAAUC,OACzBA,MAAM,CAAEC,MAAOJ,KAAKK,OAAQC,KAAMN,KAAKO,UAG3CL,QAAQ,CAAC,UAAU,SAAUM,OACzBA,MAAM,CAAEJ,MAAOJ,KAAKK,OAAQC,KAAMN,KAAKO,UAmGvCR,CAAe1B,KACf,MACJ,IAAK,YAGL,IAAK,oBAGL,IAAK,iBAGL,IAAK,UAED,MACJ,IAAK,aAEDN,aAAa0C,SAASpC,IAAIY,UAAUyB,QACpC,MACJ,QACInC,QAAQC,MAAM,6CAA+CH,IAAII,MAIzEP,YAGJ,SAASyC,kBAAkBC,EAAGC,KAE1B,GAAwB,SAApBA,IAAIC,YAAwB,CAC5B5C,YACA,IAAI4B,SAHQiB,KAGaC,aAAaC,GACT,aAAzBJ,IAAIK,KAAKC,YACTvD,gBAAgBwD,UAAU,CAAEC,IAAKR,IAAIK,KAAKI,QAASxB,SAAUA,WAC7B,aAAzBe,IAAIK,KAAKC,YAChBvD,gBAAgB2D,MAAM,CAAEF,IAAKR,IAAIK,KAAKI,QAASxB,SAAUA,WAEzDlC,gBAAgB4D,KAAK,CACjBH,IAAKR,IAAIK,KAAKI,QACdG,mBAAoBZ,IAAIK,KAAKQ,mBAC7BC,cAAed,IAAIK,KAAKU,cACxBC,iBAAkBhB,IAAIK,KAAKY,iBAC3BC,oBAAqBlB,IAAIK,KAAKc,oBAC9BC,WAAYpB,IAAIK,KAAKgB,WACrBpC,SAAUA,gBAGf,GAAwB,cAApBe,IAAIC,YACc,SAArBD,IAAIK,KAAKiB,QACTrE,aAAaY,QAAQ,QACO,UAArBmC,IAAIK,KAAKiB,QAChBrE,aAAaY,QAAQ,SACO,YAArBmC,IAAIK,KAAKiB,QAChBrE,aAAaY,QAAQ,QACO,cAArBmC,IAAIK,KAAKiB,QAChBrE,aAAaY,QAAQ,aACO,SAArBmC,IAAIK,KAAKiB,QAChBvE,gBAAgBwE,KAAKvB,IAAIK,KAAKmB,mBACF,cAArBxB,IAAIK,KAAKiB,QAChBrE,aAAaY,QAAQ,QACO,kBAArBmC,IAAIK,KAAKiB,QAChBrE,aAAaY,QAAQ,YAErBR,iBAED,GAAwB,mBAApB2C,IAAIC,YAAkC,CAE7C1C,sBADUyC,IAAIK,KAtCFH,WAwCT,GAAwB,oBAApBF,IAAIC,aACX,GAAID,IAAIK,KAAKoB,SAzCDvB,KAyCsBjC,mBAC9B,IAAK,IAAIyD,EAAI,EAAGC,OAAS3B,IAAIK,KAAKuB,aAAaD,OAAQD,EAAIC,OAAQD,IAC/D1E,OAAOa,QAAQT,oBAAqB,kBAAmB,CA3CnD8C,KA2C+DF,IAAIK,KAAKuB,aAAaF,UAIjG1E,OAAOa,QAAQT,oBAAqB4C,IAAIC,YAAa,CA/CzCC,KA+CqDF,IAAIK,OAG7E,SAASwB,WAAWpE,WAChBT,OAAO8E,IAAIrE,UAAW,UAAWqC,mBACjC9C,OAAO+E,GAAGtE,UAAW,UAAWqC,mBAOpC,OAJAhD,kBAAkBkF,gBAAgBC,QAAQJ,YAC1C7E,OAAO+E,GAAGjF,kBAAmB,oBAAoB,SAAUiD,EAAGmC,cAC1DL,WAAWK,iBAER9E","file":"serverNotifications.js","sourcesContent":["define(['connectionManager', 'playbackManager', 'events', 'inputManager', 'focusManager', 'appRouter'], function (connectionManager, playbackManager, events, inputManager, focusManager, appRouter) {\n    'use strict';\n\n    var serverNotifications = {};\n\n    function notifyApp() {\n        inputManager.notify();\n    }\n\n    function displayMessage(cmd) {\n        var args = cmd.Arguments;\n        if (args.TimeoutMs) {\n            require(['toast'], function (toast) {\n                toast({ title: args.Header, text: args.Text });\n            });\n        } else {\n            require(['alert'], function (alert) {\n                alert({ title: args.Header, text: args.Text });\n            });\n        }\n    }\n\n    function displayContent(cmd, apiClient) {\n        if (!playbackManager.isPlayingLocally(['Video', 'Book'])) {\n            appRouter.showItem(cmd.Arguments.ItemId, apiClient.serverId());\n        }\n    }\n\n    function playTrailers(apiClient, itemId) {\n        apiClient.getItem(apiClient.getCurrentUserId(), itemId).then(function (item) {\n            playbackManager.playTrailers(item);\n        });\n    }\n\n    function processGeneralCommand(cmd, apiClient) {\n        console.debug('Received command: ' + cmd.Name);\n        switch (cmd.Name) {\n            case 'Select':\n                inputManager.trigger('select');\n                return;\n            case 'Back':\n                inputManager.trigger('back');\n                return;\n            case 'MoveUp':\n                inputManager.trigger('up');\n                return;\n            case 'MoveDown':\n                inputManager.trigger('down');\n                return;\n            case 'MoveLeft':\n                inputManager.trigger('left');\n                return;\n            case 'MoveRight':\n                inputManager.trigger('right');\n                return;\n            case 'PageUp':\n                inputManager.trigger('pageup');\n                return;\n            case 'PageDown':\n                inputManager.trigger('pagedown');\n                return;\n            case 'PlayTrailers':\n                playTrailers(apiClient, cmd.Arguments.ItemId);\n                break;\n            case 'SetRepeatMode':\n                playbackManager.setRepeatMode(cmd.Arguments.RepeatMode);\n                break;\n            case 'VolumeUp':\n                inputManager.trigger('volumeup');\n                return;\n            case 'VolumeDown':\n                inputManager.trigger('volumedown');\n                return;\n            case 'ChannelUp':\n                inputManager.trigger('channelup');\n                return;\n            case 'ChannelDown':\n                inputManager.trigger('channeldown');\n                return;\n            case 'Mute':\n                inputManager.trigger('mute');\n                return;\n            case 'Unmute':\n                inputManager.trigger('unmute');\n                return;\n            case 'ToggleMute':\n                inputManager.trigger('togglemute');\n                return;\n            case 'SetVolume':\n                notifyApp();\n                playbackManager.setVolume(cmd.Arguments.Volume);\n                break;\n            case 'SetAudioStreamIndex':\n                notifyApp();\n                playbackManager.setAudioStreamIndex(parseInt(cmd.Arguments.Index));\n                break;\n            case 'SetSubtitleStreamIndex':\n                notifyApp();\n                playbackManager.setSubtitleStreamIndex(parseInt(cmd.Arguments.Index));\n                break;\n            case 'ToggleFullscreen':\n                inputManager.trigger('togglefullscreen');\n                return;\n            case 'GoHome':\n                inputManager.trigger('home');\n                return;\n            case 'GoToSettings':\n                inputManager.trigger('settings');\n                return;\n            case 'DisplayContent':\n                displayContent(cmd, apiClient);\n                break;\n            case 'GoToSearch':\n                inputManager.trigger('search');\n                return;\n            case 'DisplayMessage':\n                displayMessage(cmd);\n                break;\n            case 'ToggleOsd':\n                // todo\n                break;\n            case 'ToggleContextMenu':\n                // todo\n                break;\n            case 'TakeScreenShot':\n                // todo\n                break;\n            case 'SendKey':\n                // todo\n                break;\n            case 'SendString':\n                // todo\n                focusManager.sendText(cmd.Arguments.String);\n                break;\n            default:\n                console.debug('processGeneralCommand does not recognize: ' + cmd.Name);\n                break;\n        }\n\n        notifyApp();\n    }\n\n    function onMessageReceived(e, msg) {\n        var apiClient = this;\n        if (msg.MessageType === \"Play\") {\n            notifyApp();\n            var serverId = apiClient.serverInfo().Id;\n            if (msg.Data.PlayCommand === \"PlayNext\") {\n                playbackManager.queueNext({ ids: msg.Data.ItemIds, serverId: serverId });\n            } else if (msg.Data.PlayCommand === \"PlayLast\") {\n                playbackManager.queue({ ids: msg.Data.ItemIds, serverId: serverId });\n            } else {\n                playbackManager.play({\n                    ids: msg.Data.ItemIds,\n                    startPositionTicks: msg.Data.StartPositionTicks,\n                    mediaSourceId: msg.Data.MediaSourceId,\n                    audioStreamIndex: msg.Data.AudioStreamIndex,\n                    subtitleStreamIndex: msg.Data.SubtitleStreamIndex,\n                    startIndex: msg.Data.StartIndex,\n                    serverId: serverId\n                });\n            }\n        } else if (msg.MessageType === \"Playstate\") {\n            if (msg.Data.Command === 'Stop') {\n                inputManager.trigger('stop');\n            } else if (msg.Data.Command === 'Pause') {\n                inputManager.trigger('pause');\n            } else if (msg.Data.Command === 'Unpause') {\n                inputManager.trigger('play');\n            } else if (msg.Data.Command === 'PlayPause') {\n                inputManager.trigger('playpause');\n            } else if (msg.Data.Command === 'Seek') {\n                playbackManager.seek(msg.Data.SeekPositionTicks);\n            } else if (msg.Data.Command === 'NextTrack') {\n                inputManager.trigger('next');\n            } else if (msg.Data.Command === 'PreviousTrack') {\n                inputManager.trigger('previous');\n            } else {\n                notifyApp();\n            }\n        } else if (msg.MessageType === \"GeneralCommand\") {\n            var cmd = msg.Data;\n            processGeneralCommand(cmd, apiClient);\n        } else if (msg.MessageType === \"UserDataChanged\") {\n            if (msg.Data.UserId === apiClient.getCurrentUserId()) {\n                for (var i = 0, length = msg.Data.UserDataList.length; i < length; i++) {\n                    events.trigger(serverNotifications, 'UserDataChanged', [apiClient, msg.Data.UserDataList[i]]);\n                }\n            }\n        } else {\n            events.trigger(serverNotifications, msg.MessageType, [apiClient, msg.Data]);\n        }\n    }\n    function bindEvents(apiClient) {\n        events.off(apiClient, \"message\", onMessageReceived);\n        events.on(apiClient, \"message\", onMessageReceived);\n    }\n\n    connectionManager.getApiClients().forEach(bindEvents);\n    events.on(connectionManager, 'apiclientcreated', function (e, newApiClient) {\n        bindEvents(newApiClient);\n    });\n    return serverNotifications;\n});\n"]}