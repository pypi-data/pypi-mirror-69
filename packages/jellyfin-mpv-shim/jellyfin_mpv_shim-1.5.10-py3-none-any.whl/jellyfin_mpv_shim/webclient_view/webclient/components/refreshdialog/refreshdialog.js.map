{"version":3,"sources":["components/refreshdialog/refreshdialog.js"],"names":["define","shell","dialogHelper","loading","layoutManager","connectionManager","appRouter","globalize","centerFocus","elem","horiz","on","require","scrollHelper","fn","onSubmit","e","show","dlg","parentWithClass","className","classList","contains","parentNode","target","options","this","apiClient","getApiClient","serverId","replaceAllMetadata","querySelector","value","mode","replaceAllImages","checked","itemIds","forEach","itemId","refreshItem","Recursive","ImageRefreshMode","MetadataRefreshMode","ReplaceAllImages","ReplaceAllMetadata","close","toast","translate","hide","preventDefault","RefreshDialog","prototype","dialogOptions","removeOnClose","scrollY","tv","size","createDialog","add","html","getEditorHtml","innerHTML","addEventListener","bind","remove","dispatchEvent","CustomEvent","Promise","resolve","reject","open"],"mappings":"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","file":"refreshdialog.js","sourcesContent":["define(['shell', 'dialogHelper', 'loading', 'layoutManager', 'connectionManager', 'appRouter', 'globalize', 'emby-input', 'emby-checkbox', 'paper-icon-button-light', 'emby-select', 'material-icons', 'css!./../formdialog', 'emby-button'], function (shell, dialogHelper, loading, layoutManager, connectionManager, appRouter, globalize) {\n    'use strict';\n\n    function parentWithClass(elem, className) {\n\n        while (!elem.classList || !elem.classList.contains(className)) {\n            elem = elem.parentNode;\n\n            if (!elem) {\n                return null;\n            }\n        }\n\n        return elem;\n    }\n\n    function getEditorHtml() {\n\n        var html = '';\n\n        html += '<div class=\"formDialogContent smoothScrollY\" style=\"padding-top:2em;\">';\n        html += '<div class=\"dialogContentInner dialog-content-centered\">';\n        html += '<form style=\"margin:auto;\">';\n\n        html += '<div class=\"fldSelectPlaylist selectContainer\">';\n        html += '<select is=\"emby-select\" id=\"selectMetadataRefreshMode\" label=\"' + globalize.translate('LabelRefreshMode') + '\">';\n        html += '<option value=\"scan\">' + globalize.translate('ScanForNewAndUpdatedFiles') + '</option>';\n        html += '<option value=\"missing\">' + globalize.translate('SearchForMissingMetadata') + '</option>';\n        html += '<option value=\"all\" selected>' + globalize.translate('ReplaceAllMetadata') + '</option>';\n        html += '</select>';\n        html += '</div>';\n\n        html += '<label class=\"checkboxContainer hide fldReplaceExistingImages\">';\n        html += '<input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkReplaceImages\" />';\n        html += '<span>' + globalize.translate('ReplaceExistingImages') + '</span>';\n        html += '</label>';\n\n        html += '<div class=\"fieldDescription\">';\n        html += globalize.translate('RefreshDialogHelp');\n        html += '</div>';\n\n        html += '<input type=\"hidden\" class=\"fldSelectedItemIds\" />';\n\n        html += '<br />';\n        html += '<div class=\"formDialogFooter\">';\n        html += '<button is=\"emby-button\" type=\"submit\" class=\"raised btnSubmit block formDialogFooterItem button-submit\">' + globalize.translate('Refresh') + '</button>';\n        html += '</div>';\n\n        html += '</form>';\n        html += '</div>';\n        html += '</div>';\n\n        return html;\n    }\n\n    function centerFocus(elem, horiz, on) {\n        require(['scrollHelper'], function (scrollHelper) {\n            var fn = on ? 'on' : 'off';\n            scrollHelper.centerFocus[fn](elem, horiz);\n        });\n    }\n\n    function onSubmit(e) {\n\n        loading.show();\n\n        var instance = this;\n        var dlg = parentWithClass(e.target, 'dialog');\n        var options = instance.options;\n\n        var apiClient = connectionManager.getApiClient(options.serverId);\n\n        var replaceAllMetadata = dlg.querySelector('#selectMetadataRefreshMode').value === 'all';\n\n        var mode = dlg.querySelector('#selectMetadataRefreshMode').value === 'scan' ? 'Default' : 'FullRefresh';\n        var replaceAllImages = mode === 'FullRefresh' && dlg.querySelector('.chkReplaceImages').checked;\n\n        options.itemIds.forEach(function (itemId) {\n            apiClient.refreshItem(itemId, {\n\n                Recursive: true,\n                ImageRefreshMode: mode,\n                MetadataRefreshMode: mode,\n                ReplaceAllImages: replaceAllImages,\n                ReplaceAllMetadata: replaceAllMetadata\n            });\n        });\n\n        dialogHelper.close(dlg);\n\n        require(['toast'], function (toast) {\n            toast(globalize.translate('RefreshQueued'));\n        });\n\n        loading.hide();\n\n        e.preventDefault();\n        return false;\n    }\n\n    function RefreshDialog(options) {\n        this.options = options;\n    }\n\n    RefreshDialog.prototype.show = function () {\n\n        var dialogOptions = {\n            removeOnClose: true,\n            scrollY: false\n        };\n\n        if (layoutManager.tv) {\n            dialogOptions.size = 'fullscreen';\n        } else {\n            dialogOptions.size = 'small';\n        }\n\n        var dlg = dialogHelper.createDialog(dialogOptions);\n\n        dlg.classList.add('formDialog');\n\n        var html = '';\n        var title = globalize.translate('RefreshMetadata');\n\n        html += '<div class=\"formDialogHeader\">';\n        html += '<button is=\"paper-icon-button-light\" class=\"btnCancel autoSize\" tabindex=\"-1\"><i class=\"material-icons arrow_back\"></i></button>';\n        html += '<h3 class=\"formDialogHeaderTitle\">';\n        html += title;\n        html += '</h3>';\n\n        html += '</div>';\n\n        html += getEditorHtml();\n\n        dlg.innerHTML = html;\n\n        dlg.querySelector('form').addEventListener('submit', onSubmit.bind(this));\n\n        dlg.querySelector('#selectMetadataRefreshMode').addEventListener('change', function () {\n\n            if (this.value === 'scan') {\n                dlg.querySelector('.fldReplaceExistingImages').classList.add('hide');\n            } else {\n                dlg.querySelector('.fldReplaceExistingImages').classList.remove('hide');\n            }\n        });\n\n        if (this.options.mode) {\n            dlg.querySelector('#selectMetadataRefreshMode').value = this.options.mode;\n        }\n\n        dlg.querySelector('#selectMetadataRefreshMode').dispatchEvent(new CustomEvent('change'));\n\n        dlg.querySelector('.btnCancel').addEventListener('click', function () {\n\n            dialogHelper.close(dlg);\n        });\n\n        if (layoutManager.tv) {\n            centerFocus(dlg.querySelector('.formDialogContent'), false, true);\n        }\n\n        return new Promise(function (resolve, reject) {\n\n            if (layoutManager.tv) {\n                centerFocus(dlg.querySelector('.formDialogContent'), false, false);\n            }\n\n            dlg.addEventListener('close', resolve);\n            dialogHelper.open(dlg);\n        });\n    };\n\n    return RefreshDialog;\n});\n"]}