{"version":3,"sources":["components/imagedownloader/imagedownloader.js"],"names":["define","loading","appHost","dialogHelper","connectionManager","imageLoader","browser","layoutManager","scrollHelper","globalize","require","currentItemId","currentItemType","currentResolve","currentReject","selectedProvider","enableFocusTransform","slow","edge","hasChanges","browsableImagePageSize","browsableImageStartIndex","browsableImageType","getBaseRemoteOptions","options","itemId","reloadBrowsableImages","page","apiClient","show","type","startIndex","limit","IncludeAllLanguages","querySelector","checked","provider","ProviderName","getAvailableRemoteImages","then","result","renderRemoteImages","imagesResult","imageType","innerHTML","getPagingHtml","totalRecordCount","html","recordsEnd","Math","min","translate","TotalRecordCount","i","length","Images","getRemoteImageHtml","availableImagesList","lazyChildren","btnNextPage","btnPreviousPage","addEventListener","value","providersHtml","Providers","map","p","selectImageProvider","hide","parentWithClass","elem","className","classList","contains","parentNode","downloadRemoteImage","url","Type","ImageUrl","dlg","close","getDisplayUrl","getUrl","imageUrl","image","tagName","tv","enableFooterButtons","cssClass","shape","Url","supports","Width","Height","Language","CommunityRating","RatingType","toFixed","VoteCount","showEditor","serverId","itemType","template","getApiClient","dialogOptions","removeOnClose","size","createDialog","translateDocument","centerFocus","on","onDialogClosed","open","editorContent","initEditor","this","e","btnDownloadRemoteImage","target","card","getAttribute","btnImageCard","off","Promise","resolve","reject"],"mappings":"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","file":"imagedownloader.js","sourcesContent":["define(['loading', 'apphost', 'dialogHelper', 'connectionManager', 'imageLoader', 'browser', 'layoutManager', 'scrollHelper', 'globalize', 'require', 'emby-checkbox', 'paper-icon-button-light', 'emby-button', 'formDialogStyle', 'cardStyle'], function (loading, appHost, dialogHelper, connectionManager, imageLoader, browser, layoutManager, scrollHelper, globalize, require) {\n    'use strict';\n\n    var enableFocusTransform = !browser.slow && !browser.edge;\n\n    var currentItemId;\n    var currentItemType;\n    var currentResolve;\n    var currentReject;\n    var hasChanges = false;\n\n    // These images can be large and we're seeing memory problems in safari\n    var browsableImagePageSize = browser.slow ? 6 : 30;\n\n    var browsableImageStartIndex = 0;\n    var browsableImageType = 'Primary';\n    var selectedProvider;\n\n    function getBaseRemoteOptions() {\n\n        var options = {};\n\n        options.itemId = currentItemId;\n\n        return options;\n    }\n\n    function reloadBrowsableImages(page, apiClient) {\n\n        loading.show();\n\n        var options = getBaseRemoteOptions();\n\n        options.type = browsableImageType;\n        options.startIndex = browsableImageStartIndex;\n        options.limit = browsableImagePageSize;\n        options.IncludeAllLanguages = page.querySelector('#chkAllLanguages').checked;\n\n        var provider = selectedProvider || '';\n\n        if (provider) {\n            options.ProviderName = provider;\n        }\n\n        apiClient.getAvailableRemoteImages(options).then(function (result) {\n\n            renderRemoteImages(page, apiClient, result, browsableImageType, options.startIndex, options.limit);\n\n            page.querySelector('#selectBrowsableImageType').value = browsableImageType;\n\n            var providersHtml = result.Providers.map(function (p) {\n                return '<option value=\"' + p + '\">' + p + '</option>';\n            });\n\n            var selectImageProvider = page.querySelector('#selectImageProvider');\n            selectImageProvider.innerHTML = '<option value=\"\">' + globalize.translate('All') + '</option>' + providersHtml;\n            selectImageProvider.value = provider;\n\n            loading.hide();\n        });\n\n    }\n\n    function renderRemoteImages(page, apiClient, imagesResult, imageType, startIndex, limit) {\n\n        page.querySelector('.availableImagesPaging').innerHTML = getPagingHtml(startIndex, limit, imagesResult.TotalRecordCount);\n\n        var html = '';\n\n        for (var i = 0, length = imagesResult.Images.length; i < length; i++) {\n\n            html += getRemoteImageHtml(imagesResult.Images[i], imageType, apiClient);\n        }\n\n        var availableImagesList = page.querySelector('.availableImagesList');\n        availableImagesList.innerHTML = html;\n        imageLoader.lazyChildren(availableImagesList);\n\n        var btnNextPage = page.querySelector('.btnNextPage');\n        var btnPreviousPage = page.querySelector('.btnPreviousPage');\n\n        if (btnNextPage) {\n            btnNextPage.addEventListener('click', function () {\n                browsableImageStartIndex += browsableImagePageSize;\n                reloadBrowsableImages(page, apiClient);\n            });\n        }\n\n        if (btnPreviousPage) {\n            btnPreviousPage.addEventListener('click', function () {\n                browsableImageStartIndex -= browsableImagePageSize;\n                reloadBrowsableImages(page, apiClient);\n            });\n        }\n\n    }\n\n    function getPagingHtml(startIndex, limit, totalRecordCount) {\n\n        var html = '';\n\n        var recordsEnd = Math.min(startIndex + limit, totalRecordCount);\n\n        // 20 is the minimum page size\n        var showControls = totalRecordCount > limit;\n\n        html += '<div class=\"listPaging\">';\n\n        html += '<span style=\"margin-right: 10px;\">';\n\n        var startAtDisplay = totalRecordCount ? startIndex + 1 : 0;\n        html += startAtDisplay + '-' + recordsEnd + ' of ' + totalRecordCount;\n\n        html += '</span>';\n\n        if (showControls) {\n            html += '<div data-role=\"controlgroup\" data-type=\"horizontal\" style=\"display:inline-block;\">';\n\n            html += '<button is=\"paper-icon-button-light\" title=\"' + globalize.translate('Previous') + '\" class=\"btnPreviousPage autoSize\" ' + (startIndex ? '' : 'disabled') + '><i class=\"material-icons arrow_back\"></i></button>';\n            html += '<button is=\"paper-icon-button-light\" title=\"' + globalize.translate('Next') + '\" class=\"btnNextPage autoSize\" ' + (startIndex + limit >= totalRecordCount ? 'disabled' : '') + '><i class=\"material-icons arrow_forward\"></i></button>';\n            html += '</div>';\n        }\n\n        html += '</div>';\n\n        return html;\n    }\n\n    function parentWithClass(elem, className) {\n\n        while (!elem.classList || !elem.classList.contains(className)) {\n            elem = elem.parentNode;\n\n            if (!elem) {\n                return null;\n            }\n        }\n\n        return elem;\n    }\n\n    function downloadRemoteImage(page, apiClient, url, type, provider) {\n\n        var options = getBaseRemoteOptions();\n\n        options.Type = type;\n        options.ImageUrl = url;\n        options.ProviderName = provider;\n\n        loading.show();\n\n        apiClient.downloadRemoteImage(options).then(function () {\n\n            hasChanges = true;\n            var dlg = parentWithClass(page, 'dialog');\n            dialogHelper.close(dlg);\n        });\n    }\n\n    function getDisplayUrl(url, apiClient) {\n        return apiClient.getUrl(\"Images/Remote\", { imageUrl: url });\n    }\n\n    function getRemoteImageHtml(image, imageType, apiClient) {\n\n        var tagName = layoutManager.tv ? 'button' : 'div';\n        var enableFooterButtons = !layoutManager.tv;\n\n        // TODO move card creation code to Card component\n\n        var html = '';\n\n        var cssClass = \"card scalableCard imageEditorCard\";\n        var cardBoxCssClass = 'cardBox visualCardBox';\n\n        var shape = 'backdrop';\n        if (imageType === \"Backdrop\" || imageType === \"Art\" || imageType === \"Thumb\" || imageType === \"Logo\") {\n            shape = 'backdrop';\n        } else if (imageType === \"Banner\") {\n            shape = 'banner';\n        } else if (imageType === \"Disc\") {\n            shape = 'square';\n        } else {\n\n            if (currentItemType === \"Episode\") {\n                shape = 'backdrop';\n            } else if (currentItemType === \"MusicAlbum\" || currentItemType === \"MusicArtist\") {\n                shape = 'square';\n            } else {\n                shape = 'portrait';\n            }\n        }\n\n        cssClass += ' ' + shape + 'Card ' + shape + 'Card-scalable';\n        if (tagName === 'button') {\n            cssClass += ' btnImageCard';\n\n            if (layoutManager.tv) {\n                cssClass += ' show-focus';\n\n                if (enableFocusTransform) {\n                    cssClass += ' show-animation';\n                }\n            }\n\n            html += '<button type=\"button\" class=\"' + cssClass + '\"';\n        } else {\n            html += '<div class=\"' + cssClass + '\"';\n        }\n\n        html += ' data-imageprovider=\"' + image.ProviderName + '\" data-imageurl=\"' + image.Url + '\" data-imagetype=\"' + image.Type + '\"';\n\n        html += '>';\n\n        html += '<div class=\"' + cardBoxCssClass + '\">';\n        html += '<div class=\"cardScalable visualCardBox-cardScalable\" style=\"background-color:transparent;\">';\n        html += '<div class=\"cardPadder-' + shape + '\"></div>';\n        html += '<div class=\"cardContent\">';\n\n        if (layoutManager.tv || !appHost.supports('externallinks')) {\n            html += '<div class=\"cardImageContainer lazy\" data-src=\"' + getDisplayUrl(image.Url, apiClient) + '\" style=\"background-position:center bottom;\"></div>';\n        } else {\n            html += '<a is=\"emby-linkbutton\" target=\"_blank\" href=\"' + getDisplayUrl(image.Url, apiClient) + '\" class=\"button-link cardImageContainer lazy\" data-src=\"' + getDisplayUrl(image.Url, apiClient) + '\" style=\"background-position:center bottom;\"></a>';\n        }\n\n        html += '</div>';\n        html += '</div>';\n\n        // begin footer\n        html += '<div class=\"cardFooter visualCardBox-cardFooter\">';\n\n        html += '<div class=\"cardText cardTextCentered\">' + image.ProviderName + '</div>';\n\n        if (image.Width || image.Height || image.Language) {\n\n            html += '<div class=\"cardText cardText-secondary cardTextCentered\">';\n\n            if (image.Width && image.Height) {\n                html += image.Width + ' x ' + image.Height;\n\n                if (image.Language) {\n\n                    html += ' • ' + image.Language;\n                }\n            } else {\n                if (image.Language) {\n\n                    html += image.Language;\n                }\n            }\n\n            html += '</div>';\n        }\n\n        if (image.CommunityRating != null) {\n\n            html += '<div class=\"cardText cardText-secondary cardTextCentered\">';\n\n            if (image.RatingType === \"Likes\") {\n                html += image.CommunityRating + (image.CommunityRating === 1 ? \" like\" : \" likes\");\n            } else {\n\n                if (image.CommunityRating) {\n                    html += image.CommunityRating.toFixed(1);\n\n                    if (image.VoteCount) {\n                        html += ' • ' + image.VoteCount + (image.VoteCount === 1 ? \" vote\" : \" votes\");\n                    }\n                } else {\n                    html += \"Unrated\";\n                }\n            }\n\n            html += '</div>';\n        }\n\n        if (enableFooterButtons) {\n            html += '<div class=\"cardText cardTextCentered\">';\n\n            html += '<button is=\"paper-icon-button-light\" class=\"btnDownloadRemoteImage autoSize\" raised\" title=\"' + globalize.translate('Download') + '\"><i class=\"material-icons cloud_download\"></i></button>';\n            html += '</div>';\n        }\n\n        html += '</div>';\n        // end footer\n\n        html += '</div>';\n        //html += '</div>';\n\n        html += '</' + tagName + '>';\n\n        return html;\n    }\n\n    function initEditor(page, apiClient) {\n\n        page.querySelector('#selectBrowsableImageType').addEventListener('change', function () {\n            browsableImageType = this.value;\n            browsableImageStartIndex = 0;\n            selectedProvider = null;\n\n            reloadBrowsableImages(page, apiClient);\n        });\n\n        page.querySelector('#selectImageProvider').addEventListener('change', function () {\n\n            browsableImageStartIndex = 0;\n            selectedProvider = this.value;\n\n            reloadBrowsableImages(page, apiClient);\n        });\n\n        page.querySelector('#chkAllLanguages').addEventListener('change', function () {\n\n            browsableImageStartIndex = 0;\n\n            reloadBrowsableImages(page, apiClient);\n        });\n\n        page.addEventListener('click', function (e) {\n\n            var btnDownloadRemoteImage = parentWithClass(e.target, 'btnDownloadRemoteImage');\n            if (btnDownloadRemoteImage) {\n                var card = parentWithClass(btnDownloadRemoteImage, 'card');\n                downloadRemoteImage(page, apiClient, card.getAttribute('data-imageurl'), card.getAttribute('data-imagetype'), card.getAttribute('data-imageprovider'));\n                return;\n            }\n\n            var btnImageCard = parentWithClass(e.target, 'btnImageCard');\n            if (btnImageCard) {\n                downloadRemoteImage(page, apiClient, btnImageCard.getAttribute('data-imageurl'), btnImageCard.getAttribute('data-imagetype'), btnImageCard.getAttribute('data-imageprovider'));\n            }\n        });\n    }\n\n    function showEditor(itemId, serverId, itemType) {\n\n        loading.show();\n\n        require(['text!./imagedownloader.template.html'], function (template) {\n\n            var apiClient = connectionManager.getApiClient(serverId);\n\n            currentItemId = itemId;\n            currentItemType = itemType;\n\n            var dialogOptions = {\n                removeOnClose: true\n            };\n\n            if (layoutManager.tv) {\n                dialogOptions.size = 'fullscreen';\n            } else {\n                dialogOptions.size = 'fullscreen-border';\n            }\n\n            var dlg = dialogHelper.createDialog(dialogOptions);\n\n            dlg.innerHTML = globalize.translateDocument(template, 'core');\n\n            if (layoutManager.tv) {\n                scrollHelper.centerFocus.on(dlg, false);\n            }\n\n            // Has to be assigned a z-index after the call to .open()\n            dlg.addEventListener('close', onDialogClosed);\n\n            dialogHelper.open(dlg);\n\n            var editorContent = dlg.querySelector('.formDialogContent');\n            initEditor(editorContent, apiClient);\n\n            dlg.querySelector('.btnCancel').addEventListener('click', function () {\n\n                dialogHelper.close(dlg);\n            });\n\n            reloadBrowsableImages(editorContent, apiClient);\n        });\n    }\n\n    function onDialogClosed() {\n\n        var dlg = this;\n\n        if (layoutManager.tv) {\n            scrollHelper.centerFocus.off(dlg, false);\n        }\n\n        loading.hide();\n        if (hasChanges) {\n            currentResolve();\n        } else {\n            currentReject();\n        }\n    }\n\n    return {\n        show: function (itemId, serverId, itemType, imageType) {\n\n            return new Promise(function (resolve, reject) {\n\n                currentResolve = resolve;\n                currentReject = reject;\n                hasChanges = false;\n                browsableImageStartIndex = 0;\n                browsableImageType = imageType || 'Primary';\n                selectedProvider = null;\n\n                showEditor(itemId, serverId, itemType);\n            });\n        }\n    };\n});\n"]}