{"version":3,"sources":["components/userdatabuttons/emby-ratingbutton.js"],"names":["define","connectionManager","serverNotifications","events","globalize","EmbyButtonPrototype","onClick","e","button","this","id","getAttribute","serverId","apiClient","getApiClient","likes","showPicker","itemId","isFavorite","updateFavoriteStatus","getCurrentUserId","then","userData","setState","Likes","IsFavorite","onUserDataChanged","ItemId","updateAttribute","icon","querySelector","innerHTML","classList","add","remove","setAttribute","clearEvents","removeEventListener","removeNotificationEvent","instance","name","handler","off","bindEvents","addEventListener","addNotificationEvent","localHandler","bind","on","EmbyRatingButtonPrototype","Object","create","createdCallback","call","attachedCallback","setTitle","title","translate","text","detachedCallback","setItem","item","Id","ServerId","UserData","removeAttribute","document","registerElement","prototype","extends"],"mappings":"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","file":"emby-ratingbutton.js","sourcesContent":["define(['connectionManager', 'serverNotifications', 'events', 'globalize', 'emby-button'], function (connectionManager, serverNotifications, events, globalize, EmbyButtonPrototype) {\n    'use strict';\n\n    function addNotificationEvent(instance, name, handler) {\n\n        var localHandler = handler.bind(instance);\n        events.on(serverNotifications, name, localHandler);\n        instance[name] = localHandler;\n    }\n\n    function removeNotificationEvent(instance, name) {\n\n        var handler = instance[name];\n        if (handler) {\n            events.off(serverNotifications, name, handler);\n            instance[name] = null;\n        }\n    }\n\n    function showPicker(button, apiClient, itemId, likes, isFavorite) {\n\n        return apiClient.updateFavoriteStatus(apiClient.getCurrentUserId(), itemId, !isFavorite);\n    }\n\n    function onClick(e) {\n\n        var button = this;\n        var id = button.getAttribute('data-id');\n        var serverId = button.getAttribute('data-serverid');\n        var apiClient = connectionManager.getApiClient(serverId);\n\n        var likes = this.getAttribute('data-likes');\n        var isFavorite = this.getAttribute('data-isfavorite') === 'true';\n        if (likes === 'true') {\n            likes = true;\n        } else if (likes === 'false') {\n            likes = false;\n        } else {\n            likes = null;\n        }\n\n        showPicker(button, apiClient, id, likes, isFavorite).then(function (userData) {\n\n            setState(button, userData.Likes, userData.IsFavorite);\n        });\n    }\n\n    function onUserDataChanged(e, apiClient, userData) {\n\n        var button = this;\n\n        if (userData.ItemId === button.getAttribute('data-id')) {\n\n            setState(button, userData.Likes, userData.IsFavorite);\n        }\n    }\n\n    function setState(button, likes, isFavorite, updateAttribute) {\n\n        var icon = button.querySelector('i');\n\n        if (isFavorite) {\n\n            if (icon) {\n                icon.innerHTML = 'favorite';\n                icon.classList.add('ratingbutton-icon-withrating');\n            }\n\n            button.classList.add('ratingbutton-withrating');\n\n        } else if (likes) {\n\n            if (icon) {\n                icon.innerHTML = 'favorite';\n                icon.classList.remove('ratingbutton-icon-withrating');\n                //icon.innerHTML = 'thumb_up';\n            }\n            button.classList.remove('ratingbutton-withrating');\n\n        } else if (likes === false) {\n\n            if (icon) {\n                icon.innerHTML = 'favorite';\n                icon.classList.remove('ratingbutton-icon-withrating');\n                //icon.innerHTML = 'thumb_down';\n            }\n            button.classList.remove('ratingbutton-withrating');\n\n        } else {\n\n            if (icon) {\n                icon.innerHTML = 'favorite';\n                icon.classList.remove('ratingbutton-icon-withrating');\n                //icon.innerHTML = 'thumbs_up_down';\n            }\n            button.classList.remove('ratingbutton-withrating');\n        }\n\n        if (updateAttribute !== false) {\n            button.setAttribute('data-isfavorite', isFavorite);\n\n            button.setAttribute('data-likes', (likes === null ? '' : likes));\n        }\n    }\n\n    function setTitle(button) {\n        button.title = globalize.translate('Favorite');\n\n        var text = button.querySelector('.button-text');\n        if (text) {\n            text.innerHTML = button.title;\n        }\n    }\n\n    function clearEvents(button) {\n\n        button.removeEventListener('click', onClick);\n        removeNotificationEvent(button, 'UserDataChanged');\n    }\n\n    function bindEvents(button) {\n\n        clearEvents(button);\n\n        button.addEventListener('click', onClick);\n        addNotificationEvent(button, 'UserDataChanged', onUserDataChanged);\n    }\n\n    var EmbyRatingButtonPrototype = Object.create(EmbyButtonPrototype);\n\n    EmbyRatingButtonPrototype.createdCallback = function () {\n\n        // base method\n        if (EmbyButtonPrototype.createdCallback) {\n            EmbyButtonPrototype.createdCallback.call(this);\n        }\n    };\n\n    EmbyRatingButtonPrototype.attachedCallback = function () {\n\n        // base method\n        if (EmbyButtonPrototype.attachedCallback) {\n            EmbyButtonPrototype.attachedCallback.call(this);\n        }\n\n        var itemId = this.getAttribute('data-id');\n        var serverId = this.getAttribute('data-serverid');\n        if (itemId && serverId) {\n\n            var likes = this.getAttribute('data-likes');\n            var isFavorite = this.getAttribute('data-isfavorite') === 'true';\n            if (likes === 'true') {\n                likes = true;\n            } else if (likes === 'false') {\n                likes = false;\n            } else {\n                likes = null;\n            }\n\n            setState(this, likes, isFavorite, false);\n            bindEvents(this);\n        }\n\n        setTitle(this);\n    };\n\n    EmbyRatingButtonPrototype.detachedCallback = function () {\n\n        // base method\n        if (EmbyButtonPrototype.detachedCallback) {\n            EmbyButtonPrototype.detachedCallback.call(this);\n        }\n\n        clearEvents(this);\n    };\n\n    EmbyRatingButtonPrototype.setItem = function (item) {\n\n        if (item) {\n\n            this.setAttribute('data-id', item.Id);\n            this.setAttribute('data-serverid', item.ServerId);\n\n            var userData = item.UserData || {};\n            setState(this, userData.Likes, userData.IsFavorite);\n            bindEvents(this);\n\n        } else {\n\n            this.removeAttribute('data-id');\n            this.removeAttribute('data-serverid');\n            this.removeAttribute('data-likes');\n            this.removeAttribute('data-isfavorite');\n            clearEvents(this);\n        }\n    };\n\n    document.registerElement('emby-ratingbutton', {\n        prototype: EmbyRatingButtonPrototype,\n        extends: 'button'\n    });\n});\n"]}