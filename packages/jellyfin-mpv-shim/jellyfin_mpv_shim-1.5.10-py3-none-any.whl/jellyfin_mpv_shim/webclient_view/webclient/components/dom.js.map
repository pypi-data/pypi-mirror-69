{"version":3,"sources":["components/dom.js"],"names":["define","containsAnyClass","classList","classNames","i","length","contains","windowSize","windowSizeEventsBound","supportsCaptureOption","opts","Object","defineProperty","get","window","addEventListener","e","console","debug","addEventListenerWithOptions","target","type","handler","options","optionsOrCapture","capture","clearWindowSize","_animationEvent","_transitionEvent","standardWidths","whichAnimationEvent","t","el","document","createElement","animations","animation","OAnimation","MozAnimation","WebkitAnimation","undefined","style","parentWithAttribute","elem","name","value","getAttribute","parentNode","parentWithClass","Array","isArray","parentWithTag","tagNames","indexOf","tagName","removeEventListener","removeEventListenerWithOptions","getWindowSize","innerHeight","innerWidth","passive","getScreenWidth","width","height","sort","a","b","Math","abs","whichTransitionEvent","transitions","transition","OTransition","MozTransition","WebkitTransition","whichAnimationCancelEvent","replace"],"mappings":"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","file":"dom.js","sourcesContent":["define([], function () {\n    'use strict';\n\n    function parentWithAttribute(elem, name, value) {\n\n        while ((value ? elem.getAttribute(name) !== value : !elem.getAttribute(name))) {\n            elem = elem.parentNode;\n\n            if (!elem || !elem.getAttribute) {\n                return null;\n            }\n        }\n\n        return elem;\n    }\n\n    function parentWithTag(elem, tagNames) {\n\n        // accept both string and array passed in\n        if (!Array.isArray(tagNames)) {\n            tagNames = [tagNames];\n        }\n\n        while (tagNames.indexOf(elem.tagName || '') === -1) {\n            elem = elem.parentNode;\n\n            if (!elem) {\n                return null;\n            }\n        }\n\n        return elem;\n    }\n\n    function containsAnyClass(classList, classNames) {\n\n        for (var i = 0, length = classNames.length; i < length; i++) {\n            if (classList.contains(classNames[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function parentWithClass(elem, classNames) {\n\n        // accept both string and array passed in\n        if (!Array.isArray(classNames)) {\n            classNames = [classNames];\n        }\n\n        while (!elem.classList || !containsAnyClass(elem.classList, classNames)) {\n            elem = elem.parentNode;\n\n            if (!elem) {\n                return null;\n            }\n        }\n\n        return elem;\n    }\n\n    var supportsCaptureOption = false;\n    try {\n        var opts = Object.defineProperty({}, 'capture', {\n            // eslint-disable-next-line getter-return\n            get: function () {\n                supportsCaptureOption = true;\n            }\n        });\n        window.addEventListener(\"test\", null, opts);\n    } catch (e) {\n        console.debug('error checking capture support');\n    }\n\n    function addEventListenerWithOptions(target, type, handler, options) {\n        var optionsOrCapture = options || {};\n        if (!supportsCaptureOption) {\n            optionsOrCapture = optionsOrCapture.capture;\n        }\n        target.addEventListener(type, handler, optionsOrCapture);\n    }\n\n    function removeEventListenerWithOptions(target, type, handler, options) {\n        var optionsOrCapture = options || {};\n        if (!supportsCaptureOption) {\n            optionsOrCapture = optionsOrCapture.capture;\n        }\n        target.removeEventListener(type, handler, optionsOrCapture);\n    }\n\n    var windowSize;\n    var windowSizeEventsBound;\n    function clearWindowSize() {\n        windowSize = null;\n    }\n\n    function getWindowSize() {\n        if (!windowSize) {\n            windowSize = {\n                innerHeight: window.innerHeight,\n                innerWidth: window.innerWidth\n            };\n\n            if (!windowSizeEventsBound) {\n                windowSizeEventsBound = true;\n                addEventListenerWithOptions(window, \"orientationchange\", clearWindowSize, { passive: true });\n                addEventListenerWithOptions(window, 'resize', clearWindowSize, { passive: true });\n            }\n        }\n\n        return windowSize;\n    }\n\n    var standardWidths = [480, 720, 1280, 1440, 1920, 2560, 3840, 5120, 7680];\n    function getScreenWidth() {\n        var width = window.innerWidth;\n        var height = window.innerHeight;\n\n        if (height > width) {\n            width = height * (16.0 / 9.0);\n        }\n\n        var closest = standardWidths.sort(function (a, b) {\n            return Math.abs(width - a) - Math.abs(width - b);\n        })[0];\n\n        return closest;\n    }\n\n    var _animationEvent;\n    function whichAnimationEvent() {\n\n        if (_animationEvent) {\n            return _animationEvent;\n        }\n\n        var t;\n        var el = document.createElement(\"div\");\n        var animations = {\n            \"animation\": \"animationend\",\n            \"OAnimation\": \"oAnimationEnd\",\n            \"MozAnimation\": \"animationend\",\n            \"WebkitAnimation\": \"webkitAnimationEnd\"\n        };\n        for (t in animations) {\n            if (el.style[t] !== undefined) {\n                _animationEvent = animations[t];\n                return animations[t];\n            }\n        }\n\n        _animationEvent = 'animationend';\n        return _animationEvent;\n    }\n\n    function whichAnimationCancelEvent() {\n\n        return whichAnimationEvent().replace('animationend', 'animationcancel').replace('AnimationEnd', 'AnimationCancel');\n    }\n\n    var _transitionEvent;\n    function whichTransitionEvent() {\n        if (_transitionEvent) {\n            return _transitionEvent;\n        }\n\n        var t;\n        var el = document.createElement(\"div\");\n        var transitions = {\n            \"transition\": \"transitionend\",\n            \"OTransition\": \"oTransitionEnd\",\n            \"MozTransition\": \"transitionend\",\n            \"WebkitTransition\": \"webkitTransitionEnd\"\n        };\n        for (t in transitions) {\n            if (el.style[t] !== undefined) {\n                _transitionEvent = transitions[t];\n                return transitions[t];\n            }\n        }\n\n        _transitionEvent = 'transitionend';\n        return _transitionEvent;\n    }\n\n    return {\n        parentWithAttribute: parentWithAttribute,\n        parentWithClass: parentWithClass,\n        parentWithTag: parentWithTag,\n        addEventListener: addEventListenerWithOptions,\n        removeEventListener: removeEventListenerWithOptions,\n        getWindowSize: getWindowSize,\n        getScreenWidth: getScreenWidth,\n        whichTransitionEvent: whichTransitionEvent,\n        whichAnimationEvent: whichAnimationEvent,\n        whichAnimationCancelEvent: whichAnimationCancelEvent\n    };\n});\n"]}