{"version":3,"sources":["components/channelmapper/channelmapper.js"],"names":["define","dialogHelper","loading","connectionManager","globalize","actionsheet","options","parentWithClass","elem","className","classList","contains","parentNode","onChannelsElementClick","e","btnMap","target","channelId","getAttribute","providerChannelId","menuItems","currentMappingOptions","ProviderChannels","map","m","name","Name","id","Id","selected","toLowerCase","sort","a","b","localeCompare","show","positionTo","items","then","newChannelId","mapChannel","button","providerId","getApiClient","serverId","ajax","type","url","ApiClient","getUrl","data","tunerChannelId","dataType","mapping","listItem","setAttribute","ProviderChannelId","querySelector","innerHTML","getMappingSecondaryName","ProviderName","hide","providerName","ProviderChannelName","initEditor","dlg","getChannelMappingOptions","apiClient","getJSON","result","channelsElement","TunerChannels","channel","getTunerChannelHtml","html","join","addEventListener","this","dialogOptions","removeOnClose","createDialog","add","translate","getEditorHtml","close","Promise","resolve","reject","open"],"mappings":"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","file":"channelmapper.js","sourcesContent":["define([\"dialogHelper\", \"loading\", \"connectionManager\", \"globalize\", \"actionsheet\", \"emby-input\", \"paper-icon-button-light\", \"emby-button\", \"listViewStyle\", \"material-icons\", \"formDialogStyle\"], function (dialogHelper, loading, connectionManager, globalize, actionsheet) {\n    \"use strict\";\n\n    return function (options) {\n        function parentWithClass(elem, className) {\n            while (!elem.classList || !elem.classList.contains(className)) {\n                elem = elem.parentNode;\n                if (!elem) {\n                    return null;\n                }\n            }\n\n            return elem;\n        }\n\n        function mapChannel(button, channelId, providerChannelId) {\n            loading.show();\n            var providerId = options.providerId;\n            connectionManager.getApiClient(options.serverId).ajax({\n                type: \"POST\",\n                url: ApiClient.getUrl(\"LiveTv/ChannelMappings\"),\n                data: {\n                    providerId: providerId,\n                    tunerChannelId: channelId,\n                    providerChannelId: providerChannelId\n                },\n                dataType: \"json\"\n            }).then(function (mapping) {\n                var listItem = parentWithClass(button, \"listItem\");\n                button.setAttribute(\"data-providerid\", mapping.ProviderChannelId);\n                listItem.querySelector(\".secondary\").innerHTML = getMappingSecondaryName(mapping, currentMappingOptions.ProviderName);\n                loading.hide();\n            });\n        }\n\n        function onChannelsElementClick(e) {\n            var btnMap = parentWithClass(e.target, \"btnMap\");\n\n            if (btnMap) {\n                var channelId = btnMap.getAttribute(\"data-id\");\n                var providerChannelId = btnMap.getAttribute(\"data-providerid\");\n                var menuItems = currentMappingOptions.ProviderChannels.map(function (m) {\n                    return {\n                        name: m.Name,\n                        id: m.Id,\n                        selected: m.Id.toLowerCase() === providerChannelId.toLowerCase()\n                    };\n                }).sort(function (a, b) {\n                    return a.name.localeCompare(b.name);\n                });\n                actionsheet.show({\n                    positionTo: btnMap,\n                    items: menuItems\n                }).then(function (newChannelId) {\n                    mapChannel(btnMap, channelId, newChannelId);\n                });\n            }\n        }\n\n        function getChannelMappingOptions(serverId, providerId) {\n            var apiClient = connectionManager.getApiClient(serverId);\n            return apiClient.getJSON(apiClient.getUrl(\"LiveTv/ChannelMappingOptions\", {\n                providerId: providerId\n            }));\n        }\n\n        function getMappingSecondaryName(mapping, providerName) {\n            return (mapping.ProviderChannelName || \"\") + \" - \" + providerName;\n        }\n\n        function getTunerChannelHtml(channel, providerName) {\n            var html = \"\";\n            html += '<div class=\"listItem\">';\n            html += '<i class=\"material-icons listItemIcon\">dvr</i>';\n            html += '<div class=\"listItemBody two-line\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += channel.Name;\n            html += \"</h3>\";\n            html += '<div class=\"secondary listItemBodyText\">';\n\n            if (channel.ProviderChannelName) {\n                html += getMappingSecondaryName(channel, providerName);\n            }\n\n            html += \"</div>\";\n            html += \"</div>\";\n            html += '<button class=\"btnMap autoSize\" is=\"paper-icon-button-light\" type=\"button\" data-id=\"' + channel.Id + '\" data-providerid=\"' + channel.ProviderChannelId + '\"><i class=\"material-icons mode_edit\"></i></button>';\n            return html += \"</div>\";\n        }\n\n        function getEditorHtml() {\n            var html = \"\";\n            html += '<div class=\"formDialogContent\">';\n            html += '<div class=\"dialogContentInner dialog-content-centered\">';\n            html += '<form style=\"margin:auto;\">';\n            html += \"<h1>\" + globalize.translate(\"HeaderChannels\") + \"</h1>\";\n            html += '<div class=\"channels paperList\">';\n            html += \"</div>\";\n            html += \"</form>\";\n            html += \"</div>\";\n            return html += \"</div>\";\n        }\n\n        function initEditor(dlg, options) {\n            getChannelMappingOptions(options.serverId, options.providerId).then(function (result) {\n                currentMappingOptions = result;\n                var channelsElement = dlg.querySelector(\".channels\");\n                channelsElement.innerHTML = result.TunerChannels.map(function (channel) {\n                    return getTunerChannelHtml(channel, result.ProviderName);\n                }).join(\"\");\n                channelsElement.addEventListener(\"click\", onChannelsElementClick);\n            });\n        }\n\n        var currentMappingOptions;\n        var self = this;\n\n        self.show = function () {\n            var dialogOptions = {\n                removeOnClose: true\n            };\n            dialogOptions.size = \"small\";\n            var dlg = dialogHelper.createDialog(dialogOptions);\n            dlg.classList.add(\"formDialog\");\n            dlg.classList.add(\"ui-body-a\");\n            dlg.classList.add(\"background-theme-a\");\n            var html = \"\";\n            var title = globalize.translate(\"MapChannels\");\n            html += '<div class=\"formDialogHeader\">';\n            html += '<button is=\"paper-icon-button-light\" class=\"btnCancel autoSize\" tabindex=\"-1\"><i class=\"material-icons arrow_back\"></i></button>';\n            html += '<h3 class=\"formDialogHeaderTitle\">';\n            html += title;\n            html += \"</h3>\";\n            html += \"</div>\";\n            html += getEditorHtml();\n            dlg.innerHTML = html;\n            initEditor(dlg, options);\n            dlg.querySelector(\".btnCancel\").addEventListener(\"click\", function () {\n                dialogHelper.close(dlg);\n            });\n            return new Promise(function (resolve, reject) {\n                dlg.addEventListener(\"close\", resolve);\n                dialogHelper.open(dlg);\n            });\n        };\n    };\n});\n"]}