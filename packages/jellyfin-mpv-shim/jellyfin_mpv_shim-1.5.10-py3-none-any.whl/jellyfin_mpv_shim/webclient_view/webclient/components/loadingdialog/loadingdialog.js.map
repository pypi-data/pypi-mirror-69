{"version":3,"sources":["components/loadingdialog/loadingdialog.js"],"names":["define","loading","events","dialogHelper","dom","layoutManager","scrollHelper","globalize","require","LoadingDialog","options","this","prototype","show","instance","Promise","resolve","reject","template","showDialog","dialogOptions","removeOnClose","scrollY","enableTvLayout","tv","size","dlg","createDialog","classList","add","innerHTML","translateHtml","formDialogContent","querySelector","style","centerFocus","on","marginTop","title","text","open","then","off","hide","setTitle","setText","close","destroy"],"mappings":"AAAA,aAAAA,OAAO,CAAC,UAAW,SAAU,eAAgB,MAAO,gBAAiB,eAAgB,YAAa,UAAW,iBAAkB,cAAe,0BAA2B,aAAc,kBAAmB,eAAe,SAAUC,QAASC,OAAQC,aAAcC,IAAKC,cAAeC,aAAcC,UAAWC,SAwD3S,SAASC,cAAcC,SACnBC,KAAKD,QAAUA,QAiCnB,OA9BAD,cAAcG,UAAUC,KAAO,WAC3B,IAAIC,SAAWH,KAGf,OAFAV,QAAQY,OAED,IAAIE,SAAQ,SAAUC,QAASC,QAClCT,QAAQ,CAAC,0CAA0C,SAAUU,WA9DrE,SAASC,WAAWL,SAAUJ,QAASQ,UACnC,IAAIE,cAAgB,CAChBC,eAAe,EACfC,SAAS,GAGTC,eAAiBlB,cAAcmB,GAC/BD,iBACAH,cAAcK,KAAO,cAGzB,IAAIC,IAAMvB,aAAawB,aAAaP,eAIpCM,IAAIE,UAAUC,IAAI,cAElBH,IAAII,UAAYvB,UAAUwB,cAAcb,SAAU,QAElDQ,IAAIE,UAAUC,IAAI,sBAClBH,IAAIE,UAAUC,IAAI,wBAElB,IAAIG,kBAAoBN,IAAIO,cAAc,sBAsB1C,OArBAD,kBAAkBE,MAAM,aAAe,UACvCF,kBAAkBE,MAAM,aAAe,MACvCF,kBAAkBE,MAAM,cAAgB,MAEpCX,gBACAjB,aAAa6B,YAAYC,GAAGJ,mBAAmB,GAC/CN,IAAIO,cAAc,qBAAqBC,MAAMG,UAAY,OAEzDX,IAAIE,UAAUC,IAAI,4BAOtBH,IAAIO,cAAc,0BAA0BH,UAAYpB,QAAQ4B,MAEhEZ,IAAIO,cAAc,SAASH,UAAYpB,QAAQ6B,KAE/CzB,SAASY,IAAMA,IAERvB,aAAaqC,KAAKd,KAAKe,MAAK,WAC3BlB,gBACAjB,aAAa6B,YAAYO,IAAIhB,IAAIO,cAAc,uBAAuB,GAG1EhC,QAAQ0C,UAcJxB,CAAWL,SAAUA,SAASJ,QAASQ,UACvCF,iBAKZP,cAAcG,UAAUgC,SAAW,SAAUN,SAG7C7B,cAAcG,UAAUiC,QAAU,SAAUN,QAG5C9B,cAAcG,UAAU+B,KAAO,WACvBhC,KAAKe,MACLvB,aAAa2C,MAAMnC,KAAKe,KACxBf,KAAKe,IAAM,OAInBjB,cAAcG,UAAUmC,QAAU,WAC9BpC,KAAKe,IAAM,KACXf,KAAKD,QAAU,MAGZD","file":"loadingdialog.js","sourcesContent":["define(['loading', 'events', 'dialogHelper', 'dom', 'layoutManager', 'scrollHelper', 'globalize', 'require', 'material-icons', 'emby-button', 'paper-icon-button-light', 'emby-input', 'formDialogStyle', 'flexStyles'], function (loading, events, dialogHelper, dom, layoutManager, scrollHelper, globalize, require) {\n    'use strict';\n\n    function showDialog(instance, options, template) {\n        var dialogOptions = {\n            removeOnClose: true,\n            scrollY: false\n        };\n\n        var enableTvLayout = layoutManager.tv;\n        if (enableTvLayout) {\n            dialogOptions.size = 'fullscreen';\n        }\n\n        var dlg = dialogHelper.createDialog(dialogOptions);\n\n        var configuredButtons = [];\n\n        dlg.classList.add('formDialog');\n\n        dlg.innerHTML = globalize.translateHtml(template, 'core');\n\n        dlg.classList.add('align-items-center');\n        dlg.classList.add('justify-items-center');\n\n        var formDialogContent = dlg.querySelector('.formDialogContent');\n        formDialogContent.style['flex-grow'] = 'initial';\n        formDialogContent.style['max-width'] = '50%';\n        formDialogContent.style['max-height'] = '60%';\n\n        if (enableTvLayout) {\n            scrollHelper.centerFocus.on(formDialogContent, false);\n            dlg.querySelector('.formDialogHeader').style.marginTop = '15%';\n        } else {\n            dlg.classList.add('dialog-fullscreen-lowres');\n        }\n\n        //dlg.querySelector('.btnCancel').addEventListener('click', function (e) {\n        //    dialogHelper.close(dlg);\n        //});\n\n        dlg.querySelector('.formDialogHeaderTitle').innerHTML = options.title;\n\n        dlg.querySelector('.text').innerHTML = options.text;\n\n        instance.dlg = dlg;\n\n        return dialogHelper.open(dlg).then(function () {\n            if (enableTvLayout) {\n                scrollHelper.centerFocus.off(dlg.querySelector('.formDialogContent'), false);\n            }\n\n            loading.hide();\n        });\n    }\n\n    function LoadingDialog(options) {\n        this.options = options;\n    }\n\n    LoadingDialog.prototype.show = function () {\n        var instance = this;\n        loading.show();\n\n        return new Promise(function (resolve, reject) {\n            require(['text!./../dialog/dialog.template.html'], function (template) {\n                showDialog(instance, instance.options, template);\n                resolve();\n            });\n        });\n    };\n\n    LoadingDialog.prototype.setTitle = function (title) {\n    };\n\n    LoadingDialog.prototype.setText = function (text) {\n    };\n\n    LoadingDialog.prototype.hide = function () {\n        if (this.dlg) {\n            dialogHelper.close(this.dlg);\n            this.dlg = null;\n        }\n    };\n\n    LoadingDialog.prototype.destroy = function () {\n        this.dlg = null;\n        this.options = null;\n    };\n\n    return LoadingDialog;\n});\n"]}