{"version":3,"sources":["components/multiselect/multiselect.js"],"names":["define","browser","appStorage","appHost","loading","connectionManager","globalize","appRouter","dom","currentSelectionCommandsPanel","selectedItems","selectedElements","hideSelections","selectionCommandsPanel","parentNode","removeChild","elems","document","querySelectorAll","i","length","parent","classList","remove","updateItemSelection","chkItemSelect","selected","id","parentWithAttribute","getAttribute","filter","push","itemSelectionCount","querySelector","innerHTML","onSelectionChange","e","this","checked","showSelection","item","isChecked","itemSelectionPanel","createElement","add","appendChild","cssClass","firefox","checkedAttribute","addEventListener","deleteItems","apiClient","itemIds","Promise","resolve","reject","msg","translate","title","require","confirm","then","promises","map","itemId","deleteItem","all","alertText","options","alert","showMenuForSelectedItems","currentApiClient","getCurrentUser","user","menuItems","name","icon","Policy","EnableContentDeletion","EnableContentDownloading","supports","Globalize","IsAdministrator","actionsheet","show","items","positionTo","target","callback","slice","serverId","serverInfo","Id","collectionEditor","dispatchNeedsRefresh","playlistEditor","combineVersions","selection","text","ajax","type","url","getUrl","Ids","join","hide","forEach","markPlayed","getCurrentUserId","markUnplayed","refreshDialog","call","container","indexOf","notifyRefreshNeeded","showSelections","initialCard","cards","showSelectionCommands","body","html","btnSelectionPanelOptions","passive","onContainerClick","card","parentWithClass","onItemSelectionPanelClick","contains","newValue","preventDefault","stopPropagation","touchTarget","touchStartTimeout","touchStartX","touchStartY","onTapHold","getTouches","changedTouches","targetTouches","touches","onTouchStart","touch","clientX","clientY","element","clearTimeout","setTimeout","onTouchStartTimerFired","onTouchMove","deltaX","deltaY","touchEndX","touchEndY","Math","abs","onMouseOut","onTouchEnd","onMouseDown","initTapHold","safari","bindOnClick","destroy","removeEventListener"],"mappings":"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","file":"multiselect.js","sourcesContent":["define([\"browser\", \"appStorage\", \"apphost\", \"loading\", \"connectionManager\", \"globalize\", \"appRouter\", \"dom\", \"css!./multiselect\"], function (browser, appStorage, appHost, loading, connectionManager, globalize, appRouter, dom) {\n    \"use strict\";\n\n    var selectedItems = [];\n    var selectedElements = [];\n    var currentSelectionCommandsPanel;\n\n    function hideSelections() {\n\n        var selectionCommandsPanel = currentSelectionCommandsPanel;\n        if (selectionCommandsPanel) {\n\n            selectionCommandsPanel.parentNode.removeChild(selectionCommandsPanel);\n            currentSelectionCommandsPanel = null;\n\n            selectedItems = [];\n            selectedElements = [];\n            var elems = document.querySelectorAll(\".itemSelectionPanel\");\n            for (var i = 0, length = elems.length; i < length; i++) {\n\n                var parent = elems[i].parentNode;\n                parent.removeChild(elems[i]);\n                parent.classList.remove(\"withMultiSelect\");\n            }\n        }\n    }\n\n    function onItemSelectionPanelClick(e, itemSelectionPanel) {\n\n        // toggle the checkbox, if it wasn't clicked on\n        if (!dom.parentWithClass(e.target, \"chkItemSelect\")) {\n            var chkItemSelect = itemSelectionPanel.querySelector(\".chkItemSelect\");\n\n            if (chkItemSelect) {\n\n                if (chkItemSelect.classList.contains(\"checkedInitial\")) {\n                    chkItemSelect.classList.remove(\"checkedInitial\");\n                } else {\n                    var newValue = !chkItemSelect.checked;\n                    chkItemSelect.checked = newValue;\n                    updateItemSelection(chkItemSelect, newValue);\n                }\n            }\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    function updateItemSelection(chkItemSelect, selected) {\n\n        var id = dom.parentWithAttribute(chkItemSelect, \"data-id\").getAttribute(\"data-id\");\n\n        if (selected) {\n\n            var current = selectedItems.filter(function (i) {\n                return i === id;\n            });\n\n            if (!current.length) {\n                selectedItems.push(id);\n                selectedElements.push(chkItemSelect);\n            }\n\n        } else {\n            selectedItems = selectedItems.filter(function (i) {\n                return i !== id;\n            });\n            selectedElements = selectedElements.filter(function (i) {\n                return i !== chkItemSelect;\n            });\n        }\n\n        if (selectedItems.length) {\n            var itemSelectionCount = document.querySelector(\".itemSelectionCount\");\n            if (itemSelectionCount) {\n                itemSelectionCount.innerHTML = selectedItems.length;\n            }\n        } else {\n            hideSelections();\n        }\n    }\n\n    function onSelectionChange(e) {\n        updateItemSelection(this, this.checked);\n    }\n\n    function showSelection(item, isChecked) {\n\n        var itemSelectionPanel = item.querySelector(\".itemSelectionPanel\");\n\n        if (!itemSelectionPanel) {\n\n            itemSelectionPanel = document.createElement(\"div\");\n            itemSelectionPanel.classList.add(\"itemSelectionPanel\");\n\n            var parent = item.querySelector(\".cardBox\") || item.querySelector(\".cardContent\");\n            parent.classList.add(\"withMultiSelect\");\n            parent.appendChild(itemSelectionPanel);\n\n            var cssClass = \"chkItemSelect\";\n            if (isChecked && !browser.firefox) {\n                // In firefox, the initial tap hold doesnt' get treated as a click\n                // In other browsers it does, so we need to make sure that initial click is ignored\n                cssClass += \" checkedInitial\";\n            }\n            var checkedAttribute = isChecked ? \" checked\" : \"\";\n            itemSelectionPanel.innerHTML = '<label class=\"checkboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" data-outlineclass=\"multiSelectCheckboxOutline\" class=\"' + cssClass + '\"' + checkedAttribute + '/><span></span></label>';\n            var chkItemSelect = itemSelectionPanel.querySelector(\".chkItemSelect\");\n            chkItemSelect.addEventListener(\"change\", onSelectionChange);\n        }\n    }\n\n    function showSelectionCommands() {\n\n        var selectionCommandsPanel = currentSelectionCommandsPanel;\n\n        if (!selectionCommandsPanel) {\n\n            selectionCommandsPanel = document.createElement(\"div\");\n            selectionCommandsPanel.classList.add(\"selectionCommandsPanel\");\n\n            document.body.appendChild(selectionCommandsPanel);\n            currentSelectionCommandsPanel = selectionCommandsPanel;\n\n            var html = \"\";\n\n            html += '<button is=\"paper-icon-button-light\" class=\"btnCloseSelectionPanel autoSize\"><i class=\"material-icons\">close</i></button>';\n            html += '<h1 class=\"itemSelectionCount\"></h1>';\n\n            var moreIcon = \"&#xE5D3;\";\n            html += '<button is=\"paper-icon-button-light\" class=\"btnSelectionPanelOptions autoSize\" style=\"margin-left:auto;\"><i class=\"material-icons\">' + moreIcon + '</i></button>';\n\n            selectionCommandsPanel.innerHTML = html;\n\n            selectionCommandsPanel.querySelector(\".btnCloseSelectionPanel\").addEventListener(\"click\", hideSelections);\n\n            var btnSelectionPanelOptions = selectionCommandsPanel.querySelector(\".btnSelectionPanelOptions\");\n\n            dom.addEventListener(btnSelectionPanelOptions, \"click\", showMenuForSelectedItems, { passive: true });\n        }\n    }\n\n    function alertText(options) {\n\n        return new Promise(function (resolve, reject) {\n\n            require([\"alert\"], function (alert) {\n                alert(options).then(resolve, resolve);\n            });\n        });\n    }\n\n    function deleteItems(apiClient, itemIds) {\n\n        return new Promise(function (resolve, reject) {\n\n            var msg = globalize.translate(\"ConfirmDeleteItem\");\n            var title = globalize.translate(\"HeaderDeleteItem\");\n\n            if (itemIds.length > 1) {\n                msg = globalize.translate(\"ConfirmDeleteItems\");\n                title = globalize.translate(\"HeaderDeleteItems\");\n            }\n\n            require([\"confirm\"], function (confirm) {\n\n                confirm(msg, title).then(function () {\n                    var promises = itemIds.map(function (itemId) {\n                        apiClient.deleteItem(itemId);\n                    });\n\n                    Promise.all(promises).then(resolve, function () {\n\n                        alertText(globalize.translate(\"ErrorDeletingItem\")).then(reject, reject);\n                    });\n                }, reject);\n\n            });\n        });\n    }\n\n    function showMenuForSelectedItems(e) {\n\n        var apiClient = connectionManager.currentApiClient();\n\n        apiClient.getCurrentUser().then(function (user) {\n\n            var menuItems = [];\n\n            menuItems.push({\n                name: globalize.translate(\"AddToCollection\"),\n                id: \"addtocollection\",\n                icon: \"add\"\n            });\n\n            menuItems.push({\n                name: globalize.translate(\"AddToPlaylist\"),\n                id: \"playlist\",\n                icon: \"playlist_add\"\n            });\n\n            // TODO: Be more dynamic based on what is selected\n            if (user.Policy.EnableContentDeletion) {\n                menuItems.push({\n                    name: globalize.translate(\"Delete\"),\n                    id: \"delete\",\n                    icon: \"delete\"\n                });\n            }\n\n            if (user.Policy.EnableContentDownloading && appHost.supports(\"filedownload\")) {\n                menuItems.push({\n                    name: Globalize.translate(\"ButtonDownload\"),\n                    id: \"download\",\n                    icon: \"file_download\"\n                });\n            }\n\n            if (user.Policy.IsAdministrator) {\n                menuItems.push({\n                    name: globalize.translate(\"GroupVersions\"),\n                    id: \"groupvideos\",\n                    icon: \"call_merge\"\n                });\n            }\n\n            menuItems.push({\n                name: globalize.translate(\"MarkPlayed\"),\n                id: \"markplayed\",\n                icon: \"check_box\"\n            });\n\n            menuItems.push({\n                name: globalize.translate(\"MarkUnplayed\"),\n                id: \"markunplayed\",\n                icon: \"check_box_outline_blank\"\n            });\n\n            menuItems.push({\n                name: globalize.translate(\"RefreshMetadata\"),\n                id: \"refresh\",\n                icon: \"refresh\"\n            });\n\n            require(['actionsheet'], function (actionsheet) {\n                actionsheet.show({\n                    items: menuItems,\n                    positionTo: e.target,\n                    callback: function (id) {\n                        var items = selectedItems.slice(0);\n                        var serverId = apiClient.serverInfo().Id;\n\n                        switch (id) {\n                            case \"addtocollection\":\n                                require([\"collectionEditor\"], function (collectionEditor) {\n                                    new collectionEditor().show({\n                                        items: items,\n                                        serverId: serverId\n                                    });\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case \"playlist\":\n                                require([\"playlistEditor\"], function (playlistEditor) {\n                                    new playlistEditor().show({\n                                        items: items,\n                                        serverId: serverId\n                                    });\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case \"delete\":\n                                deleteItems(apiClient, items).then(dispatchNeedsRefresh);\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case \"groupvideos\":\n                                combineVersions(apiClient, items);\n                                break;\n                            case \"markplayed\":\n                                items.forEach(function (itemId) {\n                                    apiClient.markPlayed(apiClient.getCurrentUserId(), itemId);\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case \"markunplayed\":\n                                items.forEach(function (itemId) {\n                                    apiClient.markUnplayed(apiClient.getCurrentUserId(), itemId);\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case \"refresh\":\n                                require([\"refreshDialog\"], function (refreshDialog) {\n                                    new refreshDialog({\n                                        itemIds: items,\n                                        serverId: serverId\n                                    }).show();\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                });\n\n            });\n        });\n    }\n\n    function dispatchNeedsRefresh() {\n\n        var elems = [];\n\n        [].forEach.call(selectedElements, function (i) {\n\n            var container = dom.parentWithAttribute(i, \"is\", \"emby-itemscontainer\");\n\n            if (container && elems.indexOf(container) === -1) {\n                elems.push(container);\n            }\n        });\n\n        for (var i = 0, length = elems.length; i < length; i++) {\n            elems[i].notifyRefreshNeeded(true);\n        }\n    }\n\n    function combineVersions(apiClient, selection) {\n\n        if (selection.length < 2) {\n\n            require([\"alert\"], function (alert) {\n                alert({\n                    text: globalize.translate(\"PleaseSelectTwoItems\")\n                });\n            });\n            return;\n        }\n\n        loading.show();\n\n        apiClient.ajax({\n\n            type: \"POST\",\n            url: apiClient.getUrl(\"Videos/MergeVersions\", { Ids: selection.join(\",\") })\n\n        }).then(function () {\n\n            loading.hide();\n            hideSelections();\n            dispatchNeedsRefresh();\n        });\n    }\n\n    function showSelections(initialCard) {\n\n        require([\"emby-checkbox\"], function () {\n            var cards = document.querySelectorAll(\".card\");\n            for (var i = 0, length = cards.length; i < length; i++) {\n                showSelection(cards[i], initialCard === cards[i]);\n            }\n\n            showSelectionCommands();\n            updateItemSelection(initialCard, true);\n        });\n    }\n\n    function onContainerClick(e) {\n\n        var target = e.target;\n\n        if (selectedItems.length) {\n\n            var card = dom.parentWithClass(target, \"card\");\n            if (card) {\n                var itemSelectionPanel = card.querySelector(\".itemSelectionPanel\");\n                if (itemSelectionPanel) {\n                    return onItemSelectionPanelClick(e, itemSelectionPanel);\n                }\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n\n    document.addEventListener(\"viewbeforehide\", hideSelections);\n\n    return function (options) {\n\n        var self = this;\n\n        var container = options.container;\n\n        function onTapHold(e) {\n\n            var card = dom.parentWithClass(e.target, \"card\");\n\n            if (card) {\n\n                showSelections(card);\n            }\n\n            e.preventDefault();\n            // It won't have this if it's a hammer event\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            return false;\n        }\n\n        function getTouches(e) {\n\n            return e.changedTouches || e.targetTouches || e.touches;\n        }\n\n        var touchTarget;\n        var touchStartTimeout;\n        var touchStartX;\n        var touchStartY;\n        function onTouchStart(e) {\n\n            var touch = getTouches(e)[0];\n            touchTarget = null;\n            touchStartX = 0;\n            touchStartY = 0;\n\n            if (touch) {\n                touchStartX = touch.clientX;\n                touchStartY = touch.clientY;\n                var element = touch.target;\n\n                if (element) {\n                    var card = dom.parentWithClass(element, \"card\");\n\n                    if (card) {\n\n                        if (touchStartTimeout) {\n                            clearTimeout(touchStartTimeout);\n                            touchStartTimeout = null;\n                        }\n\n                        touchTarget = card;\n                        touchStartTimeout = setTimeout(onTouchStartTimerFired, 550);\n                    }\n                }\n            }\n        }\n\n        function onTouchMove(e) {\n\n            if (touchTarget) {\n                var touch = getTouches(e)[0];\n                var deltaX;\n                var deltaY;\n\n                if (touch) {\n                    var touchEndX = touch.clientX || 0;\n                    var touchEndY = touch.clientY || 0;\n                    deltaX = Math.abs(touchEndX - (touchStartX || 0));\n                    deltaY = Math.abs(touchEndY - (touchStartY || 0));\n                } else {\n                    deltaX = 100;\n                    deltaY = 100;\n                }\n                if (deltaX >= 5 || deltaY >= 5) {\n                    onMouseOut(e);\n                }\n            }\n        }\n\n        function onTouchEnd(e) {\n\n            onMouseOut(e);\n        }\n\n        function onMouseDown(e) {\n\n            if (touchStartTimeout) {\n                clearTimeout(touchStartTimeout);\n                touchStartTimeout = null;\n            }\n\n            touchTarget = e.target;\n            touchStartTimeout = setTimeout(onTouchStartTimerFired, 550);\n        }\n\n        function onMouseOut(e) {\n\n            if (touchStartTimeout) {\n                clearTimeout(touchStartTimeout);\n                touchStartTimeout = null;\n            }\n            touchTarget = null;\n        }\n\n        function onTouchStartTimerFired() {\n\n            if (!touchTarget) {\n                return;\n            }\n\n            var card = dom.parentWithClass(touchTarget, \"card\");\n            touchTarget = null;\n\n            if (card) {\n\n                showSelections(card);\n            }\n        }\n\n        function initTapHold(element) {\n\n            // mobile safari doesn't allow contextmenu override\n            if (browser.touch && !browser.safari) {\n                element.addEventListener(\"contextmenu\", onTapHold);\n            } else {\n                dom.addEventListener(element, \"touchstart\", onTouchStart, {\n                    passive: true\n                });\n                dom.addEventListener(element, \"touchmove\", onTouchMove, {\n                    passive: true\n                });\n                dom.addEventListener(element, \"touchend\", onTouchEnd, {\n                    passive: true\n                });\n                dom.addEventListener(element, \"touchcancel\", onTouchEnd, {\n                    passive: true\n                });\n                dom.addEventListener(element, \"mousedown\", onMouseDown, {\n                    passive: true\n                });\n                dom.addEventListener(element, \"mouseleave\", onMouseOut, {\n                    passive: true\n                });\n                dom.addEventListener(element, \"mouseup\", onMouseOut, {\n                    passive: true\n                });\n            }\n        }\n\n        initTapHold(container);\n\n        if (options.bindOnClick !== false) {\n            container.addEventListener(\"click\", onContainerClick);\n        }\n\n        self.onContainerClick = onContainerClick;\n\n        self.destroy = function () {\n\n            container.removeEventListener(\"click\", onContainerClick);\n            container.removeEventListener(\"contextmenu\", onTapHold);\n\n            var element = container;\n\n            dom.removeEventListener(element, \"touchstart\", onTouchStart, {\n                passive: true\n            });\n            dom.removeEventListener(element, \"touchmove\", onTouchMove, {\n                passive: true\n            });\n            dom.removeEventListener(element, \"touchend\", onTouchEnd, {\n                passive: true\n            });\n            // this fires in safari due to magnifying class\n            //dom.removeEventListener(element, \"touchcancel\", onTouchEnd, {\n            //    passive: true\n            //});\n            dom.removeEventListener(element, \"mousedown\", onMouseDown, {\n                passive: true\n            });\n            dom.removeEventListener(element, \"mouseleave\", onMouseOut, {\n                passive: true\n            });\n            dom.removeEventListener(element, \"mouseup\", onMouseOut, {\n                passive: true\n            });\n        };\n    };\n});\n"]}