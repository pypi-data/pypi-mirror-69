{"version":3,"sources":["components/fullscreenManager.js"],"names":["define","events","dom","appHost","browser","fullscreenManager","prototype","requestFullscreen","element","document","documentElement","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","tagName","querySelector","webkitEnterFullscreen","exitFullscreen","this","isFullScreen","mozCancelFullScreen","webkitExitFullscreen","webkitCancelFullscreen","msExitFullscreen","fullscreen","mozFullScreen","webkitIsFullScreen","msFullscreenElement","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","manager","onFullScreenChange","trigger","addEventListener","passive","supports","edgeUwp","navigator","userAgent","toLowerCase","indexOf","window","e","isTargetValid","target","parentWithTag"],"mappings":"AAAA,aAAAA,OAAO,CAAC,SAAU,MAAO,UAAW,YAAY,SAAUC,OAAQC,IAAKC,QAASC,SAG5E,SAASC,qBAITA,kBAAkBC,UAAUC,kBAAoB,SAAUC,UAEtDA,QAAUA,SAAWC,SAASC,iBAElBH,kBACRC,QAAQD,oBAEDC,QAAQG,qBACfH,QAAQG,uBAEDH,QAAQI,wBACfJ,QAAQI,0BAEDJ,QAAQK,oBACfL,QAAQK,uBAKY,UAApBL,QAAQM,UACRN,QAAUC,SAASM,cAAc,UAAYP,SAE7CA,QAAQQ,uBACRR,QAAQQ,0BAIhBX,kBAAkBC,UAAUW,eAAiB,WAEpCC,KAAKC,iBAGNV,SAASQ,eACTR,SAASQ,iBACFR,SAASW,oBAChBX,SAASW,sBACFX,SAASY,qBAChBZ,SAASY,uBACFZ,SAASa,uBAChBb,SAASa,yBACFb,SAASc,kBAChBd,SAASc,qBAKjBlB,kBAAkBC,UAAUa,aAAe,WACvC,OAAOV,SAASe,YACZf,SAASgB,eACThB,SAASiB,oBACTjB,SAASkB,qBACTlB,SAASmB,mBACTnB,SAASoB,yBACTpB,SAASqB,sBAGjB,IAAIC,QAAU,IAAI1B,kBAElB,SAAS2B,qBACL/B,OAAOgC,QAAQF,QAAS,oBAmC5B,OAhCA7B,IAAIgC,iBAAiBzB,SAAU,mBAAoBuB,mBAAoB,CACnEG,SAAS,IAGbjC,IAAIgC,iBAAiBzB,SAAU,yBAA0BuB,mBAAoB,CACzEG,SAAS,IAGbjC,IAAIgC,iBAAiBzB,SAAU,sBAAuBuB,mBAAoB,CACtEG,SAAS,IAMThC,QAAQiC,SAAS,sBAAwBhC,QAAQiC,UAAY,IAAMC,UAAUC,UAAUC,cAAcC,QAAQ,cAE7GvC,IAAIgC,iBAAiBQ,OAAQ,YAAY,SAAUC,IALvD,SAASC,cAAcC,QACnB,OAAQ3C,IAAI4C,cAAcD,OAAQ,CAAC,SAAU,QAAS,cAM9CD,CAAcD,EAAEE,UACZd,QAAQZ,eACRY,QAAQd,iBAERc,QAAQxB,uBAIjB,CACC4B,SAAS,IAIVJ","file":"fullscreenManager.js","sourcesContent":["define(['events', 'dom', 'apphost', 'browser'], function (events, dom, appHost, browser) {\n    'use strict';\n\n    function fullscreenManager() {\n\n    }\n\n    fullscreenManager.prototype.requestFullscreen = function (element) {\n\n        element = element || document.documentElement;\n\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n            return;\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n            return;\n        } else if (element.webkitRequestFullscreen) {\n            element.webkitRequestFullscreen();\n            return;\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n            return;\n        }\n\n        // Hack - This is only available for video elements in ios safari\n        if (element.tagName !== 'VIDEO') {\n            element = document.querySelector('video') || element;\n        }\n        if (element.webkitEnterFullscreen) {\n            element.webkitEnterFullscreen();\n        }\n    };\n\n    fullscreenManager.prototype.exitFullscreen = function () {\n\n        if (!this.isFullScreen()) {\n            return;\n        }\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (document.webkitCancelFullscreen) {\n            document.webkitCancelFullscreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        }\n    };\n\n    // TODO: use screenfull.js\n    fullscreenManager.prototype.isFullScreen = function () {\n        return document.fullscreen ||\n            document.mozFullScreen ||\n            document.webkitIsFullScreen ||\n            document.msFullscreenElement || /* IE/Edge syntax */\n            document.fullscreenElement || /* Standard syntax */\n            document.webkitFullscreenElement || /* Chrome, Safari and Opera syntax */\n            document.mozFullScreenElement; /* Firefox syntax */\n    };\n\n    var manager = new fullscreenManager();\n\n    function onFullScreenChange() {\n        events.trigger(manager, 'fullscreenchange');\n    }\n\n    dom.addEventListener(document, 'fullscreenchange', onFullScreenChange, {\n        passive: true\n    });\n\n    dom.addEventListener(document, 'webkitfullscreenchange', onFullScreenChange, {\n        passive: true\n    });\n\n    dom.addEventListener(document, 'mozfullscreenchange', onFullScreenChange, {\n        passive: true\n    });\n\n    function isTargetValid(target) {\n        return !dom.parentWithTag(target, ['BUTTON', 'INPUT', 'TEXTAREA']);\n    }\n    if (appHost.supports(\"fullscreenchange\") && (browser.edgeUwp || -1 !== navigator.userAgent.toLowerCase().indexOf(\"electron\"))) {\n\n        dom.addEventListener(window, 'dblclick', function (e) {\n\n            if (isTargetValid(e.target)) {\n                if (manager.isFullScreen()) {\n                    manager.exitFullscreen();\n                } else {\n                    manager.requestFullscreen();\n                }\n            }\n\n        }, {\n            passive: true\n        });\n    }\n\n    return manager;\n});\n"]}