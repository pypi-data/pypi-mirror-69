{"version":3,"sources":["components/actionsheet/actionsheet.js"],"names":["define","dialogHelper","layoutManager","globalize","browser","dom","getPosition","options","dlg","windowSize","getWindowSize","windowHeight","innerHeight","windowWidth","innerWidth","pos","getOffsets","elems","box","elem","results","document","i","length","getBoundingClientRect","top","left","width","height","positionTo","positionY","offsetHeight","offsetWidth","overflowX","overflowY","offsetTop","offsetLeft","Math","max","centerFocus","horiz","on","require","scrollHelper","fn","show","isFullscreen","dialogOptions","removeOnClose","enableHistory","scrollY","tv","size","autoFocus","modal","entryAnimation","exitAnimation","entryAnimationDuration","exitAnimationDuration","createDialog","classList","add","dialogClass","option","html","scrollClassName","style","items","itemIcon","renderIcon","icons","icon","selected","push","center","title","text","scrollerClassName","selectedId","timeout","menuItemClass","border","shaded","mobile","divider","id","value","name","textContent","innerText","secondaryText","asideText","showCancel","translate","innerHTML","querySelector","addEventListener","close","setTimeout","Promise","resolve","reject","isResolved","e","actionSheetMenuItem","parentWithClass","target","getAttribute","resolveOnClick","indexOf","clearTimeout","callback","open","position","margin"],"mappings":"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","file":"actionsheet.js","sourcesContent":["define(['dialogHelper', 'layoutManager', 'globalize', 'browser', 'dom', 'emby-button', 'css!./actionsheet', 'material-icons', 'scrollStyles', 'listViewStyle'], function (dialogHelper, layoutManager, globalize, browser, dom) {\n    'use strict';\n\n    function getOffsets(elems) {\n\n        var doc = document;\n        var results = [];\n\n        if (!doc) {\n            return results;\n        }\n\n        var box;\n        var elem;\n\n        for (var i = 0, length = elems.length; i < length; i++) {\n\n            elem = elems[i];\n            // Support: BlackBerry 5, iOS 3 (original iPhone)\n            // If we don't have gBCR, just use 0,0 rather than error\n            if (elem.getBoundingClientRect) {\n                box = elem.getBoundingClientRect();\n            } else {\n                box = { top: 0, left: 0 };\n            }\n\n            results[i] = {\n                top: box.top,\n                left: box.left,\n                width: box.width,\n                height: box.height\n            };\n        }\n\n        return results;\n    }\n\n    function getPosition(options, dlg) {\n\n        var windowSize = dom.getWindowSize();\n        var windowHeight = windowSize.innerHeight;\n        var windowWidth = windowSize.innerWidth;\n\n        var pos = getOffsets([options.positionTo])[0];\n\n        if (options.positionY !== 'top') {\n            pos.top += (pos.height || 0) / 2;\n        }\n\n        pos.left += (pos.width || 0) / 2;\n\n        var height = dlg.offsetHeight || 300;\n        var width = dlg.offsetWidth || 160;\n\n        // Account for popup size\n        pos.top -= height / 2;\n        pos.left -= width / 2;\n\n        // Avoid showing too close to the bottom\n        var overflowX = pos.left + width - windowWidth;\n        var overflowY = pos.top + height - windowHeight;\n\n        if (overflowX > 0) {\n            pos.left -= (overflowX + 20);\n        }\n        if (overflowY > 0) {\n            pos.top -= (overflowY + 20);\n        }\n\n        pos.top += (options.offsetTop || 0);\n        pos.left += (options.offsetLeft || 0);\n\n        // Do some boundary checking\n        pos.top = Math.max(pos.top, 10);\n        pos.left = Math.max(pos.left, 10);\n\n        return pos;\n    }\n\n    function centerFocus(elem, horiz, on) {\n        require(['scrollHelper'], function (scrollHelper) {\n            var fn = on ? 'on' : 'off';\n            scrollHelper.centerFocus[fn](elem, horiz);\n        });\n    }\n\n    function show(options) {\n\n        // items\n        // positionTo\n        // showCancel\n        // title\n        var dialogOptions = {\n            removeOnClose: true,\n            enableHistory: options.enableHistory,\n            scrollY: false\n        };\n\n        var backButton = false;\n        var isFullscreen;\n\n        if (layoutManager.tv) {\n            dialogOptions.size = 'fullscreen';\n            isFullscreen = true;\n            backButton = true;\n            dialogOptions.autoFocus = true;\n        } else {\n\n            dialogOptions.modal = false;\n            dialogOptions.entryAnimation = options.entryAnimation;\n            dialogOptions.exitAnimation = options.exitAnimation;\n            dialogOptions.entryAnimationDuration = options.entryAnimationDuration || 140;\n            dialogOptions.exitAnimationDuration = options.exitAnimationDuration || 100;\n            dialogOptions.autoFocus = false;\n        }\n\n        var dlg = dialogHelper.createDialog(dialogOptions);\n\n        if (isFullscreen) {\n            dlg.classList.add('actionsheet-fullscreen');\n        } else {\n            dlg.classList.add('actionsheet-not-fullscreen');\n        }\n\n        dlg.classList.add('actionSheet');\n\n        if (options.dialogClass) {\n            dlg.classList.add(options.dialogClass);\n        }\n\n        var html = '';\n\n        var scrollClassName = layoutManager.tv ? 'scrollY smoothScrollY hiddenScrollY' : 'scrollY';\n        var style = '';\n\n        // Admittedly a hack but right now the scrollbar is being factored into the width which is causing truncation\n        if (options.items.length > 20) {\n            var minWidth = dom.getWindowSize().innerWidth >= 300 ? 240 : 200;\n            style += \"min-width:\" + minWidth + \"px;\";\n        }\n\n        var i;\n        var length;\n        var option;\n        var renderIcon = false;\n        var icons = [];\n        var itemIcon;\n        for (i = 0, length = options.items.length; i < length; i++) {\n\n            option = options.items[i];\n\n            itemIcon = option.icon || (option.selected ? 'check' : null);\n\n            if (itemIcon) {\n                renderIcon = true;\n            }\n            icons.push(itemIcon || '');\n        }\n\n        if (layoutManager.tv) {\n            html += '<button is=\"paper-icon-button-light\" class=\"btnCloseActionSheet hide-mouse-idle-tv\" tabindex=\"-1\"><i class=\"material-icons arrow_back\"></i></button>';\n        }\n\n        // If any items have an icon, give them all an icon just to make sure they're all lined up evenly\n        var center = options.title && (!renderIcon /*|| itemsWithIcons.length != options.items.length*/);\n\n        if (center || layoutManager.tv) {\n            html += '<div class=\"actionSheetContent actionSheetContent-centered\">';\n        } else {\n            html += '<div class=\"actionSheetContent\">';\n        }\n\n        if (options.title) {\n\n            html += '<h1 class=\"actionSheetTitle\">';\n            html += options.title;\n            html += '</h1>';\n        }\n        if (options.text) {\n            html += '<p class=\"actionSheetText\">';\n            html += options.text;\n            html += '</p>';\n        }\n\n        var scrollerClassName = 'actionSheetScroller';\n        if (layoutManager.tv) {\n            scrollerClassName += ' actionSheetScroller-tv focuscontainer-x focuscontainer-y';\n        }\n        html += '<div class=\"' + scrollerClassName + ' ' + scrollClassName + '\" style=\"' + style + '\">';\n\n        var menuItemClass = 'listItem listItem-button actionSheetMenuItem';\n\n        if (options.border || options.shaded) {\n            menuItemClass += ' listItem-border';\n        }\n\n        if (options.menuItemClass) {\n            menuItemClass += ' ' + options.menuItemClass;\n        }\n\n        if (layoutManager.tv) {\n            menuItemClass += ' listItem-focusscale';\n        }\n\n        if (layoutManager.mobile) {\n            menuItemClass += ' actionsheet-xlargeFont';\n        }\n\n        for (i = 0, length = options.items.length; i < length; i++) {\n\n            option = options.items[i];\n\n            if (option.divider) {\n\n                html += '<div class=\"actionsheetDivider\"></div>';\n                continue;\n            }\n\n            var autoFocus = option.selected && layoutManager.tv ? ' autoFocus' : '';\n\n            // Check for null in case int 0 was passed in\n            var optionId = option.id == null || option.id === '' ? option.value : option.id;\n            html += '<button' + autoFocus + ' is=\"emby-button\" type=\"button\" class=\"' + menuItemClass + '\" data-id=\"' + optionId + '\">';\n\n            itemIcon = icons[i];\n\n            if (itemIcon) {\n\n                html += '<i class=\"actionsheetMenuItemIcon listItemIcon listItemIcon-transparent material-icons\">' + itemIcon + '</i>';\n            } else if (renderIcon && !center) {\n                html += '<i class=\"actionsheetMenuItemIcon listItemIcon listItemIcon-transparent material-icons\" style=\"visibility:hidden;\">check</i>';\n            }\n\n            html += '<div class=\"listItemBody actionsheetListItemBody\">';\n\n            html += '<div class=\"listItemBodyText actionSheetItemText\">';\n            html += (option.name || option.textContent || option.innerText);\n            html += '</div>';\n\n            if (option.secondaryText) {\n                html += '<div class=\"listItemBodyText secondary\">';\n                html += option.secondaryText;\n                html += '</div>';\n            }\n\n            html += '</div>';\n\n            if (option.asideText) {\n                html += '<div class=\"listItemAside actionSheetItemAsideText\">';\n                html += option.asideText;\n                html += '</div>';\n            }\n\n            html += '</button>';\n        }\n\n        if (options.showCancel) {\n            html += '<div class=\"buttons\">';\n            html += '<button is=\"emby-button\" type=\"button\" class=\"btnCloseActionSheet\">' + globalize.translate('ButtonCancel') + '</button>';\n            html += '</div>';\n        }\n        html += '</div>';\n\n        dlg.innerHTML = html;\n\n        if (layoutManager.tv) {\n            centerFocus(dlg.querySelector('.actionSheetScroller'), false, true);\n        }\n\n        var btnCloseActionSheet = dlg.querySelector('.btnCloseActionSheet');\n        if (btnCloseActionSheet) {\n            dlg.querySelector('.btnCloseActionSheet').addEventListener('click', function () {\n                dialogHelper.close(dlg);\n            });\n        }\n\n        // Seeing an issue in some non-chrome browsers where this is requiring a double click\n        //var eventName = browser.firefox ? 'mousedown' : 'click';\n        var selectedId;\n\n        var timeout;\n        if (options.timeout) {\n            timeout = setTimeout(function () {\n                dialogHelper.close(dlg);\n            }, options.timeout);\n        }\n\n        return new Promise(function (resolve, reject) {\n\n            var isResolved;\n\n            dlg.addEventListener('click', function (e) {\n\n                var actionSheetMenuItem = dom.parentWithClass(e.target, 'actionSheetMenuItem');\n\n                if (actionSheetMenuItem) {\n                    selectedId = actionSheetMenuItem.getAttribute('data-id');\n\n                    if (options.resolveOnClick) {\n\n                        if (options.resolveOnClick.indexOf) {\n\n                            if (options.resolveOnClick.indexOf(selectedId) !== -1) {\n\n                                resolve(selectedId);\n                                isResolved = true;\n                            }\n\n                        } else {\n                            resolve(selectedId);\n                            isResolved = true;\n                        }\n                    }\n\n                    dialogHelper.close(dlg);\n                }\n\n            });\n\n            dlg.addEventListener('close', function () {\n\n                if (layoutManager.tv) {\n                    centerFocus(dlg.querySelector('.actionSheetScroller'), false, false);\n                }\n\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n\n                if (!isResolved) {\n                    if (selectedId != null) {\n                        if (options.callback) {\n                            options.callback(selectedId);\n                        }\n\n                        resolve(selectedId);\n                    } else {\n                        reject();\n                    }\n                }\n            });\n\n            dialogHelper.open(dlg);\n\n            var pos = options.positionTo && dialogOptions.size !== 'fullscreen' ? getPosition(options, dlg) : null;\n\n            if (pos) {\n                dlg.style.position = 'fixed';\n                dlg.style.margin = 0;\n                dlg.style.left = pos.left + 'px';\n                dlg.style.top = pos.top + 'px';\n            }\n        });\n    }\n\n    return {\n        show: show\n    };\n});\n"]}