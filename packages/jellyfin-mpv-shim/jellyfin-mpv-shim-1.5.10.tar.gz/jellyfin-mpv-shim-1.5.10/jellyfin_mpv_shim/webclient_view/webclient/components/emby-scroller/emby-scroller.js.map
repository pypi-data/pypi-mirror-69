{"version":3,"sources":["components/emby-scroller/emby-scroller.js"],"names":["define","scroller","dom","layoutManager","inputManager","focusManager","browser","ScrollerPrototype","Object","create","HTMLDivElement","prototype","onInputCommand","e","cmd","detail","command","focusLast","this","getAttribute","preventDefault","stopPropagation","moveFocus","target","createdCallback","classList","add","scrollToBeginning","slideTo","toStart","elem","immediate","toCenter","scrollToPosition","pos","getScrollPosition","getScrollSize","getScrollEventName","getScrollSlider","addScrollEventListener","fn","options","addEventListener","getScrollFrame","removeScrollEventListener","removeEventListener","attachedCallback","on","horizontal","slider","querySelector","style","bindHeader","enableScrollButtons","desktop","mouseDragging","mouseWheel","touchDragging","slidee","scrollBy","speed","elasticBounds","dragHandle","autoImmediate","skipSlideToWhenVisible","dispatchScrollEvent","hideScrollbar","allowNativeSmoothScroll","allowNativeScroll","forceHideScrollbars","requireAnimation","edge","init","reload","tv","initCenterFocus","scrollerInstance","focused","focusableParent","capture","passive","mobile","initHeadroom","require","Headroom","headroom","document","loadScrollButtons","insertAdjacentHTML","pause","resume","detachedCallback","off","destroy","registerElement","extends"],"mappings":"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","file":"emby-scroller.js","sourcesContent":["define(['scroller', 'dom', 'layoutManager', 'inputManager', 'focusManager', 'browser', 'registerElement', 'css!./emby-scroller'], function (scroller, dom, layoutManager, inputManager, focusManager, browser) {\n    'use strict';\n\n    var ScrollerPrototype = Object.create(HTMLDivElement.prototype);\n\n    ScrollerPrototype.createdCallback = function () {\n        this.classList.add('emby-scroller');\n    };\n\n    function initCenterFocus(elem, scrollerInstance) {\n        dom.addEventListener(elem, 'focus', function (e) {\n            var focused = focusManager.focusableParent(e.target);\n            if (focused) {\n                scrollerInstance.toCenter(focused);\n            }\n        }, {\n            capture: true,\n            passive: true\n        });\n    }\n\n    ScrollerPrototype.scrollToBeginning = function () {\n        if (this.scroller) {\n            this.scroller.slideTo(0, true);\n        }\n    };\n\n    ScrollerPrototype.toStart = function (elem, immediate) {\n        if (this.scroller) {\n            this.scroller.toStart(elem, immediate);\n        }\n    };\n\n    ScrollerPrototype.toCenter = function (elem, immediate) {\n        if (this.scroller) {\n            this.scroller.toCenter(elem, immediate);\n        }\n    };\n\n    ScrollerPrototype.scrollToPosition = function (pos, immediate) {\n        if (this.scroller) {\n            this.scroller.slideTo(pos, immediate);\n        }\n    };\n\n    ScrollerPrototype.getScrollPosition = function () {\n        if (this.scroller) {\n            return this.scroller.getScrollPosition();\n        }\n    };\n\n    ScrollerPrototype.getScrollSize = function () {\n        if (this.scroller) {\n            return this.scroller.getScrollSize();\n        }\n    };\n\n    ScrollerPrototype.getScrollEventName = function () {\n        if (this.scroller) {\n            return this.scroller.getScrollEventName();\n        }\n    };\n\n    ScrollerPrototype.getScrollSlider = function () {\n        if (this.scroller) {\n            return this.scroller.getScrollSlider();\n        }\n    };\n\n    ScrollerPrototype.addScrollEventListener = function (fn, options) {\n        if (this.scroller) {\n            dom.addEventListener(this.scroller.getScrollFrame(), this.scroller.getScrollEventName(), fn, options);\n        }\n    };\n\n    ScrollerPrototype.removeScrollEventListener = function (fn, options) {\n        if (this.scroller) {\n            dom.removeEventListener(this.scroller.getScrollFrame(), this.scroller.getScrollEventName(), fn, options);\n        }\n    };\n\n    function onInputCommand(e) {\n        var cmd = e.detail.command;\n        if (cmd === 'end') {\n            focusManager.focusLast(this, '.' + this.getAttribute('data-navcommands'));\n            e.preventDefault();\n            e.stopPropagation();\n        } else if (cmd === 'pageup') {\n            focusManager.moveFocus(e.target, this, '.' + this.getAttribute('data-navcommands'), -12);\n            e.preventDefault();\n            e.stopPropagation();\n        } else if (cmd === 'pagedown') {\n            focusManager.moveFocus(e.target, this, '.' + this.getAttribute('data-navcommands'), 12);\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    function initHeadroom(elem) {\n        require(['headroom'], function (Headroom) {\n            var headroom = new Headroom([], {\n                scroller: elem\n            });\n\n            headroom.add(document.querySelector('.skinHeader'));\n            elem.headroom = headroom;\n        });\n    }\n\n    ScrollerPrototype.attachedCallback = function () {\n        if (this.getAttribute('data-navcommands')) {\n            inputManager.on(this, onInputCommand);\n        }\n\n        var horizontal = this.getAttribute('data-horizontal') !== 'false';\n\n        var slider = this.querySelector('.scrollSlider');\n\n        if (horizontal) {\n            slider.style['white-space'] = 'nowrap';\n        }\n\n        var bindHeader = this.getAttribute('data-bindheader') === 'true';\n\n        var scrollFrame = this;\n        var enableScrollButtons = layoutManager.desktop && horizontal && this.getAttribute('data-scrollbuttons') !== 'false';\n\n        var options = {\n            horizontal: horizontal,\n            mouseDragging: 1,\n            mouseWheel: this.getAttribute('data-mousewheel') !== 'false',\n            touchDragging: 1,\n            slidee: slider,\n            scrollBy: 200,\n            speed: horizontal ? 270 : 240,\n            elasticBounds: 1,\n            dragHandle: 1,\n            autoImmediate: true,\n            skipSlideToWhenVisible: this.getAttribute('data-skipfocuswhenvisible') === 'true',\n            dispatchScrollEvent: enableScrollButtons || bindHeader || this.getAttribute('data-scrollevent') === 'true',\n            hideScrollbar: enableScrollButtons || this.getAttribute('data-hidescrollbar') === 'true',\n            allowNativeSmoothScroll: this.getAttribute('data-allownativesmoothscroll') === 'true' && !enableScrollButtons,\n            allowNativeScroll: !enableScrollButtons,\n            forceHideScrollbars: enableScrollButtons,\n            // In edge, with the native scroll, the content jumps around when hovering over the buttons\n            requireAnimation: enableScrollButtons && browser.edge\n        };\n\n        // If just inserted it might not have any height yet - yes this is a hack\n        this.scroller = new scroller(scrollFrame, options);\n        this.scroller.init();\n        this.scroller.reload();\n\n        if (layoutManager.tv && this.getAttribute('data-centerfocus')) {\n            initCenterFocus(this, this.scroller);\n        }\n\n        if (bindHeader && layoutManager.mobile) {\n            initHeadroom(this);\n        }\n\n        if (enableScrollButtons) {\n            loadScrollButtons(this);\n        }\n    };\n\n    function loadScrollButtons(scroller) {\n        require(['emby-scrollbuttons'], function () {\n            scroller.insertAdjacentHTML('beforebegin', '<div is=\"emby-scrollbuttons\" class=\"emby-scrollbuttons padded-right\"></div>');\n        });\n    }\n\n    ScrollerPrototype.pause = function () {\n        var headroom = this.headroom;\n        if (headroom) {\n            headroom.pause();\n        }\n    };\n\n    ScrollerPrototype.resume = function () {\n        var headroom = this.headroom;\n        if (headroom) {\n            headroom.resume();\n        }\n    };\n\n    ScrollerPrototype.detachedCallback = function () {\n        if (this.getAttribute('data-navcommands')) {\n            inputManager.off(this, onInputCommand);\n        }\n\n        var headroom = this.headroom;\n        if (headroom) {\n            headroom.destroy();\n            this.headroom = null;\n        }\n\n        var scrollerInstance = this.scroller;\n        if (scrollerInstance) {\n            scrollerInstance.destroy();\n            this.scroller = null;\n        }\n    };\n\n    document.registerElement('emby-scroller', {\n        prototype: ScrollerPrototype,\n        extends: 'div'\n    });\n});\n"]}