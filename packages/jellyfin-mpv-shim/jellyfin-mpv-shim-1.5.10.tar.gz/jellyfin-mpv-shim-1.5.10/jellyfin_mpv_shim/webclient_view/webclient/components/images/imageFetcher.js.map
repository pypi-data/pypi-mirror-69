{"version":3,"sources":["components/images/imageFetcher.js"],"names":["define","dom","loadImage","elem","url","tagName","style","backgroundImage","Promise","resolve","loadImageIntoImg","reject","addEventListener","once","setAttribute"],"mappings":"AAAA,aAAAA,OAAO,CAAC,QAAQ,SAAUC,KAiCtB,MAAO,CACHC,UA/BJ,SAASA,UAAUC,KAAMC,KAErB,OAAKD,KAIgB,QAAjBA,KAAKE,SAELF,KAAKG,MAAMC,gBAAkB,QAAUH,IAAM,KACtCI,QAAQC,WAWvB,SAASC,iBAAiBP,KAAMC,KAC5B,OAAO,IAAII,SAAQ,SAAUC,QAASE,QAElCV,IAAIW,iBAAiBT,KAAM,OAAQM,QAAS,CACxCI,MAAM,IAEVV,KAAKW,aAAa,MAAOV,QATtBM,CAAiBP,KAAMC,KAdnBI,QAAQG,OAAO","file":"imageFetcher.js","sourcesContent":["define(['dom'], function (dom) {\n    'use strict';\n\n    function loadImage(elem, url) {\n\n        if (!elem) {\n            return Promise.reject('elem cannot be null');\n        }\n\n        if (elem.tagName !== \"IMG\") {\n\n            elem.style.backgroundImage = \"url('\" + url + \"')\";\n            return Promise.resolve();\n\n            //return loadImageIntoImg(document.createElement('img'), url).then(function () {\n            //    elem.style.backgroundImage = \"url('\" + url + \"')\";\n            //    return Promise.resolve();\n            //});\n\n        }\n        return loadImageIntoImg(elem, url);\n    }\n\n    function loadImageIntoImg(elem, url) {\n        return new Promise(function (resolve, reject) {\n\n            dom.addEventListener(elem, 'load', resolve, {\n                once: true\n            });\n            elem.setAttribute(\"src\", url);\n        });\n    }\n\n    return {\n        loadImage: loadImage\n    };\n\n});\n"]}