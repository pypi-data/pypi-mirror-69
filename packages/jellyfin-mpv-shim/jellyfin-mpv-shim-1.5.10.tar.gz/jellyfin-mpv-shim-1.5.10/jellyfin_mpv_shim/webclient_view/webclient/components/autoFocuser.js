"use strict";define(["focusManager","layoutManager"],(function(focusManager,layoutManager){var activeElement;function isEnabled(){return layoutManager.tv}var arrayFrom=Array.prototype.from||function(src){return Array.prototype.slice.call(src)};return{isEnabled:isEnabled,enable:function enable(){isEnabled()&&(window.addEventListener("focusin",(function(e){activeElement=e.target})),console.debug("AutoFocuser enabled"))},autoFocus:function autoFocus(container){if(isEnabled()){container=container||document.body;var focusedElement,candidates=[];if(activeElement&&(activeElement.classList.contains("btnPreviousPage")?(candidates.push(container.querySelector(".btnPreviousPage")),candidates.push(container.querySelector(".btnNextPage"))):activeElement.classList.contains("btnNextPage")?(candidates.push(container.querySelector(".btnNextPage")),candidates.push(container.querySelector(".btnPreviousPage"))):activeElement.classList.contains("btnSelectView")&&candidates.push(container.querySelector(".btnSelectView")),candidates.push(activeElement)),(candidates=(candidates=candidates.concat(arrayFrom(container.querySelectorAll(".btnResume")))).concat(arrayFrom(container.querySelectorAll(".btnPlay")))).every((function(element){return!focusManager.isCurrentlyFocusable(element)||(focusManager.focus(element),focusedElement=element,!1)})),!focusedElement){var itemsContainer=container.querySelector(".itemsContainer");itemsContainer&&(focusedElement=focusManager.autoFocus(itemsContainer))}return focusedElement||(focusedElement=focusManager.autoFocus(container)),focusedElement}}}}));
//# sourceMappingURL=autoFocuser.js.map
