{"version":3,"sources":["components/itemcontextmenu.js"],"names":["define","appHost","globalize","connectionManager","itemHelper","appRouter","playbackManager","loading","appSettings","browser","actionsheet","getCommands","options","item","user","canPlay","restrictOptions","operaTv","web0s","Policy","IsAdministrator","commands","MediaType","play","push","name","translate","id","icon","playAllFromHere","Type","canQueue","queue","IsFolder","CollectionType","shuffle","instantMix","isLocalItem","length","divider","supportsAddingToCollection","supportsAddingToPlaylist","EnableLiveTvManagement","cancelTimer","Status","CanDelete","deleteItem","CanDownload","supports","canEdit","edit","text","canEditImages","editImages","LocationType","editSubtitles","identify","canIdentify","MediaSources","moremediainfo","record","TimerId","Globalize","canRefreshMetadata","PlaylistItemId","playlistId","collectionId","share","canShare","sync","canSync","openAlbum","AlbumId","openArtist","ArtistItems","getResolveFunction","resolve","changed","deleted","command","updated","executeCommand","itemId","Id","serverId","ServerId","apiClient","getApiClient","Promise","reject","require","collectionEditor","show","items","then","playlistEditor","fileDownloader","downloadHref","getItemDownloadUrl","download","url","textAreaCopy","textArea","document","createElement","value","body","appendChild","focus","select","execCommand","toast","prompt","removeChild","undefined","navigator","clipboard","writeText","subtitleEditor","editItem","serverInfo","recordingEditor","metadataEditor","imageEditor","itemIdentifier","itemMediaInfo","refresh","refreshDialog","itemIds","mode","showItem","recordingCreator","deleteHelper","navigate","title","Name","Overview","ajax","getUrl","EntryIds","join","type","Ids","deleteTimer","recordingHelper","timerId","cancelTimerWithConfirmation","deleteSeriesTimer","cancelSeriesTimerWithConfirmation","resume","queueNext","method","startPosition","UserData","PlaybackPositionTicks","ids","ChannelId","startPositionTicks","positionTo","resolveOnClick"],"mappings":"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","file":"itemcontextmenu.js","sourcesContent":["define([\"apphost\", \"globalize\", \"connectionManager\", \"itemHelper\", \"appRouter\", \"playbackManager\", \"loading\", \"appSettings\", \"browser\", \"actionsheet\"], function (appHost, globalize, connectionManager, itemHelper, appRouter, playbackManager, loading, appSettings, browser, actionsheet) {\n    \"use strict\";\n\n    function getCommands(options) {\n        var item = options.item;\n        var user = options.user;\n\n        var canPlay = playbackManager.canPlay(item);\n        var restrictOptions = (browser.operaTv || browser.web0s) && !user.Policy.IsAdministrator;\n\n        var commands = [];\n\n        if (canPlay && item.MediaType !== \"Photo\") {\n            if (options.play !== false) {\n                commands.push({\n                    name: globalize.translate(\"Play\"),\n                    id: \"resume\",\n                    icon: \"&#xE037;\"\n                });\n            }\n\n            if (options.playAllFromHere && item.Type !== \"Program\" && item.Type !== \"TvChannel\") {\n                commands.push({\n                    name: globalize.translate(\"PlayAllFromHere\"),\n                    id: \"playallfromhere\",\n                    icon: \"&#xE037;\"\n                });\n            }\n        }\n\n        if (playbackManager.canQueue(item)) {\n            if (options.queue !== false) {\n                commands.push({\n                    name: globalize.translate(\"AddToPlayQueue\"),\n                    id: \"queue\",\n                    icon: \"playlist_add\"\n                });\n            }\n\n            if (options.queue !== false) {\n                commands.push({\n                    name: globalize.translate(\"PlayNext\"),\n                    id: \"queuenext\",\n                    icon: \"playlist_add\"\n                });\n            }\n\n            //if (options.queueAllFromHere) {\n            //    commands.push({\n            //        name: globalize.translate(\"QueueAllFromHere\"),\n            //        id: \"queueallfromhere\"\n            //    });\n            //}\n        }\n\n        if (item.IsFolder || item.Type === \"MusicArtist\" || item.Type === \"MusicGenre\") {\n            if (item.CollectionType !== \"livetv\") {\n                if (options.shuffle !== false) {\n                    commands.push({\n                        name: globalize.translate(\"Shuffle\"),\n                        id: \"shuffle\",\n                        icon: \"shuffle\"\n                    });\n                }\n            }\n        }\n\n        if (item.MediaType === \"Audio\" || item.Type === \"MusicAlbum\" || item.Type === \"MusicArtist\" || item.Type === \"MusicGenre\") {\n            if (options.instantMix !== false && !itemHelper.isLocalItem(item)) {\n                commands.push({\n                    name: globalize.translate(\"InstantMix\"),\n                    id: \"instantmix\",\n                    icon: \"explore\"\n                });\n            }\n        }\n\n        if (commands.length) {\n            commands.push({\n                divider: true\n            });\n        }\n\n        if (!restrictOptions) {\n            if (itemHelper.supportsAddingToCollection(item)) {\n                commands.push({\n                    name: globalize.translate(\"AddToCollection\"),\n                    id: \"addtocollection\",\n                    icon: \"playlist_add\"\n                });\n            }\n\n            if (itemHelper.supportsAddingToPlaylist(item)) {\n                commands.push({\n                    name: globalize.translate(\"AddToPlaylist\"),\n                    id: \"addtoplaylist\",\n                    icon: \"playlist_add\"\n                });\n            }\n        }\n\n        if ((item.Type === \"Timer\") && user.Policy.EnableLiveTvManagement && options.cancelTimer !== false) {\n            commands.push({\n                name: globalize.translate(\"CancelRecording\"),\n                id: \"canceltimer\",\n                icon: \"cancel\"\n            });\n        }\n\n        if ((item.Type === \"Recording\" && item.Status === \"InProgress\") && user.Policy.EnableLiveTvManagement && options.cancelTimer !== false) {\n            commands.push({\n                name: globalize.translate(\"CancelRecording\"),\n                id: \"canceltimer\",\n                icon: \"cancel\"\n            });\n        }\n\n        if ((item.Type === \"SeriesTimer\") && user.Policy.EnableLiveTvManagement && options.cancelTimer !== false) {\n            commands.push({\n                name: globalize.translate(\"CancelSeries\"),\n                id: \"cancelseriestimer\",\n                icon: \"cancel\"\n            });\n        }\n\n        if (item.CanDelete && options.deleteItem !== false) {\n\n            if (item.Type === \"Playlist\" || item.Type === \"BoxSet\") {\n                commands.push({\n                    name: globalize.translate(\"Delete\"),\n                    id: \"delete\",\n                    icon: \"delete\"\n                });\n            } else {\n                commands.push({\n                    name: globalize.translate(\"DeleteMedia\"),\n                    id: \"delete\",\n                    icon: \"delete\"\n                });\n            }\n        }\n\n        // Books are promoted to major download Button and therefor excluded in the context menu\n        if ((item.CanDownload && appHost.supports(\"filedownload\")) && item.Type !== \"Book\") {\n            commands.push({\n                name: globalize.translate(\"Download\"),\n                id: \"download\",\n                icon: \"file_download\"\n            });\n\n            commands.push({\n                name: globalize.translate(\"CopyStreamURL\"),\n                id: \"copy-stream\",\n                icon: \"content_copy\"\n            });\n        }\n\n        if (commands.length) {\n            commands.push({\n                divider: true\n            });\n        }\n\n        var canEdit = itemHelper.canEdit(user, item);\n        if (canEdit) {\n            if (options.edit !== false && item.Type !== \"SeriesTimer\") {\n                var text = (item.Type === \"Timer\" || item.Type === \"SeriesTimer\") ? globalize.translate(\"Edit\") : globalize.translate(\"EditMetadata\");\n                commands.push({\n                    name: text,\n                    id: \"edit\",\n                    icon: \"edit\"\n                });\n            }\n        }\n\n        if (itemHelper.canEditImages(user, item)) {\n            if (options.editImages !== false) {\n                commands.push({\n                    name: globalize.translate(\"EditImages\"),\n                    id: \"editimages\",\n                    icon: \"image\"\n                });\n            }\n        }\n\n        if (canEdit) {\n            if (item.MediaType === \"Video\" && item.Type !== \"TvChannel\" && item.Type !== \"Program\" && item.LocationType !== \"Virtual\" && !(item.Type === \"Recording\" && item.Status !== \"Completed\")) {\n                if (options.editSubtitles !== false) {\n                    commands.push({\n                        name: globalize.translate(\"EditSubtitles\"),\n                        id: \"editsubtitles\",\n                        icon: \"closed_caption\"\n                    });\n                }\n            }\n        }\n\n        if (options.identify !== false) {\n            if (itemHelper.canIdentify(user, item)) {\n                commands.push({\n                    name: globalize.translate(\"Identify\"),\n                    id: \"identify\",\n                    icon: \"edit\"\n                });\n            }\n        }\n\n        if (item.MediaSources) {\n            if (options.moremediainfo !== false) {\n                commands.push({\n                    name: globalize.translate(\"MoreMediaInfo\"),\n                    id: \"moremediainfo\",\n                    icon: \"info\"\n                });\n            }\n        }\n\n        if (item.Type === \"Program\" && options.record !== false) {\n            if (item.TimerId) {\n                commands.push({\n                    name: Globalize.translate(\"ManageRecording\"),\n                    id: \"record\",\n                    icon: \"fiber_manual_record\"\n                });\n            }\n        }\n\n        if (item.Type === \"Program\" && options.record !== false) {\n            if (!item.TimerId) {\n                commands.push({\n                    name: Globalize.translate(\"Record\"),\n                    id: \"record\",\n                    icon: \"fiber_manual_record\"\n                });\n            }\n        }\n\n        if (itemHelper.canRefreshMetadata(item, user)) {\n            commands.push({\n                name: globalize.translate(\"RefreshMetadata\"),\n                id: \"refresh\",\n                icon: \"refresh\"\n            });\n        }\n\n        if (item.PlaylistItemId && options.playlistId) {\n            commands.push({\n                name: globalize.translate(\"RemoveFromPlaylist\"),\n                id: \"removefromplaylist\",\n                icon: \"remove\"\n            });\n        }\n\n        if (options.collectionId) {\n            commands.push({\n                name: globalize.translate(\"RemoveFromCollection\"),\n                id: \"removefromcollection\",\n                icon: \"remove\"\n            });\n        }\n\n        if (!restrictOptions) {\n            if (options.share === true) {\n                if (itemHelper.canShare(item, user)) {\n                    commands.push({\n                        name: globalize.translate(\"Share\"),\n                        id: \"share\",\n                        icon: \"share\"\n                    });\n                }\n            }\n        }\n\n        if (options.sync !== false) {\n            if (itemHelper.canSync(user, item)) {\n                commands.push({\n                    name: globalize.translate(\"Sync\"),\n                    id: \"sync\",\n                    icon: \"sync\"\n                });\n            }\n        }\n\n        if (options.openAlbum !== false && item.AlbumId && item.MediaType !== \"Photo\") {\n            commands.push({\n                name: Globalize.translate(\"ViewAlbum\"),\n                id: \"album\",\n                icon: \"album\"\n            });\n        }\n\n        if (options.openArtist !== false && item.ArtistItems && item.ArtistItems.length) {\n            commands.push({\n                name: Globalize.translate(\"ViewArtist\"),\n                id: \"artist\",\n                icon: \"person\"\n            });\n        }\n\n        return commands;\n    }\n\n    function getResolveFunction(resolve, id, changed, deleted) {\n        return function () {\n            resolve({\n                command: id,\n                updated: changed,\n                deleted: deleted\n            });\n        };\n    }\n\n    function executeCommand(item, id, options) {\n        var itemId = item.Id;\n        var serverId = item.ServerId;\n        var apiClient = connectionManager.getApiClient(serverId);\n\n        return new Promise(function (resolve, reject) {\n            switch (id) {\n                case \"addtocollection\":\n                    require([\"collectionEditor\"], function (collectionEditor) {\n                        new collectionEditor().show({\n                            items: [itemId],\n                            serverId: serverId\n                        }).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case \"addtoplaylist\":\n                    require([\"playlistEditor\"], function (playlistEditor) {\n                        new playlistEditor().show({\n                            items: [itemId],\n                            serverId: serverId\n                        }).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case \"download\":\n                    require([\"fileDownloader\"], function (fileDownloader) {\n                        var downloadHref = apiClient.getItemDownloadUrl(itemId);\n                        fileDownloader.download([{\n                            url: downloadHref,\n                            itemId: itemId,\n                            serverId: serverId\n                        }]);\n                        getResolveFunction(getResolveFunction(resolve, id), id)();\n                    });\n                    break;\n                case \"copy-stream\":\n                    var downloadHref = apiClient.getItemDownloadUrl(itemId);\n                    var textAreaCopy = function () {\n                        var textArea = document.createElement(\"textarea\");\n                        textArea.value = downloadHref;\n                        document.body.appendChild(textArea);\n                        textArea.focus();\n                        textArea.select();\n                        if (document.execCommand(\"copy\")) {\n                            require([\"toast\"], function (toast) {\n                                toast(globalize.translate(\"CopyStreamURLSuccess\"));\n                            });\n                        } else {\n                            prompt(globalize.translate(\"CopyStreamURL\"), downloadHref);\n                        }\n                        document.body.removeChild(textArea);\n                    };\n                    if (navigator.clipboard === undefined) {\n                        textAreaCopy();\n                    } else {\n                        navigator.clipboard.writeText(downloadHref).then(function () {\n                            require([\"toast\"], function (toast) {\n                                toast(globalize.translate(\"CopyStreamURLSuccess\"));\n                            });\n                        }, textAreaCopy);\n                    }\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"editsubtitles\":\n                    require([\"subtitleEditor\"], function (subtitleEditor) {\n                        subtitleEditor.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case \"edit\":\n                    editItem(apiClient, item).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    break;\n                case \"editimages\":\n                    require([\"imageEditor\"], function (imageEditor) {\n                        imageEditor.show({\n                            itemId: itemId,\n                            serverId: serverId\n                        }).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case \"identify\":\n                    require([\"itemIdentifier\"], function (itemIdentifier) {\n                        itemIdentifier.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case \"moremediainfo\":\n                    require([\"itemMediaInfo\"], function (itemMediaInfo) {\n                        itemMediaInfo.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case \"refresh\":\n                    refresh(apiClient, item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"open\":\n                    appRouter.showItem(item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"play\":\n                    play(item, false);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"resume\":\n                    play(item, true);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"queue\":\n                    play(item, false, true);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"queuenext\":\n                    play(item, false, true, true);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"record\":\n                    require([\"recordingCreator\"], function (recordingCreator) {\n                        recordingCreator.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case \"shuffle\":\n                    playbackManager.shuffle(item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"instantmix\":\n                    playbackManager.instantMix(item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"delete\":\n                    deleteItem(apiClient, item).then(getResolveFunction(resolve, id, true, true), getResolveFunction(resolve, id));\n                    break;\n                case \"share\":\n                    navigator.share({\n                        title: item.Name,\n                        text: item.Overview,\n                        url: \"https://github.com/jellyfin/jellyfin\"\n                    });\n                    break;\n                case \"album\":\n                    appRouter.showItem(item.AlbumId, item.ServerId);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"artist\":\n                    appRouter.showItem(item.ArtistItems[0].Id, item.ServerId);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"playallfromhere\":\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"queueallfromhere\":\n                    getResolveFunction(resolve, id)();\n                    break;\n                case \"removefromplaylist\":\n                    apiClient.ajax({\n                        url: apiClient.getUrl(\"Playlists/\" + options.playlistId + \"/Items\", {\n                            EntryIds: [item.PlaylistItemId].join(\",\")\n                        }),\n                        type: \"DELETE\"\n                    }).then(function () {\n                        getResolveFunction(resolve, id, true)();\n                    });\n                    break;\n                case \"removefromcollection\":\n                    apiClient.ajax({\n                        type: \"DELETE\",\n                        url: apiClient.getUrl(\"Collections/\" + options.collectionId + \"/Items\", {\n\n                            Ids: [item.Id].join(\",\")\n                        })\n                    }).then(function () {\n                        getResolveFunction(resolve, id, true)();\n                    });\n                    break;\n                case \"canceltimer\":\n                    deleteTimer(apiClient, item, resolve, id);\n                    break;\n                case \"cancelseriestimer\":\n                    deleteSeriesTimer(apiClient, item, resolve, id);\n                    break;\n                default:\n                    reject();\n                    break;\n            }\n        });\n    }\n\n    function deleteTimer(apiClient, item, resolve, command) {\n        require([\"recordingHelper\"], function (recordingHelper) {\n            var timerId = item.TimerId || item.Id;\n            recordingHelper.cancelTimerWithConfirmation(timerId, item.ServerId).then(function () {\n                getResolveFunction(resolve, command, true)();\n            });\n        });\n    }\n\n    function deleteSeriesTimer(apiClient, item, resolve, command) {\n        require([\"recordingHelper\"], function (recordingHelper) {\n            recordingHelper.cancelSeriesTimerWithConfirmation(item.Id, item.ServerId).then(function () {\n                getResolveFunction(resolve, command, true)();\n            });\n        });\n    }\n\n    function play(item, resume, queue, queueNext) {\n        var method = queue ? (queueNext ? \"queueNext\" : \"queue\") : \"play\";\n\n        var startPosition = 0;\n        if (resume && item.UserData && item.UserData.PlaybackPositionTicks) {\n            startPosition = item.UserData.PlaybackPositionTicks;\n        }\n\n        if (item.Type === \"Program\") {\n            playbackManager[method]({\n                ids: [item.ChannelId],\n                startPositionTicks: startPosition,\n                serverId: item.ServerId\n            });\n        } else {\n            playbackManager[method]({\n                items: [item],\n                startPositionTicks: startPosition\n            });\n        }\n    }\n\n    function editItem(apiClient, item) {\n        return new Promise(function (resolve, reject) {\n            var serverId = apiClient.serverInfo().Id;\n\n            if (item.Type === \"Timer\") {\n                require([\"recordingEditor\"], function (recordingEditor) {\n                    recordingEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            } else if (item.Type === \"SeriesTimer\") {\n                require([\"seriesRecordingEditor\"], function (recordingEditor) {\n                    recordingEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            } else {\n                require([\"metadataEditor\"], function (metadataEditor) {\n                    metadataEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            }\n        });\n    }\n\n    function deleteItem(apiClient, item) {\n        return new Promise(function (resolve, reject) {\n            require([\"deleteHelper\"], function (deleteHelper) {\n                deleteHelper.deleteItem({\n                    item: item,\n                    navigate: false\n                }).then(function () {\n                    resolve(true);\n                }, reject);\n            });\n        });\n    }\n\n    function refresh(apiClient, item) {\n        require([\"refreshDialog\"], function (refreshDialog) {\n            new refreshDialog({\n                itemIds: [item.Id],\n                serverId: apiClient.serverInfo().Id,\n                mode: item.Type === \"CollectionFolder\" ? \"scan\" : null\n            }).show();\n        });\n    }\n\n    function show(options) {\n        var commands = getCommands(options);\n        if (!commands.length) {\n            return Promise.reject();\n        }\n\n        return actionsheet.show({\n            items: commands,\n            positionTo: options.positionTo,\n            resolveOnClick: [\"share\"]\n        }).then(function (id) {\n            return executeCommand(options.item, id, options);\n        });\n    }\n\n    return {\n        getCommands: getCommands,\n        show: show\n    };\n});\n"]}