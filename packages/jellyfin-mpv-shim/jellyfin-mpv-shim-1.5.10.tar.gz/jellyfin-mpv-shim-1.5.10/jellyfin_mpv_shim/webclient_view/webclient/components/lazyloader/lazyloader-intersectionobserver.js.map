{"version":3,"sources":["components/lazyloader/lazyloader-intersectionobserver.js"],"names":["define","require","browser","LazyLoader","options","this","edge","prototype","createObserver","observerOptions","loadedCount","callback","rootMargin","observerId","Date","getTime","self","observer","IntersectionObserver","entries","j","length2","length","entry","intersectionRatio","target","unobserve","elementCount","destroyObserver","addElements","elements","i","observe","disconnect","destroy","lazyChildren","elem","unveilElements","root","getElementsByClassName"],"mappings":"AAAA,aAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,QAASC,SAG9C,SAASC,WAAWC,SAEhBC,KAAKD,QAAUA,QAgGnB,OA7FIF,QAAQI,MACRL,QAAQ,CAAC,uBAGbE,WAAWI,UAAUC,eAAiB,WAElC,IAAIC,gBAAkB,GAClBL,QAAUC,KAAKD,QACfM,YAAc,EACdC,SAAWP,QAAQO,SAEvBF,gBAAgBG,WAAa,MAE7B,IAAIC,WAAa,OAAQ,IAAIC,MAAOC,UAEhCC,KAAOX,KACPY,SAAW,IAAIC,sBAAqB,SAAUC,SAC9C,IAAK,IAAIC,EAAI,EAAGC,QAAUF,QAAQG,OAAQF,EAAIC,QAASD,IAAK,CACxD,IAAIG,MAAQJ,QAAQC,GAEpB,GAAIG,MAAMC,kBAAoB,EAAG,CAG7B,IAAIC,OAASF,MAAME,OAEnBR,SAASS,UAAUD,QAEdA,OAAOZ,cACRY,OAAOZ,YAAc,EACrBF,SAASc,UACTf,aAEmBM,KAAKW,cACpBX,KAAKY,uBAMzBnB,iBAGAJ,KAAKY,SAAWA,UAGpBd,WAAWI,UAAUsB,YAAc,SAAUC,UAEzC,IAAIb,SAAWZ,KAAKY,SAEfA,WACDZ,KAAKG,iBACLS,SAAWZ,KAAKY,UAGpBZ,KAAKsB,cAAgBtB,KAAKsB,cAAgB,GAAKG,SAASR,OAExD,IAAK,IAAIS,EAAI,EAAGT,OAASQ,SAASR,OAAQS,EAAIT,OAAQS,IAClDd,SAASe,QAAQF,SAASC,KAIlC5B,WAAWI,UAAUqB,gBAAkB,SAAUE,UAE7C,IAAIb,SAAWZ,KAAKY,SAEhBA,WACAA,SAASgB,aACT5B,KAAKY,SAAW,OAIxBd,WAAWI,UAAU2B,QAAU,SAAUJ,UAErCzB,KAAKuB,kBACLvB,KAAKD,QAAU,MAcnBD,WAAWgC,aAAe,SAAUC,KAAMzB,WAX1C,SAAS0B,eAAeP,SAAUQ,KAAM3B,UAE/BmB,SAASR,QAGG,IAAInB,WAAW,CAC5BQ,SAAUA,WAEHkB,YAAYC,UAKvBO,CAAeD,KAAKG,uBAAuB,QAASH,EAAMzB,WAGvDR","file":"lazyloader-intersectionobserver.js","sourcesContent":["define(['require', 'browser'], function (require, browser) {\n    'use strict';\n\n    function LazyLoader(options) {\n\n        this.options = options;\n    }\n\n    if (browser.edge) {\n        require(['css!./lazyedgehack']);\n    }\n\n    LazyLoader.prototype.createObserver = function () {\n\n        var observerOptions = {};\n        var options = this.options;\n        var loadedCount = 0;\n        var callback = options.callback;\n\n        observerOptions.rootMargin = \"50%\";\n\n        var observerId = 'obs' + new Date().getTime();\n\n        var self = this;\n        var observer = new IntersectionObserver(function (entries) {\n            for (var j = 0, length2 = entries.length; j < length2; j++) {\n                var entry = entries[j];\n\n                if (entry.intersectionRatio > 0) {\n\n                    // Stop watching and load the image\n                    var target = entry.target;\n\n                    observer.unobserve(target);\n\n                    if (!target[observerId]) {\n                        target[observerId] = 1;\n                        callback(target);\n                        loadedCount++;\n\n                        if (loadedCount >= self.elementCount) {\n                            self.destroyObserver();\n                        }\n                    }\n                }\n            }\n        },\n        observerOptions\n        );\n\n        this.observer = observer;\n    };\n\n    LazyLoader.prototype.addElements = function (elements) {\n\n        var observer = this.observer;\n\n        if (!observer) {\n            this.createObserver();\n            observer = this.observer;\n        }\n\n        this.elementCount = (this.elementCount || 0) + elements.length;\n\n        for (var i = 0, length = elements.length; i < length; i++) {\n            observer.observe(elements[i]);\n        }\n    };\n\n    LazyLoader.prototype.destroyObserver = function (elements) {\n\n        var observer = this.observer;\n\n        if (observer) {\n            observer.disconnect();\n            this.observer = null;\n        }\n    };\n\n    LazyLoader.prototype.destroy = function (elements) {\n\n        this.destroyObserver();\n        this.options = null;\n    };\n\n    function unveilElements(elements, root, callback) {\n\n        if (!elements.length) {\n            return;\n        }\n        var lazyLoader = new LazyLoader({\n            callback: callback\n        });\n        lazyLoader.addElements(elements);\n    }\n\n    LazyLoader.lazyChildren = function (elem, callback) {\n\n        unveilElements(elem.getElementsByClassName('lazy'), elem, callback);\n    };\n\n    return LazyLoader;\n});\n"]}