{"version":3,"sources":["components/playback/playbackorientation.js"],"names":["define","playbackManager","layoutManager","events","orientationLocked","onOrientationChangeSuccess","onOrientationChangeError","err","console","error","on","e","player","state","isLocalPlayer","isExternalPlayer","isPlayingVideo","mobile","lockOrientation","screen","mozLockOrientation","msLockOrientation","orientation","lock","promise","then","playbackStopInfo","nextMediaType","unlockOrientation","mozUnlockOrientation","msUnlockOrientation","unlock"],"mappings":"AAAA,aAAAA,OAAO,CAAC,kBAAmB,gBAAiB,WAAW,SAAUC,gBAAiBC,cAAeC,QAG7F,IAAIC,kBAEJ,SAASC,6BACLD,mBAAoB,EAGxB,SAASE,yBAAyBC,KAC9BH,mBAAoB,EACpBI,QAAQC,MAAM,8BAAgCF,KAGlDJ,OAAOO,GAAGT,gBAAiB,iBAAiB,SAAUU,EAAGC,OAAQC,OAI7D,GAFmBD,OAAOE,gBAAkBF,OAAOG,kBAAoBd,gBAAgBe,eAAeJ,SAElFV,cAAce,OAAQ,CACtC,IAAIC,gBAAkBC,OAAOD,iBAAmBC,OAAOC,oBAAsBD,OAAOE,mBAAsBF,OAAOG,aAAeH,OAAOG,YAAYC,KAEnJ,GAAIL,gBAEA,IACI,IAAIM,QAAUN,gBAAgB,aAC1BM,QAAQC,KACRD,QAAQC,KAAKpB,2BAA4BC,0BAGzCF,kBAAoBoB,QAE1B,MAAOjB,KACLD,yBAAyBC,UAMzCJ,OAAOO,GAAGT,gBAAiB,gBAAgB,SAAUU,EAAGe,kBAEpD,GAAItB,oBAAsBsB,iBAAiBC,cAAe,CAEtD,IAAIC,kBAAoBT,OAAOS,mBAAqBT,OAAOU,sBAAwBV,OAAOW,qBAAwBX,OAAOG,aAAeH,OAAOG,YAAYS,OAE3J,GAAIH,kBAAmB,CACnB,IACIA,oBACF,MAAOrB,KACLC,QAAQC,MAAM,gCAAkCF,KAEpDH,mBAAoB","file":"playbackorientation.js","sourcesContent":["define(['playbackManager', 'layoutManager', 'events'], function (playbackManager, layoutManager, events) {\n    \"use strict\";\n\n    var orientationLocked;\n\n    function onOrientationChangeSuccess() {\n        orientationLocked = true;\n    }\n\n    function onOrientationChangeError(err) {\n        orientationLocked = false;\n        console.error('error locking orientation: ' + err);\n    }\n\n    events.on(playbackManager, 'playbackstart', function (e, player, state) {\n\n        var isLocalVideo = player.isLocalPlayer && !player.isExternalPlayer && playbackManager.isPlayingVideo(player);\n\n        if (isLocalVideo && layoutManager.mobile) {\n            var lockOrientation = screen.lockOrientation || screen.mozLockOrientation || screen.msLockOrientation || (screen.orientation && screen.orientation.lock);\n\n            if (lockOrientation) {\n\n                try {\n                    var promise = lockOrientation('landscape');\n                    if (promise.then) {\n                        promise.then(onOrientationChangeSuccess, onOrientationChangeError);\n                    } else {\n                        // returns a boolean\n                        orientationLocked = promise;\n                    }\n                } catch (err) {\n                    onOrientationChangeError(err);\n                }\n            }\n        }\n    });\n\n    events.on(playbackManager, 'playbackstop', function (e, playbackStopInfo) {\n\n        if (orientationLocked && !playbackStopInfo.nextMediaType) {\n\n            var unlockOrientation = screen.unlockOrientation || screen.mozUnlockOrientation || screen.msUnlockOrientation || (screen.orientation && screen.orientation.unlock);\n\n            if (unlockOrientation) {\n                try {\n                    unlockOrientation();\n                } catch (err) {\n                    console.error('error unlocking orientation: ' + err);\n                }\n                orientationLocked = false;\n            }\n        }\n    });\n});\n"]}