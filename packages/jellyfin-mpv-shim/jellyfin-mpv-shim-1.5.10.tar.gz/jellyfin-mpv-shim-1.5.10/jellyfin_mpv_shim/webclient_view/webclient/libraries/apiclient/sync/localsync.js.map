{"version":3,"sources":["libraries/apiclient/sync/localsync.js"],"names":["define","connectionManager","isSyncing","sync","options","console","debug","Promise","resolve","reject","require","MultiServerSync","appSettings","cameraUploadServers","then","err"],"mappings":"AAAA,aAAAA,OAAO,CAAC,sBAAsB,SAASC,mBAEnC,IAAIC,UACJ,MAAO,CACHC,KAAM,SAAAA,KAASC,SACX,OAAOC,QAAQC,MAAM,8BAA+BJ,UAAYK,QAAQC,WAAaN,WAAY,EAAI,IAAIK,SAAQ,SAASC,QAASC,QAC/HC,QAAQ,CAAC,kBAAmB,gBAAgB,SAASC,gBAAiBC,cAClER,QAAUA,SAAW,IAAYS,oBAAsBD,YAAYC,uBAAwB,IAAIF,iBAAiBR,KAAKF,kBAAmBG,SAASU,MAAK,WAClJZ,UAAY,KAAMM,aACnB,SAASO,KACRb,UAAY,KAAMO,OAAOM","file":"localsync.js","sourcesContent":["define([\"connectionManager\"], function(connectionManager) {\n    \"use strict\";\n    var isSyncing;\n    return {\n        sync: function(options) {\n            return console.debug(\"localSync.sync starting...\"), isSyncing ? Promise.resolve() : (isSyncing = !0, new Promise(function(resolve, reject) {\n                require([\"multiserversync\", \"appSettings\"], function(MultiServerSync, appSettings) {\n                    options = options || {}, options.cameraUploadServers = appSettings.cameraUploadServers(), (new MultiServerSync).sync(connectionManager, options).then(function() {\n                        isSyncing = null, resolve()\n                    }, function(err) {\n                        isSyncing = null, reject(err)\n                    })\n                })\n            }))\n        }\n    }\n});\n"]}