{"version":3,"sources":["libraries/apiclient/appStorage.js"],"names":["define","onCachePutFail","e","console","error","updateCache","instance","cache","put","Response","JSON","stringify","localData","catch","onCacheOpened","result","this","MyStore","setItem","name","value","localStorage","getItem","removeItem","self","caches","open","then","bind","err"],"mappings":"AAAA,aAAAA,OAAO,IAAI,WAGP,SAASC,eAAeC,GACpBC,QAAQC,MAAM,0BAA4BF,GAG9C,SAASG,YAAYC,UACbA,SAASC,OACTD,SAASC,MAAMC,IAAI,OAAQ,IAAIC,SAASC,KAAKC,UAAUL,SAASM,aAAaC,MAAMZ,gBAI3F,SAASa,cAAcC,QACnBC,KAAKT,MAAQQ,OACbC,KAAKJ,UAAY,GAoCrB,OAAO,IAjCP,SAASK,UAELD,KAAKE,QAAU,SAASC,KAAMC,OAC1BC,aAAaH,QAAQC,KAAMC,OAEvBJ,KAAKJ,WAAaI,KAAKJ,UAAUO,QAAUC,QAC3CJ,KAAKJ,UAAUO,MAAQC,MACvBf,YAAYW,QAIpBA,KAAKM,QAAU,SAASH,MACpB,OAAOE,aAAaC,QAAQH,OAGhCH,KAAKO,WAAa,SAASJ,MACvBE,aAAaE,WAAWJ,MAEpBH,KAAKJ,mBACEI,KAAKJ,UAAUO,MACtBd,YAAYW,QAIpB,IACQQ,KAAKC,QACLD,KAAKC,OAAOC,KAAK,YAAYC,KAAKb,cAAcc,KAAKZ,OAE3D,MAAOa,KACL1B,QAAQC,MAAM,wBAA0ByB","file":"appStorage.js","sourcesContent":["define([], function() {\n    \"use strict\";\n\n    function onCachePutFail(e) {\n        console.error(\"cannot put to a cache: \" + e);\n    }\n\n    function updateCache(instance) {\n        if (instance.cache) {\n            instance.cache.put(\"data\", new Response(JSON.stringify(instance.localData))).catch(onCachePutFail);\n        }\n    }\n\n    function onCacheOpened(result) {\n        this.cache = result;\n        this.localData = {};\n    }\n\n    function MyStore() {\n\n        this.setItem = function(name, value) {\n            localStorage.setItem(name, value);\n\n            if (this.localData && this.localData[name] !== value) {\n                this.localData[name] = value;\n                updateCache(this);\n            }\n        };\n\n        this.getItem = function(name) {\n            return localStorage.getItem(name);\n        };\n\n        this.removeItem = function(name) {\n            localStorage.removeItem(name);\n\n            if (this.localData) {\n                delete this.localData[name];\n                updateCache(this);\n            }\n        };\n\n        try {\n            if (self.caches) {\n                self.caches.open(\"embydata\").then(onCacheOpened.bind(this));\n            }\n        } catch (err) {\n            console.error(\"error opening cache: \" + err);\n        }\n    }\n\n    return new MyStore;\n});\n"]}