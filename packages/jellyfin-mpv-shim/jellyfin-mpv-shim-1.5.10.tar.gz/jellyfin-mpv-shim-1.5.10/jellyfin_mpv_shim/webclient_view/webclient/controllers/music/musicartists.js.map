{"version":3,"sources":["controllers/music/musicartists.js"],"names":["define","layoutManager","loading","events","libraryBrowser","imageLoader","alphaPicker","listView","cardBuilder","appHost","view","params","tabContent","getPageData","context","key","getSavedQueryKey","pageData","data","query","SortBy","SortOrder","Recursive","Fields","StartIndex","ImageTypeLimit","EnableImageTypes","Limit","getSavedView","ParentId","topParentId","loadSavedQueryValues","getQuery","savedQueryKey","self","mode","onViewStyleChange","viewStyle","getCurrentViewStyle","itemsContainer","querySelector","classList","add","remove","innerHTML","reloadItems","page","show","isLoading","ApiClient","getAlbumArtists","getCurrentUserId","getArtists","then","result","onNextPageClick","onPreviousPageClick","html","window","scrollTo","updateFilterControls","i","length","pagingHtml","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","addLayoutButton","sortButton","filterButton","getListViewHtml","items","Items","sortBy","getCardsHtml","shape","showTitle","coverImage","cardLayout","lazy","centerText","overlayPlayButton","elems","querySelectorAll","addEventListener","lazyChildren","saveQueryValues","hide","require","autoFocuser","autoFocus","value","NameStartsWithOrGreater","this","showFilterMenu","filterDialogFactory","filterDialog","serverId","on","initPage","alphaPickerElement","e","newValue","detail","element","valueChangeEvent","btnSelectView","showLayoutMenu","target","split","saveViewSetting","renderTab","destroy"],"mappings":"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","file":"musicartists.js","sourcesContent":["define([\"layoutManager\", \"loading\", \"events\", \"libraryBrowser\", \"imageLoader\", \"alphaPicker\", \"listView\", \"cardBuilder\", \"apphost\", \"emby-itemscontainer\"], function (layoutManager, loading, events, libraryBrowser, imageLoader, alphaPicker, listView, cardBuilder, appHost) {\n    \"use strict\";\n\n    return function (view, params, tabContent) {\n        function getPageData(context) {\n            var key = getSavedQueryKey(context);\n            var pageData = data[key];\n\n            if (!pageData) {\n                pageData = data[key] = {\n                    query: {\n                        SortBy: \"SortName\",\n                        SortOrder: \"Ascending\",\n                        Recursive: true,\n                        Fields: \"PrimaryImageAspectRatio,SortName,BasicSyncInfo\",\n                        StartIndex: 0,\n                        ImageTypeLimit: 1,\n                        EnableImageTypes: \"Primary,Backdrop,Banner,Thumb\",\n                        Limit: 100\n                    },\n                    view: libraryBrowser.getSavedView(key) || \"Poster\"\n                };\n                pageData.query.ParentId = params.topParentId;\n                libraryBrowser.loadSavedQueryValues(key, pageData.query);\n            }\n\n            return pageData;\n        }\n\n        function getQuery(context) {\n            return getPageData(context).query;\n        }\n\n        function getSavedQueryKey(context) {\n            if (!context.savedQueryKey) {\n                context.savedQueryKey = libraryBrowser.getSavedQueryKey(self.mode);\n            }\n\n            return context.savedQueryKey;\n        }\n\n        function onViewStyleChange() {\n            var viewStyle = self.getCurrentViewStyle();\n            var itemsContainer = tabContent.querySelector(\".itemsContainer\");\n\n            if (\"List\" == viewStyle) {\n                itemsContainer.classList.add(\"vertical-list\");\n                itemsContainer.classList.remove(\"vertical-wrap\");\n            } else {\n                itemsContainer.classList.remove(\"vertical-list\");\n                itemsContainer.classList.add(\"vertical-wrap\");\n            }\n\n            itemsContainer.innerHTML = \"\";\n        }\n\n        function reloadItems(page) {\n            loading.show();\n            isLoading = true;\n            var query = getQuery(page);\n            var promise = self.mode == 'albumartists' ?\n                ApiClient.getAlbumArtists(ApiClient.getCurrentUserId(), query) :\n                ApiClient.getArtists(ApiClient.getCurrentUserId(), query);\n            promise.then(function (result) {\n                function onNextPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    query.StartIndex += query.Limit;\n                    reloadItems(tabContent);\n                }\n\n                function onPreviousPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    query.StartIndex -= query.Limit;\n                    reloadItems(tabContent);\n                }\n\n                window.scrollTo(0, 0);\n                updateFilterControls(page);\n                var html;\n                var pagingHtml = libraryBrowser.getQueryPagingHtml({\n                    startIndex: query.StartIndex,\n                    limit: query.Limit,\n                    totalRecordCount: result.TotalRecordCount,\n                    showLimit: false,\n                    updatePageSizeSetting: false,\n                    addLayoutButton: false,\n                    sortButton: false,\n                    filterButton: false\n                });\n                var viewStyle = self.getCurrentViewStyle();\n                if (viewStyle == \"List\") {\n                    html = listView.getListViewHtml({\n                        items: result.Items,\n                        sortBy: query.SortBy\n                    });\n                } else if (viewStyle == \"PosterCard\") {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: \"square\",\n                        context: \"music\",\n                        showTitle: true,\n                        coverImage: true,\n                        cardLayout: true\n                    });\n                } else {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: \"square\",\n                        context: \"music\",\n                        showTitle: true,\n                        coverImage: true,\n                        lazy: true,\n                        centerText: true,\n                        overlayPlayButton: true\n                    });\n                }\n                var i;\n                var length;\n                var elems = tabContent.querySelectorAll(\".paging\");\n\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].innerHTML = pagingHtml;\n                }\n\n                elems = tabContent.querySelectorAll(\".btnNextPage\");\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener(\"click\", onNextPageClick);\n                }\n\n                elems = tabContent.querySelectorAll(\".btnPreviousPage\");\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener(\"click\", onPreviousPageClick);\n                }\n\n                var itemsContainer = tabContent.querySelector(\".itemsContainer\");\n                itemsContainer.innerHTML = html;\n                imageLoader.lazyChildren(itemsContainer);\n                libraryBrowser.saveQueryValues(getSavedQueryKey(page), query);\n                loading.hide();\n                isLoading = false;\n\n                require([\"autoFocuser\"], function (autoFocuser) {\n                    autoFocuser.autoFocus(tabContent);\n                });\n            });\n        }\n\n        function updateFilterControls(tabContent) {\n            var query = getQuery(tabContent);\n            self.alphaPicker.value(query.NameStartsWithOrGreater);\n        }\n\n        var self = this;\n        var data = {};\n        var isLoading = false;\n\n        self.showFilterMenu = function () {\n            require([\"components/filterdialog/filterdialog\"], function (filterDialogFactory) {\n                var filterDialog = new filterDialogFactory({\n                    query: getQuery(tabContent),\n                    mode: self.mode,\n                    serverId: ApiClient.serverId()\n                });\n                events.on(filterDialog, \"filterchange\", function () {\n                    getQuery(tabContent).StartIndex = 0;\n                    reloadItems(tabContent);\n                });\n                filterDialog.show();\n            });\n        };\n\n        self.getCurrentViewStyle = function () {\n            return getPageData(tabContent).view;\n        };\n\n        function initPage(tabContent) {\n            var alphaPickerElement = tabContent.querySelector(\".alphaPicker\");\n            var itemsContainer = tabContent.querySelector(\".itemsContainer\");\n\n            alphaPickerElement.addEventListener(\"alphavaluechanged\", function (e) {\n                var newValue = e.detail.value;\n                var query = getQuery(tabContent);\n                query.NameStartsWithOrGreater = newValue;\n                query.StartIndex = 0;\n                reloadItems(tabContent);\n            });\n            self.alphaPicker = new alphaPicker({\n                element: alphaPickerElement,\n                valueChangeEvent: \"click\"\n            });\n\n            tabContent.querySelector(\".alphaPicker\").classList.add(\"alphabetPicker-right\");\n            alphaPickerElement.classList.add(\"alphaPicker-fixed-right\");\n            itemsContainer.classList.add(\"padded-right-withalphapicker\");\n\n            tabContent.querySelector(\".btnFilter\").addEventListener(\"click\", function () {\n                self.showFilterMenu();\n            });\n            var btnSelectView = tabContent.querySelector(\".btnSelectView\");\n            btnSelectView.addEventListener(\"click\", function (e) {\n                libraryBrowser.showLayoutMenu(e.target, self.getCurrentViewStyle(), \"List,Poster,PosterCard\".split(\",\"));\n            });\n            btnSelectView.addEventListener(\"layoutchange\", function (e) {\n                var viewStyle = e.detail.viewStyle;\n                getPageData(tabContent).view = viewStyle;\n                libraryBrowser.saveViewSetting(getSavedQueryKey(tabContent), viewStyle);\n                getQuery(tabContent).StartIndex = 0;\n                onViewStyleChange();\n                reloadItems(tabContent);\n            });\n        }\n\n        initPage(tabContent);\n        onViewStyleChange();\n\n        self.renderTab = function () {\n            reloadItems(tabContent);\n            updateFilterControls(tabContent);\n        };\n\n        self.destroy = function () {};\n    };\n});\n"]}