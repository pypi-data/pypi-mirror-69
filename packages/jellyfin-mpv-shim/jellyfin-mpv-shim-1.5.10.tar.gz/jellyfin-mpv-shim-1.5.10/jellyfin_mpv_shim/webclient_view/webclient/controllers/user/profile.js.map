{"version":3,"sources":["controllers/user/profile.js"],"names":["define","UserPasswordPage","loading","libraryMenu","appHost","reloadUser","page","userId","getParameterByName","show","ApiClient","getUser","then","user","querySelector","innerHTML","Name","setTitle","imageUrl","PrimaryImageTag","getUserImageUrl","Id","tag","type","style","backgroundImage","Dashboard","getCurrentUser","loggedInUser","classList","add","remove","supports","Policy","IsAdministrator","EnableUserPreferenceAccess","hide","onFileReaderError","evt","target","error","code","NOT_FOUND_ERR","require","toast","Globalize","translate","ABORT_ERR","onFileReaderAbort","NOT_READABLE_ERR","view","params","addEventListener","confirm","deleteUserImage","click","setFiles","files","userImage","file","match","reader","FileReader","onerror","onabort","onload","result","uploadUserImage","readAsDataURL"],"mappings":"AAAA,aAAAA,OAAO,CAAC,+BAAgC,UAAW,cAAe,UAAW,gBAAgB,SAAUC,iBAAkBC,QAASC,YAAaC,SAG3I,SAASC,WAAWC,MAChB,IAAIC,OAASC,mBAAmB,UAChCN,QAAQO,OACRC,UAAUC,QAAQJ,QAAQK,MAAK,SAAUC,MACrCP,KAAKQ,cAAc,aAAaC,UAAYF,KAAKG,KACjDb,YAAYc,SAASJ,KAAKG,MAE1B,IAAIE,SAAW,wBACXL,KAAKM,kBACLD,SAAWR,UAAUU,gBAAgBP,KAAKQ,GAAI,CAC1CC,IAAKT,KAAKM,gBACVI,KAAM,aAIEjB,KAAKQ,cAAc,UACzBU,MAAMC,gBAAkB,OAASP,SAAW,IAEtDQ,UAAUC,iBAAiBf,MAAK,SAAUgB,cAClCf,KAAKM,iBACLb,KAAKQ,cAAc,gBAAgBe,UAAUC,IAAI,QACjDxB,KAAKQ,cAAc,mBAAmBe,UAAUE,OAAO,SAChD3B,QAAQ4B,SAAS,eAAiBJ,aAAaK,OAAOC,iBAAmBrB,KAAKoB,OAAOE,8BAC5F7B,KAAKQ,cAAc,mBAAmBe,UAAUC,IAAI,QACpDxB,KAAKQ,cAAc,gBAAgBe,UAAUE,OAAO,YAG5D7B,QAAQkC,UAIhB,SAASC,kBAAkBC,KAEvB,OADApC,QAAQkC,OACAE,IAAIC,OAAOC,MAAMC,MACrB,KAAKH,IAAIC,OAAOC,MAAME,cAClBC,QAAQ,CAAC,UAAU,SAAUC,OACzBA,MAAMC,UAAUC,UAAU,oBAE9B,MACJ,KAAKR,IAAIC,OAAOC,MAAMO,UAClBC,oBACA,MACJ,KAAKV,IAAIC,OAAOC,MAAMS,iBACtB,QACIN,QAAQ,CAAC,UAAU,SAAUC,OACzBA,MAAMC,UAAUC,UAAU,sBAK1C,SAASE,kBAAkBV,KACvBpC,QAAQkC,OACRO,QAAQ,CAAC,UAAU,SAAUC,OACzBA,MAAMC,UAAUC,UAAU,yBA2BlC,OAAO,SAAUI,KAAMC,QACnB9C,WAAW6C,MACX,IAAIjD,iBAAiBiD,KAAMC,QAC3BD,KAAKpC,cAAc,mBAAmBsC,iBAAiB,SAAS,WAC5DT,QAAQ,CAAC,YAAY,SAAUU,SAC3BA,QAAQR,UAAUC,UAAU,2BAA4BD,UAAUC,UAAU,gBAAgBlC,MAAK,WAC7FV,QAAQO,OACR,IAAIF,OAASC,mBAAmB,UAChCE,UAAU4C,gBAAgB/C,OAAQ,WAAWK,MAAK,WAC9CV,QAAQkC,OACR/B,WAAW6C,kBAK3BA,KAAKpC,cAAc,gBAAgBsC,iBAAiB,SAAS,SAAUd,KACnEY,KAAKpC,cAAc,gBAAgByC,WAEvCL,KAAKpC,cAAc,gBAAgBsC,iBAAiB,UAAU,SAAUd,MAzC5E,SAASkB,SAASlD,KAAMmD,OACpB,IAAIC,UAAYpD,KAAKQ,cAAc,UAC/B6C,KAAOF,MAAM,GAEjB,IAAKE,OAASA,KAAKpC,KAAKqC,MAAM,WAC1B,OAAO,EAGX,IAAIC,OAAS,IAAIC,WACjBD,OAAOE,QAAU1B,kBACjBwB,OAAOG,QAAUhB,kBACjBa,OAAOI,OAAS,SAAU3B,KACtBoB,UAAUlC,MAAMC,gBAAkB,OAASa,IAAIC,OAAO2B,OAAS,IAC/D,IAAI3D,OAASC,mBAAmB,UAChCE,UAAUyD,gBAAgB5D,OAAQ,UAAWoD,MAAM/C,MAAK,WACpDV,QAAQkC,OACR/B,WAAWC,UAInBuD,OAAOO,cAAcT,MAsBjBH,CAASN,KAAMZ,IAAIC,OAAOkB","file":"profile.js","sourcesContent":["define([\"controllers/userpasswordpage\", \"loading\", \"libraryMenu\", \"apphost\", \"emby-button\"], function (UserPasswordPage, loading, libraryMenu, appHost) {\n    \"use strict\";\n\n    function reloadUser(page) {\n        var userId = getParameterByName(\"userId\");\n        loading.show();\n        ApiClient.getUser(userId).then(function (user) {\n            page.querySelector(\".username\").innerHTML = user.Name;\n            libraryMenu.setTitle(user.Name);\n\n            var imageUrl = \"assets/img/avatar.png\";\n            if (user.PrimaryImageTag) {\n                imageUrl = ApiClient.getUserImageUrl(user.Id, {\n                    tag: user.PrimaryImageTag,\n                    type: \"Primary\"\n                });\n            }\n\n            var userImage = page.querySelector(\"#image\");\n            userImage.style.backgroundImage = \"url(\" + imageUrl + \")\";\n\n            Dashboard.getCurrentUser().then(function (loggedInUser) {\n                if (user.PrimaryImageTag) {\n                    page.querySelector(\"#btnAddImage\").classList.add(\"hide\");\n                    page.querySelector(\"#btnDeleteImage\").classList.remove(\"hide\");\n                } else if (appHost.supports(\"fileinput\") && (loggedInUser.Policy.IsAdministrator || user.Policy.EnableUserPreferenceAccess)) {\n                    page.querySelector(\"#btnDeleteImage\").classList.add(\"hide\");\n                    page.querySelector(\"#btnAddImage\").classList.remove(\"hide\");\n                }\n            });\n            loading.hide();\n        });\n    }\n\n    function onFileReaderError(evt) {\n        loading.hide();\n        switch (evt.target.error.code) {\n            case evt.target.error.NOT_FOUND_ERR:\n                require([\"toast\"], function (toast) {\n                    toast(Globalize.translate(\"FileNotFound\"));\n                });\n                break;\n            case evt.target.error.ABORT_ERR:\n                onFileReaderAbort();\n                break;\n            case evt.target.error.NOT_READABLE_ERR:\n            default:\n                require([\"toast\"], function (toast) {\n                    toast(Globalize.translate(\"FileReadError\"));\n                });\n        }\n    }\n\n    function onFileReaderAbort(evt) {\n        loading.hide();\n        require([\"toast\"], function (toast) {\n            toast(Globalize.translate(\"FileReadCancelled\"));\n        });\n    }\n\n    function setFiles(page, files) {\n        var userImage = page.querySelector(\"#image\");\n        var file = files[0];\n\n        if (!file || !file.type.match(\"image.*\")) {\n            return false;\n        }\n\n        var reader = new FileReader();\n        reader.onerror = onFileReaderError;\n        reader.onabort = onFileReaderAbort;\n        reader.onload = function (evt) {\n            userImage.style.backgroundImage = \"url(\" + evt.target.result + \")\";\n            var userId = getParameterByName(\"userId\");\n            ApiClient.uploadUserImage(userId, \"Primary\", file).then(function () {\n                loading.hide();\n                reloadUser(page);\n            });\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n    return function (view, params) {\n        reloadUser(view);\n        new UserPasswordPage(view, params);\n        view.querySelector(\"#btnDeleteImage\").addEventListener(\"click\", function () {\n            require([\"confirm\"], function (confirm) {\n                confirm(Globalize.translate(\"DeleteImageConfirmation\"), Globalize.translate(\"DeleteImage\")).then(function () {\n                    loading.show();\n                    var userId = getParameterByName(\"userId\");\n                    ApiClient.deleteUserImage(userId, \"primary\").then(function () {\n                        loading.hide();\n                        reloadUser(view);\n                    });\n                });\n            });\n        });\n        view.querySelector(\"#btnAddImage\").addEventListener(\"click\", function (evt) {\n            view.querySelector(\"#uploadImage\").click();\n        });\n        view.querySelector(\"#uploadImage\").addEventListener(\"change\", function (evt) {\n            setFiles(view, evt.target.files);\n        });\n    };\n});\n"]}