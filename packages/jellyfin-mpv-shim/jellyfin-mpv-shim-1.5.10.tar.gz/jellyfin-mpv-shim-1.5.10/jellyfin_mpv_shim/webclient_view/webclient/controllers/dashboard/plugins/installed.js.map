{"version":3,"sources":["controllers/dashboard/plugins/installed.js"],"names":["define","loading","libraryMenu","dom","globalize","renderPlugins","page","plugins","ApiClient","getJSON","getUrl","then","configPages","populateList","pluginConfigurationPages","html","sort","plugin1","plugin2","Name","map","p","getPluginCardHtml","plugin","configPage","filter","pluginConfigurationPage","PluginId","Id","configPageUrl","Dashboard","getConfigurationPageUrl","ImageUrl","DisplayName","Version","join","installedPluginsElement","querySelector","removeEventListener","onInstalledPluginsClick","addEventListener","length","classList","add","translate","innerHTML","hide","showPluginMenu","elem","card","parentWithClass","id","getAttribute","name","configHref","menuItems","push","icon","require","actionsheet","show","items","positionTo","callback","resultId","navigate","deletePlugin","uniqueid","msg","replace","confirm","title","text","primary","confirmText","uninstallPlugin","reloadList","getInstalledPlugins","getTabs","href","e","target","showNoConfigurationMessage","alert","message","showConnectMessage","btnCardMenu","pageIdOn","setTabs","this","window","PluginsPage"],"mappings":"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","file":"installed.js","sourcesContent":["define([\"loading\", \"libraryMenu\", \"dom\", \"globalize\", \"cardStyle\", \"emby-button\"], function (loading, libraryMenu, dom, globalize) {\n    \"use strict\";\n\n    function deletePlugin(page, uniqueid, name) {\n        var msg = globalize.translate(\"UninstallPluginConfirmation\").replace(\"{0}\", name);\n\n        require([\"confirm\"], function (confirm) {\n            confirm({\n                title: globalize.translate(\"UninstallPluginHeader\"),\n                text: msg,\n                primary: \"delete\",\n                confirmText: globalize.translate(\"UninstallPluginHeader\")\n            }).then(function () {\n                loading.show();\n                ApiClient.uninstallPlugin(uniqueid).then(function () {\n                    reloadList(page);\n                });\n            });\n        });\n    }\n\n    function showNoConfigurationMessage() {\n        Dashboard.alert({\n            message: globalize.translate(\"NoPluginConfigurationMessage\")\n        });\n    }\n\n    function showConnectMessage() {\n        Dashboard.alert({\n            message: globalize.translate(\"MessagePluginConfigurationRequiresLocalAccess\")\n        });\n    }\n\n    function getPluginCardHtml(plugin, pluginConfigurationPages) {\n        var configPage = pluginConfigurationPages.filter(function (pluginConfigurationPage) {\n            return pluginConfigurationPage.PluginId == plugin.Id;\n        })[0];\n        var configPageUrl = configPage ? Dashboard.getConfigurationPageUrl(configPage.Name) : null;\n        var html = \"\";\n        html += \"<div data-id='\" + plugin.Id + \"' data-name='\" + plugin.Name + \"' class='card backdropCard'>\";\n        html += '<div class=\"cardBox visualCardBox\">';\n        html += '<div class=\"cardScalable\">';\n        html += '<div class=\"cardPadder cardPadder-backdrop\"></div>';\n        html += configPageUrl ? '<a class=\"cardContent cardImageContainer\" is=\"emby-linkbutton\" href=\"' + configPageUrl + '\">' : '<div class=\"cardContent noConfigPluginCard noHoverEffect cardImageContainer\">';\n\n        if (plugin.ImageUrl) {\n            html += '<div class=\"cardImage coveredImage\" style=\"background-image:url(\\'' + plugin.ImageUrl + \"');\\\">\";\n            html += \"</div>\";\n        } else {\n            html += '<i class=\"cardImageIcon material-icons\">folder</i>';\n        }\n\n        html += configPageUrl ? \"</a>\" : \"</div>\";\n        html += \"</div>\";\n        html += '<div class=\"cardFooter\">';\n        html += '<div style=\"text-align:right; float:right;padding-top:5px;\">';\n        html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnCardMenu autoSize\"><i class=\"material-icons more_horiz\"></i></button>';\n        html += \"</div>\";\n        html += \"<div class='cardText'>\";\n        html += configPage ? configPage.DisplayName || plugin.Name : plugin.Name;\n        html += \"</div>\";\n        html += \"<div class='cardText cardText-secondary'>\";\n        html += plugin.Version;\n        html += \"</div>\";\n        html += \"</div>\";\n        html += \"</div>\";\n        html += \"</div>\";\n        return html;\n    }\n\n    function renderPlugins(page, plugins) {\n        ApiClient.getJSON(ApiClient.getUrl(\"web/configurationpages\") + \"?pageType=PluginConfiguration\").then(function (configPages) {\n            populateList(page, plugins, configPages);\n        });\n    }\n\n    function populateList(page, plugins, pluginConfigurationPages) {\n        plugins = plugins.sort(function (plugin1, plugin2) {\n            if (plugin1.Name > plugin2.Name) {\n                return 1;\n            }\n\n            return -1;\n        });\n\n        var html = plugins.map(function (p) {\n            return getPluginCardHtml(p, pluginConfigurationPages);\n        }).join(\"\");\n\n        var installedPluginsElement = page.querySelector(\".installedPlugins\");\n        installedPluginsElement.removeEventListener(\"click\", onInstalledPluginsClick);\n        installedPluginsElement.addEventListener(\"click\", onInstalledPluginsClick);\n\n        if (plugins.length) {\n            installedPluginsElement.classList.add(\"itemsContainer\");\n            installedPluginsElement.classList.add(\"vertical-wrap\");\n        } else {\n            html += '<div class=\"centerMessage\">';\n            html += \"<h1>\" + globalize.translate(\"MessageNoPluginsInstalled\") + \"</h1>\";\n            html += '<p><a is=\"emby-linkbutton\" class=\"button-link\" href=\"availableplugins.html\">';\n            html += globalize.translate(\"BrowsePluginCatalogMessage\");\n            html += \"</a></p>\";\n            html += \"</div>\";\n        }\n\n        installedPluginsElement.innerHTML = html;\n        loading.hide();\n    }\n\n    function showPluginMenu(page, elem) {\n        var card = dom.parentWithClass(elem, \"card\");\n        var id = card.getAttribute(\"data-id\");\n        var name = card.getAttribute(\"data-name\");\n        var configHref = card.querySelector(\".cardContent\").getAttribute(\"href\");\n        var menuItems = [];\n\n        if (configHref) {\n            menuItems.push({\n                name: globalize.translate(\"ButtonSettings\"),\n                id: \"open\",\n                icon: \"mode_edit\"\n            });\n        }\n\n        menuItems.push({\n            name: globalize.translate(\"ButtonUninstall\"),\n            id: \"delete\",\n            icon: \"delete\"\n        });\n\n        require([\"actionsheet\"], function (actionsheet) {\n            actionsheet.show({\n                items: menuItems,\n                positionTo: elem,\n                callback: function (resultId) {\n                    switch (resultId) {\n                        case \"open\":\n                            Dashboard.navigate(configHref);\n                            break;\n                        case \"delete\":\n                            deletePlugin(page, id, name);\n                            break;\n                    }\n                }\n            });\n        });\n    }\n\n    function reloadList(page) {\n        loading.show();\n        ApiClient.getInstalledPlugins().then(function (plugins) {\n            renderPlugins(page, plugins);\n        });\n    }\n\n    function getTabs() {\n        return [{\n            href: \"installedplugins.html\",\n            name: globalize.translate(\"TabMyPlugins\")\n        }, {\n            href: \"availableplugins.html\",\n            name: globalize.translate(\"TabCatalog\")\n        }];\n    }\n\n    function onInstalledPluginsClick(e) {\n        if (dom.parentWithClass(e.target, \"noConfigPluginCard\")) {\n            showNoConfigurationMessage();\n        } else if (dom.parentWithClass(e.target, \"connectModePluginCard\")) {\n            showConnectMessage();\n        } else {\n            var btnCardMenu = dom.parentWithClass(e.target, \"btnCardMenu\");\n            if (btnCardMenu) {\n                showPluginMenu(dom.parentWithClass(btnCardMenu, \"page\"), btnCardMenu);\n            }\n        }\n    }\n\n    pageIdOn(\"pageshow\", \"pluginsPage\", function () {\n        libraryMenu.setTabs(\"plugins\", 0, getTabs);\n        reloadList(this);\n    });\n\n    window.PluginsPage = {\n        renderPlugins: renderPlugins\n    };\n});\n"]}