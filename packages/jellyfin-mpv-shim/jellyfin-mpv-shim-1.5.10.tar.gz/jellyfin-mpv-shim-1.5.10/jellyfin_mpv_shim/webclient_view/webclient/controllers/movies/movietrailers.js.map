{"version":3,"sources":["controllers/movies/movietrailers.js"],"names":["define","layoutManager","loading","events","libraryBrowser","imageLoader","alphaPicker","listView","cardBuilder","appHost","view","params","tabContent","getPageData","context","key","getSavedQueryKey","pageData","data","query","SortBy","SortOrder","IncludeItemTypes","Recursive","Fields","ImageTypeLimit","EnableImageTypes","StartIndex","Limit","pageSize","getSavedView","loadSavedQueryValues","getQuery","savedQueryKey","reloadItems","show","isLoading","ApiClient","getItems","getCurrentUserId","then","result","onNextPageClick","onPreviousPageClick","window","scrollTo","updateFilterControls","html","i","length","pagingHtml","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","addLayoutButton","sortButton","filterButton","viewStyle","self","getCurrentViewStyle","getCardsHtml","items","Items","shape","preferThumb","overlayPlayButton","cardLayout","showTitle","showYear","centerText","preferBanner","getListViewHtml","sortBy","elems","querySelectorAll","innerHTML","addEventListener","Globalize","translate","itemsContainer","querySelector","lazyChildren","saveQueryValues","hide","value","NameStartsWithOrGreater","this","showFilterMenu","require","filterDialogFactory","filterDialog","mode","serverId","on","initPage","alphaPickerElement","e","newValue","detail","element","valueChangeEvent","classList","add","showSortMenu","name","id","callback","button","target","renderTab","destroy"],"mappings":"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","file":"movietrailers.js","sourcesContent":["define([\"layoutManager\", \"loading\", \"events\", \"libraryBrowser\", \"imageLoader\", \"alphaPicker\", \"listView\", \"cardBuilder\", \"apphost\", \"emby-itemscontainer\"], function (layoutManager, loading, events, libraryBrowser, imageLoader, alphaPicker, listView, cardBuilder, appHost) {\n    \"use strict\";\n\n    return function (view, params, tabContent) {\n        function getPageData(context) {\n            var key = getSavedQueryKey(context);\n            var pageData = data[key];\n\n            if (!pageData) {\n                pageData = data[key] = {\n                    query: {\n                        SortBy: \"SortName\",\n                        SortOrder: \"Ascending\",\n                        IncludeItemTypes: \"Trailer\",\n                        Recursive: true,\n                        Fields: \"PrimaryImageAspectRatio,SortName,BasicSyncInfo\",\n                        ImageTypeLimit: 1,\n                        EnableImageTypes: \"Primary,Backdrop,Banner,Thumb\",\n                        StartIndex: 0,\n                        Limit: pageSize\n                    },\n                    view: libraryBrowser.getSavedView(key) || \"Poster\"\n                };\n                libraryBrowser.loadSavedQueryValues(key, pageData.query);\n            }\n\n            return pageData;\n        }\n\n        function getQuery(context) {\n            return getPageData(context).query;\n        }\n\n        function getSavedQueryKey(context) {\n            if (!context.savedQueryKey) {\n                context.savedQueryKey = libraryBrowser.getSavedQueryKey(\"trailers\");\n            }\n\n            return context.savedQueryKey;\n        }\n\n        function reloadItems() {\n            loading.show();\n            isLoading = true;\n            var query = getQuery(tabContent);\n            ApiClient.getItems(ApiClient.getCurrentUserId(), query).then(function (result) {\n                function onNextPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    query.StartIndex += query.Limit;\n                    reloadItems();\n                }\n\n                function onPreviousPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    query.StartIndex -= query.Limit;\n                    reloadItems();\n                }\n\n                window.scrollTo(0, 0);\n                updateFilterControls(tabContent);\n                var pagingHtml = libraryBrowser.getQueryPagingHtml({\n                    startIndex: query.StartIndex,\n                    limit: query.Limit,\n                    totalRecordCount: result.TotalRecordCount,\n                    showLimit: false,\n                    updatePageSizeSetting: false,\n                    addLayoutButton: false,\n                    sortButton: false,\n                    filterButton: false\n                });\n                var html;\n                var viewStyle = self.getCurrentViewStyle();\n\n                if (viewStyle == \"Thumb\") {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: \"backdrop\",\n                        preferThumb: true,\n                        context: \"movies\",\n                        overlayPlayButton: true\n                    });\n                } else if (viewStyle == \"ThumbCard\") {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: \"backdrop\",\n                        preferThumb: true,\n                        context: \"movies\",\n                        cardLayout: true,\n                        showTitle: true,\n                        showYear: true,\n                        centerText: true\n                    });\n                } else if (viewStyle == \"Banner\") {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: \"banner\",\n                        preferBanner: true,\n                        context: \"movies\"\n                    });\n                } else if (viewStyle == \"List\") {\n                    html = listView.getListViewHtml({\n                        items: result.Items,\n                        context: \"movies\",\n                        sortBy: query.SortBy\n                    });\n                } else if (viewStyle == \"PosterCard\") {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: \"portrait\",\n                        context: \"movies\",\n                        showTitle: true,\n                        showYear: true,\n                        cardLayout: true,\n                        centerText: true\n                    });\n                } else {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: \"portrait\",\n                        context: \"movies\",\n                        centerText: true,\n                        overlayPlayButton: true,\n                        showTitle: true,\n                        showYear: true\n                    });\n                }\n\n                var i;\n                var length;\n                var elems = tabContent.querySelectorAll(\".paging\");\n\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].innerHTML = pagingHtml;\n                }\n\n                elems = tabContent.querySelectorAll(\".btnNextPage\");\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener(\"click\", onNextPageClick);\n                }\n\n                elems = tabContent.querySelectorAll(\".btnPreviousPage\");\n                for (i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener(\"click\", onPreviousPageClick);\n                }\n\n                if (!result.Items.length) {\n                    html = '<p style=\"text-align:center;\">' + Globalize.translate(\"MessageNoTrailersFound\") + \"</p>\";\n                }\n\n                var itemsContainer = tabContent.querySelector(\".itemsContainer\");\n                itemsContainer.innerHTML = html;\n                imageLoader.lazyChildren(itemsContainer);\n                libraryBrowser.saveQueryValues(getSavedQueryKey(tabContent), query);\n                loading.hide();\n                isLoading = false;\n            });\n        }\n\n        function updateFilterControls(tabContent) {\n            var query = getQuery(tabContent);\n            self.alphaPicker.value(query.NameStartsWithOrGreater);\n        }\n\n        var self = this;\n        var pageSize = 100;\n        var data = {};\n        var isLoading = false;\n\n        self.showFilterMenu = function () {\n            require([\"components/filterdialog/filterdialog\"], function (filterDialogFactory) {\n                var filterDialog = new filterDialogFactory({\n                    query: getQuery(tabContent),\n                    mode: \"movies\",\n                    serverId: ApiClient.serverId()\n                });\n                events.on(filterDialog, \"filterchange\", function () {\n                    getQuery(tabContent).StartIndex = 0;\n                    reloadItems();\n                });\n                filterDialog.show();\n            });\n        };\n\n        self.getCurrentViewStyle = function () {\n            return getPageData(tabContent).view;\n        };\n\n        function initPage(tabContent) {\n            var alphaPickerElement = tabContent.querySelector(\".alphaPicker\");\n            var itemsContainer = tabContent.querySelector(\".itemsContainer\");\n            alphaPickerElement.addEventListener(\"alphavaluechanged\", function (e) {\n                var newValue = e.detail.value;\n                var query = getQuery(tabContent);\n                query.NameStartsWithOrGreater = newValue;\n                query.StartIndex = 0;\n                reloadItems();\n            });\n            self.alphaPicker = new alphaPicker({\n                element: alphaPickerElement,\n                valueChangeEvent: \"click\"\n            });\n\n            tabContent.querySelector(\".alphaPicker\").classList.add(\"alphabetPicker-right\");\n            alphaPickerElement.classList.add(\"alphaPicker-fixed-right\");\n            itemsContainer.classList.add(\"padded-right-withalphapicker\");\n\n            tabContent.querySelector(\".btnFilter\").addEventListener(\"click\", function () {\n                self.showFilterMenu();\n            });\n            tabContent.querySelector(\".btnSort\").addEventListener(\"click\", function (e) {\n                libraryBrowser.showSortMenu({\n                    items: [{\n                        name: Globalize.translate(\"OptionNameSort\"),\n                        id: \"SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionImdbRating\"),\n                        id: \"CommunityRating,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionDateAdded\"),\n                        id: \"DateCreated,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionDatePlayed\"),\n                        id: \"DatePlayed,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionParentalRating\"),\n                        id: \"OfficialRating,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionPlayCount\"),\n                        id: \"PlayCount,SortName\"\n                    }, {\n                        name: Globalize.translate(\"OptionReleaseDate\"),\n                        id: \"PremiereDate,SortName\"\n                    }],\n                    callback: function () {\n                        getQuery(tabContent).StartIndex = 0;\n                        reloadItems();\n                    },\n                    query: getQuery(tabContent),\n                    button: e.target\n                });\n            });\n        }\n\n        initPage(tabContent);\n\n        self.renderTab = function () {\n            reloadItems();\n            updateFilterControls(tabContent);\n        };\n\n        self.destroy = function () {};\n    };\n});\n"]}