{"version":3,"sources":["controllers/userlibraryaccess.js"],"names":["define","$","loading","libraryMenu","loadMediaFolders","page","user","mediaFolders","html","Globalize","translate","i","length","folder","checkedAttribute","Policy","EnableAllFolders","EnabledFolders","indexOf","Id","Name","querySelector","innerHTML","chkEnableAllFolders","checked","triggerChange","select","evt","document","createEvent","initEvent","dispatchEvent","loadUser","loggedInUser","channels","devices","setTitle","loadChannels","EnableAllChannels","EnabledChannels","show","hide","trigger","loadDevices","device","EnableAllDevices","EnabledDevices","AppName","IsAdministrator","classList","add","remove","saveUser","get","filter","c","map","getAttribute","BlockedChannels","BlockedMediaFolders","ApiClient","updateUserPolicy","then","onSaveComplete","require","toast","onSubmit","this","parents","userId","getParameterByName","getUser","result","on","addEventListener","off","promise1","deferred","Deferred","resolveWith","Configuration","promise","promise2","Dashboard","getCurrentUser","promise4","getJSON","getUrl","IsHidden","promise5","promise6","Promise","all","responses","Items"],"mappings":"AAAA,aAAAA,OAAO,CAAC,SAAU,UAAW,cAAe,cAAc,SAAUC,EAAGC,QAASC,aAS5E,SAASC,iBAAiBC,KAAMC,KAAMC,cAClC,IAAIC,KAAO,GACXA,MAAQ,iCAAmCC,UAAUC,UAAU,mBAAqB,QACpFF,MAAQ,8DAER,IAAK,IAAIG,EAAI,EAAGC,OAASL,aAAaK,OAAQD,EAAIC,OAAQD,IAAK,CAC3D,IAAIE,OAASN,aAAaI,GAEtBG,iBADYR,KAAKS,OAAOC,mBAAqB,GAAKV,KAAKS,OAAOE,eAAeC,QAAQL,OAAOM,IAC7D,qBAAuB,GAC1DX,MAAQ,+EAAiFK,OAAOM,GAAK,KAAOL,iBAAmB,UAAYD,OAAOO,KAAO,kBAG7JZ,MAAQ,SACRH,KAAKgB,cAAc,iBAAiBC,UAAYd,KAChD,IAAIe,oBAAsBlB,KAAKgB,cAAc,wBAC7CE,oBAAoBC,QAAUlB,KAAKS,OAAOC,iBArB9C,SAASS,cAAcC,QACnB,IAAIC,IAAMC,SAASC,YAAY,cAC/BF,IAAIG,UAAU,UAAU,GAAO,GAC/BJ,OAAOK,cAAcJ,KAmBrBF,CAAcF,qBAiDlB,SAASS,SAAS3B,KAAMC,KAAM2B,aAAc1B,aAAc2B,SAAUC,SAChE9B,KAAKgB,cAAc,aAAaC,UAAYhB,KAAKc,KACjDjB,YAAYiC,SAAS9B,KAAKc,MAhD9B,SAASiB,aAAahC,KAAMC,KAAM4B,UAC9B,IAAI1B,KAAO,GACXA,MAAQ,iCAAmCC,UAAUC,UAAU,kBAAoB,QACnFF,MAAQ,8DAER,IAAK,IAAIG,EAAI,EAAGC,OAASsB,SAAStB,OAAQD,EAAIC,OAAQD,IAAK,CACvD,IAAIE,OAASqB,SAASvB,GAElBG,iBADYR,KAAKS,OAAOuB,oBAAsB,GAAKhC,KAAKS,OAAOwB,gBAAgBrB,QAAQL,OAAOM,IAC/D,qBAAuB,GAC1DX,MAAQ,gFAAkFK,OAAOM,GAAK,KAAOL,iBAAmB,UAAYD,OAAOO,KAAO,kBAG9JZ,MAAQ,SACRP,EAAE,iBAAkBI,MAAMmC,OAAOhC,KAAKA,MAElC0B,SAAStB,OACTX,EAAE,0BAA2BI,MAAMmC,OAEnCvC,EAAE,0BAA2BI,MAAMoC,OAGvCxC,EAAE,wBAAyBI,MAAMmB,QAAQlB,KAAKS,OAAOuB,mBAAmBI,QAAQ,UA4BhFL,CAAahC,KAAMC,KAAM4B,UACzB9B,iBAAiBC,KAAMC,KAAMC,cA1BjC,SAASoC,YAAYtC,KAAMC,KAAM6B,SAC7B,IAAI3B,KAAO,GACXA,MAAQ,iCAAmCC,UAAUC,UAAU,iBAAmB,QAClFF,MAAQ,8DAER,IAAK,IAAIG,EAAI,EAAGC,OAASuB,QAAQvB,OAAQD,EAAIC,OAAQD,IAAK,CACtD,IAAIiC,OAAST,QAAQxB,GACjBG,iBAAmBR,KAAKS,OAAO8B,mBAAqB,GAAKvC,KAAKS,OAAO+B,eAAe5B,QAAQ0B,OAAOzB,IAAM,qBAAuB,GACpIX,MAAQ,+EAAiFoC,OAAOzB,GAAK,KAAOL,iBAAmB,UAAY8B,OAAOxB,KAAO,MAAQwB,OAAOG,QAAU,kBAGtLvC,MAAQ,SACRP,EAAE,gBAAiBI,MAAMmC,OAAOhC,KAAKA,MACrCP,EAAE,uBAAwBI,MAAMmB,QAAQlB,KAAKS,OAAO8B,kBAAkBH,QAAQ,UAE1EpC,KAAKS,OAAOiC,gBACZ3C,KAAKgB,cAAc,0BAA0B4B,UAAUC,IAAI,QAE3D7C,KAAKgB,cAAc,0BAA0B4B,UAAUE,OAAO,QASlER,CAAYtC,KAAMC,KAAM6B,SACxBjC,QAAQuC,OAWZ,SAASW,SAAS9C,KAAMD,MACpBC,KAAKS,OAAOC,iBAAmBf,EAAE,uBAAwBI,MAAMmB,UAC/DlB,KAAKS,OAAOE,eAAiBX,KAAKS,OAAOC,iBAAmB,GAAKf,EAAE,aAAcI,MAAMgD,MAAMC,QAAO,SAAUC,GAC1G,OAAOA,EAAE/B,WACVgC,KAAI,SAAUD,GACb,OAAOA,EAAEE,aAAa,cAE1BnD,KAAKS,OAAOuB,kBAAoBrC,EAAE,wBAAyBI,MAAMmB,UACjElB,KAAKS,OAAOwB,gBAAkBjC,KAAKS,OAAOuB,kBAAoB,GAAKrC,EAAE,cAAeI,MAAMgD,MAAMC,QAAO,SAAUC,GAC7G,OAAOA,EAAE/B,WACVgC,KAAI,SAAUD,GACb,OAAOA,EAAEE,aAAa,cAE1BnD,KAAKS,OAAO8B,iBAAmB5C,EAAE,uBAAwBI,MAAMmB,UAC/DlB,KAAKS,OAAO+B,eAAiBxC,KAAKS,OAAO8B,iBAAmB,GAAK5C,EAAE,aAAcI,MAAMgD,MAAMC,QAAO,SAAUC,GAC1G,OAAOA,EAAE/B,WACVgC,KAAI,SAAUD,GACb,OAAOA,EAAEE,aAAa,cAE1BnD,KAAKS,OAAO2C,gBAAkB,KAC9BpD,KAAKS,OAAO4C,oBAAsB,KAClCC,UAAUC,iBAAiBvD,KAAKa,GAAIb,KAAKS,QAAQ+C,MAAK,YA7B1D,SAASC,eAAe1D,MACpBH,QAAQuC,OAERuB,QAAQ,CAAC,UAAU,SAAUC,OACzBA,MAAMxD,UAAUC,UAAU,qBA0B1BqD,MAIR,SAASG,WACL,IAAI7D,KAAOJ,EAAEkE,MAAMC,QAAQ,SAC3BlE,QAAQsC,OACR,IAAI6B,OAASC,mBAAmB,UAIhC,OAHAV,UAAUW,QAAQF,QAAQP,MAAK,SAAUU,QACrCpB,SAASoB,OAAQnE,UAEd,EAGXJ,EAAE2B,UAAU6C,GAAG,WAAY,0BAA0B,WACjD,IAAIpE,KAAO8D,KACXlE,EAAE,uBAAwBI,MAAMoE,GAAG,UAAU,WACrCN,KAAK3C,QACLvB,EAAE,6BAA8BI,MAAMoC,OAEtCxC,EAAE,6BAA8BI,MAAMmC,UAG9CvC,EAAE,wBAAyBI,MAAMoE,GAAG,UAAU,WACtCN,KAAK3C,QACLvB,EAAE,8BAA+BI,MAAMoC,OAEvCxC,EAAE,8BAA+BI,MAAMmC,UAG/CnC,KAAKgB,cAAc,wBAAwBqD,iBAAiB,UAAU,WAC9DP,KAAK3C,QACLnB,KAAKgB,cAAc,8BAA8B4B,UAAUC,IAAI,QAE/D7C,KAAKgB,cAAc,8BAA8B4B,UAAUE,OAAO,WAG1ElD,EAAE,0BAA0B0E,IAAI,SAAUT,UAAUO,GAAG,SAAUP,aAClEO,GAAG,WAAY,0BAA0B,WACxC,IAEIG,SAFAvE,KAAO8D,KACXjE,QAAQsC,OAER,IAAI6B,OAASC,mBAAmB,UAEhC,GAAID,OACAO,SAAWhB,UAAUW,QAAQF,YAC1B,CACH,IAAIQ,SAAW5E,EAAE6E,WACjBD,SAASE,YAAY,KAAM,CAAC,CACxBC,cAAe,MAEnBJ,SAAWC,SAASI,UAGxB,IAAIC,SAAWC,UAAUC,iBACrBC,SAAWzB,UAAU0B,QAAQ1B,UAAU2B,OAAO,uBAAwB,CACtEC,UAAU,KAEVC,SAAW7B,UAAU0B,QAAQ1B,UAAU2B,OAAO,aAC9CG,SAAW9B,UAAU0B,QAAQ1B,UAAU2B,OAAO,YAClDI,QAAQC,IAAI,CAAChB,SAAUM,SAAUG,SAAUI,SAAUC,WAAW5B,MAAK,SAAU+B,WAC3E7D,SAAS3B,KAAMwF,UAAU,GAAIA,UAAU,GAAIA,UAAU,GAAGC,MAAOD,UAAU,GAAGC,MAAOD,UAAU,GAAGC","file":"userlibraryaccess.js","sourcesContent":["define([\"jQuery\", \"loading\", \"libraryMenu\", \"fnchecked\"], function ($, loading, libraryMenu) {\n    \"use strict\";\n\n    function triggerChange(select) {\n        var evt = document.createEvent(\"HTMLEvents\");\n        evt.initEvent(\"change\", false, true);\n        select.dispatchEvent(evt);\n    }\n\n    function loadMediaFolders(page, user, mediaFolders) {\n        var html = \"\";\n        html += '<h3 class=\"checkboxListLabel\">' + Globalize.translate(\"HeaderLibraries\") + \"</h3>\";\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        for (var i = 0, length = mediaFolders.length; i < length; i++) {\n            var folder = mediaFolders[i];\n            var isChecked = user.Policy.EnableAllFolders || -1 != user.Policy.EnabledFolders.indexOf(folder.Id);\n            var checkedAttribute = isChecked ? ' checked=\"checked\"' : \"\";\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkFolder\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + \"><span>\" + folder.Name + \"</span></label>\";\n        }\n\n        html += \"</div>\";\n        page.querySelector(\".folderAccess\").innerHTML = html;\n        var chkEnableAllFolders = page.querySelector(\"#chkEnableAllFolders\");\n        chkEnableAllFolders.checked = user.Policy.EnableAllFolders;\n        triggerChange(chkEnableAllFolders);\n    }\n\n    function loadChannels(page, user, channels) {\n        var html = \"\";\n        html += '<h3 class=\"checkboxListLabel\">' + Globalize.translate(\"HeaderChannels\") + \"</h3>\";\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        for (var i = 0, length = channels.length; i < length; i++) {\n            var folder = channels[i];\n            var isChecked = user.Policy.EnableAllChannels || -1 != user.Policy.EnabledChannels.indexOf(folder.Id);\n            var checkedAttribute = isChecked ? ' checked=\"checked\"' : \"\";\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkChannel\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + \"><span>\" + folder.Name + \"</span></label>\";\n        }\n\n        html += \"</div>\";\n        $(\".channelAccess\", page).show().html(html);\n\n        if (channels.length) {\n            $(\".channelAccessContainer\", page).show();\n        } else {\n            $(\".channelAccessContainer\", page).hide();\n        }\n\n        $(\"#chkEnableAllChannels\", page).checked(user.Policy.EnableAllChannels).trigger(\"change\");\n    }\n\n    function loadDevices(page, user, devices) {\n        var html = \"\";\n        html += '<h3 class=\"checkboxListLabel\">' + Globalize.translate(\"HeaderDevices\") + \"</h3>\";\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        for (var i = 0, length = devices.length; i < length; i++) {\n            var device = devices[i];\n            var checkedAttribute = user.Policy.EnableAllDevices || -1 != user.Policy.EnabledDevices.indexOf(device.Id) ? ' checked=\"checked\"' : \"\";\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkDevice\" data-id=\"' + device.Id + '\" ' + checkedAttribute + \"><span>\" + device.Name + \" - \" + device.AppName + \"</span></label>\";\n        }\n\n        html += \"</div>\";\n        $(\".deviceAccess\", page).show().html(html);\n        $(\"#chkEnableAllDevices\", page).checked(user.Policy.EnableAllDevices).trigger(\"change\");\n\n        if (user.Policy.IsAdministrator) {\n            page.querySelector(\".deviceAccessContainer\").classList.add(\"hide\");\n        } else {\n            page.querySelector(\".deviceAccessContainer\").classList.remove(\"hide\");\n        }\n    }\n\n    function loadUser(page, user, loggedInUser, mediaFolders, channels, devices) {\n        page.querySelector(\".username\").innerHTML = user.Name;\n        libraryMenu.setTitle(user.Name);\n        loadChannels(page, user, channels);\n        loadMediaFolders(page, user, mediaFolders);\n        loadDevices(page, user, devices);\n        loading.hide();\n    }\n\n    function onSaveComplete(page) {\n        loading.hide();\n\n        require([\"toast\"], function (toast) {\n            toast(Globalize.translate(\"SettingsSaved\"));\n        });\n    }\n\n    function saveUser(user, page) {\n        user.Policy.EnableAllFolders = $(\"#chkEnableAllFolders\", page).checked();\n        user.Policy.EnabledFolders = user.Policy.EnableAllFolders ? [] : $(\".chkFolder\", page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute(\"data-id\");\n        });\n        user.Policy.EnableAllChannels = $(\"#chkEnableAllChannels\", page).checked();\n        user.Policy.EnabledChannels = user.Policy.EnableAllChannels ? [] : $(\".chkChannel\", page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute(\"data-id\");\n        });\n        user.Policy.EnableAllDevices = $(\"#chkEnableAllDevices\", page).checked();\n        user.Policy.EnabledDevices = user.Policy.EnableAllDevices ? [] : $(\".chkDevice\", page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute(\"data-id\");\n        });\n        user.Policy.BlockedChannels = null;\n        user.Policy.BlockedMediaFolders = null;\n        ApiClient.updateUserPolicy(user.Id, user.Policy).then(function () {\n            onSaveComplete(page);\n        });\n    }\n\n    function onSubmit() {\n        var page = $(this).parents(\".page\");\n        loading.show();\n        var userId = getParameterByName(\"userId\");\n        ApiClient.getUser(userId).then(function (result) {\n            saveUser(result, page);\n        });\n        return false;\n    }\n\n    $(document).on(\"pageinit\", \"#userLibraryAccessPage\", function () {\n        var page = this;\n        $(\"#chkEnableAllDevices\", page).on(\"change\", function () {\n            if (this.checked) {\n                $(\".deviceAccessListContainer\", page).hide();\n            } else {\n                $(\".deviceAccessListContainer\", page).show();\n            }\n        });\n        $(\"#chkEnableAllChannels\", page).on(\"change\", function () {\n            if (this.checked) {\n                $(\".channelAccessListContainer\", page).hide();\n            } else {\n                $(\".channelAccessListContainer\", page).show();\n            }\n        });\n        page.querySelector(\"#chkEnableAllFolders\").addEventListener(\"change\", function () {\n            if (this.checked) {\n                page.querySelector(\".folderAccessListContainer\").classList.add(\"hide\");\n            } else {\n                page.querySelector(\".folderAccessListContainer\").classList.remove(\"hide\");\n            }\n        });\n        $(\".userLibraryAccessForm\").off(\"submit\", onSubmit).on(\"submit\", onSubmit);\n    }).on(\"pageshow\", \"#userLibraryAccessPage\", function () {\n        var page = this;\n        loading.show();\n        var promise1;\n        var userId = getParameterByName(\"userId\");\n\n        if (userId) {\n            promise1 = ApiClient.getUser(userId);\n        } else {\n            var deferred = $.Deferred();\n            deferred.resolveWith(null, [{\n                Configuration: {}\n            }]);\n            promise1 = deferred.promise();\n        }\n\n        var promise2 = Dashboard.getCurrentUser();\n        var promise4 = ApiClient.getJSON(ApiClient.getUrl(\"Library/MediaFolders\", {\n            IsHidden: false\n        }));\n        var promise5 = ApiClient.getJSON(ApiClient.getUrl(\"Channels\"));\n        var promise6 = ApiClient.getJSON(ApiClient.getUrl(\"Devices\"));\n        Promise.all([promise1, promise2, promise4, promise5, promise6]).then(function (responses) {\n            loadUser(page, responses[0], responses[1], responses[2].Items, responses[3].Items, responses[4].Items);\n        });\n    });\n});\n"]}