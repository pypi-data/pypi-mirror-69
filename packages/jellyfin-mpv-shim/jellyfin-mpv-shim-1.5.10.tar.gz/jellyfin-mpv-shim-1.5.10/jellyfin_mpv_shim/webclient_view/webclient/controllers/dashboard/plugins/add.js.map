{"version":3,"sources":["controllers/dashboard/plugins/add.js"],"names":["define","$","loading","libraryMenu","globalize","connectionManager","renderPackage","pkg","installedPlugins","page","installedPlugin","filter","ip","Name","name","populateVersions","packageInfo","html","i","versions","length","version","versionStr","classification","selectmenu","hide","packageVersion","current","val","populateHistory","Math","min","description","targetSystem","removeClass","addClass","msg","translate","show","shortDescription","overview","owner","richDescUrl","attr","previewImage","thumbImage","img","currentVersionText","replace","Version","performInstallation","packageName","guid","updateClass","developer","toLowerCase","alertCallback","querySelector","disabled","ApiClient","installPlugin","then","alertText","options","require","alert","confirm","console","debug","view","params","on","this","parents","getInstalledPlugins","plugins","plugin","vals","split","Dashboard","message","title","addEventListener","promise1","getPackageInfo","promise2","Promise","all","responses"],"mappings":"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","file":"add.js","sourcesContent":["define([\"jQuery\", \"loading\", \"libraryMenu\", \"globalize\", \"connectionManager\", \"emby-button\"], function ($, loading, libraryMenu, globalize, connectionManager) {\n    \"use strict\";\n\n    function populateHistory(packageInfo, page) {\n        var html = \"\";\n        var length = Math.min(packageInfo.versions.length, 10);\n\n        for (var i = 0; i < length; i++) {\n            var version = packageInfo.versions[i];\n            html += '<h2 style=\"margin:.5em 0;\">' + version.versionStr + \" (\" + version.classification + \")</h2>\";\n            html += '<div style=\"margin-bottom:1.5em;\">' + version.description + \"</div>\";\n        }\n\n        $(\"#revisionHistory\", page).html(html);\n    }\n\n    function populateVersions(packageInfo, page, installedPlugin) {\n        var html = \"\";\n\n        for (var i = 0; i < packageInfo.versions.length; i++) {\n            var version = packageInfo.versions[i];\n            html += '<option value=\"' + version.versionStr + \"|\" + version.classification + '\">' + version.versionStr + \" (\" + version.classification + \")</option>\";\n        }\n\n        var selectmenu = $(\"#selectVersion\", page).html(html);\n\n        if (!installedPlugin) {\n            $(\"#pCurrentVersion\", page).hide().html(\"\");\n        }\n\n        var packageVersion = packageInfo.versions.filter(function (current) {\n            return \"Release\" == current.classification;\n        })[0];\n        packageVersion = packageVersion || packageInfo.versions.filter(function (current) {\n            return \"Beta\" == current.classification;\n        })[0];\n\n        if (packageVersion) {\n            var val = packageVersion.versionStr + \"|\" + packageVersion.classification;\n            selectmenu.val(val);\n        }\n    }\n\n    function renderPackage(pkg, installedPlugins, page) {\n        var installedPlugin = installedPlugins.filter(function (ip) {\n            return ip.Name == pkg.name;\n        })[0];\n        populateVersions(pkg, page, installedPlugin);\n        populateHistory(pkg, page);\n        $(\".pluginName\", page).html(pkg.name);\n\n        if (\"Server\" == pkg.targetSystem) {\n            $(\"#btnInstallDiv\", page).removeClass(\"hide\");\n            $(\"#nonServerMsg\", page).hide();\n            $(\"#pSelectVersion\", page).removeClass(\"hide\");\n        } else {\n            $(\"#btnInstallDiv\", page).addClass(\"hide\");\n            $(\"#pSelectVersion\", page).addClass(\"hide\");\n            var msg = globalize.translate(\"MessageInstallPluginFromApp\");\n            $(\"#nonServerMsg\", page).html(msg).show();\n        }\n\n        if (pkg.shortDescription) {\n            $(\"#tagline\", page).show().html(pkg.shortDescription);\n        } else {\n            $(\"#tagline\", page).hide();\n        }\n\n        $(\"#overview\", page).html(pkg.overview || \"\");\n        $(\"#developer\", page).html(pkg.owner);\n\n        if (pkg.richDescUrl) {\n            $(\"#pViewWebsite\", page).show();\n            $(\"#pViewWebsite a\", page).attr(\"href\", pkg.richDescUrl);\n        } else {\n            $(\"#pViewWebsite\", page).hide();\n        }\n\n        if (pkg.previewImage || pkg.thumbImage) {\n            var img = pkg.previewImage ? pkg.previewImage : pkg.thumbImage;\n            $(\"#pPreviewImage\", page).show().html(\"<img class='pluginPreviewImg' src='\" + img + \"' style='max-width: 100%;' />\");\n        } else {\n            $(\"#pPreviewImage\", page).hide().html(\"\");\n        }\n\n        if (installedPlugin) {\n            var currentVersionText = globalize.translate(\"MessageYouHaveVersionInstalled\").replace(\"{0}\", \"<strong>\" + installedPlugin.Version + \"</strong>\");\n            $(\"#pCurrentVersion\", page).show().html(currentVersionText);\n        } else {\n            $(\"#pCurrentVersion\", page).hide().html(\"\");\n        }\n\n        loading.hide();\n    }\n\n    function alertText(options) {\n        require([\"alert\"], function (alert) {\n            alert(options);\n        });\n    }\n\n    function performInstallation(page, packageName, guid, updateClass, version) {\n        var developer = $(\"#developer\", page).html().toLowerCase();\n\n        var alertCallback = function () {\n            loading.show();\n            page.querySelector(\"#btnInstall\").disabled = true;\n            ApiClient.installPlugin(packageName, guid, updateClass, version).then(function () {\n                loading.hide();\n                alertText(globalize.translate(\"PluginInstalledMessage\"));\n            });\n        };\n\n        if (developer !== 'jellyfin') {\n            loading.hide();\n            var msg = globalize.translate(\"MessagePluginInstallDisclaimer\");\n            msg += \"<br/>\";\n            msg += \"<br/>\";\n            msg += globalize.translate(\"PleaseConfirmPluginInstallation\");\n\n            require([\"confirm\"], function (confirm) {\n                confirm(msg, globalize.translate(\"HeaderConfirmPluginInstallation\")).then(function () {\n                    alertCallback();\n                }, function () {\n                    console.debug('plugin not installed');\n                });\n            });\n        } else {\n            alertCallback();\n        }\n    }\n\n    return function (view, params) {\n        $(\".addPluginForm\", view).on(\"submit\", function () {\n            loading.show();\n            var page = $(this).parents(\"#addPluginPage\")[0];\n            var name = params.name;\n            var guid = params.guid;\n            ApiClient.getInstalledPlugins().then(function (plugins) {\n                var installedPlugin = plugins.filter(function (plugin) {\n                    return plugin.Name == name;\n                })[0];\n                var vals = $(\"#selectVersion\", page).val().split(\"|\");\n                var version = vals[0];\n\n                if (installedPlugin) {\n                    if (installedPlugin.Version === version) {\n                        loading.hide();\n                        Dashboard.alert({\n                            message: globalize.translate(\"MessageAlreadyInstalled\"),\n                            title: globalize.translate(\"HeaderPluginInstallation\")\n                        });\n                    }\n                } else {\n                    performInstallation(page, name, guid, vals[1], version);\n                }\n            });\n            return false;\n        });\n        view.addEventListener(\"viewshow\", function () {\n            var page = this;\n            loading.show();\n            var name = params.name;\n            var guid = params.guid;\n            var promise1 = ApiClient.getPackageInfo(name, guid);\n            var promise2 = ApiClient.getInstalledPlugins();\n            Promise.all([promise1, promise2]).then(function (responses) {\n                renderPackage(responses[0], responses[1], page);\n            });\n        });\n    };\n});\n"]}