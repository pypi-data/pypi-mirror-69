{"version":3,"sources":["controllers/music/musicrecommended.js"],"names":["define","browser","layoutManager","userSettings","inputManager","loading","cardBuilder","dom","appHost","imageLoader","libraryMenu","playbackManager","mainTabsManager","itemsPerRow","screenWidth","getWindowSize","innerWidth","enableScrollX","desktop","getSquareShape","loadSuggestionsTab","page","tabContent","parentId","console","debug","loadLatest","show","userId","ApiClient","getCurrentUserId","options","IncludeItemTypes","Limit","Fields","ParentId","ImageTypeLimit","EnableImageTypes","EnableTotalRecordCount","getJSON","getUrl","then","items","elem","querySelector","supports","innerHTML","getCardsHtml","showUnplayedIndicator","showLatestItemsPopup","shape","showTitle","showParentTitle","lazy","centerText","overlayPlayButton","allowBottomPadding","cardLayout","coverImage","lazyChildren","hide","require","autoFocuser","autoFocus","loadRecentlyPlayed","SortBy","SortOrder","Recursive","Filters","getItems","result","Items","length","classList","remove","add","itemsContainer","action","overlayMoreButton","loadFrequentlyPlayed","favoriteItems","render","getTabs","name","Globalize","translate","cssClass","view","params","onBeforeTabChange","e","preLoadTab","index","getTabController","controller","renderedTabs","indexOf","preRender","parseInt","detail","selectedTabIndex","onTabChange","loadTab","currentTabIndex","push","renderTab","getTabContainers","querySelectorAll","callback","depends","controllerFactory","self","tabControllers","collectionType","topParentId","mode","initTab","onInputCommand","command","preventDefault","Dashboard","navigate","this","tab","getDefaultTabIndex","folderId","get","containers","i","mobile","tv","reload","addEventListener","isRestored","initTabs","setTabs","getAttribute","getItem","item","setAttribute","Name","setTitle","on","window","off","forEach","t","destroy"],"mappings":"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","file":"musicrecommended.js","sourcesContent":["define([\"browser\", \"layoutManager\", \"userSettings\", \"inputManager\", \"loading\", \"cardBuilder\", \"dom\", \"apphost\", \"imageLoader\", \"libraryMenu\", \"playbackManager\", \"mainTabsManager\", \"scrollStyles\", \"emby-itemscontainer\", \"emby-tabs\", \"emby-button\", \"flexStyles\"], function (browser, layoutManager, userSettings, inputManager, loading, cardBuilder, dom, appHost, imageLoader, libraryMenu, playbackManager, mainTabsManager) {\n    \"use strict\";\n\n    function itemsPerRow() {\n        var screenWidth = dom.getWindowSize().innerWidth;\n\n        if (screenWidth >= 1920) {\n            return 9;\n        }\n\n        if (screenWidth >= 1200) {\n            return 12;\n        }\n\n        if (screenWidth >= 1000) {\n            return 10;\n        }\n\n        return 8;\n    }\n\n    function enableScrollX() {\n        return !layoutManager.desktop;\n    }\n\n    function getSquareShape() {\n        return enableScrollX() ? \"overflowSquare\" : \"square\";\n    }\n\n    function loadLatest(page, parentId) {\n        loading.show();\n        var userId = ApiClient.getCurrentUserId();\n        var options = {\n            IncludeItemTypes: \"Audio\",\n            Limit: enableScrollX() ? 3 * itemsPerRow() : 2 * itemsPerRow(),\n            Fields: \"PrimaryImageAspectRatio,BasicSyncInfo\",\n            ParentId: parentId,\n            ImageTypeLimit: 1,\n            EnableImageTypes: \"Primary,Backdrop,Banner,Thumb\",\n            EnableTotalRecordCount: false\n        };\n        ApiClient.getJSON(ApiClient.getUrl(\"Users/\" + userId + \"/Items/Latest\", options)).then(function (items) {\n            var elem = page.querySelector(\"#recentlyAddedSongs\");\n            var supportsImageAnalysis = appHost.supports(\"imageanalysis\");\n            supportsImageAnalysis = false;\n            elem.innerHTML = cardBuilder.getCardsHtml({\n                items: items,\n                showUnplayedIndicator: false,\n                showLatestItemsPopup: false,\n                shape: getSquareShape(),\n                showTitle: true,\n                showParentTitle: true,\n                lazy: true,\n                centerText: !supportsImageAnalysis,\n                overlayPlayButton: !supportsImageAnalysis,\n                allowBottomPadding: !enableScrollX(),\n                cardLayout: supportsImageAnalysis,\n                coverImage: true\n            });\n            imageLoader.lazyChildren(elem);\n            loading.hide();\n\n            require([\"autoFocuser\"], function (autoFocuser) {\n                autoFocuser.autoFocus(page);\n            });\n        });\n    }\n\n    function loadRecentlyPlayed(page, parentId) {\n        var options = {\n            SortBy: \"DatePlayed\",\n            SortOrder: \"Descending\",\n            IncludeItemTypes: \"Audio\",\n            Limit: itemsPerRow(),\n            Recursive: true,\n            Fields: \"PrimaryImageAspectRatio,AudioInfo\",\n            Filters: \"IsPlayed\",\n            ParentId: parentId,\n            ImageTypeLimit: 1,\n            EnableImageTypes: \"Primary,Backdrop,Banner,Thumb\",\n            EnableTotalRecordCount: false\n        };\n        ApiClient.getItems(ApiClient.getCurrentUserId(), options).then(function (result) {\n            var elem = page.querySelector(\"#recentlyPlayed\");\n\n            if (result.Items.length) {\n                elem.classList.remove(\"hide\");\n            } else {\n                elem.classList.add(\"hide\");\n            }\n\n            var itemsContainer = elem.querySelector(\".itemsContainer\");\n            var supportsImageAnalysis = appHost.supports(\"imageanalysis\");\n            supportsImageAnalysis = false;\n            itemsContainer.innerHTML = cardBuilder.getCardsHtml({\n                items: result.Items,\n                showUnplayedIndicator: false,\n                shape: getSquareShape(),\n                showTitle: true,\n                showParentTitle: true,\n                action: \"instantmix\",\n                lazy: true,\n                centerText: !supportsImageAnalysis,\n                overlayMoreButton: !supportsImageAnalysis,\n                allowBottomPadding: !enableScrollX(),\n                cardLayout: supportsImageAnalysis,\n                coverImage: true\n            });\n            imageLoader.lazyChildren(itemsContainer);\n        });\n    }\n\n    function loadFrequentlyPlayed(page, parentId) {\n        var options = {\n            SortBy: \"PlayCount\",\n            SortOrder: \"Descending\",\n            IncludeItemTypes: \"Audio\",\n            Limit: itemsPerRow(),\n            Recursive: true,\n            Fields: \"PrimaryImageAspectRatio,AudioInfo\",\n            Filters: \"IsPlayed\",\n            ParentId: parentId,\n            ImageTypeLimit: 1,\n            EnableImageTypes: \"Primary,Backdrop,Banner,Thumb\",\n            EnableTotalRecordCount: false\n        };\n        ApiClient.getItems(ApiClient.getCurrentUserId(), options).then(function (result) {\n            var elem = page.querySelector(\"#topPlayed\");\n\n            if (result.Items.length) {\n                elem.classList.remove(\"hide\");\n            } else {\n                elem.classList.add(\"hide\");\n            }\n\n            var itemsContainer = elem.querySelector(\".itemsContainer\");\n            var supportsImageAnalysis = appHost.supports(\"imageanalysis\");\n            supportsImageAnalysis = false;\n            itemsContainer.innerHTML = cardBuilder.getCardsHtml({\n                items: result.Items,\n                showUnplayedIndicator: false,\n                shape: getSquareShape(),\n                showTitle: true,\n                showParentTitle: true,\n                action: \"instantmix\",\n                lazy: true,\n                centerText: !supportsImageAnalysis,\n                overlayMoreButton: !supportsImageAnalysis,\n                allowBottomPadding: !enableScrollX(),\n                cardLayout: supportsImageAnalysis,\n                coverImage: true\n            });\n            imageLoader.lazyChildren(itemsContainer);\n        });\n    }\n\n    function loadSuggestionsTab(page, tabContent, parentId) {\n        console.debug(\"loadSuggestionsTab\");\n        loadLatest(tabContent, parentId);\n        loadRecentlyPlayed(tabContent, parentId);\n        loadFrequentlyPlayed(tabContent, parentId);\n\n        require([\"components/favoriteitems\"], function (favoriteItems) {\n            favoriteItems.render(tabContent, ApiClient.getCurrentUserId(), parentId, [\"favoriteArtists\", \"favoriteAlbums\", \"favoriteSongs\"]);\n        });\n    }\n\n    function getTabs() {\n        return [{\n            name: Globalize.translate(\"TabSuggestions\")\n        }, {\n            name: Globalize.translate(\"TabAlbums\")\n        }, {\n            name: Globalize.translate(\"TabAlbumArtists\")\n        }, {\n            name: Globalize.translate(\"TabArtists\")\n        }, {\n            name: Globalize.translate(\"TabPlaylists\")\n        }, {\n            name: Globalize.translate(\"TabSongs\")\n        }, {\n            name: Globalize.translate(\"TabGenres\")\n        }, {\n            name: Globalize.translate(\"ButtonSearch\"),\n            cssClass: \"searchTabButton\"\n        }];\n    }\n\n    function getDefaultTabIndex(folderId) {\n        switch (userSettings.get(\"landing-\" + folderId)) {\n            case \"albums\":\n                return 1;\n\n            case \"albumartists\":\n                return 2;\n\n            case \"artists\":\n                return 3;\n\n            case \"playlists\":\n                return 4;\n\n            case \"songs\":\n                return 5;\n\n            case \"genres\":\n                return 6;\n\n            default:\n                return 0;\n        }\n    }\n\n    return function (view, params) {\n        function reload() {\n            loading.show();\n            var tabContent = view.querySelector(\".pageTabContent[data-index='0']\");\n            loadSuggestionsTab(view, tabContent, params.topParentId);\n        }\n\n        function enableScrollX() {\n            return browser.mobile;\n        }\n\n        function setScrollClasses(elem, scrollX) {\n            if (scrollX) {\n                elem.classList.add(\"hiddenScrollX\");\n\n                if (layoutManager.tv) {\n                    elem.classList.add(\"smoothScrollX\");\n                }\n\n                elem.classList.add(\"scrollX\");\n                elem.classList.remove(\"vertical-wrap\");\n            } else {\n                elem.classList.remove(\"hiddenScrollX\");\n                elem.classList.remove(\"smoothScrollX\");\n                elem.classList.remove(\"scrollX\");\n                elem.classList.add(\"vertical-wrap\");\n            }\n        }\n\n        function onBeforeTabChange(e) {\n            preLoadTab(view, parseInt(e.detail.selectedTabIndex));\n        }\n\n        function onTabChange(e) {\n            loadTab(view, parseInt(e.detail.selectedTabIndex));\n        }\n\n        function getTabContainers() {\n            return view.querySelectorAll(\".pageTabContent\");\n        }\n\n        function initTabs() {\n            mainTabsManager.setTabs(view, currentTabIndex, getTabs, getTabContainers, onBeforeTabChange, onTabChange);\n        }\n\n        function getTabController(page, index, callback) {\n            var depends = [];\n\n            switch (index) {\n                case 0:\n                    break;\n\n                case 1:\n                    depends.push(\"controllers/music/musicalbums\");\n                    break;\n\n                case 2:\n                case 3:\n                    depends.push(\"controllers/music/musicartists\");\n                    break;\n\n                case 4:\n                    depends.push(\"controllers/music/musicplaylists\");\n                    break;\n\n                case 5:\n                    depends.push(\"controllers/music/songs\");\n                    break;\n\n                case 6:\n                    depends.push(\"controllers/music/musicgenres\");\n                    break;\n\n                case 7:\n                    depends.push(\"scripts/searchtab\");\n            }\n\n            require(depends, function (controllerFactory) {\n                var tabContent;\n\n                if (0 == index) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n                    self.tabContent = tabContent;\n                }\n\n                var controller = tabControllers[index];\n\n                if (!controller) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n\n                    if (index === 0) {\n                        controller = self;\n                    } else if (index === 7) {\n                        controller = new controllerFactory(view, tabContent, {\n                            collectionType: \"music\",\n                            parentId: params.topParentId\n                        });\n                    } else {\n                        controller = new controllerFactory(view, params, tabContent);\n                    }\n\n                    if (index == 2) {\n                        controller.mode = \"albumartists\";\n                    } else if (index == 3) {\n                        controller.mode = \"artists\";\n                    }\n\n                    tabControllers[index] = controller;\n                    if (controller.initTab) {\n                        controller.initTab();\n                    }\n                }\n\n                callback(controller);\n            });\n        }\n\n        function preLoadTab(page, index) {\n            getTabController(page, index, function (controller) {\n                if (renderedTabs.indexOf(index) == -1 && controller.preRender) {\n                    controller.preRender();\n                }\n            });\n        }\n\n        function loadTab(page, index) {\n            currentTabIndex = index;\n            getTabController(page, index, function (controller) {\n                initialTabIndex = null;\n\n                if (renderedTabs.indexOf(index) == -1) {\n                    renderedTabs.push(index);\n                    controller.renderTab();\n                }\n            });\n        }\n\n        function onInputCommand(e) {\n            switch (e.detail.command) {\n                case \"search\":\n                    e.preventDefault();\n                    Dashboard.navigate(\"search.html?collectionType=music&parentId=\" + params.topParentId);\n            }\n        }\n\n        var isViewRestored;\n        var self = this;\n        var currentTabIndex = parseInt(params.tab || getDefaultTabIndex(params.topParentId));\n        var initialTabIndex = currentTabIndex;\n\n        self.initTab = function () {\n            var tabContent = view.querySelector(\".pageTabContent[data-index='0']\");\n            var containers = tabContent.querySelectorAll(\".itemsContainer\");\n\n            for (var i = 0, length = containers.length; i < length; i++) {\n                setScrollClasses(containers[i], enableScrollX());\n            }\n        };\n\n        self.renderTab = function () {\n            reload();\n        };\n\n        var tabControllers = [];\n        var renderedTabs = [];\n        view.addEventListener(\"viewshow\", function (e) {\n            isViewRestored = e.detail.isRestored;\n            initTabs();\n            if (!view.getAttribute(\"data-title\")) {\n                var parentId = params.topParentId;\n\n                if (parentId) {\n                    ApiClient.getItem(ApiClient.getCurrentUserId(), parentId).then(function (item) {\n                        view.setAttribute(\"data-title\", item.Name);\n                        libraryMenu.setTitle(item.Name);\n                    });\n                } else {\n                    view.setAttribute(\"data-title\", Globalize.translate(\"TabMusic\"));\n                    libraryMenu.setTitle(Globalize.translate(\"TabMusic\"));\n                }\n            }\n\n            inputManager.on(window, onInputCommand);\n        });\n        view.addEventListener(\"viewbeforehide\", function (e) {\n            inputManager.off(window, onInputCommand);\n        });\n        view.addEventListener(\"viewdestroy\", function (e) {\n            tabControllers.forEach(function (t) {\n                if (t.destroy) {\n                    t.destroy();\n                }\n            });\n        });\n    };\n});\n"]}