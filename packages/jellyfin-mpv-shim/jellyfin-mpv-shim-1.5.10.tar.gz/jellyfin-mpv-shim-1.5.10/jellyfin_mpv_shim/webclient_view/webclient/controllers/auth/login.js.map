{"version":3,"sources":["controllers/auth/login.js"],"names":["define","appHost","appSettings","dom","connectionManager","loading","layoutManager","browser","enableFocusTransform","slow","edge","authenticateUserByName","page","apiClient","username","password","show","then","result","newUrl","user","User","serverId","getParameterByName","Policy","IsAdministrator","hide","Dashboard","onServerChanged","Id","AccessToken","navigate","response","querySelector","value","status","require","toast","Globalize","translate","alert","message","title","showManualForm","context","showCancel","focusPassword","checked","enableAutoLogin","classList","remove","add","focus","metroColors","getMetroColor","str","character","String","substr","charCodeAt","sum","i","length","parseInt","charAt","index","getRandomMetroColor","Math","floor","random","view","params","getApiClient","serverid","getOrCreateApiClient","ApiClient","showVisualForm","autoFocuser","autoFocus","addEventListener","e","card","parentWithClass","target","cardContent","id","getAttribute","name","haspw","preventDefault","selectServer","supports","getPublicUsers","users","loadUserList","html","cssClass","tv","HasPassword","Name","PrimaryImageTag","getUserImageUrl","width","tag","type","innerHTML","catch","getJSON","getUrl","options","textContent","LoginDisclaimer"],"mappings":"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","file":"login.js","sourcesContent":["define([\"apphost\", \"appSettings\", \"dom\", \"connectionManager\", \"loading\", \"layoutManager\", \"browser\", \"cardStyle\", \"emby-checkbox\"], function (appHost, appSettings, dom, connectionManager, loading, layoutManager, browser) {\n    \"use strict\";\n\n    var enableFocusTransform = !browser.slow && !browser.edge;\n\n    function authenticateUserByName(page, apiClient, username, password) {\n        loading.show();\n        apiClient.authenticateUserByName(username, password).then(function (result) {\n            var user = result.User;\n            var serverId = getParameterByName(\"serverid\");\n            var newUrl;\n\n            if (user.Policy.IsAdministrator && !serverId) {\n                newUrl = \"dashboard.html\";\n            } else {\n                newUrl = \"home.html\";\n            }\n\n            loading.hide();\n            Dashboard.onServerChanged(user.Id, result.AccessToken, apiClient);\n            Dashboard.navigate(newUrl);\n        }, function (response) {\n            page.querySelector(\"#txtManualName\").value = \"\";\n            page.querySelector(\"#txtManualPassword\").value = \"\";\n            loading.hide();\n\n            if (response.status === 401) {\n                require([\"toast\"], function (toast) {\n                    toast(Globalize.translate(\"MessageInvalidUser\"));\n                });\n            } else {\n                Dashboard.alert({\n                    message: Globalize.translate(\"MessageUnableToConnectToServer\"),\n                    title: Globalize.translate(\"HeaderConnectionFailure\")\n                });\n            }\n        });\n    }\n\n    function showManualForm(context, showCancel, focusPassword) {\n        context.querySelector(\".chkRememberLogin\").checked = appSettings.enableAutoLogin();\n        context.querySelector(\".manualLoginForm\").classList.remove(\"hide\");\n        context.querySelector(\".visualLoginForm\").classList.add(\"hide\");\n        context.querySelector(\".btnManual\").classList.add(\"hide\");\n\n        if (focusPassword) {\n            context.querySelector(\"#txtManualPassword\").focus();\n        } else {\n            context.querySelector(\"#txtManualName\").focus();\n        }\n\n        if (showCancel) {\n            context.querySelector(\".btnCancel\").classList.remove(\"hide\");\n        } else {\n            context.querySelector(\".btnCancel\").classList.add(\"hide\");\n        }\n    }\n\n    var metroColors = [\"#6FBD45\", \"#4BB3DD\", \"#4164A5\", \"#E12026\", \"#800080\", \"#E1B222\", \"#008040\", \"#0094FF\", \"#FF00C7\", \"#FF870F\", \"#7F0037\"];\n\n    function getRandomMetroColor() {\n        var index = Math.floor(Math.random() * (metroColors.length - 1));\n        return metroColors[index];\n    }\n\n    function getMetroColor(str) {\n        if (str) {\n            var character = String(str.substr(0, 1).charCodeAt());\n            var sum = 0;\n\n            for (var i = 0; i < character.length; i++) {\n                sum += parseInt(character.charAt(i));\n            }\n\n            var index = String(sum).substr(-1);\n            return metroColors[index];\n        }\n\n        return getRandomMetroColor();\n    }\n\n    function loadUserList(context, apiClient, users) {\n        var html = \"\";\n\n        for (var i = 0; i < users.length; i++) {\n            var user = users[i];\n\n            // TODO move card creation code to Card component\n            var cssClass = \"card squareCard scalableCard squareCard-scalable\";\n\n            if (layoutManager.tv) {\n                cssClass += \" show-focus\";\n\n                if (enableFocusTransform) {\n                    cssClass += \" show-animation\";\n                }\n            }\n\n            var cardBoxCssClass = \"cardBox cardBox-bottompadded\";\n            html += '<button type=\"button\" class=\"' + cssClass + '\">';\n            html += '<div class=\"' + cardBoxCssClass + '\">';\n            html += '<div class=\"cardScalable\">';\n            html += '<div class=\"cardPadder cardPadder-square\"></div>';\n            html += '<div class=\"cardContent\" data-haspw=\"' + user.HasPassword + '\" data-username=\"' + user.Name + '\" data-userid=\"' + user.Id + '\">';\n            var imgUrl;\n\n            if (user.PrimaryImageTag) {\n                imgUrl = apiClient.getUserImageUrl(user.Id, {\n                    width: 300,\n                    tag: user.PrimaryImageTag,\n                    type: \"Primary\"\n                });\n                html += '<div class=\"cardImageContainer coveredImage coveredImage-noScale\" style=\"background-image:url(\\'' + imgUrl + \"');\\\"></div>\";\n            } else {\n                var background = getMetroColor(user.Id);\n                imgUrl = \"assets/img/avatar.png\";\n                html += '<div class=\"cardImageContainer coveredImage coveredImage-noScale\" style=\"background-image:url(\\'' + imgUrl + \"');background-color:\" + background + ';\"></div>';\n            }\n\n            html += \"</div>\";\n            html += \"</div>\";\n            html += '<div class=\"cardFooter visualCardBox-cardFooter\">';\n            html += '<div class=\"cardText singleCardText cardTextCentered\">' + user.Name + \"</div>\";\n            html += \"</div>\";\n            html += \"</div>\";\n            html += \"</button>\";\n        }\n\n        context.querySelector(\"#divUsers\").innerHTML = html;\n    }\n\n    return function (view, params) {\n        function getApiClient() {\n            var serverId = params.serverid;\n\n            if (serverId) {\n                return connectionManager.getOrCreateApiClient(serverId);\n            }\n\n            return ApiClient;\n        }\n\n        function showVisualForm() {\n            view.querySelector(\".visualLoginForm\").classList.remove(\"hide\");\n            view.querySelector(\".manualLoginForm\").classList.add(\"hide\");\n            view.querySelector(\".btnManual\").classList.remove(\"hide\");\n\n            require([\"autoFocuser\"], function (autoFocuser) {\n                autoFocuser.autoFocus(view);\n            });\n        }\n\n        view.querySelector(\"#divUsers\").addEventListener(\"click\", function (e) {\n            var card = dom.parentWithClass(e.target, \"card\");\n            var cardContent = card ? card.querySelector(\".cardContent\") : null;\n\n            if (cardContent) {\n                var context = view;\n                var id = cardContent.getAttribute(\"data-userid\");\n                var name = cardContent.getAttribute(\"data-username\");\n                var haspw = cardContent.getAttribute(\"data-haspw\");\n\n                if (id === 'manual') {\n                    context.querySelector(\"#txtManualName\").value = \"\";\n                    showManualForm(context, true);\n                } else if (haspw == 'false') {\n                    authenticateUserByName(context, getApiClient(), name, \"\");\n                } else {\n                    context.querySelector(\"#txtManualName\").value = name;\n                    context.querySelector(\"#txtManualPassword\").value = \"\";\n                    showManualForm(context, true, true);\n                }\n            }\n        });\n        view.querySelector(\".manualLoginForm\").addEventListener(\"submit\", function (e) {\n            appSettings.enableAutoLogin(view.querySelector(\".chkRememberLogin\").checked);\n            var apiClient = getApiClient();\n            authenticateUserByName(view, apiClient, view.querySelector(\"#txtManualName\").value, view.querySelector(\"#txtManualPassword\").value);\n            e.preventDefault();\n            return false;\n        });\n        view.querySelector(\".btnForgotPassword\").addEventListener(\"click\", function () {\n            Dashboard.navigate(\"forgotpassword.html\");\n        });\n        view.querySelector(\".btnCancel\").addEventListener(\"click\", showVisualForm);\n        view.querySelector(\".btnManual\").addEventListener(\"click\", function () {\n            view.querySelector(\"#txtManualName\").value = \"\";\n            showManualForm(view, true);\n        });\n        view.querySelector(\".btnSelectServer\").addEventListener(\"click\", function () {\n            Dashboard.selectServer();\n        });\n        view.addEventListener(\"viewshow\", function (e) {\n            loading.show();\n\n            if (!appHost.supports('multiserver')) {\n                view.querySelector(\".btnSelectServer\").classList.add(\"hide\");\n            }\n\n            var apiClient = getApiClient();\n            apiClient.getPublicUsers().then(function (users) {\n                if (users.length) {\n                    showVisualForm();\n                    loadUserList(view, apiClient, users);\n                } else {\n                    view.querySelector(\"#txtManualName\").value = \"\";\n                    showManualForm(view, false, false);\n                }\n            }).catch().then(function () {\n                loading.hide();\n            });\n            apiClient.getJSON(apiClient.getUrl(\"Branding/Configuration\")).then(function (options) {\n                view.querySelector(\".disclaimer\").textContent = options.LoginDisclaimer || \"\";\n            });\n        });\n    };\n});\n"]}