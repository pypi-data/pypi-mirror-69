{"version":3,"sources":["controllers/useredit.js"],"names":["define","$","loading","libraryMenu","loadUser","page","user","ApiClient","getJSON","getUrl","then","providers","loadAuthProviders","length","querySelector","classList","remove","add","currentProviderId","Policy","AuthenticationProviderId","innerHTML","map","provider","selected","Id","Name","loadPasswordResetProviders","PasswordResetProviderId","IsHidden","folders","loadDeleteFolders","mediaFolders","SupportsMediaDeletion","channelsResult","i","folder","checkedAttribute","html","EnableContentDeletion","EnableContentDeletionFromFolders","indexOf","Items","trigger","checked","IsDisabled","show","hide","prop","removeAttr","attr","setTitle","val","IsAdministrator","EnableSharedDeviceControl","EnableRemoteControlOfOtherUsers","EnableContentDownloading","EnableLiveTvManagement","EnableLiveTvAccess","EnableMediaPlayback","EnableAudioPlaybackTranscoding","EnableVideoPlaybackTranscoding","EnablePlaybackRemuxing","ForceRemoteSourceTranscoding","EnableRemoteAccess","EnableSyncTranscoding","EnableMediaConversion","EnablePublicSharing","RemoteClientBitrateLimit","LoginAttemptsBeforeLockout","saveUser","parseInt","parseFloat","value","get","filter","c","getAttribute","updateUser","updateUserPolicy","onSaveComplete","Dashboard","navigate","require","toast","Globalize","translate","onSubmit","this","parents","getUser","result","userId","getParameterByName","document","on","off","getServerConfiguration","config","loadData"],"mappings":"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","file":"useredit.js","sourcesContent":["define([\"jQuery\", \"loading\", \"libraryMenu\", \"fnchecked\"], function ($, loading, libraryMenu) {\n    \"use strict\";\n\n    function loadDeleteFolders(page, user, mediaFolders) {\n        ApiClient.getJSON(ApiClient.getUrl(\"Channels\", {\n            SupportsMediaDeletion: true\n        })).then(function (channelsResult) {\n            var i;\n            var length;\n            var folder;\n            var isChecked;\n            var checkedAttribute;\n            var html = \"\";\n\n            for (i = 0, length = mediaFolders.length; i < length; i++) {\n                folder = mediaFolders[i];\n                isChecked = user.Policy.EnableContentDeletion || -1 != user.Policy.EnableContentDeletionFromFolders.indexOf(folder.Id);\n                checkedAttribute = isChecked ? ' checked=\"checked\"' : \"\";\n                html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkFolder\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + \"><span>\" + folder.Name + \"</span></label>\";\n            }\n\n            for (i = 0, length = channelsResult.Items.length; i < length; i++) {\n                folder = channelsResult.Items[i];\n                isChecked = user.Policy.EnableContentDeletion || -1 != user.Policy.EnableContentDeletionFromFolders.indexOf(folder.Id);\n                checkedAttribute = isChecked ? ' checked=\"checked\"' : \"\";\n                html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkFolder\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + \"><span>\" + folder.Name + \"</span></label>\";\n            }\n\n            $(\".deleteAccess\", page).html(html).trigger(\"create\");\n            $(\"#chkEnableDeleteAllFolders\", page).checked(user.Policy.EnableContentDeletion).trigger(\"change\");\n        });\n    }\n\n    function loadAuthProviders(page, user, providers) {\n        if (providers.length > 1) {\n            page.querySelector(\".fldSelectLoginProvider\").classList.remove(\"hide\");\n        } else {\n            page.querySelector(\".fldSelectLoginProvider\").classList.add(\"hide\");\n        }\n\n        var currentProviderId = user.Policy.AuthenticationProviderId;\n        page.querySelector(\".selectLoginProvider\").innerHTML = providers.map(function (provider) {\n            var selected = provider.Id === currentProviderId || providers.length < 2 ? \" selected\" : \"\";\n            return '<option value=\"' + provider.Id + '\"' + selected + \">\" + provider.Name + \"</option>\";\n        });\n    }\n\n    function loadPasswordResetProviders(page, user, providers) {\n        if (providers.length > 1) {\n            page.querySelector(\".fldSelectPasswordResetProvider\").classList.remove(\"hide\");\n        } else {\n            page.querySelector(\".fldSelectPasswordResetProvider\").classList.add(\"hide\");\n        }\n\n        var currentProviderId = user.Policy.PasswordResetProviderId;\n        page.querySelector(\".selectPasswordResetProvider\").innerHTML = providers.map(function (provider) {\n            var selected = provider.Id === currentProviderId || providers.length < 2 ? \" selected\" : \"\";\n            return '<option value=\"' + provider.Id + '\"' + selected + \">\" + provider.Name + \"</option>\";\n        });\n    }\n\n    function loadUser(page, user) {\n        currentUser = user;\n        ApiClient.getJSON(ApiClient.getUrl(\"Auth/Providers\")).then(function (providers) {\n            loadAuthProviders(page, user, providers);\n        });\n        ApiClient.getJSON(ApiClient.getUrl(\"Auth/PasswordResetProviders\")).then(function (providers) {\n            loadPasswordResetProviders(page, user, providers);\n        });\n        ApiClient.getJSON(ApiClient.getUrl(\"Library/MediaFolders\", {\n            IsHidden: false\n        })).then(function (folders) {\n            loadDeleteFolders(page, user, folders.Items);\n        });\n\n        if (user.Policy.IsDisabled) {\n            $(\".disabledUserBanner\", page).show();\n        } else {\n            $(\".disabledUserBanner\", page).hide();\n        }\n\n        $(\"#txtUserName\", page).prop(\"disabled\", \"\").removeAttr(\"disabled\");\n        $(\"#fldConnectInfo\", page).show();\n        $(\".lnkEditUserPreferences\", page).attr(\"href\", \"mypreferencesmenu.html?userId=\" + user.Id);\n        libraryMenu.setTitle(user.Name);\n        page.querySelector(\".username\").innerHTML = user.Name;\n        $(\"#txtUserName\", page).val(user.Name);\n        $(\"#chkIsAdmin\", page).checked(user.Policy.IsAdministrator);\n        $(\"#chkDisabled\", page).checked(user.Policy.IsDisabled);\n        $(\"#chkIsHidden\", page).checked(user.Policy.IsHidden);\n        $(\"#chkRemoteControlSharedDevices\", page).checked(user.Policy.EnableSharedDeviceControl);\n        $(\"#chkEnableRemoteControlOtherUsers\", page).checked(user.Policy.EnableRemoteControlOfOtherUsers);\n        $(\"#chkEnableDownloading\", page).checked(user.Policy.EnableContentDownloading);\n        $(\"#chkManageLiveTv\", page).checked(user.Policy.EnableLiveTvManagement);\n        $(\"#chkEnableLiveTvAccess\", page).checked(user.Policy.EnableLiveTvAccess);\n        $(\"#chkEnableMediaPlayback\", page).checked(user.Policy.EnableMediaPlayback);\n        $(\"#chkEnableAudioPlaybackTranscoding\", page).checked(user.Policy.EnableAudioPlaybackTranscoding);\n        $(\"#chkEnableVideoPlaybackTranscoding\", page).checked(user.Policy.EnableVideoPlaybackTranscoding);\n        $(\"#chkEnableVideoPlaybackRemuxing\", page).checked(user.Policy.EnablePlaybackRemuxing);\n        $(\"#chkForceRemoteSourceTranscoding\", page).checked(user.Policy.ForceRemoteSourceTranscoding);\n        $(\"#chkRemoteAccess\", page).checked(null == user.Policy.EnableRemoteAccess || user.Policy.EnableRemoteAccess);\n        $(\"#chkEnableSyncTranscoding\", page).checked(user.Policy.EnableSyncTranscoding);\n        $(\"#chkEnableConversion\", page).checked(user.Policy.EnableMediaConversion || false);\n        $(\"#chkEnableSharing\", page).checked(user.Policy.EnablePublicSharing);\n        $(\"#txtRemoteClientBitrateLimit\", page).val(user.Policy.RemoteClientBitrateLimit / 1e6 || \"\");\n        $(\"#txtLoginAttemptsBeforeLockout\", page).val(user.Policy.LoginAttemptsBeforeLockout || \"0\");\n        loading.hide();\n    }\n\n    function onSaveComplete(page, user) {\n        Dashboard.navigate(\"userprofiles.html\");\n        loading.hide();\n\n        require([\"toast\"], function (toast) {\n            toast(Globalize.translate(\"SettingsSaved\"));\n        });\n    }\n\n    function saveUser(user, page) {\n        user.Name = $(\"#txtUserName\", page).val();\n        user.Policy.IsAdministrator = $(\"#chkIsAdmin\", page).checked();\n        user.Policy.IsHidden = $(\"#chkIsHidden\", page).checked();\n        user.Policy.IsDisabled = $(\"#chkDisabled\", page).checked();\n        user.Policy.EnableRemoteControlOfOtherUsers = $(\"#chkEnableRemoteControlOtherUsers\", page).checked();\n        user.Policy.EnableLiveTvManagement = $(\"#chkManageLiveTv\", page).checked();\n        user.Policy.EnableLiveTvAccess = $(\"#chkEnableLiveTvAccess\", page).checked();\n        user.Policy.EnableSharedDeviceControl = $(\"#chkRemoteControlSharedDevices\", page).checked();\n        user.Policy.EnableMediaPlayback = $(\"#chkEnableMediaPlayback\", page).checked();\n        user.Policy.EnableAudioPlaybackTranscoding = $(\"#chkEnableAudioPlaybackTranscoding\", page).checked();\n        user.Policy.EnableVideoPlaybackTranscoding = $(\"#chkEnableVideoPlaybackTranscoding\", page).checked();\n        user.Policy.EnablePlaybackRemuxing = $(\"#chkEnableVideoPlaybackRemuxing\", page).checked();\n        user.Policy.ForceRemoteSourceTranscoding = $(\"#chkForceRemoteSourceTranscoding\", page).checked();\n        user.Policy.EnableContentDownloading = $(\"#chkEnableDownloading\", page).checked();\n        user.Policy.EnableSyncTranscoding = $(\"#chkEnableSyncTranscoding\", page).checked();\n        user.Policy.EnableMediaConversion = $(\"#chkEnableConversion\", page).checked();\n        user.Policy.EnablePublicSharing = $(\"#chkEnableSharing\", page).checked();\n        user.Policy.EnableRemoteAccess = $(\"#chkRemoteAccess\", page).checked();\n        user.Policy.RemoteClientBitrateLimit = parseInt(1e6 * parseFloat($(\"#txtRemoteClientBitrateLimit\", page).val() || \"0\"));\n        user.Policy.LoginAttemptsBeforeLockout = parseInt($(\"#txtLoginAttemptsBeforeLockout\", page).val() || \"0\");\n        user.Policy.AuthenticationProviderId = page.querySelector(\".selectLoginProvider\").value;\n        user.Policy.PasswordResetProviderId = page.querySelector(\".selectPasswordResetProvider\").value;\n        user.Policy.EnableContentDeletion = $(\"#chkEnableDeleteAllFolders\", page).checked();\n        user.Policy.EnableContentDeletionFromFolders = user.Policy.EnableContentDeletion ? [] : $(\".chkFolder\", page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute(\"data-id\");\n        });\n        ApiClient.updateUser(user).then(function () {\n            ApiClient.updateUserPolicy(user.Id, user.Policy).then(function () {\n                onSaveComplete(page, user);\n            });\n        });\n    }\n\n    function onSubmit() {\n        var page = $(this).parents(\".page\")[0];\n        loading.show();\n        getUser().then(function (result) {\n            saveUser(result, page);\n        });\n        return false;\n    }\n\n    function getUser() {\n        var userId = getParameterByName(\"userId\");\n        return ApiClient.getUser(userId);\n    }\n\n    function loadData(page) {\n        loading.show();\n        getUser().then(function (user) {\n            loadUser(page, user);\n        });\n    }\n\n    var currentUser;\n    $(document).on(\"pageinit\", \"#editUserPage\", function () {\n        $(\".editUserProfileForm\").off(\"submit\", onSubmit).on(\"submit\", onSubmit);\n        this.querySelector(\".sharingHelp\").innerHTML = Globalize.translate(\"OptionAllowLinkSharingHelp\", 30);\n        var page = this;\n        $(\"#chkEnableDeleteAllFolders\", this).on(\"change\", function () {\n            if (this.checked) {\n                $(\".deleteAccess\", page).hide();\n            } else {\n                $(\".deleteAccess\", page).show();\n            }\n        });\n        ApiClient.getServerConfiguration().then(function (config) {\n            if (config.EnableRemoteAccess) {\n                page.querySelector(\".fldRemoteAccess\").classList.remove(\"hide\");\n            } else {\n                page.querySelector(\".fldRemoteAccess\").classList.add(\"hide\");\n            }\n        });\n    }).on(\"pagebeforeshow\", \"#editUserPage\", function () {\n        loadData(this);\n    });\n});\n"]}