# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_display.configuration import Configuration


class AuditLogServiceJob(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'audit_log_job_end_date': 'str',
        'audit_log_job_id': 'int',
        'audit_log_job_name': 'str',
        'audit_log_job_start_date': 'str',
        'audit_log_job_user_name': 'str',
        'campaign_ids': 'list[int]',
        'date_range': 'AuditLogServiceDateRange',
        'job_status': 'AuditLogServiceJobStatus',
        'lang': 'AuditLogServiceLang',
        'progress': 'int',
        'update_source': 'AuditLogServiceUpdateSource'
    }

    attribute_map = {
        'account_id': 'accountId',
        'audit_log_job_end_date': 'auditLogJobEndDate',
        'audit_log_job_id': 'auditLogJobId',
        'audit_log_job_name': 'auditLogJobName',
        'audit_log_job_start_date': 'auditLogJobStartDate',
        'audit_log_job_user_name': 'auditLogJobUserName',
        'campaign_ids': 'campaignIds',
        'date_range': 'dateRange',
        'job_status': 'jobStatus',
        'lang': 'lang',
        'progress': 'progress',
        'update_source': 'updateSource'
    }

    def __init__(self, account_id=None, audit_log_job_end_date=None, audit_log_job_id=None, audit_log_job_name=None, audit_log_job_start_date=None, audit_log_job_user_name=None, campaign_ids=None, date_range=None, job_status=None, lang=None, progress=None, update_source=None, local_vars_configuration=None):  # noqa: E501
        """AuditLogServiceJob - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._audit_log_job_end_date = None
        self._audit_log_job_id = None
        self._audit_log_job_name = None
        self._audit_log_job_start_date = None
        self._audit_log_job_user_name = None
        self._campaign_ids = None
        self._date_range = None
        self._job_status = None
        self._lang = None
        self._progress = None
        self._update_source = None
        self.discriminator = None

        self.account_id = account_id
        self.audit_log_job_end_date = audit_log_job_end_date
        self.audit_log_job_id = audit_log_job_id
        self.audit_log_job_name = audit_log_job_name
        self.audit_log_job_start_date = audit_log_job_start_date
        self.audit_log_job_user_name = audit_log_job_user_name
        self.campaign_ids = campaign_ids
        self.date_range = date_range
        self.job_status = job_status
        self.lang = lang
        self.progress = progress
        self.update_source = update_source

    @property
    def account_id(self):
        """Gets the account_id of this AuditLogServiceJob.  # noqa: E501

        <div lang=\"ja\"> アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Account ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The account_id of this AuditLogServiceJob.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AuditLogServiceJob.

        <div lang=\"ja\"> アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Account ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param account_id: The account_id of this AuditLogServiceJob.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def audit_log_job_end_date(self):
        """Gets the audit_log_job_end_date of this AuditLogServiceJob.  # noqa: E501

        <div lang=\"ja\"> 操作履歴ダウンロードジョブの終了日時です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The job end date (YYYY-MM-DDTHH:MI:SS+9:00).<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The audit_log_job_end_date of this AuditLogServiceJob.  # noqa: E501
        :rtype: str
        """
        return self._audit_log_job_end_date

    @audit_log_job_end_date.setter
    def audit_log_job_end_date(self, audit_log_job_end_date):
        """Sets the audit_log_job_end_date of this AuditLogServiceJob.

        <div lang=\"ja\"> 操作履歴ダウンロードジョブの終了日時です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The job end date (YYYY-MM-DDTHH:MI:SS+9:00).<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param audit_log_job_end_date: The audit_log_job_end_date of this AuditLogServiceJob.  # noqa: E501
        :type: str
        """

        self._audit_log_job_end_date = audit_log_job_end_date

    @property
    def audit_log_job_id(self):
        """Gets the audit_log_job_id of this AuditLogServiceJob.  # noqa: E501

        <div lang=\"ja\"> 操作履歴のダウンロードジョブIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The operation history job ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The audit_log_job_id of this AuditLogServiceJob.  # noqa: E501
        :rtype: int
        """
        return self._audit_log_job_id

    @audit_log_job_id.setter
    def audit_log_job_id(self, audit_log_job_id):
        """Sets the audit_log_job_id of this AuditLogServiceJob.

        <div lang=\"ja\"> 操作履歴のダウンロードジョブIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The operation history job ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param audit_log_job_id: The audit_log_job_id of this AuditLogServiceJob.  # noqa: E501
        :type: int
        """

        self._audit_log_job_id = audit_log_job_id

    @property
    def audit_log_job_name(self):
        """Gets the audit_log_job_name of this AuditLogServiceJob.  # noqa: E501

        <div lang=\"ja\"> 操作履歴のダウンロードジョブ名です。<br> このフィールドは、リクエストの場合は省略可能となります。 </div> <div lang=\"en\"> The operation history job name.<br> This field is optional in requests. </div>   # noqa: E501

        :return: The audit_log_job_name of this AuditLogServiceJob.  # noqa: E501
        :rtype: str
        """
        return self._audit_log_job_name

    @audit_log_job_name.setter
    def audit_log_job_name(self, audit_log_job_name):
        """Sets the audit_log_job_name of this AuditLogServiceJob.

        <div lang=\"ja\"> 操作履歴のダウンロードジョブ名です。<br> このフィールドは、リクエストの場合は省略可能となります。 </div> <div lang=\"en\"> The operation history job name.<br> This field is optional in requests. </div>   # noqa: E501

        :param audit_log_job_name: The audit_log_job_name of this AuditLogServiceJob.  # noqa: E501
        :type: str
        """

        self._audit_log_job_name = audit_log_job_name

    @property
    def audit_log_job_start_date(self):
        """Gets the audit_log_job_start_date of this AuditLogServiceJob.  # noqa: E501

        <div lang=\"ja\"> 操作履歴ダウンロードジョブの開始日時です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The job start date (YYYY-MM-DDTHH:MI:SS+9:00).<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The audit_log_job_start_date of this AuditLogServiceJob.  # noqa: E501
        :rtype: str
        """
        return self._audit_log_job_start_date

    @audit_log_job_start_date.setter
    def audit_log_job_start_date(self, audit_log_job_start_date):
        """Sets the audit_log_job_start_date of this AuditLogServiceJob.

        <div lang=\"ja\"> 操作履歴ダウンロードジョブの開始日時です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The job start date (YYYY-MM-DDTHH:MI:SS+9:00).<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param audit_log_job_start_date: The audit_log_job_start_date of this AuditLogServiceJob.  # noqa: E501
        :type: str
        """

        self._audit_log_job_start_date = audit_log_job_start_date

    @property
    def audit_log_job_user_name(self):
        """Gets the audit_log_job_user_name of this AuditLogServiceJob.  # noqa: E501

        <div lang=\"ja\"> 操作履歴ダウンロードジョブの実行ユーザー名です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The user name who executes the operation history job.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The audit_log_job_user_name of this AuditLogServiceJob.  # noqa: E501
        :rtype: str
        """
        return self._audit_log_job_user_name

    @audit_log_job_user_name.setter
    def audit_log_job_user_name(self, audit_log_job_user_name):
        """Sets the audit_log_job_user_name of this AuditLogServiceJob.

        <div lang=\"ja\"> 操作履歴ダウンロードジョブの実行ユーザー名です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The user name who executes the operation history job.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param audit_log_job_user_name: The audit_log_job_user_name of this AuditLogServiceJob.  # noqa: E501
        :type: str
        """

        self._audit_log_job_user_name = audit_log_job_user_name

    @property
    def campaign_ids(self):
        """Gets the campaign_ids of this AuditLogServiceJob.  # noqa: E501

        <div lang=\"ja\"> ダウンロード対象のキャンペーンIDです。<br> このフィールドは、リクエストの場合は省略可能となります。 </div> <div lang=\"en\"> Campaign ID of the download object.<br> This field is optional in requests. </div>   # noqa: E501

        :return: The campaign_ids of this AuditLogServiceJob.  # noqa: E501
        :rtype: list[int]
        """
        return self._campaign_ids

    @campaign_ids.setter
    def campaign_ids(self, campaign_ids):
        """Sets the campaign_ids of this AuditLogServiceJob.

        <div lang=\"ja\"> ダウンロード対象のキャンペーンIDです。<br> このフィールドは、リクエストの場合は省略可能となります。 </div> <div lang=\"en\"> Campaign ID of the download object.<br> This field is optional in requests. </div>   # noqa: E501

        :param campaign_ids: The campaign_ids of this AuditLogServiceJob.  # noqa: E501
        :type: list[int]
        """

        self._campaign_ids = campaign_ids

    @property
    def date_range(self):
        """Gets the date_range of this AuditLogServiceJob.  # noqa: E501


        :return: The date_range of this AuditLogServiceJob.  # noqa: E501
        :rtype: AuditLogServiceDateRange
        """
        return self._date_range

    @date_range.setter
    def date_range(self, date_range):
        """Sets the date_range of this AuditLogServiceJob.


        :param date_range: The date_range of this AuditLogServiceJob.  # noqa: E501
        :type: AuditLogServiceDateRange
        """

        self._date_range = date_range

    @property
    def job_status(self):
        """Gets the job_status of this AuditLogServiceJob.  # noqa: E501


        :return: The job_status of this AuditLogServiceJob.  # noqa: E501
        :rtype: AuditLogServiceJobStatus
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this AuditLogServiceJob.


        :param job_status: The job_status of this AuditLogServiceJob.  # noqa: E501
        :type: AuditLogServiceJobStatus
        """

        self._job_status = job_status

    @property
    def lang(self):
        """Gets the lang of this AuditLogServiceJob.  # noqa: E501


        :return: The lang of this AuditLogServiceJob.  # noqa: E501
        :rtype: AuditLogServiceLang
        """
        return self._lang

    @lang.setter
    def lang(self, lang):
        """Sets the lang of this AuditLogServiceJob.


        :param lang: The lang of this AuditLogServiceJob.  # noqa: E501
        :type: AuditLogServiceLang
        """

        self._lang = lang

    @property
    def progress(self):
        """Gets the progress of this AuditLogServiceJob.  # noqa: E501

        <div lang=\"ja\"> 処理進捗です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Displays progress in integers from 1 to 100.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The progress of this AuditLogServiceJob.  # noqa: E501
        :rtype: int
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this AuditLogServiceJob.

        <div lang=\"ja\"> 処理進捗です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Displays progress in integers from 1 to 100.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param progress: The progress of this AuditLogServiceJob.  # noqa: E501
        :type: int
        """

        self._progress = progress

    @property
    def update_source(self):
        """Gets the update_source of this AuditLogServiceJob.  # noqa: E501


        :return: The update_source of this AuditLogServiceJob.  # noqa: E501
        :rtype: AuditLogServiceUpdateSource
        """
        return self._update_source

    @update_source.setter
    def update_source(self, update_source):
        """Sets the update_source of this AuditLogServiceJob.


        :param update_source: The update_source of this AuditLogServiceJob.  # noqa: E501
        :type: AuditLogServiceUpdateSource
        """

        self._update_source = update_source

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AuditLogServiceJob):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AuditLogServiceJob):
            return True

        return self.to_dict() != other.to_dict()
