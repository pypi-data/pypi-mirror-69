# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_display.configuration import Configuration


class SearchKeywordIdea(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'desktop_search_volume': 'int',
        'release_date': 'str',
        'search_keyword': 'str',
        'search_keyword_id': 'int',
        'smart_phone_search_volume': 'int',
        'tablet_search_volume': 'int'
    }

    attribute_map = {
        'desktop_search_volume': 'desktopSearchVolume',
        'release_date': 'releaseDate',
        'search_keyword': 'searchKeyword',
        'search_keyword_id': 'searchKeywordId',
        'smart_phone_search_volume': 'smartPhoneSearchVolume',
        'tablet_search_volume': 'tabletSearchVolume'
    }

    def __init__(self, desktop_search_volume=None, release_date=None, search_keyword=None, search_keyword_id=None, smart_phone_search_volume=None, tablet_search_volume=None, local_vars_configuration=None):  # noqa: E501
        """SearchKeywordIdea - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._desktop_search_volume = None
        self._release_date = None
        self._search_keyword = None
        self._search_keyword_id = None
        self._smart_phone_search_volume = None
        self._tablet_search_volume = None
        self.discriminator = None

        self.desktop_search_volume = desktop_search_volume
        self.release_date = release_date
        self.search_keyword = search_keyword
        self.search_keyword_id = search_keyword_id
        self.smart_phone_search_volume = smart_phone_search_volume
        self.tablet_search_volume = tablet_search_volume

    @property
    def desktop_search_volume(self):
        """Gets the desktop_search_volume of this SearchKeywordIdea.  # noqa: E501

        <div lang=\"ja\"> PCでのリーチ数です。<br> ※1000件未満の場合は<br> 0が取得されます。 </div> <div lang=\"en\"> Reach numbers on PC.<br> *If it is less than 1000 times, the value &#34;0&#34; will be responded. </div>   # noqa: E501

        :return: The desktop_search_volume of this SearchKeywordIdea.  # noqa: E501
        :rtype: int
        """
        return self._desktop_search_volume

    @desktop_search_volume.setter
    def desktop_search_volume(self, desktop_search_volume):
        """Sets the desktop_search_volume of this SearchKeywordIdea.

        <div lang=\"ja\"> PCでのリーチ数です。<br> ※1000件未満の場合は<br> 0が取得されます。 </div> <div lang=\"en\"> Reach numbers on PC.<br> *If it is less than 1000 times, the value &#34;0&#34; will be responded. </div>   # noqa: E501

        :param desktop_search_volume: The desktop_search_volume of this SearchKeywordIdea.  # noqa: E501
        :type: int
        """

        self._desktop_search_volume = desktop_search_volume

    @property
    def release_date(self):
        """Gets the release_date of this SearchKeywordIdea.  # noqa: E501

        <div lang=\"ja\">KW追加日(yyyy㎜dd)です。</div> <div lang=\"en\"> Additional date of keyword.<br> (yyyy㎜dd) </div>   # noqa: E501

        :return: The release_date of this SearchKeywordIdea.  # noqa: E501
        :rtype: str
        """
        return self._release_date

    @release_date.setter
    def release_date(self, release_date):
        """Sets the release_date of this SearchKeywordIdea.

        <div lang=\"ja\">KW追加日(yyyy㎜dd)です。</div> <div lang=\"en\"> Additional date of keyword.<br> (yyyy㎜dd) </div>   # noqa: E501

        :param release_date: The release_date of this SearchKeywordIdea.  # noqa: E501
        :type: str
        """

        self._release_date = release_date

    @property
    def search_keyword(self):
        """Gets the search_keyword of this SearchKeywordIdea.  # noqa: E501

        <div lang=\"ja\">サーチキーワードです。</div> <div lang=\"en\">Search keyword.</div>   # noqa: E501

        :return: The search_keyword of this SearchKeywordIdea.  # noqa: E501
        :rtype: str
        """
        return self._search_keyword

    @search_keyword.setter
    def search_keyword(self, search_keyword):
        """Sets the search_keyword of this SearchKeywordIdea.

        <div lang=\"ja\">サーチキーワードです。</div> <div lang=\"en\">Search keyword.</div>   # noqa: E501

        :param search_keyword: The search_keyword of this SearchKeywordIdea.  # noqa: E501
        :type: str
        """

        self._search_keyword = search_keyword

    @property
    def search_keyword_id(self):
        """Gets the search_keyword_id of this SearchKeywordIdea.  # noqa: E501

        <div lang=\"ja\">サーチキーワードIDです。</div> <div lang=\"en\">Search keyword ID.</div>   # noqa: E501

        :return: The search_keyword_id of this SearchKeywordIdea.  # noqa: E501
        :rtype: int
        """
        return self._search_keyword_id

    @search_keyword_id.setter
    def search_keyword_id(self, search_keyword_id):
        """Sets the search_keyword_id of this SearchKeywordIdea.

        <div lang=\"ja\">サーチキーワードIDです。</div> <div lang=\"en\">Search keyword ID.</div>   # noqa: E501

        :param search_keyword_id: The search_keyword_id of this SearchKeywordIdea.  # noqa: E501
        :type: int
        """

        self._search_keyword_id = search_keyword_id

    @property
    def smart_phone_search_volume(self):
        """Gets the smart_phone_search_volume of this SearchKeywordIdea.  # noqa: E501

        <div lang=\"ja\"> スマートフォンでのリーチ数です。<br> ※1000件未満の場合は<br> 0が取得されます。 </div> <div lang=\"en\"> Reach numbers on Smartphone.<br> *If it is less than 1000 times, the value &#34;0&#34; will be responded. </div>   # noqa: E501

        :return: The smart_phone_search_volume of this SearchKeywordIdea.  # noqa: E501
        :rtype: int
        """
        return self._smart_phone_search_volume

    @smart_phone_search_volume.setter
    def smart_phone_search_volume(self, smart_phone_search_volume):
        """Sets the smart_phone_search_volume of this SearchKeywordIdea.

        <div lang=\"ja\"> スマートフォンでのリーチ数です。<br> ※1000件未満の場合は<br> 0が取得されます。 </div> <div lang=\"en\"> Reach numbers on Smartphone.<br> *If it is less than 1000 times, the value &#34;0&#34; will be responded. </div>   # noqa: E501

        :param smart_phone_search_volume: The smart_phone_search_volume of this SearchKeywordIdea.  # noqa: E501
        :type: int
        """

        self._smart_phone_search_volume = smart_phone_search_volume

    @property
    def tablet_search_volume(self):
        """Gets the tablet_search_volume of this SearchKeywordIdea.  # noqa: E501

        <div lang=\"ja\"> タブレットでのリーチ数です。<br> ※1000件未満の場合は<br> 0が取得されます。 </div> <div lang=\"en\"> Reach numbers on Tablet.<br> *If it is less than 1000 times, the value &#34;0&#34; will be responded. </div>   # noqa: E501

        :return: The tablet_search_volume of this SearchKeywordIdea.  # noqa: E501
        :rtype: int
        """
        return self._tablet_search_volume

    @tablet_search_volume.setter
    def tablet_search_volume(self, tablet_search_volume):
        """Sets the tablet_search_volume of this SearchKeywordIdea.

        <div lang=\"ja\"> タブレットでのリーチ数です。<br> ※1000件未満の場合は<br> 0が取得されます。 </div> <div lang=\"en\"> Reach numbers on Tablet.<br> *If it is less than 1000 times, the value &#34;0&#34; will be responded. </div>   # noqa: E501

        :param tablet_search_volume: The tablet_search_volume of this SearchKeywordIdea.  # noqa: E501
        :type: int
        """

        self._tablet_search_volume = tablet_search_volume

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SearchKeywordIdea):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SearchKeywordIdea):
            return True

        return self.to_dict() != other.to_dict()
