# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_display.configuration import Configuration


class FeedItem(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'availability': 'FeedItemServiceAvailability',
        'capacity': 'int',
        'display_settings': 'int',
        'feed_id': 'int',
        'formatted_price': 'str',
        'formatted_sale_price': 'str',
        'in_stock': 'int',
        'is_remove_capacity': 'FeedItemServiceIsRemoveFlg',
        'is_remove_formatted_price': 'FeedItemServiceIsRemoveFlg',
        'is_remove_formatted_sale_price': 'FeedItemServiceIsRemoveFlg',
        'is_remove_price': 'FeedItemServiceIsRemoveFlg',
        'is_remove_sale_price': 'FeedItemServiceIsRemoveFlg',
        'item_id': 'str',
        'price': 'int',
        'sale_price': 'int'
    }

    attribute_map = {
        'availability': 'availability',
        'capacity': 'capacity',
        'display_settings': 'displaySettings',
        'feed_id': 'feedId',
        'formatted_price': 'formattedPrice',
        'formatted_sale_price': 'formattedSalePrice',
        'in_stock': 'inStock',
        'is_remove_capacity': 'isRemoveCapacity',
        'is_remove_formatted_price': 'isRemoveFormattedPrice',
        'is_remove_formatted_sale_price': 'isRemoveFormattedSalePrice',
        'is_remove_price': 'isRemovePrice',
        'is_remove_sale_price': 'isRemoveSalePrice',
        'item_id': 'itemId',
        'price': 'price',
        'sale_price': 'salePrice'
    }

    def __init__(self, availability=None, capacity=None, display_settings=None, feed_id=None, formatted_price=None, formatted_sale_price=None, in_stock=None, is_remove_capacity=None, is_remove_formatted_price=None, is_remove_formatted_sale_price=None, is_remove_price=None, is_remove_sale_price=None, item_id=None, price=None, sale_price=None, local_vars_configuration=None):  # noqa: E501
        """FeedItem - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._availability = None
        self._capacity = None
        self._display_settings = None
        self._feed_id = None
        self._formatted_price = None
        self._formatted_sale_price = None
        self._in_stock = None
        self._is_remove_capacity = None
        self._is_remove_formatted_price = None
        self._is_remove_formatted_sale_price = None
        self._is_remove_price = None
        self._is_remove_sale_price = None
        self._item_id = None
        self._price = None
        self._sale_price = None
        self.discriminator = None

        self.availability = availability
        self.capacity = capacity
        self.display_settings = display_settings
        self.feed_id = feed_id
        self.formatted_price = formatted_price
        self.formatted_sale_price = formatted_sale_price
        self.in_stock = in_stock
        self.is_remove_capacity = is_remove_capacity
        self.is_remove_formatted_price = is_remove_formatted_price
        self.is_remove_formatted_sale_price = is_remove_formatted_sale_price
        self.is_remove_price = is_remove_price
        self.is_remove_sale_price = is_remove_sale_price
        self.item_id = item_id
        self.price = price
        self.sale_price = sale_price

    @property
    def availability(self):
        """Gets the availability of this FeedItem.  # noqa: E501


        :return: The availability of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceAvailability
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this FeedItem.


        :param availability: The availability of this FeedItem.  # noqa: E501
        :type: FeedItemServiceAvailability
        """

        self._availability = availability

    @property
    def capacity(self):
        """Gets the capacity of this FeedItem.  # noqa: E501

        <div lang=\"ja\"> 在庫数です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Stock quantity.<br> This field is optional in requests. </div>   # noqa: E501

        :return: The capacity of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._capacity

    @capacity.setter
    def capacity(self, capacity):
        """Sets the capacity of this FeedItem.

        <div lang=\"ja\"> 在庫数です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Stock quantity.<br> This field is optional in requests. </div>   # noqa: E501

        :param capacity: The capacity of this FeedItem.  # noqa: E501
        :type: int
        """

        self._capacity = capacity

    @property
    def display_settings(self):
        """Gets the display_settings of this FeedItem.  # noqa: E501

        <div lang=\"ja\"> 配信設定です。<br> このフィールドは、リクエストの場合は省略可能です。<br> ※「0:配信しない/1:配信する」を表します。 </div> <div lang=\"en\"> Display settings.<br> This field is optional in requests.<br> * 0: Off, 1: On. </div>   # noqa: E501

        :return: The display_settings of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._display_settings

    @display_settings.setter
    def display_settings(self, display_settings):
        """Sets the display_settings of this FeedItem.

        <div lang=\"ja\"> 配信設定です。<br> このフィールドは、リクエストの場合は省略可能です。<br> ※「0:配信しない/1:配信する」を表します。 </div> <div lang=\"en\"> Display settings.<br> This field is optional in requests.<br> * 0: Off, 1: On. </div>   # noqa: E501

        :param display_settings: The display_settings of this FeedItem.  # noqa: E501
        :type: int
        """

        self._display_settings = display_settings

    @property
    def feed_id(self):
        """Gets the feed_id of this FeedItem.  # noqa: E501

        <div lang=\"ja\"> Feedを識別するIDです。<br> このフィールドは、リクエストの場合は必須です。 </div> <div lang=\"en\"> ID for identifying Feed.<br> This field is required in requests. </div>   # noqa: E501

        :return: The feed_id of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._feed_id

    @feed_id.setter
    def feed_id(self, feed_id):
        """Sets the feed_id of this FeedItem.

        <div lang=\"ja\"> Feedを識別するIDです。<br> このフィールドは、リクエストの場合は必須です。 </div> <div lang=\"en\"> ID for identifying Feed.<br> This field is required in requests. </div>   # noqa: E501

        :param feed_id: The feed_id of this FeedItem.  # noqa: E501
        :type: int
        """

        self._feed_id = feed_id

    @property
    def formatted_price(self):
        """Gets the formatted_price of this FeedItem.  # noqa: E501

        <div lang=\"ja\"> 文字列の価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Text strings price.<br> This field is optional in requests. </div>   # noqa: E501

        :return: The formatted_price of this FeedItem.  # noqa: E501
        :rtype: str
        """
        return self._formatted_price

    @formatted_price.setter
    def formatted_price(self, formatted_price):
        """Sets the formatted_price of this FeedItem.

        <div lang=\"ja\"> 文字列の価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Text strings price.<br> This field is optional in requests. </div>   # noqa: E501

        :param formatted_price: The formatted_price of this FeedItem.  # noqa: E501
        :type: str
        """

        self._formatted_price = formatted_price

    @property
    def formatted_sale_price(self):
        """Gets the formatted_sale_price of this FeedItem.  # noqa: E501

        <div lang=\"ja\"> 文字列のセール価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Sale price of text strings.<br> This field is optional in requests. </div>   # noqa: E501

        :return: The formatted_sale_price of this FeedItem.  # noqa: E501
        :rtype: str
        """
        return self._formatted_sale_price

    @formatted_sale_price.setter
    def formatted_sale_price(self, formatted_sale_price):
        """Sets the formatted_sale_price of this FeedItem.

        <div lang=\"ja\"> 文字列のセール価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Sale price of text strings.<br> This field is optional in requests. </div>   # noqa: E501

        :param formatted_sale_price: The formatted_sale_price of this FeedItem.  # noqa: E501
        :type: str
        """

        self._formatted_sale_price = formatted_sale_price

    @property
    def in_stock(self):
        """Gets the in_stock of this FeedItem.  # noqa: E501

        <div lang=\"ja\"> 在庫情報です。<br> このフィールドは、リクエストの場合は省略可能です。<br> ※「0:在庫なし/1:在庫あり」を表します。 </div> <div lang=\"en\"> Inventory information.<br> This field is optional in requests.<br> 0: Out of stock, 1: In stock. </div>   # noqa: E501

        :return: The in_stock of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._in_stock

    @in_stock.setter
    def in_stock(self, in_stock):
        """Sets the in_stock of this FeedItem.

        <div lang=\"ja\"> 在庫情報です。<br> このフィールドは、リクエストの場合は省略可能です。<br> ※「0:在庫なし/1:在庫あり」を表します。 </div> <div lang=\"en\"> Inventory information.<br> This field is optional in requests.<br> 0: Out of stock, 1: In stock. </div>   # noqa: E501

        :param in_stock: The in_stock of this FeedItem.  # noqa: E501
        :type: int
        """

        self._in_stock = in_stock

    @property
    def is_remove_capacity(self):
        """Gets the is_remove_capacity of this FeedItem.  # noqa: E501


        :return: The is_remove_capacity of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceIsRemoveFlg
        """
        return self._is_remove_capacity

    @is_remove_capacity.setter
    def is_remove_capacity(self, is_remove_capacity):
        """Sets the is_remove_capacity of this FeedItem.


        :param is_remove_capacity: The is_remove_capacity of this FeedItem.  # noqa: E501
        :type: FeedItemServiceIsRemoveFlg
        """

        self._is_remove_capacity = is_remove_capacity

    @property
    def is_remove_formatted_price(self):
        """Gets the is_remove_formatted_price of this FeedItem.  # noqa: E501


        :return: The is_remove_formatted_price of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceIsRemoveFlg
        """
        return self._is_remove_formatted_price

    @is_remove_formatted_price.setter
    def is_remove_formatted_price(self, is_remove_formatted_price):
        """Sets the is_remove_formatted_price of this FeedItem.


        :param is_remove_formatted_price: The is_remove_formatted_price of this FeedItem.  # noqa: E501
        :type: FeedItemServiceIsRemoveFlg
        """

        self._is_remove_formatted_price = is_remove_formatted_price

    @property
    def is_remove_formatted_sale_price(self):
        """Gets the is_remove_formatted_sale_price of this FeedItem.  # noqa: E501


        :return: The is_remove_formatted_sale_price of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceIsRemoveFlg
        """
        return self._is_remove_formatted_sale_price

    @is_remove_formatted_sale_price.setter
    def is_remove_formatted_sale_price(self, is_remove_formatted_sale_price):
        """Sets the is_remove_formatted_sale_price of this FeedItem.


        :param is_remove_formatted_sale_price: The is_remove_formatted_sale_price of this FeedItem.  # noqa: E501
        :type: FeedItemServiceIsRemoveFlg
        """

        self._is_remove_formatted_sale_price = is_remove_formatted_sale_price

    @property
    def is_remove_price(self):
        """Gets the is_remove_price of this FeedItem.  # noqa: E501


        :return: The is_remove_price of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceIsRemoveFlg
        """
        return self._is_remove_price

    @is_remove_price.setter
    def is_remove_price(self, is_remove_price):
        """Sets the is_remove_price of this FeedItem.


        :param is_remove_price: The is_remove_price of this FeedItem.  # noqa: E501
        :type: FeedItemServiceIsRemoveFlg
        """

        self._is_remove_price = is_remove_price

    @property
    def is_remove_sale_price(self):
        """Gets the is_remove_sale_price of this FeedItem.  # noqa: E501


        :return: The is_remove_sale_price of this FeedItem.  # noqa: E501
        :rtype: FeedItemServiceIsRemoveFlg
        """
        return self._is_remove_sale_price

    @is_remove_sale_price.setter
    def is_remove_sale_price(self, is_remove_sale_price):
        """Sets the is_remove_sale_price of this FeedItem.


        :param is_remove_sale_price: The is_remove_sale_price of this FeedItem.  # noqa: E501
        :type: FeedItemServiceIsRemoveFlg
        """

        self._is_remove_sale_price = is_remove_sale_price

    @property
    def item_id(self):
        """Gets the item_id of this FeedItem.  # noqa: E501

        <div lang=\"ja\"> 商品IDです。<br> このフィールドは、リクエストの場合は必須です。 </div> <div lang=\"en\"> Item ID.<br> This field is required in requests. </div>   # noqa: E501

        :return: The item_id of this FeedItem.  # noqa: E501
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this FeedItem.

        <div lang=\"ja\"> 商品IDです。<br> このフィールドは、リクエストの場合は必須です。 </div> <div lang=\"en\"> Item ID.<br> This field is required in requests. </div>   # noqa: E501

        :param item_id: The item_id of this FeedItem.  # noqa: E501
        :type: str
        """

        self._item_id = item_id

    @property
    def price(self):
        """Gets the price of this FeedItem.  # noqa: E501

        <div lang=\"ja\"> 価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Price.<br> This field is optional in requests. </div>   # noqa: E501

        :return: The price of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this FeedItem.

        <div lang=\"ja\"> 価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Price.<br> This field is optional in requests. </div>   # noqa: E501

        :param price: The price of this FeedItem.  # noqa: E501
        :type: int
        """

        self._price = price

    @property
    def sale_price(self):
        """Gets the sale_price of this FeedItem.  # noqa: E501

        <div lang=\"ja\"> セール価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Sale price.<br> This field is optional in requests. </div>   # noqa: E501

        :return: The sale_price of this FeedItem.  # noqa: E501
        :rtype: int
        """
        return self._sale_price

    @sale_price.setter
    def sale_price(self, sale_price):
        """Sets the sale_price of this FeedItem.

        <div lang=\"ja\"> セール価格です。<br> このフィールドは、リクエストの場合は省略可能です。 </div> <div lang=\"en\"> Sale price.<br> This field is optional in requests. </div>   # noqa: E501

        :param sale_price: The sale_price of this FeedItem.  # noqa: E501
        :type: int
        """

        self._sale_price = sale_price

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FeedItem):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FeedItem):
            return True

        return self.to_dict() != other.to_dict()
