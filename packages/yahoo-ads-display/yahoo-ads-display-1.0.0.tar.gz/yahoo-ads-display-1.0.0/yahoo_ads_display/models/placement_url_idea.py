# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_display.configuration import Configuration


class PlacementUrlIdea(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'keyword': 'str',
        'site_category': 'list[str]',
        'search_url': 'str',
        'ad_format': 'list[PlacementUrlIdeaServiceAdFormat]',
        'desktop_reaches': 'int',
        'desktop_ad_requests': 'int',
        'smart_phone_reaches': 'int',
        'smart_phone_ad_requests': 'int',
        'tablet_reaches': 'int',
        'tablet_ad_requests': 'int'
    }

    attribute_map = {
        'keyword': 'keyword',
        'site_category': 'siteCategory',
        'search_url': 'searchUrl',
        'ad_format': 'adFormat',
        'desktop_reaches': 'desktopReaches',
        'desktop_ad_requests': 'desktopAdRequests',
        'smart_phone_reaches': 'smartPhoneReaches',
        'smart_phone_ad_requests': 'smartPhoneAdRequests',
        'tablet_reaches': 'tabletReaches',
        'tablet_ad_requests': 'tabletAdRequests'
    }

    def __init__(self, keyword=None, site_category=None, search_url=None, ad_format=None, desktop_reaches=None, desktop_ad_requests=None, smart_phone_reaches=None, smart_phone_ad_requests=None, tablet_reaches=None, tablet_ad_requests=None, local_vars_configuration=None):  # noqa: E501
        """PlacementUrlIdea - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._keyword = None
        self._site_category = None
        self._search_url = None
        self._ad_format = None
        self._desktop_reaches = None
        self._desktop_ad_requests = None
        self._smart_phone_reaches = None
        self._smart_phone_ad_requests = None
        self._tablet_reaches = None
        self._tablet_ad_requests = None
        self.discriminator = None

        self.keyword = keyword
        self.site_category = site_category
        self.search_url = search_url
        self.ad_format = ad_format
        self.desktop_reaches = desktop_reaches
        self.desktop_ad_requests = desktop_ad_requests
        self.smart_phone_reaches = smart_phone_reaches
        self.smart_phone_ad_requests = smart_phone_ad_requests
        self.tablet_reaches = tablet_reaches
        self.tablet_ad_requests = tablet_ad_requests

    @property
    def keyword(self):
        """Gets the keyword of this PlacementUrlIdea.  # noqa: E501

        <div lang=\"ja\">検索キーワードです。</div> <div lang=\"en\">Search Keyword</div>   # noqa: E501

        :return: The keyword of this PlacementUrlIdea.  # noqa: E501
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword):
        """Sets the keyword of this PlacementUrlIdea.

        <div lang=\"ja\">検索キーワードです。</div> <div lang=\"en\">Search Keyword</div>   # noqa: E501

        :param keyword: The keyword of this PlacementUrlIdea.  # noqa: E501
        :type: str
        """

        self._keyword = keyword

    @property
    def site_category(self):
        """Gets the site_category of this PlacementUrlIdea.  # noqa: E501

        <div lang=\"ja\">検索カテゴリです。</div> <div lang=\"en\">Search Category</div>   # noqa: E501

        :return: The site_category of this PlacementUrlIdea.  # noqa: E501
        :rtype: list[str]
        """
        return self._site_category

    @site_category.setter
    def site_category(self, site_category):
        """Sets the site_category of this PlacementUrlIdea.

        <div lang=\"ja\">検索カテゴリです。</div> <div lang=\"en\">Search Category</div>   # noqa: E501

        :param site_category: The site_category of this PlacementUrlIdea.  # noqa: E501
        :type: list[str]
        """

        self._site_category = site_category

    @property
    def search_url(self):
        """Gets the search_url of this PlacementUrlIdea.  # noqa: E501

        <div lang=\"ja\"> 取得URLです。<br> 不明なURLの場合　UNKNOWN_URLが入ります。 </div> <div lang=\"en\">URL</div>   # noqa: E501

        :return: The search_url of this PlacementUrlIdea.  # noqa: E501
        :rtype: str
        """
        return self._search_url

    @search_url.setter
    def search_url(self, search_url):
        """Sets the search_url of this PlacementUrlIdea.

        <div lang=\"ja\"> 取得URLです。<br> 不明なURLの場合　UNKNOWN_URLが入ります。 </div> <div lang=\"en\">URL</div>   # noqa: E501

        :param search_url: The search_url of this PlacementUrlIdea.  # noqa: E501
        :type: str
        """

        self._search_url = search_url

    @property
    def ad_format(self):
        """Gets the ad_format of this PlacementUrlIdea.  # noqa: E501


        :return: The ad_format of this PlacementUrlIdea.  # noqa: E501
        :rtype: list[PlacementUrlIdeaServiceAdFormat]
        """
        return self._ad_format

    @ad_format.setter
    def ad_format(self, ad_format):
        """Sets the ad_format of this PlacementUrlIdea.


        :param ad_format: The ad_format of this PlacementUrlIdea.  # noqa: E501
        :type: list[PlacementUrlIdeaServiceAdFormat]
        """

        self._ad_format = ad_format

    @property
    def desktop_reaches(self):
        """Gets the desktop_reaches of this PlacementUrlIdea.  # noqa: E501

        <div lang=\"ja\"> PC でのリーチ数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">Reach Number of PC(1000 In the case of 0)</div>   # noqa: E501

        :return: The desktop_reaches of this PlacementUrlIdea.  # noqa: E501
        :rtype: int
        """
        return self._desktop_reaches

    @desktop_reaches.setter
    def desktop_reaches(self, desktop_reaches):
        """Sets the desktop_reaches of this PlacementUrlIdea.

        <div lang=\"ja\"> PC でのリーチ数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">Reach Number of PC(1000 In the case of 0)</div>   # noqa: E501

        :param desktop_reaches: The desktop_reaches of this PlacementUrlIdea.  # noqa: E501
        :type: int
        """

        self._desktop_reaches = desktop_reaches

    @property
    def desktop_ad_requests(self):
        """Gets the desktop_ad_requests of this PlacementUrlIdea.  # noqa: E501

        <div lang=\"ja\"> PC でのADリクエスト数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">AD Number of PC(1000 In the case of 0)</div>   # noqa: E501

        :return: The desktop_ad_requests of this PlacementUrlIdea.  # noqa: E501
        :rtype: int
        """
        return self._desktop_ad_requests

    @desktop_ad_requests.setter
    def desktop_ad_requests(self, desktop_ad_requests):
        """Sets the desktop_ad_requests of this PlacementUrlIdea.

        <div lang=\"ja\"> PC でのADリクエスト数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">AD Number of PC(1000 In the case of 0)</div>   # noqa: E501

        :param desktop_ad_requests: The desktop_ad_requests of this PlacementUrlIdea.  # noqa: E501
        :type: int
        """

        self._desktop_ad_requests = desktop_ad_requests

    @property
    def smart_phone_reaches(self):
        """Gets the smart_phone_reaches of this PlacementUrlIdea.  # noqa: E501

        <div lang=\"ja\"> SmartPhone でのリーチ数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">Reach Number of SmartPhone (1000 In the case of 0)</div>   # noqa: E501

        :return: The smart_phone_reaches of this PlacementUrlIdea.  # noqa: E501
        :rtype: int
        """
        return self._smart_phone_reaches

    @smart_phone_reaches.setter
    def smart_phone_reaches(self, smart_phone_reaches):
        """Sets the smart_phone_reaches of this PlacementUrlIdea.

        <div lang=\"ja\"> SmartPhone でのリーチ数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">Reach Number of SmartPhone (1000 In the case of 0)</div>   # noqa: E501

        :param smart_phone_reaches: The smart_phone_reaches of this PlacementUrlIdea.  # noqa: E501
        :type: int
        """

        self._smart_phone_reaches = smart_phone_reaches

    @property
    def smart_phone_ad_requests(self):
        """Gets the smart_phone_ad_requests of this PlacementUrlIdea.  # noqa: E501

        <div lang=\"ja\"> SmartPhone でのADリクエスト数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">AD Number of SmartPhone(1000 In the case of 0)</div>   # noqa: E501

        :return: The smart_phone_ad_requests of this PlacementUrlIdea.  # noqa: E501
        :rtype: int
        """
        return self._smart_phone_ad_requests

    @smart_phone_ad_requests.setter
    def smart_phone_ad_requests(self, smart_phone_ad_requests):
        """Sets the smart_phone_ad_requests of this PlacementUrlIdea.

        <div lang=\"ja\"> SmartPhone でのADリクエスト数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">AD Number of SmartPhone(1000 In the case of 0)</div>   # noqa: E501

        :param smart_phone_ad_requests: The smart_phone_ad_requests of this PlacementUrlIdea.  # noqa: E501
        :type: int
        """

        self._smart_phone_ad_requests = smart_phone_ad_requests

    @property
    def tablet_reaches(self):
        """Gets the tablet_reaches of this PlacementUrlIdea.  # noqa: E501

        <div lang=\"ja\"> Tablet でのリーチ数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">Tablet(1000 In the case of 0)</div>   # noqa: E501

        :return: The tablet_reaches of this PlacementUrlIdea.  # noqa: E501
        :rtype: int
        """
        return self._tablet_reaches

    @tablet_reaches.setter
    def tablet_reaches(self, tablet_reaches):
        """Sets the tablet_reaches of this PlacementUrlIdea.

        <div lang=\"ja\"> Tablet でのリーチ数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">Tablet(1000 In the case of 0)</div>   # noqa: E501

        :param tablet_reaches: The tablet_reaches of this PlacementUrlIdea.  # noqa: E501
        :type: int
        """

        self._tablet_reaches = tablet_reaches

    @property
    def tablet_ad_requests(self):
        """Gets the tablet_ad_requests of this PlacementUrlIdea.  # noqa: E501

        <div lang=\"ja\"> TabletでのADリクエスト数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">AD Number of Tablet (1000 In the case of 0)</div>   # noqa: E501

        :return: The tablet_ad_requests of this PlacementUrlIdea.  # noqa: E501
        :rtype: int
        """
        return self._tablet_ad_requests

    @tablet_ad_requests.setter
    def tablet_ad_requests(self, tablet_ad_requests):
        """Sets the tablet_ad_requests of this PlacementUrlIdea.

        <div lang=\"ja\"> TabletでのADリクエスト数です。<br> ・1000未満の時は0が取得されます。 </div> <div lang=\"en\">AD Number of Tablet (1000 In the case of 0)</div>   # noqa: E501

        :param tablet_ad_requests: The tablet_ad_requests of this PlacementUrlIdea.  # noqa: E501
        :type: int
        """

        self._tablet_ad_requests = tablet_ad_requests

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PlacementUrlIdea):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PlacementUrlIdea):
            return True

        return self.to_dict() != other.to_dict()
