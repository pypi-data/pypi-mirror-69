# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_display.configuration import Configuration


class MediaServiceImageMedia(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'media_type': 'MediaServiceType',
        'aspect_ratio': 'str',
        'data': 'str',
        'file_size': 'int',
        'height': 'int',
        'media_ad_format': 'str',
        'media_file_type': 'MediaServiceFileType',
        'width': 'int'
    }

    attribute_map = {
        'media_type': 'mediaType',
        'aspect_ratio': 'aspectRatio',
        'data': 'data',
        'file_size': 'fileSize',
        'height': 'height',
        'media_ad_format': 'mediaAdFormat',
        'media_file_type': 'mediaFileType',
        'width': 'width'
    }

    def __init__(self, media_type=None, aspect_ratio=None, data=None, file_size=None, height=None, media_ad_format=None, media_file_type=None, width=None, local_vars_configuration=None):  # noqa: E501
        """MediaServiceImageMedia - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._media_type = None
        self._aspect_ratio = None
        self._data = None
        self._file_size = None
        self._height = None
        self._media_ad_format = None
        self._media_file_type = None
        self._width = None
        self.discriminator = None

        self.media_type = media_type
        self.aspect_ratio = aspect_ratio
        self.data = data
        self.file_size = file_size
        self.height = height
        self.media_ad_format = media_ad_format
        self.media_file_type = media_file_type
        self.width = width

    @property
    def media_type(self):
        """Gets the media_type of this MediaServiceImageMedia.  # noqa: E501


        :return: The media_type of this MediaServiceImageMedia.  # noqa: E501
        :rtype: MediaServiceType
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type):
        """Sets the media_type of this MediaServiceImageMedia.


        :param media_type: The media_type of this MediaServiceImageMedia.  # noqa: E501
        :type: MediaServiceType
        """

        self._media_type = media_type

    @property
    def aspect_ratio(self):
        """Gets the aspect_ratio of this MediaServiceImageMedia.  # noqa: E501

        <div lang=\"ja\"> 画像アスペクト比の種類です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> ※指定可能な値は、DictionaryServiceのgetMediaAdFormatで取得されるDictionaryServiceMediaAdFormatのaspectRatioフィールドをご確認ください。 </div> <div lang=\"en\"> The type of aspect ratio.<br> Although this field will be returned in the response, it will be ignored on input. <br> * Available values can be referred to aspectRatio field of DictionaryServiceMediaAdFormat object obtained by getMediaAdFormat operation of DictionaryService. </div>   # noqa: E501

        :return: The aspect_ratio of this MediaServiceImageMedia.  # noqa: E501
        :rtype: str
        """
        return self._aspect_ratio

    @aspect_ratio.setter
    def aspect_ratio(self, aspect_ratio):
        """Sets the aspect_ratio of this MediaServiceImageMedia.

        <div lang=\"ja\"> 画像アスペクト比の種類です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> ※指定可能な値は、DictionaryServiceのgetMediaAdFormatで取得されるDictionaryServiceMediaAdFormatのaspectRatioフィールドをご確認ください。 </div> <div lang=\"en\"> The type of aspect ratio.<br> Although this field will be returned in the response, it will be ignored on input. <br> * Available values can be referred to aspectRatio field of DictionaryServiceMediaAdFormat object obtained by getMediaAdFormat operation of DictionaryService. </div>   # noqa: E501

        :param aspect_ratio: The aspect_ratio of this MediaServiceImageMedia.  # noqa: E501
        :type: str
        """

        self._aspect_ratio = aspect_ratio

    @property
    def data(self):
        """Gets the data of this MediaServiceImageMedia.  # noqa: E501

        <div lang=\"ja\">画像ファイルのbase64エンコードです。ADD時のみ指定可能で、GET時のレスポンスでは値は取得されません。</div> <div lang=\"en\">The image file in base64 encode. It can be specified on ADD, however no value returns on the response of GET.</div>   # noqa: E501

        :return: The data of this MediaServiceImageMedia.  # noqa: E501
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this MediaServiceImageMedia.

        <div lang=\"ja\">画像ファイルのbase64エンコードです。ADD時のみ指定可能で、GET時のレスポンスでは値は取得されません。</div> <div lang=\"en\">The image file in base64 encode. It can be specified on ADD, however no value returns on the response of GET.</div>   # noqa: E501

        :param data: The data of this MediaServiceImageMedia.  # noqa: E501
        :type: str
        """

        self._data = data

    @property
    def file_size(self):
        """Gets the file_size of this MediaServiceImageMedia.  # noqa: E501

        <div lang=\"ja\"> ファイルサイズです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The file size of image. <br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The file_size of this MediaServiceImageMedia.  # noqa: E501
        :rtype: int
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this MediaServiceImageMedia.

        <div lang=\"ja\"> ファイルサイズです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The file size of image. <br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param file_size: The file_size of this MediaServiceImageMedia.  # noqa: E501
        :type: int
        """

        self._file_size = file_size

    @property
    def height(self):
        """Gets the height of this MediaServiceImageMedia.  # noqa: E501

        <div lang=\"ja\"> 縦の長さです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The height of image. <br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The height of this MediaServiceImageMedia.  # noqa: E501
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this MediaServiceImageMedia.

        <div lang=\"ja\"> 縦の長さです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The height of image. <br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param height: The height of this MediaServiceImageMedia.  # noqa: E501
        :type: int
        """

        self._height = height

    @property
    def media_ad_format(self):
        """Gets the media_ad_format of this MediaServiceImageMedia.  # noqa: E501

        <div lang=\"ja\"> 画像フォーマットの種類です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> ※指定可能な値は、DictionaryServiceのgetMediaAdFormatで取得されるDictionaryServiceMediaAdFormatのadFormatフィールドをご確認ください。 </div> <div lang=\"en\"> The type of image format.<br> Although this field will be returned in the response, it will be ignored on input. <br> * Available values can be referred to adFormat field of DictionaryServiceMediaAdFormat object obtained by getMediaAdFormat operation of DictionaryService. </div>   # noqa: E501

        :return: The media_ad_format of this MediaServiceImageMedia.  # noqa: E501
        :rtype: str
        """
        return self._media_ad_format

    @media_ad_format.setter
    def media_ad_format(self, media_ad_format):
        """Sets the media_ad_format of this MediaServiceImageMedia.

        <div lang=\"ja\"> 画像フォーマットの種類です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br> ※指定可能な値は、DictionaryServiceのgetMediaAdFormatで取得されるDictionaryServiceMediaAdFormatのadFormatフィールドをご確認ください。 </div> <div lang=\"en\"> The type of image format.<br> Although this field will be returned in the response, it will be ignored on input. <br> * Available values can be referred to adFormat field of DictionaryServiceMediaAdFormat object obtained by getMediaAdFormat operation of DictionaryService. </div>   # noqa: E501

        :param media_ad_format: The media_ad_format of this MediaServiceImageMedia.  # noqa: E501
        :type: str
        """

        self._media_ad_format = media_ad_format

    @property
    def media_file_type(self):
        """Gets the media_file_type of this MediaServiceImageMedia.  # noqa: E501


        :return: The media_file_type of this MediaServiceImageMedia.  # noqa: E501
        :rtype: MediaServiceFileType
        """
        return self._media_file_type

    @media_file_type.setter
    def media_file_type(self, media_file_type):
        """Sets the media_file_type of this MediaServiceImageMedia.


        :param media_file_type: The media_file_type of this MediaServiceImageMedia.  # noqa: E501
        :type: MediaServiceFileType
        """

        self._media_file_type = media_file_type

    @property
    def width(self):
        """Gets the width of this MediaServiceImageMedia.  # noqa: E501

        <div lang=\"ja\"> 横幅です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The width of image.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The width of this MediaServiceImageMedia.  # noqa: E501
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this MediaServiceImageMedia.

        <div lang=\"ja\"> 横幅です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> The width of image.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param width: The width of this MediaServiceImageMedia.  # noqa: E501
        :type: int
        """

        self._width = width

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MediaServiceImageMedia):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, MediaServiceImageMedia):
            return True

        return self.to_dict() != other.to_dict()
