# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_display.configuration import Configuration


class AdGroupAdServiceAd(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'ad_type': 'AdGroupAdServiceAdType',
        'banner_image_ad': 'AdGroupAdServiceBannerImageAd',
        'banner_video_ad': 'AdGroupAdServiceBannerVideoAd',
        'dynamic_ad': 'AdGroupAdServiceDynamicAd',
        'mobile_ad': 'AdGroupAdServiceMobileAd',
        'pos_ad': 'AdGroupAdServicePosAd',
        'responsive_image_ad': 'AdGroupAdServiceResponsiveImageAd',
        'responsive_video_ad': 'AdGroupAdServiceResponsiveVideoAd',
        'static_frame_ad': 'AdGroupAdServiceStaticFrameAd',
        'text_ad': 'AdGroupAdServiceTextAd'
    }

    attribute_map = {
        'ad_type': 'adType',
        'banner_image_ad': 'bannerImageAd',
        'banner_video_ad': 'bannerVideoAd',
        'dynamic_ad': 'dynamicAd',
        'mobile_ad': 'mobileAd',
        'pos_ad': 'posAd',
        'responsive_image_ad': 'responsiveImageAd',
        'responsive_video_ad': 'responsiveVideoAd',
        'static_frame_ad': 'staticFrameAd',
        'text_ad': 'textAd'
    }

    def __init__(self, ad_type=None, banner_image_ad=None, banner_video_ad=None, dynamic_ad=None, mobile_ad=None, pos_ad=None, responsive_image_ad=None, responsive_video_ad=None, static_frame_ad=None, text_ad=None, local_vars_configuration=None):  # noqa: E501
        """AdGroupAdServiceAd - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._ad_type = None
        self._banner_image_ad = None
        self._banner_video_ad = None
        self._dynamic_ad = None
        self._mobile_ad = None
        self._pos_ad = None
        self._responsive_image_ad = None
        self._responsive_video_ad = None
        self._static_frame_ad = None
        self._text_ad = None
        self.discriminator = None

        self.ad_type = ad_type
        self.banner_image_ad = banner_image_ad
        self.banner_video_ad = banner_video_ad
        self.dynamic_ad = dynamic_ad
        self.mobile_ad = mobile_ad
        self.pos_ad = pos_ad
        self.responsive_image_ad = responsive_image_ad
        self.responsive_video_ad = responsive_video_ad
        self.static_frame_ad = static_frame_ad
        self.text_ad = text_ad

    @property
    def ad_type(self):
        """Gets the ad_type of this AdGroupAdServiceAd.  # noqa: E501


        :return: The ad_type of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServiceAdType
        """
        return self._ad_type

    @ad_type.setter
    def ad_type(self, ad_type):
        """Sets the ad_type of this AdGroupAdServiceAd.


        :param ad_type: The ad_type of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServiceAdType
        """

        self._ad_type = ad_type

    @property
    def banner_image_ad(self):
        """Gets the banner_image_ad of this AdGroupAdServiceAd.  # noqa: E501


        :return: The banner_image_ad of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServiceBannerImageAd
        """
        return self._banner_image_ad

    @banner_image_ad.setter
    def banner_image_ad(self, banner_image_ad):
        """Sets the banner_image_ad of this AdGroupAdServiceAd.


        :param banner_image_ad: The banner_image_ad of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServiceBannerImageAd
        """

        self._banner_image_ad = banner_image_ad

    @property
    def banner_video_ad(self):
        """Gets the banner_video_ad of this AdGroupAdServiceAd.  # noqa: E501


        :return: The banner_video_ad of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServiceBannerVideoAd
        """
        return self._banner_video_ad

    @banner_video_ad.setter
    def banner_video_ad(self, banner_video_ad):
        """Sets the banner_video_ad of this AdGroupAdServiceAd.


        :param banner_video_ad: The banner_video_ad of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServiceBannerVideoAd
        """

        self._banner_video_ad = banner_video_ad

    @property
    def dynamic_ad(self):
        """Gets the dynamic_ad of this AdGroupAdServiceAd.  # noqa: E501


        :return: The dynamic_ad of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServiceDynamicAd
        """
        return self._dynamic_ad

    @dynamic_ad.setter
    def dynamic_ad(self, dynamic_ad):
        """Sets the dynamic_ad of this AdGroupAdServiceAd.


        :param dynamic_ad: The dynamic_ad of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServiceDynamicAd
        """

        self._dynamic_ad = dynamic_ad

    @property
    def mobile_ad(self):
        """Gets the mobile_ad of this AdGroupAdServiceAd.  # noqa: E501


        :return: The mobile_ad of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServiceMobileAd
        """
        return self._mobile_ad

    @mobile_ad.setter
    def mobile_ad(self, mobile_ad):
        """Sets the mobile_ad of this AdGroupAdServiceAd.


        :param mobile_ad: The mobile_ad of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServiceMobileAd
        """

        self._mobile_ad = mobile_ad

    @property
    def pos_ad(self):
        """Gets the pos_ad of this AdGroupAdServiceAd.  # noqa: E501


        :return: The pos_ad of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServicePosAd
        """
        return self._pos_ad

    @pos_ad.setter
    def pos_ad(self, pos_ad):
        """Sets the pos_ad of this AdGroupAdServiceAd.


        :param pos_ad: The pos_ad of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServicePosAd
        """

        self._pos_ad = pos_ad

    @property
    def responsive_image_ad(self):
        """Gets the responsive_image_ad of this AdGroupAdServiceAd.  # noqa: E501


        :return: The responsive_image_ad of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServiceResponsiveImageAd
        """
        return self._responsive_image_ad

    @responsive_image_ad.setter
    def responsive_image_ad(self, responsive_image_ad):
        """Sets the responsive_image_ad of this AdGroupAdServiceAd.


        :param responsive_image_ad: The responsive_image_ad of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServiceResponsiveImageAd
        """

        self._responsive_image_ad = responsive_image_ad

    @property
    def responsive_video_ad(self):
        """Gets the responsive_video_ad of this AdGroupAdServiceAd.  # noqa: E501


        :return: The responsive_video_ad of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServiceResponsiveVideoAd
        """
        return self._responsive_video_ad

    @responsive_video_ad.setter
    def responsive_video_ad(self, responsive_video_ad):
        """Sets the responsive_video_ad of this AdGroupAdServiceAd.


        :param responsive_video_ad: The responsive_video_ad of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServiceResponsiveVideoAd
        """

        self._responsive_video_ad = responsive_video_ad

    @property
    def static_frame_ad(self):
        """Gets the static_frame_ad of this AdGroupAdServiceAd.  # noqa: E501


        :return: The static_frame_ad of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServiceStaticFrameAd
        """
        return self._static_frame_ad

    @static_frame_ad.setter
    def static_frame_ad(self, static_frame_ad):
        """Sets the static_frame_ad of this AdGroupAdServiceAd.


        :param static_frame_ad: The static_frame_ad of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServiceStaticFrameAd
        """

        self._static_frame_ad = static_frame_ad

    @property
    def text_ad(self):
        """Gets the text_ad of this AdGroupAdServiceAd.  # noqa: E501


        :return: The text_ad of this AdGroupAdServiceAd.  # noqa: E501
        :rtype: AdGroupAdServiceTextAd
        """
        return self._text_ad

    @text_ad.setter
    def text_ad(self, text_ad):
        """Sets the text_ad of this AdGroupAdServiceAd.


        :param text_ad: The text_ad of this AdGroupAdServiceAd.  # noqa: E501
        :type: AdGroupAdServiceTextAd
        """

        self._text_ad = text_ad

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdGroupAdServiceAd):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AdGroupAdServiceAd):
            return True

        return self.to_dict() != other.to_dict()
