# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-display-api-documents/oauth2-redirect.html\". </div>   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_ads_display.configuration import Configuration


class RetargetingList(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'account_id': 'int',
        'delivery_status': 'RetargetingListServiceDeliveryStatus',
        'description': 'str',
        'reach': 'int',
        'target_list': 'RetargetingListServiceTargetList',
        'target_list_id': 'int',
        'target_list_name': 'str'
    }

    attribute_map = {
        'account_id': 'accountId',
        'delivery_status': 'deliveryStatus',
        'description': 'description',
        'reach': 'reach',
        'target_list': 'targetList',
        'target_list_id': 'targetListId',
        'target_list_name': 'targetListName'
    }

    def __init__(self, account_id=None, delivery_status=None, description=None, reach=None, target_list=None, target_list_id=None, target_list_name=None, local_vars_configuration=None):  # noqa: E501
        """RetargetingList - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._account_id = None
        self._delivery_status = None
        self._description = None
        self._reach = None
        self._target_list = None
        self._target_list_id = None
        self._target_list_name = None
        self.discriminator = None

        self.account_id = account_id
        self.delivery_status = delivery_status
        self.description = description
        self.reach = reach
        self.target_list = target_list
        self.target_list_id = target_list_id
        self.target_list_name = target_list_name

    @property
    def account_id(self):
        """Gets the account_id of this RetargetingList.  # noqa: E501

        <div lang=\"ja\"> アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Account ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The account_id of this RetargetingList.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this RetargetingList.

        <div lang=\"ja\"> アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Account ID.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param account_id: The account_id of this RetargetingList.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def delivery_status(self):
        """Gets the delivery_status of this RetargetingList.  # noqa: E501


        :return: The delivery_status of this RetargetingList.  # noqa: E501
        :rtype: RetargetingListServiceDeliveryStatus
        """
        return self._delivery_status

    @delivery_status.setter
    def delivery_status(self, delivery_status):
        """Sets the delivery_status of this RetargetingList.


        :param delivery_status: The delivery_status of this RetargetingList.  # noqa: E501
        :type: RetargetingListServiceDeliveryStatus
        """

        self._delivery_status = delivery_status

    @property
    def description(self):
        """Gets the description of this RetargetingList.  # noqa: E501

        <div lang=\"ja\"> ターゲットリストの説明です。<br> このフィールドは、ADDおよびSET時に省略可能となり、REMOVE時に無視されます。 </div> <div lang=\"en\"> Description of Target List.<br> This field is optional in ADD and SET operation, and will be ignored in REMOVE operation. </div>   # noqa: E501

        :return: The description of this RetargetingList.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RetargetingList.

        <div lang=\"ja\"> ターゲットリストの説明です。<br> このフィールドは、ADDおよびSET時に省略可能となり、REMOVE時に無視されます。 </div> <div lang=\"en\"> Description of Target List.<br> This field is optional in ADD and SET operation, and will be ignored in REMOVE operation. </div>   # noqa: E501

        :param description: The description of this RetargetingList.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def reach(self):
        """Gets the reach of this RetargetingList.  # noqa: E501

        <div lang=\"ja\"> リーチ数です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Number of reaches.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The reach of this RetargetingList.  # noqa: E501
        :rtype: int
        """
        return self._reach

    @reach.setter
    def reach(self, reach):
        """Sets the reach of this RetargetingList.

        <div lang=\"ja\"> リーチ数です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Number of reaches.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param reach: The reach of this RetargetingList.  # noqa: E501
        :type: int
        """

        self._reach = reach

    @property
    def target_list(self):
        """Gets the target_list of this RetargetingList.  # noqa: E501


        :return: The target_list of this RetargetingList.  # noqa: E501
        :rtype: RetargetingListServiceTargetList
        """
        return self._target_list

    @target_list.setter
    def target_list(self, target_list):
        """Sets the target_list of this RetargetingList.


        :param target_list: The target_list of this RetargetingList.  # noqa: E501
        :type: RetargetingListServiceTargetList
        """

        self._target_list = target_list

    @property
    def target_list_id(self):
        """Gets the target_list_id of this RetargetingList.  # noqa: E501

        <div lang=\"ja\"> ターゲットリストIDです。<br> このフィールドは、SETおよびREMOVE時に必須となり、ADD時には無視されます。 </div> <div lang=\"en\"> Target List ID.<br> This field is required in SET and REMOVE operation, and will be ignored in ADD operation. </div>   # noqa: E501

        :return: The target_list_id of this RetargetingList.  # noqa: E501
        :rtype: int
        """
        return self._target_list_id

    @target_list_id.setter
    def target_list_id(self, target_list_id):
        """Sets the target_list_id of this RetargetingList.

        <div lang=\"ja\"> ターゲットリストIDです。<br> このフィールドは、SETおよびREMOVE時に必須となり、ADD時には無視されます。 </div> <div lang=\"en\"> Target List ID.<br> This field is required in SET and REMOVE operation, and will be ignored in ADD operation. </div>   # noqa: E501

        :param target_list_id: The target_list_id of this RetargetingList.  # noqa: E501
        :type: int
        """

        self._target_list_id = target_list_id

    @property
    def target_list_name(self):
        """Gets the target_list_name of this RetargetingList.  # noqa: E501

        <div lang=\"ja\"> ターゲットリスト名です。<br> このフィールドは、ADD時は必須、SET時は省略可能となり、REMOVE時は無視されます。 </div> <div lang=\"en\"> Target List name.<br> This field is required in ADD operation, optional in SET operation, and will be ignored in REMOVE operation. </div>   # noqa: E501

        :return: The target_list_name of this RetargetingList.  # noqa: E501
        :rtype: str
        """
        return self._target_list_name

    @target_list_name.setter
    def target_list_name(self, target_list_name):
        """Sets the target_list_name of this RetargetingList.

        <div lang=\"ja\"> ターゲットリスト名です。<br> このフィールドは、ADD時は必須、SET時は省略可能となり、REMOVE時は無視されます。 </div> <div lang=\"en\"> Target List name.<br> This field is required in ADD operation, optional in SET operation, and will be ignored in REMOVE operation. </div>   # noqa: E501

        :param target_list_name: The target_list_name of this RetargetingList.  # noqa: E501
        :type: str
        """

        self._target_list_name = target_list_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RetargetingList):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RetargetingList):
            return True

        return self.to_dict() != other.to_dict()
