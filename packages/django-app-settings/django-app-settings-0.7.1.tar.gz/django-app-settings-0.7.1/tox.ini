[tox]
envlist =
	check-setup,
	check-bandit,
	check-isort,
	check-black,
	check-flake8,
	check-mypy,
	check-docs-spell,
	check-docs-link,
	build-docs,
	py35-django{111,20,21,22}
	py36-django{111,20,21,22,30}
	py37-django{111,20,21,22,30}
	py38-django{22,30}
	pypy3-django{111,20,21,22}
	report
skip_missing_interpreters = true

[testenv]
setenv =
	PYTHONPATH = {toxinidir}:{toxinidir}/src:{toxinidir}/tests
	PYTHONUNBUFFERED=yes
commands = {posargs:pytest --cov --cov-append --cov-report=term-missing -vv runtests.py tests}
deps =
	django111: Django>=1.11,<1.12
	django20: Django>=2.0,<2.0.99
	django21: Django>=2.1,<2.1.99
	django22: Django>=2.2,<2.2.99
	django30: Django==3.0.*
	-r{toxinidir}/requirements/test.txt
passenv = *
usedevelop = false
whitelist_externals = tox

[testenv:test]
description = Run all the Python/Django test environments.
skip_install = true
commands = tox {posargs} -e py35-django{111,20,21,22},py36-django{111,20,21,22,30},py37-django{111,20,21,22,30},py38-django{22,30},pypy3-django{111,20,21,22},report

[testenv:check]
description = Run all the check environments.
skip_install = true
commands = tox {posargs} -e check-setup,check-bandit,check-isort,check-black,check-flake8,check-mypy,check-docs-spell,check-docs-link

[testenv:build-docs]
description = Build the documentation locally.
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands = sphinx-build {posargs:-E} -b html docs build/docs

[testenv:check-setup]
description = Check that the package will be correctly installed and correctly rendered on PyPI.
deps =
	twine
commands =
	python setup.py clean --all sdist bdist_wheel
	twine check dist/*

[testenv:check-bandit]
description = Run bandit tool on the code.
skip_install = true
deps =
	bandit
commands =
	bandit -r {toxinidir}/src/appsettings

[testenv:check-flake8]
description = Check the code style.
deps =
	flake8
  django
commands =
	flake8 src/appsettings tests setup.py

[testenv:check-mypy]
description = Check type annotations
deps =
	mypy
  django
commands =
	mypy src/appsettings tests

[testenv:check-black]
description = Run black tool on the code.
basepython = python3.6
skip_install = true
deps =
	black
commands =
	black --check {toxinidir}/src/appsettings {toxinidir}/tests

[testenv:check-isort]
description = Check the imports order.
deps =
	isort
commands =
	isort --check-only --diff --recursive src/appsettings tests setup.py

[testenv:check-docs-spell]
description = Check the spelling in the documentation.
skip_install = true
setenv = SPELLCHECK=1
deps =
	-r{toxinidir}/docs/requirements.txt
	sphinxcontrib-spelling
	pyenchant
commands =
	- sphinx-build {posargs:-E} -Q -b html docs build/docs
	sphinx-build -b spelling -w /dev/null docs build/docs

[testenv:check-docs-link]
description = Check that the links written in documentation are valid.
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands =
	- sphinx-build {posargs:-E} -Q -b html docs build/docs
	sphinx-build -b linkcheck -w /dev/null docs build/docs

[testenv:run-isort]
description = Check the imports order.
deps =
	isort
commands =
	isort --apply --recursive src/appsettings tests setup.py

[testenv:run-black]
description = Run black tool on the code.
basepython = python3.6
skip_install = true
deps =
	black
commands =
	black {toxinidir}/src/appsettings {toxinidir}/tests

[testenv:run-bumpversion]
description = Increase the version number. Argument is 'patch', 'minor' or 'major'.
deps =
	bumpversion
commands =
	bumpversion {posargs}

[testenv:report]
description = Create coverage report.
skip_install = true
deps = coverage
parallel_show_output = true
depends = py35-django{111,20,21,22},py36-django{111,20,21,22,30},py37-django{111,20,21,22,30},py38-django{22,30},pypy3-django{111,20,21,22}
commands =
	coverage combine
	coverage report
	coverage html

[testenv:codacy]
description = Upload coverage report to codacy.
skip_install = true
deps =
	codacy-coverage
	coverage
commands =
	coverage report
	coverage xml --ignore-errors
	python-codacy-coverage []
