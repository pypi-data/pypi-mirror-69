[uwsgi]
# enable threads if it not specified
if-not-opt = offload-threads
offload-threads = 2
endif =

# enable threads if it not specified
if-not-opt = enable-threads
enable-threads = true
endif =

# use master-mode if it not specified
if-not-opt = master
master = true
endif =

# number of workers
if-not-opt = processes
processes = %k
endif =

# number of threads per worker
if-not-opt = threads
threads = 2
endif =

# Enable static-gzip-all by default
if-not-opt = static-gzip-all
static-gzip-all = true
endif =

# Enable automatic gzip content
if-not-opt = http-auto-gzip
http-auto-gzip = true
endif =

# PID-file for service
if-not-opt = pidfile
pidfile = /var/run/%(program_name)/web.pid
endif=

# Fix mime types
if-file = /etc/mime.types
mimefile = %(_)
endif =

# Gzip responses
if-not-opt = http-keepalive
http-keepalive = 1
endif=

# Collect response types which should be gzipped
if-not-opt = http-auto-gzip
http-auto-gzip = true
collect-header = Content-Type RESPONSE_CONTENT_TYPE
response-route-if = equal:${RESPONSE_CONTENT_TYPE};application/json addheader:uWSGI-Encoding: gzip
response-route-if = equal:${RESPONSE_CONTENT_TYPE};application/javascript addheader:uWSGI-Encoding: gzip
response-route-if = startswith:${RESPONSE_CONTENT_TYPE};text/html addheader:uWSGI-Encoding: gzip

response-route-if = contains:${HTTP_ACCEPT_ENCODING};gzip gzip:
response-route-run = delheader:uWSGI-Encoding
response-route-run = chunked:
endif=

print = Run %(program_name) with module `%(module)`
