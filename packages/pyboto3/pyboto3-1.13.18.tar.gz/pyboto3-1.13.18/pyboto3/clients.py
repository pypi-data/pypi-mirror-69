import boto3
accessanalyzer = boto3.client("accessanalyzer")
""":type : pyboto3.accessanalyzer"""
acm = boto3.client("acm")
""":type : pyboto3.acm"""
acm_pca = boto3.client("acm-pca")
""":type : pyboto3.acm_pca"""
alexaforbusiness = boto3.client("alexaforbusiness")
""":type : pyboto3.alexaforbusiness"""
amplify = boto3.client("amplify")
""":type : pyboto3.amplify"""
apigateway = boto3.client("apigateway")
""":type : pyboto3.apigateway"""
apigatewaymanagementapi = boto3.client("apigatewaymanagementapi")
""":type : pyboto3.apigatewaymanagementapi"""
apigatewayv2 = boto3.client("apigatewayv2")
""":type : pyboto3.apigatewayv2"""
appconfig = boto3.client("appconfig")
""":type : pyboto3.appconfig"""
application_autoscaling = boto3.client("application-autoscaling")
""":type : pyboto3.application_autoscaling"""
application_insights = boto3.client("application-insights")
""":type : pyboto3.application_insights"""
appmesh = boto3.client("appmesh")
""":type : pyboto3.appmesh"""
appstream = boto3.client("appstream")
""":type : pyboto3.appstream"""
appsync = boto3.client("appsync")
""":type : pyboto3.appsync"""
athena = boto3.client("athena")
""":type : pyboto3.athena"""
autoscaling = boto3.client("autoscaling")
""":type : pyboto3.autoscaling"""
autoscaling_plans = boto3.client("autoscaling-plans")
""":type : pyboto3.autoscaling_plans"""
backup = boto3.client("backup")
""":type : pyboto3.backup"""
batch = boto3.client("batch")
""":type : pyboto3.batch"""
budgets = boto3.client("budgets")
""":type : pyboto3.budgets"""
ce = boto3.client("ce")
""":type : pyboto3.ce"""
chime = boto3.client("chime")
""":type : pyboto3.chime"""
cloud9 = boto3.client("cloud9")
""":type : pyboto3.cloud9"""
clouddirectory = boto3.client("clouddirectory")
""":type : pyboto3.clouddirectory"""
cloudformation = boto3.client("cloudformation")
""":type : pyboto3.cloudformation"""
cloudfront = boto3.client("cloudfront")
""":type : pyboto3.cloudfront"""
cloudhsm = boto3.client("cloudhsm")
""":type : pyboto3.cloudhsm"""
cloudhsmv2 = boto3.client("cloudhsmv2")
""":type : pyboto3.cloudhsmv2"""
cloudsearch = boto3.client("cloudsearch")
""":type : pyboto3.cloudsearch"""
cloudsearchdomain = boto3.client("cloudsearchdomain")
""":type : pyboto3.cloudsearchdomain"""
cloudtrail = boto3.client("cloudtrail")
""":type : pyboto3.cloudtrail"""
cloudwatch = boto3.client("cloudwatch")
""":type : pyboto3.cloudwatch"""
codebuild = boto3.client("codebuild")
""":type : pyboto3.codebuild"""
codecommit = boto3.client("codecommit")
""":type : pyboto3.codecommit"""
codedeploy = boto3.client("codedeploy")
""":type : pyboto3.codedeploy"""
codeguru_reviewer = boto3.client("codeguru-reviewer")
""":type : pyboto3.codeguru_reviewer"""
codeguruprofiler = boto3.client("codeguruprofiler")
""":type : pyboto3.codeguruprofiler"""
codepipeline = boto3.client("codepipeline")
""":type : pyboto3.codepipeline"""
codestar = boto3.client("codestar")
""":type : pyboto3.codestar"""
codestar_connections = boto3.client("codestar-connections")
""":type : pyboto3.codestar_connections"""
codestar_notifications = boto3.client("codestar-notifications")
""":type : pyboto3.codestar_notifications"""
cognito_identity = boto3.client("cognito-identity")
""":type : pyboto3.cognito_identity"""
cognito_idp = boto3.client("cognito-idp")
""":type : pyboto3.cognito_idp"""
cognito_sync = boto3.client("cognito-sync")
""":type : pyboto3.cognito_sync"""
comprehend = boto3.client("comprehend")
""":type : pyboto3.comprehend"""
comprehendmedical = boto3.client("comprehendmedical")
""":type : pyboto3.comprehendmedical"""
compute_optimizer = boto3.client("compute-optimizer")
""":type : pyboto3.compute_optimizer"""
config = boto3.client("config")
""":type : pyboto3.config"""
connect = boto3.client("connect")
""":type : pyboto3.connect"""
connectparticipant = boto3.client("connectparticipant")
""":type : pyboto3.connectparticipant"""
cur = boto3.client("cur")
""":type : pyboto3.cur"""
dataexchange = boto3.client("dataexchange")
""":type : pyboto3.dataexchange"""
datapipeline = boto3.client("datapipeline")
""":type : pyboto3.datapipeline"""
datasync = boto3.client("datasync")
""":type : pyboto3.datasync"""
dax = boto3.client("dax")
""":type : pyboto3.dax"""
detective = boto3.client("detective")
""":type : pyboto3.detective"""
devicefarm = boto3.client("devicefarm")
""":type : pyboto3.devicefarm"""
directconnect = boto3.client("directconnect")
""":type : pyboto3.directconnect"""
discovery = boto3.client("discovery")
""":type : pyboto3.discovery"""
dlm = boto3.client("dlm")
""":type : pyboto3.dlm"""
dms = boto3.client("dms")
""":type : pyboto3.dms"""
docdb = boto3.client("docdb")
""":type : pyboto3.docdb"""
ds = boto3.client("ds")
""":type : pyboto3.ds"""
dynamodb = boto3.client("dynamodb")
""":type : pyboto3.dynamodb"""
dynamodbstreams = boto3.client("dynamodbstreams")
""":type : pyboto3.dynamodbstreams"""
ebs = boto3.client("ebs")
""":type : pyboto3.ebs"""
ec2 = boto3.client("ec2")
""":type : pyboto3.ec2"""
ec2_instance_connect = boto3.client("ec2-instance-connect")
""":type : pyboto3.ec2_instance_connect"""
ecr = boto3.client("ecr")
""":type : pyboto3.ecr"""
ecs = boto3.client("ecs")
""":type : pyboto3.ecs"""
efs = boto3.client("efs")
""":type : pyboto3.efs"""
eks = boto3.client("eks")
""":type : pyboto3.eks"""
elastic_inference = boto3.client("elastic-inference")
""":type : pyboto3.elastic_inference"""
elasticache = boto3.client("elasticache")
""":type : pyboto3.elasticache"""
elasticbeanstalk = boto3.client("elasticbeanstalk")
""":type : pyboto3.elasticbeanstalk"""
elastictranscoder = boto3.client("elastictranscoder")
""":type : pyboto3.elastictranscoder"""
elb = boto3.client("elb")
""":type : pyboto3.elb"""
elbv2 = boto3.client("elbv2")
""":type : pyboto3.elbv2"""
emr = boto3.client("emr")
""":type : pyboto3.emr"""
es = boto3.client("es")
""":type : pyboto3.es"""
events = boto3.client("events")
""":type : pyboto3.events"""
firehose = boto3.client("firehose")
""":type : pyboto3.firehose"""
fms = boto3.client("fms")
""":type : pyboto3.fms"""
forecast = boto3.client("forecast")
""":type : pyboto3.forecast"""
forecastquery = boto3.client("forecastquery")
""":type : pyboto3.forecastquery"""
frauddetector = boto3.client("frauddetector")
""":type : pyboto3.frauddetector"""
fsx = boto3.client("fsx")
""":type : pyboto3.fsx"""
gamelift = boto3.client("gamelift")
""":type : pyboto3.gamelift"""
glacier = boto3.client("glacier")
""":type : pyboto3.glacier"""
globalaccelerator = boto3.client("globalaccelerator")
""":type : pyboto3.globalaccelerator"""
glue = boto3.client("glue")
""":type : pyboto3.glue"""
greengrass = boto3.client("greengrass")
""":type : pyboto3.greengrass"""
groundstation = boto3.client("groundstation")
""":type : pyboto3.groundstation"""
guardduty = boto3.client("guardduty")
""":type : pyboto3.guardduty"""
health = boto3.client("health")
""":type : pyboto3.health"""
iam = boto3.client("iam")
""":type : pyboto3.iam"""
imagebuilder = boto3.client("imagebuilder")
""":type : pyboto3.imagebuilder"""
importexport = boto3.client("importexport")
""":type : pyboto3.importexport"""
inspector = boto3.client("inspector")
""":type : pyboto3.inspector"""
iot = boto3.client("iot")
""":type : pyboto3.iot"""
iot_data = boto3.client("iot-data")
""":type : pyboto3.iot_data"""
iot_jobs_data = boto3.client("iot-jobs-data")
""":type : pyboto3.iot_jobs_data"""
iot1click_devices = boto3.client("iot1click-devices")
""":type : pyboto3.iot1click_devices"""
iot1click_projects = boto3.client("iot1click-projects")
""":type : pyboto3.iot1click_projects"""
iotanalytics = boto3.client("iotanalytics")
""":type : pyboto3.iotanalytics"""
iotevents = boto3.client("iotevents")
""":type : pyboto3.iotevents"""
iotevents_data = boto3.client("iotevents-data")
""":type : pyboto3.iotevents_data"""
iotsecuretunneling = boto3.client("iotsecuretunneling")
""":type : pyboto3.iotsecuretunneling"""
iotsitewise = boto3.client("iotsitewise")
""":type : pyboto3.iotsitewise"""
iotthingsgraph = boto3.client("iotthingsgraph")
""":type : pyboto3.iotthingsgraph"""
kafka = boto3.client("kafka")
""":type : pyboto3.kafka"""
kendra = boto3.client("kendra")
""":type : pyboto3.kendra"""
kinesis = boto3.client("kinesis")
""":type : pyboto3.kinesis"""
kinesis_video_archived_media = boto3.client("kinesis-video-archived-media")
""":type : pyboto3.kinesis_video_archived_media"""
kinesis_video_media = boto3.client("kinesis-video-media")
""":type : pyboto3.kinesis_video_media"""
kinesis_video_signaling = boto3.client("kinesis-video-signaling")
""":type : pyboto3.kinesis_video_signaling"""
kinesisanalytics = boto3.client("kinesisanalytics")
""":type : pyboto3.kinesisanalytics"""
kinesisanalyticsv2 = boto3.client("kinesisanalyticsv2")
""":type : pyboto3.kinesisanalyticsv2"""
kinesisvideo = boto3.client("kinesisvideo")
""":type : pyboto3.kinesisvideo"""
kms = boto3.client("kms")
""":type : pyboto3.kms"""
lakeformation = boto3.client("lakeformation")
""":type : pyboto3.lakeformation"""
lambda_ = boto3.client("lambda")
""":type : pyboto3.lambda_"""
lex_models = boto3.client("lex-models")
""":type : pyboto3.lex_models"""
lex_runtime = boto3.client("lex-runtime")
""":type : pyboto3.lex_runtime"""
license_manager = boto3.client("license-manager")
""":type : pyboto3.license_manager"""
lightsail = boto3.client("lightsail")
""":type : pyboto3.lightsail"""
logs = boto3.client("logs")
""":type : pyboto3.logs"""
machinelearning = boto3.client("machinelearning")
""":type : pyboto3.machinelearning"""
macie = boto3.client("macie")
""":type : pyboto3.macie"""
macie2 = boto3.client("macie2")
""":type : pyboto3.macie2"""
managedblockchain = boto3.client("managedblockchain")
""":type : pyboto3.managedblockchain"""
marketplace_catalog = boto3.client("marketplace-catalog")
""":type : pyboto3.marketplace_catalog"""
marketplace_entitlement = boto3.client("marketplace-entitlement")
""":type : pyboto3.marketplace_entitlement"""
marketplacecommerceanalytics = boto3.client("marketplacecommerceanalytics")
""":type : pyboto3.marketplacecommerceanalytics"""
mediaconnect = boto3.client("mediaconnect")
""":type : pyboto3.mediaconnect"""
mediaconvert = boto3.client("mediaconvert")
""":type : pyboto3.mediaconvert"""
medialive = boto3.client("medialive")
""":type : pyboto3.medialive"""
mediapackage = boto3.client("mediapackage")
""":type : pyboto3.mediapackage"""
mediapackage_vod = boto3.client("mediapackage-vod")
""":type : pyboto3.mediapackage_vod"""
mediastore = boto3.client("mediastore")
""":type : pyboto3.mediastore"""
mediastore_data = boto3.client("mediastore-data")
""":type : pyboto3.mediastore_data"""
mediatailor = boto3.client("mediatailor")
""":type : pyboto3.mediatailor"""
meteringmarketplace = boto3.client("meteringmarketplace")
""":type : pyboto3.meteringmarketplace"""
mgh = boto3.client("mgh")
""":type : pyboto3.mgh"""
migrationhub_config = boto3.client("migrationhub-config")
""":type : pyboto3.migrationhub_config"""
mobile = boto3.client("mobile")
""":type : pyboto3.mobile"""
mq = boto3.client("mq")
""":type : pyboto3.mq"""
mturk = boto3.client("mturk")
""":type : pyboto3.mturk"""
neptune = boto3.client("neptune")
""":type : pyboto3.neptune"""
networkmanager = boto3.client("networkmanager")
""":type : pyboto3.networkmanager"""
opsworks = boto3.client("opsworks")
""":type : pyboto3.opsworks"""
opsworkscm = boto3.client("opsworkscm")
""":type : pyboto3.opsworkscm"""
organizations = boto3.client("organizations")
""":type : pyboto3.organizations"""
outposts = boto3.client("outposts")
""":type : pyboto3.outposts"""
personalize = boto3.client("personalize")
""":type : pyboto3.personalize"""
personalize_events = boto3.client("personalize-events")
""":type : pyboto3.personalize_events"""
personalize_runtime = boto3.client("personalize-runtime")
""":type : pyboto3.personalize_runtime"""
pi = boto3.client("pi")
""":type : pyboto3.pi"""
pinpoint = boto3.client("pinpoint")
""":type : pyboto3.pinpoint"""
pinpoint_email = boto3.client("pinpoint-email")
""":type : pyboto3.pinpoint_email"""
pinpoint_sms_voice = boto3.client("pinpoint-sms-voice")
""":type : pyboto3.pinpoint_sms_voice"""
polly = boto3.client("polly")
""":type : pyboto3.polly"""
pricing = boto3.client("pricing")
""":type : pyboto3.pricing"""
qldb = boto3.client("qldb")
""":type : pyboto3.qldb"""
qldb_session = boto3.client("qldb-session")
""":type : pyboto3.qldb_session"""
quicksight = boto3.client("quicksight")
""":type : pyboto3.quicksight"""
ram = boto3.client("ram")
""":type : pyboto3.ram"""
rds = boto3.client("rds")
""":type : pyboto3.rds"""
rds_data = boto3.client("rds-data")
""":type : pyboto3.rds_data"""
redshift = boto3.client("redshift")
""":type : pyboto3.redshift"""
rekognition = boto3.client("rekognition")
""":type : pyboto3.rekognition"""
resource_groups = boto3.client("resource-groups")
""":type : pyboto3.resource_groups"""
resourcegroupstaggingapi = boto3.client("resourcegroupstaggingapi")
""":type : pyboto3.resourcegroupstaggingapi"""
robomaker = boto3.client("robomaker")
""":type : pyboto3.robomaker"""
route53 = boto3.client("route53")
""":type : pyboto3.route53"""
route53domains = boto3.client("route53domains")
""":type : pyboto3.route53domains"""
route53resolver = boto3.client("route53resolver")
""":type : pyboto3.route53resolver"""
s3 = boto3.client("s3")
""":type : pyboto3.s3"""
s3control = boto3.client("s3control")
""":type : pyboto3.s3control"""
sagemaker = boto3.client("sagemaker")
""":type : pyboto3.sagemaker"""
sagemaker_a2i_runtime = boto3.client("sagemaker-a2i-runtime")
""":type : pyboto3.sagemaker_a2i_runtime"""
sagemaker_runtime = boto3.client("sagemaker-runtime")
""":type : pyboto3.sagemaker_runtime"""
savingsplans = boto3.client("savingsplans")
""":type : pyboto3.savingsplans"""
schemas = boto3.client("schemas")
""":type : pyboto3.schemas"""
sdb = boto3.client("sdb")
""":type : pyboto3.sdb"""
secretsmanager = boto3.client("secretsmanager")
""":type : pyboto3.secretsmanager"""
securityhub = boto3.client("securityhub")
""":type : pyboto3.securityhub"""
serverlessrepo = boto3.client("serverlessrepo")
""":type : pyboto3.serverlessrepo"""
service_quotas = boto3.client("service-quotas")
""":type : pyboto3.service_quotas"""
servicecatalog = boto3.client("servicecatalog")
""":type : pyboto3.servicecatalog"""
servicediscovery = boto3.client("servicediscovery")
""":type : pyboto3.servicediscovery"""
ses = boto3.client("ses")
""":type : pyboto3.ses"""
sesv2 = boto3.client("sesv2")
""":type : pyboto3.sesv2"""
shield = boto3.client("shield")
""":type : pyboto3.shield"""
signer = boto3.client("signer")
""":type : pyboto3.signer"""
sms = boto3.client("sms")
""":type : pyboto3.sms"""
sms_voice = boto3.client("sms-voice")
""":type : pyboto3.sms_voice"""
snowball = boto3.client("snowball")
""":type : pyboto3.snowball"""
sns = boto3.client("sns")
""":type : pyboto3.sns"""
sqs = boto3.client("sqs")
""":type : pyboto3.sqs"""
ssm = boto3.client("ssm")
""":type : pyboto3.ssm"""
sso = boto3.client("sso")
""":type : pyboto3.sso"""
sso_oidc = boto3.client("sso-oidc")
""":type : pyboto3.sso_oidc"""
stepfunctions = boto3.client("stepfunctions")
""":type : pyboto3.stepfunctions"""
storagegateway = boto3.client("storagegateway")
""":type : pyboto3.storagegateway"""
sts = boto3.client("sts")
""":type : pyboto3.sts"""
support = boto3.client("support")
""":type : pyboto3.support"""
swf = boto3.client("swf")
""":type : pyboto3.swf"""
synthetics = boto3.client("synthetics")
""":type : pyboto3.synthetics"""
textract = boto3.client("textract")
""":type : pyboto3.textract"""
transcribe = boto3.client("transcribe")
""":type : pyboto3.transcribe"""
transfer = boto3.client("transfer")
""":type : pyboto3.transfer"""
translate = boto3.client("translate")
""":type : pyboto3.translate"""
waf = boto3.client("waf")
""":type : pyboto3.waf"""
waf_regional = boto3.client("waf-regional")
""":type : pyboto3.waf_regional"""
wafv2 = boto3.client("wafv2")
""":type : pyboto3.wafv2"""
workdocs = boto3.client("workdocs")
""":type : pyboto3.workdocs"""
worklink = boto3.client("worklink")
""":type : pyboto3.worklink"""
workmail = boto3.client("workmail")
""":type : pyboto3.workmail"""
workmailmessageflow = boto3.client("workmailmessageflow")
""":type : pyboto3.workmailmessageflow"""
workspaces = boto3.client("workspaces")
""":type : pyboto3.workspaces"""
xray = boto3.client("xray")
""":type : pyboto3.xray"""
