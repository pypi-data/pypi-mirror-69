'''

The MIT License (MIT)

Copyright (c) 2016 WavyCloud

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

'''

def accept_reserved_instances_exchange_quote(DryRun=None, ReservedInstanceIds=None, TargetConfigurations=None):
    """
    Accepts the Convertible Reserved Instance exchange quote described in the  GetReservedInstancesExchangeQuote call.
    See also: AWS API Documentation
    
    
    :example: response = client.accept_reserved_instances_exchange_quote(
        DryRun=True|False,
        ReservedInstanceIds=[
            'string',
        ],
        TargetConfigurations=[
            {
                'InstanceCount': 123,
                'OfferingId': 'string'
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ReservedInstanceIds: list
    :param ReservedInstanceIds: [REQUIRED]\nThe IDs of the Convertible Reserved Instances to exchange for another Convertible Reserved Instance of the same or higher value.\n\n(string) --\n\n

    :type TargetConfigurations: list
    :param TargetConfigurations: The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.\n\n(dict) --Details about the target configuration.\n\nInstanceCount (integer) --The number of instances the Covertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request\n\nOfferingId (string) -- [REQUIRED]The Convertible Reserved Instance offering ID.\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ExchangeId': 'string'
}


Response Structure

(dict) --
The result of the exchange and whether it was successful .

ExchangeId (string) --
The ID of the successful exchange.








    :return: {
        'ExchangeId': 'string'
    }
    
    
    """
    pass

def accept_transit_gateway_peering_attachment(TransitGatewayAttachmentId=None, DryRun=None):
    """
    Accepts a transit gateway peering attachment request. The peering attachment must be in the pendingAcceptance state.
    See also: AWS API Documentation
    
    
    :example: response = client.accept_transit_gateway_peering_attachment(
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the transit gateway attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayPeeringAttachment': {
        'TransitGatewayAttachmentId': 'string',
        'RequesterTgwInfo': {
            'TransitGatewayId': 'string',
            'OwnerId': 'string',
            'Region': 'string'
        },
        'AccepterTgwInfo': {
            'TransitGatewayId': 'string',
            'OwnerId': 'string',
            'Region': 'string'
        },
        'Status': {
            'Code': 'string',
            'Message': 'string'
        },
        'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
        'CreationTime': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayPeeringAttachment (dict) --
The transit gateway peering attachment.

TransitGatewayAttachmentId (string) --
The ID of the transit gateway peering attachment.

RequesterTgwInfo (dict) --
Information about the requester transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



AccepterTgwInfo (dict) --
Information about the accepter transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



Status (dict) --
The status of the transit gateway peering attachment.

Code (string) --
The status code.

Message (string) --
The status message, if applicable.



State (string) --
The state of the transit gateway peering attachment.

CreationTime (datetime) --
The time the transit gateway peering attachment was created.

Tags (list) --
The tags for the transit gateway peering attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayPeeringAttachment': {
            'TransitGatewayAttachmentId': 'string',
            'RequesterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'AccepterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'Status': {
                'Code': 'string',
                'Message': 'string'
            },
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def accept_transit_gateway_vpc_attachment(TransitGatewayAttachmentId=None, DryRun=None):
    """
    Accepts a request to attach a VPC to a transit gateway.
    The VPC attachment must be in the pendingAcceptance state. Use  DescribeTransitGatewayVpcAttachments to view your pending VPC attachment requests. Use  RejectTransitGatewayVpcAttachment to reject a VPC attachment request.
    See also: AWS API Documentation
    
    
    :example: response = client.accept_transit_gateway_vpc_attachment(
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayVpcAttachment': {
        'TransitGatewayAttachmentId': 'string',
        'TransitGatewayId': 'string',
        'VpcId': 'string',
        'VpcOwnerId': 'string',
        'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
        'SubnetIds': [
            'string',
        ],
        'CreationTime': datetime(2015, 1, 1),
        'Options': {
            'DnsSupport': 'enable'|'disable',
            'Ipv6Support': 'enable'|'disable'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayVpcAttachment (dict) --
The VPC attachment.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

TransitGatewayId (string) --
The ID of the transit gateway.

VpcId (string) --
The ID of the VPC.

VpcOwnerId (string) --
The ID of the AWS account that owns the VPC.

State (string) --
The state of the VPC attachment.

SubnetIds (list) --
The IDs of the subnets.

(string) --


CreationTime (datetime) --
The creation time.

Options (dict) --
The VPC attachment options.

DnsSupport (string) --
Indicates whether DNS support is enabled.

Ipv6Support (string) --
Indicates whether IPv6 support is disabled.



Tags (list) --
The tags for the VPC attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayVpcAttachment': {
            'TransitGatewayAttachmentId': 'string',
            'TransitGatewayId': 'string',
            'VpcId': 'string',
            'VpcOwnerId': 'string',
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'SubnetIds': [
                'string',
            ],
            'CreationTime': datetime(2015, 1, 1),
            'Options': {
                'DnsSupport': 'enable'|'disable',
                'Ipv6Support': 'enable'|'disable'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def accept_vpc_endpoint_connections(DryRun=None, ServiceId=None, VpcEndpointIds=None):
    """
    Accepts one or more interface VPC endpoint connection requests to your VPC endpoint service.
    See also: AWS API Documentation
    
    
    :example: response = client.accept_vpc_endpoint_connections(
        DryRun=True|False,
        ServiceId='string',
        VpcEndpointIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceId: string
    :param ServiceId: [REQUIRED]\nThe ID of the VPC endpoint service.\n

    :type VpcEndpointIds: list
    :param VpcEndpointIds: [REQUIRED]\nThe IDs of one or more interface VPC endpoints.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Unsuccessful': [
        {
            'Error': {
                'Code': 'string',
                'Message': 'string'
            },
            'ResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --

Unsuccessful (list) --
Information about the interface endpoints that were not accepted, if applicable.

(dict) --
Information about items that were not successfully processed in a batch call.

Error (dict) --
Information about the error.

Code (string) --
The error code.

Message (string) --
The error message accompanying the error code.



ResourceId (string) --
The ID of the resource.












    :return: {
        'Unsuccessful': [
            {
                'Error': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'ResourceId': 'string'
            },
        ]
    }
    
    
    """
    pass

def accept_vpc_peering_connection(DryRun=None, VpcPeeringConnectionId=None):
    """
    Accept a VPC peering connection request. To accept a request, the VPC peering connection must be in the pending-acceptance state, and you must be the owner of the peer VPC. Use  DescribeVpcPeeringConnections to view your outstanding VPC peering connection requests.
    For an inter-Region VPC peering connection request, you must accept the VPC peering connection in the Region of the accepter VPC.
    See also: AWS API Documentation
    
    
    :example: response = client.accept_vpc_peering_connection(
        DryRun=True|False,
        VpcPeeringConnectionId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcPeeringConnectionId: string
    :param VpcPeeringConnectionId: The ID of the VPC peering connection. You must specify this parameter in the request.

    :rtype: dict

ReturnsResponse Syntax
{
    'VpcPeeringConnection': {
        'AccepterVpcInfo': {
            'CidrBlock': 'string',
            'Ipv6CidrBlockSet': [
                {
                    'Ipv6CidrBlock': 'string'
                },
            ],
            'CidrBlockSet': [
                {
                    'CidrBlock': 'string'
                },
            ],
            'OwnerId': 'string',
            'PeeringOptions': {
                'AllowDnsResolutionFromRemoteVpc': True|False,
                'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
            },
            'VpcId': 'string',
            'Region': 'string'
        },
        'ExpirationTime': datetime(2015, 1, 1),
        'RequesterVpcInfo': {
            'CidrBlock': 'string',
            'Ipv6CidrBlockSet': [
                {
                    'Ipv6CidrBlock': 'string'
                },
            ],
            'CidrBlockSet': [
                {
                    'CidrBlock': 'string'
                },
            ],
            'OwnerId': 'string',
            'PeeringOptions': {
                'AllowDnsResolutionFromRemoteVpc': True|False,
                'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
            },
            'VpcId': 'string',
            'Region': 'string'
        },
        'Status': {
            'Code': 'initiating-request'|'pending-acceptance'|'active'|'deleted'|'rejected'|'failed'|'expired'|'provisioning'|'deleting',
            'Message': 'string'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VpcPeeringConnectionId': 'string'
    }
}


Response Structure

(dict) --

VpcPeeringConnection (dict) --
Information about the VPC peering connection.

AccepterVpcInfo (dict) --
Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.

CidrBlock (string) --
The IPv4 CIDR block for the VPC.

Ipv6CidrBlockSet (list) --
The IPv6 CIDR block for the VPC.

(dict) --
Describes an IPv6 CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.





CidrBlockSet (list) --
Information about the IPv4 CIDR blocks for the VPC.

(dict) --
Describes an IPv4 CIDR block.

CidrBlock (string) --
The IPv4 CIDR block.





OwnerId (string) --
The AWS account ID of the VPC owner.

PeeringOptions (dict) --
Information about the VPC peering connection options for the accepter or requester VPC.

AllowDnsResolutionFromRemoteVpc (boolean) --
Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.

AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --
Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.

AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --
Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.



VpcId (string) --
The ID of the VPC.

Region (string) --
The Region in which the VPC is located.



ExpirationTime (datetime) --
The time that an unaccepted VPC peering connection will expire.

RequesterVpcInfo (dict) --
Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.

CidrBlock (string) --
The IPv4 CIDR block for the VPC.

Ipv6CidrBlockSet (list) --
The IPv6 CIDR block for the VPC.

(dict) --
Describes an IPv6 CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.





CidrBlockSet (list) --
Information about the IPv4 CIDR blocks for the VPC.

(dict) --
Describes an IPv4 CIDR block.

CidrBlock (string) --
The IPv4 CIDR block.





OwnerId (string) --
The AWS account ID of the VPC owner.

PeeringOptions (dict) --
Information about the VPC peering connection options for the accepter or requester VPC.

AllowDnsResolutionFromRemoteVpc (boolean) --
Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.

AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --
Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.

AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --
Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.



VpcId (string) --
The ID of the VPC.

Region (string) --
The Region in which the VPC is located.



Status (dict) --
The status of the VPC peering connection.

Code (string) --
The status of the VPC peering connection.

Message (string) --
A message that provides more information about the status, if applicable.



Tags (list) --
Any tags assigned to the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcPeeringConnectionId (string) --
The ID of the VPC peering connection.










    :return: {
        'VpcPeeringConnection': {
            'AccepterVpcInfo': {
                'CidrBlock': 'string',
                'Ipv6CidrBlockSet': [
                    {
                        'Ipv6CidrBlock': 'string'
                    },
                ],
                'CidrBlockSet': [
                    {
                        'CidrBlock': 'string'
                    },
                ],
                'OwnerId': 'string',
                'PeeringOptions': {
                    'AllowDnsResolutionFromRemoteVpc': True|False,
                    'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                    'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
                },
                'VpcId': 'string',
                'Region': 'string'
            },
            'ExpirationTime': datetime(2015, 1, 1),
            'RequesterVpcInfo': {
                'CidrBlock': 'string',
                'Ipv6CidrBlockSet': [
                    {
                        'Ipv6CidrBlock': 'string'
                    },
                ],
                'CidrBlockSet': [
                    {
                        'CidrBlock': 'string'
                    },
                ],
                'OwnerId': 'string',
                'PeeringOptions': {
                    'AllowDnsResolutionFromRemoteVpc': True|False,
                    'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                    'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
                },
                'VpcId': 'string',
                'Region': 'string'
            },
            'Status': {
                'Code': 'initiating-request'|'pending-acceptance'|'active'|'deleted'|'rejected'|'failed'|'expired'|'provisioning'|'deleting',
                'Message': 'string'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcPeeringConnectionId': 'string'
        }
    }
    
    
    """
    pass

def advertise_byoip_cidr(Cidr=None, DryRun=None):
    """
    Advertises an IPv4 or IPv6 address range that is provisioned for use with your AWS resources through bring your own IP addresses (BYOIP).
    You can perform this operation at most once every 10 seconds, even if you specify different address ranges each time.
    We recommend that you stop advertising the BYOIP CIDR from other locations when you advertise it from AWS. To minimize down time, you can configure your AWS resources to use an address from a BYOIP CIDR before it is advertised, and then simultaneously stop advertising it from the current location and start advertising it through AWS.
    It can take a few minutes before traffic to the specified addresses starts routing to AWS because of BGP propagation delays.
    To stop advertising the BYOIP CIDR, use  WithdrawByoipCidr .
    See also: AWS API Documentation
    
    
    :example: response = client.advertise_byoip_cidr(
        Cidr='string',
        DryRun=True|False
    )
    
    
    :type Cidr: string
    :param Cidr: [REQUIRED]\nThe address range, in CIDR notation. This must be the exact range that you provisioned. You can\'t advertise only a portion of the provisioned range.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ByoipCidr': {
        'Cidr': 'string',
        'Description': 'string',
        'StatusMessage': 'string',
        'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
    }
}


Response Structure

(dict) --

ByoipCidr (dict) --
Information about the address range.

Cidr (string) --
The address range, in CIDR notation.

Description (string) --
The description of the address range.

StatusMessage (string) --
Upon success, contains the ID of the address pool. Otherwise, contains an error message.

State (string) --
The state of the address pool.










    :return: {
        'ByoipCidr': {
            'Cidr': 'string',
            'Description': 'string',
            'StatusMessage': 'string',
            'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
        }
    }
    
    
    """
    pass

def allocate_address(Domain=None, Address=None, PublicIpv4Pool=None, NetworkBorderGroup=None, CustomerOwnedIpv4Pool=None, DryRun=None):
    """
    Allocates an Elastic IP address to your AWS account. After you allocate the Elastic IP address you can associate it with an instance or network interface. After you release an Elastic IP address, it is released to the IP address pool and can be allocated to a different AWS account.
    You can allocate an Elastic IP address from an address pool owned by AWS or from an address pool created from a public IPv4 address range that you have brought to AWS for use with your AWS resources using bring your own IP addresses (BYOIP). For more information, see Bring Your Own IP Addresses (BYOIP) in the Amazon Elastic Compute Cloud User Guide .
    [EC2-VPC] If you release an Elastic IP address, you might be able to recover it. You cannot recover an Elastic IP address that you released after it is allocated to another AWS account. You cannot recover an Elastic IP address for EC2-Classic. To attempt to recover an Elastic IP address that you released, specify it in this operation.
    An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. By default, you can allocate 5 Elastic IP addresses for EC2-Classic per Region and 5 Elastic IP addresses for EC2-VPC per Region.
    For more information, see Elastic IP Addresses in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example allocates an Elastic IP address to use with an instance in a VPC.
    Expected Output:
    This example allocates an Elastic IP address to use with an instance in EC2-Classic.
    Expected Output:
    
    :example: response = client.allocate_address(
        Domain='vpc'|'standard',
        Address='string',
        PublicIpv4Pool='string',
        NetworkBorderGroup='string',
        CustomerOwnedIpv4Pool='string',
        DryRun=True|False
    )
    
    
    :type Domain: string
    :param Domain: Set to vpc to allocate the address for use with instances in a VPC.\nDefault: The address is for use with instances in EC2-Classic.\n

    :type Address: string
    :param Address: [EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.

    :type PublicIpv4Pool: string
    :param PublicIpv4Pool: The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool. To specify a specific address from the address pool, use the Address parameter instead.

    :type NetworkBorderGroup: string
    :param NetworkBorderGroup: The location from which the IP address is advertised. Use this parameter to limit the address to this location.\nA network border group is a unique set of Availability Zones or Local Zones from where AWS advertises IP addresses and limits the addresses to the group. IP addresses cannot move between network border groups.\nUse DescribeAvailabilityZones to view the network border groups.\n\nNote\nYou cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you will receive an InvalidParameterCombination error. For more information, see Error Codes .\n\n

    :type CustomerOwnedIpv4Pool: string
    :param CustomerOwnedIpv4Pool: The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'PublicIp': 'string',
    'AllocationId': 'string',
    'PublicIpv4Pool': 'string',
    'NetworkBorderGroup': 'string',
    'Domain': 'vpc'|'standard',
    'CustomerOwnedIp': 'string',
    'CustomerOwnedIpv4Pool': 'string'
}


Response Structure

(dict) --

PublicIp (string) --
The Elastic IP address.

AllocationId (string) --
[EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.

PublicIpv4Pool (string) --
The ID of an address pool.

NetworkBorderGroup (string) --
The location from which the IP address is advertised.

Domain (string) --
Indicates whether this Elastic IP address is for use with instances in EC2-Classic (standard ) or instances in a VPC (vpc ).

CustomerOwnedIp (string) --
The customer-owned IP address.

CustomerOwnedIpv4Pool (string) --
The ID of the customer-owned address pool.







Examples
This example allocates an Elastic IP address to use with an instance in a VPC.
response = client.allocate_address(
    Domain='vpc',
)

print(response)


Expected Output:
{
    'AllocationId': 'eipalloc-64d5890a',
    'Domain': 'vpc',
    'PublicIp': '203.0.113.0',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example allocates an Elastic IP address to use with an instance in EC2-Classic.
response = client.allocate_address(
)

print(response)


Expected Output:
{
    'Domain': 'standard',
    'PublicIp': '198.51.100.0',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'PublicIp': 'string',
        'AllocationId': 'string',
        'PublicIpv4Pool': 'string',
        'NetworkBorderGroup': 'string',
        'Domain': 'vpc'|'standard',
        'CustomerOwnedIp': 'string',
        'CustomerOwnedIpv4Pool': 'string'
    }
    
    
    """
    pass

def allocate_hosts(AutoPlacement=None, AvailabilityZone=None, ClientToken=None, InstanceType=None, InstanceFamily=None, Quantity=None, TagSpecifications=None, HostRecovery=None):
    """
    Allocates a Dedicated Host to your account. At a minimum, specify the supported instance type or instance family, the Availability Zone in which to allocate the host, and the number of hosts to allocate.
    See also: AWS API Documentation
    
    
    :example: response = client.allocate_hosts(
        AutoPlacement='on'|'off',
        AvailabilityZone='string',
        ClientToken='string',
        InstanceType='string',
        InstanceFamily='string',
        Quantity=123,
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        HostRecovery='on'|'off'
    )
    
    
    :type AutoPlacement: string
    :param AutoPlacement: Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see Understanding Instance Placement and Host Affinity in the Amazon EC2 User Guide for Linux Instances .\nDefault: on\n

    :type AvailabilityZone: string
    :param AvailabilityZone: [REQUIRED]\nThe Availability Zone in which to allocate the Dedicated Host.\n

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .

    :type InstanceType: string
    :param InstanceType: Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.\nIf you want the Dedicated Hosts to support multiple instance types in a specific instance family, omit this parameter and specify InstanceFamily instead. You cannot specify InstanceType and InstanceFamily in the same request.\n

    :type InstanceFamily: string
    :param InstanceFamily: Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family.\nIf you want the Dedicated Hosts to support a specific instance type only, omit this parameter and specify InstanceType instead. You cannot specify InstanceFamily and InstanceType in the same request.\n

    :type Quantity: integer
    :param Quantity: [REQUIRED]\nThe number of Dedicated Hosts to allocate to your account with these parameters.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the Dedicated Host during creation.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type HostRecovery: string
    :param HostRecovery: Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default. For more information, see Host Recovery in the Amazon Elastic Compute Cloud User Guide .\nDefault: off\n

    :rtype: dict

ReturnsResponse Syntax
{
    'HostIds': [
        'string',
    ]
}


Response Structure

(dict) --
Contains the output of AllocateHosts.

HostIds (list) --
The ID of the allocated Dedicated Host. This is used to launch an instance onto a specific host.

(string) --









    :return: {
        'HostIds': [
            'string',
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def apply_security_groups_to_client_vpn_target_network(ClientVpnEndpointId=None, VpcId=None, SecurityGroupIds=None, DryRun=None):
    """
    Applies a security group to the association between the target network and the Client VPN endpoint. This action replaces the existing security groups with the specified security groups.
    See also: AWS API Documentation
    
    
    :example: response = client.apply_security_groups_to_client_vpn_target_network(
        ClientVpnEndpointId='string',
        VpcId='string',
        SecurityGroupIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint.\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC in which the associated target network is located.\n

    :type SecurityGroupIds: list
    :param SecurityGroupIds: [REQUIRED]\nThe IDs of the security groups to apply to the associated target network. Up to 5 security groups can be applied to an associated target network.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'SecurityGroupIds': [
        'string',
    ]
}


Response Structure

(dict) --

SecurityGroupIds (list) --
The IDs of the applied security groups.

(string) --









    :return: {
        'SecurityGroupIds': [
            'string',
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def assign_ipv6_addresses(Ipv6AddressCount=None, Ipv6Addresses=None, NetworkInterfaceId=None):
    """
    Assigns one or more IPv6 addresses to the specified network interface. You can specify one or more specific IPv6 addresses, or you can specify the number of IPv6 addresses to be automatically assigned from within the subnet\'s IPv6 CIDR block range. You can assign as many IPv6 addresses to a network interface as you can assign private IPv4 addresses, and the limit varies per instance type. For information, see IP Addresses Per Network Interface Per Instance Type in the Amazon Elastic Compute Cloud User Guide .
    You must specify either the IPv6 addresses or the IPv6 address count in the request.
    See also: AWS API Documentation
    
    
    :example: response = client.assign_ipv6_addresses(
        Ipv6AddressCount=123,
        Ipv6Addresses=[
            'string',
        ],
        NetworkInterfaceId='string'
    )
    
    
    :type Ipv6AddressCount: integer
    :param Ipv6AddressCount: The number of IPv6 addresses to assign to the network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can\'t use this option if specifying specific IPv6 addresses.

    :type Ipv6Addresses: list
    :param Ipv6Addresses: One or more specific IPv6 addresses to be assigned to the network interface. You can\'t use this option if you\'re specifying a number of IPv6 addresses.\n\n(string) --\n\n

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'AssignedIpv6Addresses': [
        'string',
    ],
    'NetworkInterfaceId': 'string'
}


Response Structure

(dict) --

AssignedIpv6Addresses (list) --
The IPv6 addresses assigned to the network interface.

(string) --


NetworkInterfaceId (string) --
The ID of the network interface.








    :return: {
        'AssignedIpv6Addresses': [
            'string',
        ],
        'NetworkInterfaceId': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def assign_private_ip_addresses(AllowReassignment=None, NetworkInterfaceId=None, PrivateIpAddresses=None, SecondaryPrivateIpAddressCount=None):
    """
    Assigns one or more secondary private IP addresses to the specified network interface.
    You can specify one or more specific secondary IP addresses, or you can specify the number of secondary IP addresses to be automatically assigned within the subnet\'s CIDR block range. The number of secondary IP addresses that you can assign to an instance varies by instance type. For information about instance types, see Instance Types in the Amazon Elastic Compute Cloud User Guide . For more information about Elastic IP addresses, see Elastic IP Addresses in the Amazon Elastic Compute Cloud User Guide .
    When you move a secondary private IP address to another network interface, any Elastic IP address that is associated with the IP address is also moved.
    Remapping an IP address is an asynchronous operation. When you move an IP address from one network interface to another, check network/interfaces/macs/mac/local-ipv4s in the instance metadata to confirm that the remapping is complete.
    You must specify either the IP addresses or the IP address count in the request.
    See also: AWS API Documentation
    
    Examples
    This example assigns the specified secondary private IP address to the specified network interface.
    Expected Output:
    This example assigns two secondary private IP addresses to the specified network interface. Amazon EC2 automatically assigns these IP addresses from the available IP addresses in the CIDR block range of the subnet the network interface is associated with.
    Expected Output:
    
    :example: response = client.assign_private_ip_addresses(
        AllowReassignment=True|False,
        NetworkInterfaceId='string',
        PrivateIpAddresses=[
            'string',
        ],
        SecondaryPrivateIpAddressCount=123
    )
    
    
    :type AllowReassignment: boolean
    :param AllowReassignment: Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :type PrivateIpAddresses: list
    :param PrivateIpAddresses: One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can\'t specify this parameter when also specifying a number of secondary IP addresses.\nIf you don\'t specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.\n\n(string) --\n\n

    :type SecondaryPrivateIpAddressCount: integer
    :param SecondaryPrivateIpAddressCount: The number of secondary IP addresses to assign to the network interface. You can\'t specify this parameter when also specifying private IP addresses.

    :rtype: dict

ReturnsResponse Syntax
{
    'NetworkInterfaceId': 'string',
    'AssignedPrivateIpAddresses': [
        {
            'PrivateIpAddress': 'string'
        },
    ]
}


Response Structure

(dict) --

NetworkInterfaceId (string) --
The ID of the network interface.

AssignedPrivateIpAddresses (list) --
The private IP addresses assigned to the network interface.

(dict) --
Describes the private IP addresses assigned to a network interface.

PrivateIpAddress (string) --
The private IP address assigned to the network interface.











Examples
This example assigns the specified secondary private IP address to the specified network interface.
response = client.assign_private_ip_addresses(
    NetworkInterfaceId='eni-e5aa89a3',
    PrivateIpAddresses=[
        '10.0.0.82',
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}


This example assigns two secondary private IP addresses to the specified network interface. Amazon EC2 automatically assigns these IP addresses from the available IP addresses in the CIDR block range of the subnet the network interface is associated with.
response = client.assign_private_ip_addresses(
    NetworkInterfaceId='eni-e5aa89a3',
    SecondaryPrivateIpAddressCount=2,
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NetworkInterfaceId': 'string',
        'AssignedPrivateIpAddresses': [
            {
                'PrivateIpAddress': 'string'
            },
        ]
    }
    
    
    """
    pass

def associate_address(AllocationId=None, InstanceId=None, PublicIp=None, AllowReassociation=None, DryRun=None, NetworkInterfaceId=None, PrivateIpAddress=None):
    """
    Associates an Elastic IP address with an instance or a network interface. Before you can use an Elastic IP address, you must allocate it to your account.
    An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see Elastic IP Addresses in the Amazon Elastic Compute Cloud User Guide .
    [EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already associated with a different instance, it is disassociated from that instance and associated with the specified instance. If you associate an Elastic IP address with an instance that has an existing Elastic IP address, the existing address is disassociated from the instance, but remains allocated to your account.
    [VPC in an EC2-Classic account] If you don\'t specify a private IP address, the Elastic IP address is associated with the primary IP address. If the Elastic IP address is already associated with a different instance or a network interface, you get an error unless you allow reassociation. You cannot associate an Elastic IP address with an instance or network interface that has an existing Elastic IP address.
    You cannot associate an Elastic IP address with an interface in a different network border group.
    See also: AWS API Documentation
    
    Examples
    This example associates the specified Elastic IP address with the specified instance in a VPC.
    Expected Output:
    This example associates the specified Elastic IP address with the specified network interface.
    Expected Output:
    This example associates an Elastic IP address with an instance in EC2-Classic.
    Expected Output:
    
    :example: response = client.associate_address(
        AllocationId='string',
        InstanceId='string',
        PublicIp='string',
        AllowReassociation=True|False,
        DryRun=True|False,
        NetworkInterfaceId='string',
        PrivateIpAddress='string'
    )
    
    
    :type AllocationId: string
    :param AllocationId: [EC2-VPC] The allocation ID. This is required for EC2-VPC.

    :type InstanceId: string
    :param InstanceId: The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached.

    :type PublicIp: string
    :param PublicIp: The Elastic IP address to associate with the instance. This is required for EC2-Classic.

    :type AllowReassociation: boolean
    :param AllowReassociation: [EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.\nFor EC2-VPC, you can specify either the instance ID or the network interface ID, but not both.\n

    :type PrivateIpAddress: string
    :param PrivateIpAddress: [EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.

    :rtype: dict

ReturnsResponse Syntax
{
    'AssociationId': 'string'
}


Response Structure

(dict) --

AssociationId (string) --
[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.







Examples
This example associates the specified Elastic IP address with the specified instance in a VPC.
response = client.associate_address(
    AllocationId='eipalloc-64d5890a',
    InstanceId='i-0b263919b6498b123',
)

print(response)


Expected Output:
{
    'AssociationId': 'eipassoc-2bebb745',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example associates the specified Elastic IP address with the specified network interface.
response = client.associate_address(
    AllocationId='eipalloc-64d5890a',
    NetworkInterfaceId='eni-1a2b3c4d',
)

print(response)


Expected Output:
{
    'AssociationId': 'eipassoc-2bebb745',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example associates an Elastic IP address with an instance in EC2-Classic.
response = client.associate_address(
    InstanceId='i-07ffe74c7330ebf53',
    PublicIp='198.51.100.0',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AssociationId': 'string'
    }
    
    
    """
    pass

def associate_client_vpn_target_network(ClientVpnEndpointId=None, SubnetId=None, ClientToken=None, DryRun=None):
    """
    Associates a target network with a Client VPN endpoint. A target network is a subnet in a VPC. You can associate multiple subnets from the same VPC with a Client VPN endpoint. You can associate only one subnet in each Availability Zone. We recommend that you associate at least two subnets to provide Availability Zone redundancy.
    If you specified a VPC when you created the Client VPN endpoint or if you have previous subnet associations, the specified subnet must be in the same VPC. To specify a subnet that\'s in a different VPC, you must first modify the Client VPN endpoint ( ModifyClientVpnEndpoint ) and change the VPC that\'s associated with it.
    See also: AWS API Documentation
    
    
    :example: response = client.associate_client_vpn_target_network(
        ClientVpnEndpointId='string',
        SubnetId='string',
        ClientToken='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint.\n

    :type SubnetId: string
    :param SubnetId: [REQUIRED]\nThe ID of the subnet to associate with the Client VPN endpoint.\n

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'AssociationId': 'string',
    'Status': {
        'Code': 'associating'|'associated'|'association-failed'|'disassociating'|'disassociated',
        'Message': 'string'
    }
}


Response Structure

(dict) --

AssociationId (string) --
The unique ID of the target network association.

Status (dict) --
The current state of the target network association.

Code (string) --
The state of the target network association.

Message (string) --
A message about the status of the target network association, if applicable.










    :return: {
        'AssociationId': 'string',
        'Status': {
            'Code': 'associating'|'associated'|'association-failed'|'disassociating'|'disassociated',
            'Message': 'string'
        }
    }
    
    
    """
    pass

def associate_dhcp_options(DhcpOptionsId=None, VpcId=None, DryRun=None):
    """
    Associates a set of DHCP options (that you\'ve previously created) with the specified VPC, or associates no DHCP options with the VPC.
    After you associate the options with the VPC, any existing instances and all new instances that you launch in that VPC use the options. You don\'t need to restart or relaunch the instances. They automatically pick up the changes within a few hours, depending on how frequently the instance renews its DHCP lease. You can explicitly renew the lease using the operating system on the instance.
    For more information, see DHCP Options Sets in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example associates the specified DHCP options set with the specified VPC.
    Expected Output:
    This example associates the default DHCP options set with the specified VPC.
    Expected Output:
    
    :example: response = client.associate_dhcp_options(
        DhcpOptionsId='string',
        VpcId='string',
        DryRun=True|False
    )
    
    
    :type DhcpOptionsId: string
    :param DhcpOptionsId: [REQUIRED]\nThe ID of the DHCP options set, or default to associate no DHCP options with the VPC.\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.associate_dhcp_options(
        DhcpOptionsId='dopt-d9070ebb',
        VpcId='vpc-a01106c2',
    )
    
    print(response)
    
    
    """
    pass

def associate_iam_instance_profile(IamInstanceProfile=None, InstanceId=None):
    """
    Associates an IAM instance profile with a running or stopped instance. You cannot associate more than one IAM instance profile with an instance.
    See also: AWS API Documentation
    
    Examples
    This example associates an IAM instance profile named admin-role with the specified instance.
    Expected Output:
    
    :example: response = client.associate_iam_instance_profile(
        IamInstanceProfile={
            'Arn': 'string',
            'Name': 'string'
        },
        InstanceId='string'
    )
    
    
    :type IamInstanceProfile: dict
    :param IamInstanceProfile: [REQUIRED]\nThe IAM instance profile.\n\nArn (string) --The Amazon Resource Name (ARN) of the instance profile.\n\nName (string) --The name of the instance profile.\n\n\n

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'IamInstanceProfileAssociation': {
        'AssociationId': 'string',
        'InstanceId': 'string',
        'IamInstanceProfile': {
            'Arn': 'string',
            'Id': 'string'
        },
        'State': 'associating'|'associated'|'disassociating'|'disassociated',
        'Timestamp': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --

IamInstanceProfileAssociation (dict) --
Information about the IAM instance profile association.

AssociationId (string) --
The ID of the association.

InstanceId (string) --
The ID of the instance.

IamInstanceProfile (dict) --
The IAM instance profile.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Id (string) --
The ID of the instance profile.



State (string) --
The state of the association.

Timestamp (datetime) --
The time the IAM instance profile was associated with the instance.









Examples
This example associates an IAM instance profile named admin-role with the specified instance.
response = client.associate_iam_instance_profile(
    IamInstanceProfile={
        'Name': 'admin-role',
    },
    InstanceId='i-123456789abcde123',
)

print(response)


Expected Output:
{
    'IamInstanceProfileAssociation': {
        'AssociationId': 'iip-assoc-0e7736511a163c209',
        'IamInstanceProfile': {
            'Arn': 'arn:aws:iam::123456789012:instance-profile/admin-role',
            'Id': 'AIPAJBLK7RKJKWDXVHIEC',
        },
        'InstanceId': 'i-123456789abcde123',
        'State': 'associating',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'IamInstanceProfileAssociation': {
            'AssociationId': 'string',
            'InstanceId': 'string',
            'IamInstanceProfile': {
                'Arn': 'string',
                'Id': 'string'
            },
            'State': 'associating'|'associated'|'disassociating'|'disassociated',
            'Timestamp': datetime(2015, 1, 1)
        }
    }
    
    
    """
    pass

def associate_route_table(DryRun=None, RouteTableId=None, SubnetId=None, GatewayId=None):
    """
    Associates a subnet in your VPC or an internet gateway or virtual private gateway attached to your VPC with a route table in your VPC. This association causes traffic from the subnet or gateway to be routed according to the routes in the route table. The action returns an association ID, which you need in order to disassociate the route table later. A route table can be associated with multiple subnets.
    For more information, see Route Tables in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example associates the specified route table with the specified subnet.
    Expected Output:
    
    :example: response = client.associate_route_table(
        DryRun=True|False,
        RouteTableId='string',
        SubnetId='string',
        GatewayId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type RouteTableId: string
    :param RouteTableId: [REQUIRED]\nThe ID of the route table.\n

    :type SubnetId: string
    :param SubnetId: The ID of the subnet.

    :type GatewayId: string
    :param GatewayId: The ID of the internet gateway or virtual private gateway.

    :rtype: dict

ReturnsResponse Syntax
{
    'AssociationId': 'string',
    'AssociationState': {
        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failed',
        'StatusMessage': 'string'
    }
}


Response Structure

(dict) --

AssociationId (string) --
The route table association ID. This ID is required for disassociating the route table.

AssociationState (dict) --
The state of the association.

State (string) --
The state of the association.

StatusMessage (string) --
The status message, if applicable.









Examples
This example associates the specified route table with the specified subnet.
response = client.associate_route_table(
    RouteTableId='rtb-22574640',
    SubnetId='subnet-9d4a7b6',
)

print(response)


Expected Output:
{
    'AssociationId': 'rtbassoc-781d0d1a',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AssociationId': 'string',
        'AssociationState': {
            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failed',
            'StatusMessage': 'string'
        }
    }
    
    
    """
    pass

def associate_subnet_cidr_block(Ipv6CidrBlock=None, SubnetId=None):
    """
    Associates a CIDR block with your subnet. You can only associate a single IPv6 CIDR block with your subnet. An IPv6 CIDR block must have a prefix length of /64.
    See also: AWS API Documentation
    
    
    :example: response = client.associate_subnet_cidr_block(
        Ipv6CidrBlock='string',
        SubnetId='string'
    )
    
    
    :type Ipv6CidrBlock: string
    :param Ipv6CidrBlock: [REQUIRED]\nThe IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.\n

    :type SubnetId: string
    :param SubnetId: [REQUIRED]\nThe ID of your subnet.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Ipv6CidrBlockAssociation': {
        'AssociationId': 'string',
        'Ipv6CidrBlock': 'string',
        'Ipv6CidrBlockState': {
            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
            'StatusMessage': 'string'
        }
    },
    'SubnetId': 'string'
}


Response Structure

(dict) --

Ipv6CidrBlockAssociation (dict) --
Information about the IPv6 CIDR block association.

AssociationId (string) --
The association ID for the CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of a CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.





SubnetId (string) --
The ID of the subnet.








    :return: {
        'Ipv6CidrBlockAssociation': {
            'AssociationId': 'string',
            'Ipv6CidrBlock': 'string',
            'Ipv6CidrBlockState': {
                'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                'StatusMessage': 'string'
            }
        },
        'SubnetId': 'string'
    }
    
    
    """
    pass

def associate_transit_gateway_multicast_domain(TransitGatewayMulticastDomainId=None, TransitGatewayAttachmentId=None, SubnetIds=None, DryRun=None):
    """
    Associates the specified subnets and transit gateway attachments with the specified transit gateway multicast domain.
    The transit gateway attachment must be in the available state before you can add a resource. Use DescribeTransitGatewayAttachments to see the state of the attachment.
    See also: AWS API Documentation
    
    
    :example: response = client.associate_transit_gateway_multicast_domain(
        TransitGatewayMulticastDomainId='string',
        TransitGatewayAttachmentId='string',
        SubnetIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainId: string
    :param TransitGatewayMulticastDomainId: The ID of the transit gateway multicast domain.

    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: The ID of the transit gateway attachment to associate with the transit gateway multicast domain.

    :type SubnetIds: list
    :param SubnetIds: The IDs of the subnets to associate with the transit gateway multicast domain.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Associations': {
        'TransitGatewayMulticastDomainId': 'string',
        'TransitGatewayAttachmentId': 'string',
        'ResourceId': 'string',
        'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
        'Subnets': [
            {
                'SubnetId': 'string',
                'State': 'associating'|'associated'|'disassociating'|'disassociated'
            },
        ]
    }
}


Response Structure

(dict) --

Associations (dict) --
Information about the transit gateway multicast domain associations.

TransitGatewayMulticastDomainId (string) --
The ID of the transit gateway multicast domain.

TransitGatewayAttachmentId (string) --
The ID of the transit gateway attachment.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The type of resource, for example a VPC attachment.

Subnets (list) --
The subnets associated with the multicast domain.

(dict) --
Describes the subnet association with the transit gateway multicast domain.

SubnetId (string) --
The ID of the subnet.

State (string) --
The state of the subnet association.














    :return: {
        'Associations': {
            'TransitGatewayMulticastDomainId': 'string',
            'TransitGatewayAttachmentId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'Subnets': [
                {
                    'SubnetId': 'string',
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'
                },
            ]
        }
    }
    
    
    """
    pass

def associate_transit_gateway_route_table(TransitGatewayRouteTableId=None, TransitGatewayAttachmentId=None, DryRun=None):
    """
    Associates the specified attachment with the specified transit gateway route table. You can associate only one route table with an attachment.
    See also: AWS API Documentation
    
    
    :example: response = client.associate_transit_gateway_route_table(
        TransitGatewayRouteTableId='string',
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the transit gateway route table.\n

    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Association': {
        'TransitGatewayRouteTableId': 'string',
        'TransitGatewayAttachmentId': 'string',
        'ResourceId': 'string',
        'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
        'State': 'associating'|'associated'|'disassociating'|'disassociated'
    }
}


Response Structure

(dict) --

Association (dict) --
The ID of the association.

TransitGatewayRouteTableId (string) --
The ID of the transit gateway route table.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The resource type.

State (string) --
The state of the association.










    :return: {
        'Association': {
            'TransitGatewayRouteTableId': 'string',
            'TransitGatewayAttachmentId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'State': 'associating'|'associated'|'disassociating'|'disassociated'
        }
    }
    
    
    """
    pass

def associate_vpc_cidr_block(AmazonProvidedIpv6CidrBlock=None, CidrBlock=None, VpcId=None, Ipv6CidrBlockNetworkBorderGroup=None, Ipv6Pool=None, Ipv6CidrBlock=None):
    """
    Associates a CIDR block with your VPC. You can associate a secondary IPv4 CIDR block, an Amazon-provided IPv6 CIDR block, or an IPv6 CIDR block from an IPv6 address pool that you provisioned through bring your own IP addresses (BYOIP ). The IPv6 CIDR block size is fixed at /56.
    You must specify one of the following in the request: an IPv4 CIDR block, an IPv6 pool, or an Amazon-provided IPv6 CIDR block.
    For more information about associating CIDR blocks with your VPC and applicable restrictions, see VPC and Subnet Sizing in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.associate_vpc_cidr_block(
        AmazonProvidedIpv6CidrBlock=True|False,
        CidrBlock='string',
        VpcId='string',
        Ipv6CidrBlockNetworkBorderGroup='string',
        Ipv6Pool='string',
        Ipv6CidrBlock='string'
    )
    
    
    :type AmazonProvidedIpv6CidrBlock: boolean
    :param AmazonProvidedIpv6CidrBlock: Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.

    :type CidrBlock: string
    :param CidrBlock: An IPv4 CIDR block to associate with the VPC.

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type Ipv6CidrBlockNetworkBorderGroup: string
    :param Ipv6CidrBlockNetworkBorderGroup: The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the CiDR block to this location.\nYou must set AmazonProvidedIpv6CidrBlock to true to use this parameter.\nYou can have one IPv6 CIDR block association per network border group.\n

    :type Ipv6Pool: string
    :param Ipv6Pool: The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.

    :type Ipv6CidrBlock: string
    :param Ipv6CidrBlock: An IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request.\nTo let Amazon choose the IPv6 CIDR block for you, omit this parameter.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Ipv6CidrBlockAssociation': {
        'AssociationId': 'string',
        'Ipv6CidrBlock': 'string',
        'Ipv6CidrBlockState': {
            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
            'StatusMessage': 'string'
        },
        'NetworkBorderGroup': 'string',
        'Ipv6Pool': 'string'
    },
    'CidrBlockAssociation': {
        'AssociationId': 'string',
        'CidrBlock': 'string',
        'CidrBlockState': {
            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
            'StatusMessage': 'string'
        }
    },
    'VpcId': 'string'
}


Response Structure

(dict) --

Ipv6CidrBlockAssociation (dict) --
Information about the IPv6 CIDR block association.

AssociationId (string) --
The association ID for the IPv6 CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of the CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.



NetworkBorderGroup (string) --
The name of the location from which we advertise the IPV6 CIDR block.

Ipv6Pool (string) --
The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.



CidrBlockAssociation (dict) --
Information about the IPv4 CIDR block association.

AssociationId (string) --
The association ID for the IPv4 CIDR block.

CidrBlock (string) --
The IPv4 CIDR block.

CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of the CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.





VpcId (string) --
The ID of the VPC.








    :return: {
        'Ipv6CidrBlockAssociation': {
            'AssociationId': 'string',
            'Ipv6CidrBlock': 'string',
            'Ipv6CidrBlockState': {
                'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                'StatusMessage': 'string'
            },
            'NetworkBorderGroup': 'string',
            'Ipv6Pool': 'string'
        },
        'CidrBlockAssociation': {
            'AssociationId': 'string',
            'CidrBlock': 'string',
            'CidrBlockState': {
                'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                'StatusMessage': 'string'
            }
        },
        'VpcId': 'string'
    }
    
    
    """
    pass

def attach_classic_link_vpc(DryRun=None, Groups=None, InstanceId=None, VpcId=None):
    """
    Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC\'s security groups. You cannot link an EC2-Classic instance to more than one VPC at a time. You can only link an instance that\'s in the running state. An instance is automatically unlinked from a VPC when it\'s stopped - you can link it to the VPC again when you restart it.
    After you\'ve linked an instance, you cannot change the VPC security groups that are associated with it. To change the security groups, you must first unlink the instance, and then link it again.
    Linking your instance to a VPC is sometimes referred to as attaching your instance.
    See also: AWS API Documentation
    
    
    :example: response = client.attach_classic_link_vpc(
        DryRun=True|False,
        Groups=[
            'string',
        ],
        InstanceId='string',
        VpcId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Groups: list
    :param Groups: [REQUIRED]\nThe ID of one or more of the VPC\'s security groups. You cannot specify security groups from a different VPC.\n\n(string) --\n\n

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of a ClassicLink-enabled VPC.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def attach_internet_gateway(DryRun=None, InternetGatewayId=None, VpcId=None):
    """
    Attaches an internet gateway or a virtual private gateway to a VPC, enabling connectivity between the internet and the VPC. For more information about your VPC and internet gateway, see the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example attaches the specified Internet gateway to the specified VPC.
    Expected Output:
    
    :example: response = client.attach_internet_gateway(
        DryRun=True|False,
        InternetGatewayId='string',
        VpcId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InternetGatewayId: string
    :param InternetGatewayId: [REQUIRED]\nThe ID of the internet gateway.\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :return: response = client.attach_internet_gateway(
        InternetGatewayId='igw-c0a643a9',
        VpcId='vpc-a01106c2',
    )
    
    print(response)
    
    
    """
    pass

def attach_network_interface(DeviceIndex=None, DryRun=None, InstanceId=None, NetworkInterfaceId=None):
    """
    Attaches a network interface to an instance.
    See also: AWS API Documentation
    
    Examples
    This example attaches the specified network interface to the specified instance.
    Expected Output:
    
    :example: response = client.attach_network_interface(
        DeviceIndex=123,
        DryRun=True|False,
        InstanceId='string',
        NetworkInterfaceId='string'
    )
    
    
    :type DeviceIndex: integer
    :param DeviceIndex: [REQUIRED]\nThe index of the device for the network interface attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'AttachmentId': 'string'
}


Response Structure

(dict) --
Contains the output of AttachNetworkInterface.

AttachmentId (string) --
The ID of the network interface attachment.







Examples
This example attaches the specified network interface to the specified instance.
response = client.attach_network_interface(
    DeviceIndex=1,
    InstanceId='i-1234567890abcdef0',
    NetworkInterfaceId='eni-e5aa89a3',
)

print(response)


Expected Output:
{
    'AttachmentId': 'eni-attach-66c4350a',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AttachmentId': 'string'
    }
    
    
    """
    pass

def attach_volume(Device=None, InstanceId=None, VolumeId=None, DryRun=None):
    """
    Attaches an EBS volume to a running or stopped instance and exposes it to the instance with the specified device name.
    Encrypted EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    After you attach an EBS volume, you must make it available. For more information, see Making an EBS Volume Available For Use .
    If a volume has an AWS Marketplace product code:
    For more information, see Attaching Amazon EBS Volumes in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example attaches a volume (vol-1234567890abcdef0) to an instance (i-01474ef662b89480) as /dev/sdf.
    Expected Output:
    
    :example: response = client.attach_volume(
        Device='string',
        InstanceId='string',
        VolumeId='string',
        DryRun=True|False
    )
    
    
    :type Device: string
    :param Device: [REQUIRED]\nThe device name (for example, /dev/sdh or xvdh ).\n

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type VolumeId: string
    :param VolumeId: [REQUIRED]\nThe ID of the EBS volume. The volume and instance must be within the same Availability Zone.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'AttachTime': datetime(2015, 1, 1),
    'Device': 'string',
    'InstanceId': 'string',
    'State': 'attaching'|'attached'|'detaching'|'detached'|'busy',
    'VolumeId': 'string',
    'DeleteOnTermination': True|False
}


Response Structure

(dict) --
Describes volume attachment details.

AttachTime (datetime) --
The time stamp when the attachment initiated.

Device (string) --
The device name.

InstanceId (string) --
The ID of the instance.

State (string) --
The attachment state of the volume.

VolumeId (string) --
The ID of the volume.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination.







Examples
This example attaches a volume (vol-1234567890abcdef0) to an instance (i-01474ef662b89480) as /dev/sdf.
response = client.attach_volume(
    Device='/dev/sdf',
    InstanceId='i-01474ef662b89480',
    VolumeId='vol-1234567890abcdef0',
)

print(response)


Expected Output:
{
    'AttachTime': datetime(2016, 8, 29, 18, 52, 32, 0, 242, 0),
    'Device': '/dev/sdf',
    'InstanceId': 'i-01474ef662b89480',
    'State': 'attaching',
    'VolumeId': 'vol-1234567890abcdef0',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AttachTime': datetime(2015, 1, 1),
        'Device': 'string',
        'InstanceId': 'string',
        'State': 'attaching'|'attached'|'detaching'|'detached'|'busy',
        'VolumeId': 'string',
        'DeleteOnTermination': True|False
    }
    
    
    :returns: 
    Device (string) -- [REQUIRED]
    The device name (for example, /dev/sdh or xvdh ).
    
    InstanceId (string) -- [REQUIRED]
    The ID of the instance.
    
    VolumeId (string) -- [REQUIRED]
    The ID of the EBS volume. The volume and instance must be within the same Availability Zone.
    
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    
    """
    pass

def attach_vpn_gateway(VpcId=None, VpnGatewayId=None, DryRun=None):
    """
    Attaches a virtual private gateway to a VPC. You can attach one virtual private gateway to one VPC at a time.
    For more information, see AWS Site-to-Site VPN in the AWS Site-to-Site VPN User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.attach_vpn_gateway(
        VpcId='string',
        VpnGatewayId='string',
        DryRun=True|False
    )
    
    
    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type VpnGatewayId: string
    :param VpnGatewayId: [REQUIRED]\nThe ID of the virtual private gateway.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'VpcAttachment': {
        'State': 'attaching'|'attached'|'detaching'|'detached',
        'VpcId': 'string'
    }
}


Response Structure

(dict) --
Contains the output of AttachVpnGateway.

VpcAttachment (dict) --
Information about the attachment.

State (string) --
The current state of the attachment.

VpcId (string) --
The ID of the VPC.










    :return: {
        'VpcAttachment': {
            'State': 'attaching'|'attached'|'detaching'|'detached',
            'VpcId': 'string'
        }
    }
    
    
    """
    pass

def authorize_client_vpn_ingress(ClientVpnEndpointId=None, TargetNetworkCidr=None, AccessGroupId=None, AuthorizeAllGroups=None, Description=None, ClientToken=None, DryRun=None):
    """
    Adds an ingress authorization rule to a Client VPN endpoint. Ingress authorization rules act as firewall rules that grant access to networks. You must configure ingress authorization rules to enable clients to access resources in AWS or on-premises networks.
    See also: AWS API Documentation
    
    
    :example: response = client.authorize_client_vpn_ingress(
        ClientVpnEndpointId='string',
        TargetNetworkCidr='string',
        AccessGroupId='string',
        AuthorizeAllGroups=True|False,
        Description='string',
        ClientToken='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint.\n

    :type TargetNetworkCidr: string
    :param TargetNetworkCidr: [REQUIRED]\nThe IPv4 address range, in CIDR notation, of the network for which access is being authorized.\n

    :type AccessGroupId: string
    :param AccessGroupId: The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group.

    :type AuthorizeAllGroups: boolean
    :param AuthorizeAllGroups: Indicates whether to grant access to all clients. Use true to grant all clients who successfully establish a VPN connection access to the network.

    :type Description: string
    :param Description: A brief description of the authorization rule.

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Status': {
        'Code': 'authorizing'|'active'|'failed'|'revoking',
        'Message': 'string'
    }
}


Response Structure

(dict) --

Status (dict) --
The current state of the authorization rule.

Code (string) --
The state of the authorization rule.

Message (string) --
A message about the status of the authorization rule, if applicable.










    :return: {
        'Status': {
            'Code': 'authorizing'|'active'|'failed'|'revoking',
            'Message': 'string'
        }
    }
    
    
    """
    pass

def authorize_security_group_egress(DryRun=None, GroupId=None, IpPermissions=None, CidrIp=None, FromPort=None, IpProtocol=None, ToPort=None, SourceSecurityGroupName=None, SourceSecurityGroupOwnerId=None):
    """
    [VPC only] Adds the specified egress rules to a security group for use with a VPC.
    An outbound rule permits instances to send traffic to the specified IPv4 or IPv6 CIDR address ranges, or to the instances associated with the specified destination security groups.
    You specify a protocol for each rule (for example, TCP). For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes.
    Rule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.
    For more information about VPC security group limits, see Amazon VPC Limits .
    See also: AWS API Documentation
    
    Examples
    This example adds a rule that grants access to the specified address ranges on TCP port 80.
    Expected Output:
    This example adds a rule that grants access to the specified security group on TCP port 80.
    Expected Output:
    
    :example: response = client.authorize_security_group_egress(
        DryRun=True|False,
        GroupId='string',
        IpPermissions=[
            {
                'FromPort': 123,
                'IpProtocol': 'string',
                'IpRanges': [
                    {
                        'CidrIp': 'string',
                        'Description': 'string'
                    },
                ],
                'Ipv6Ranges': [
                    {
                        'CidrIpv6': 'string',
                        'Description': 'string'
                    },
                ],
                'PrefixListIds': [
                    {
                        'Description': 'string',
                        'PrefixListId': 'string'
                    },
                ],
                'ToPort': 123,
                'UserIdGroupPairs': [
                    {
                        'Description': 'string',
                        'GroupId': 'string',
                        'GroupName': 'string',
                        'PeeringStatus': 'string',
                        'UserId': 'string',
                        'VpcId': 'string',
                        'VpcPeeringConnectionId': 'string'
                    },
                ]
            },
        ],
        CidrIp='string',
        FromPort=123,
        IpProtocol='string',
        ToPort=123,
        SourceSecurityGroupName='string',
        SourceSecurityGroupOwnerId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type GroupId: string
    :param GroupId: [REQUIRED]\nThe ID of the security group.\n

    :type IpPermissions: list
    :param IpPermissions: The sets of IP permissions. You can\'t specify a destination security group and a CIDR IP address range in the same set of permissions.\n\n(dict) --Describes a set of permissions for a security group rule.\n\nFromPort (integer) --The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nIpProtocol (string) --The IP protocol name (tcp , udp , icmp , icmpv6 ) or number (see Protocol Numbers ).\n[VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp , udp , icmp , or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp , udp , and icmp , you must specify a port range. For icmpv6 , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n\nIpRanges (list) --The IPv4 ranges.\n\n(dict) --Describes an IPv4 range.\n\nCidrIp (string) --The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv4 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nIpv6Ranges (list) --[VPC only] The IPv6 ranges.\n\n(dict) --[EC2-VPC only] Describes an IPv6 range.\n\nCidrIpv6 (string) --The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv6 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nPrefixListIds (list) --[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group.\n\n(dict) --Describes a prefix list ID.\n\nDescription (string) --A description for the security group rule that references this prefix list ID.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nPrefixListId (string) --The ID of the prefix.\n\n\n\n\n\nToPort (integer) --The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUserIdGroupPairs (list) --The security group and AWS account ID pairs.\n\n(dict) --Describes a security group and AWS account ID pair.\n\nDescription (string) --A description for the security group rule that references this user ID group pair.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nGroupId (string) --The ID of the security group.\n\nGroupName (string) --The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.\nFor a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.\n\nPeeringStatus (string) --The status of a VPC peering connection, if applicable.\n\nUserId (string) --The ID of an AWS account.\nFor a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.\n[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.\n\nVpcId (string) --The ID of the VPC for the referenced security group, if applicable.\n\nVpcPeeringConnectionId (string) --The ID of the VPC peering connection, if applicable.\n\n\n\n\n\n\n\n\n

    :type CidrIp: string
    :param CidrIp: Not supported. Use a set of IP permissions to specify the CIDR.

    :type FromPort: integer
    :param FromPort: Not supported. Use a set of IP permissions to specify the port.

    :type IpProtocol: string
    :param IpProtocol: Not supported. Use a set of IP permissions to specify the protocol name or number.

    :type ToPort: integer
    :param ToPort: Not supported. Use a set of IP permissions to specify the port.

    :type SourceSecurityGroupName: string
    :param SourceSecurityGroupName: Not supported. Use a set of IP permissions to specify a destination security group.

    :type SourceSecurityGroupOwnerId: string
    :param SourceSecurityGroupOwnerId: Not supported. Use a set of IP permissions to specify a destination security group.

    :return: response = client.authorize_security_group_egress(
        GroupId='sg-1a2b3c4d',
        IpPermissions=[
            {
                'FromPort': 80,
                'IpProtocol': 'tcp',
                'IpRanges': [
                    {
                        'CidrIp': '10.0.0.0/16',
                    },
                ],
                'ToPort': 80,
            },
        ],
    )
    
    print(response)
    
    
    """
    pass

def authorize_security_group_ingress(CidrIp=None, FromPort=None, GroupId=None, GroupName=None, IpPermissions=None, IpProtocol=None, SourceSecurityGroupName=None, SourceSecurityGroupOwnerId=None, ToPort=None, DryRun=None):
    """
    Adds the specified ingress rules to a security group.
    An inbound rule permits instances to receive traffic from the specified IPv4 or IPv6 CIDR address ranges, or from the instances associated with the specified destination security groups.
    You specify a protocol for each rule (for example, TCP). For TCP and UDP, you must also specify the destination port or port range. For ICMP/ICMPv6, you must also specify the ICMP/ICMPv6 type and code. You can use -1 to mean all types or all codes.
    Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.
    For more information about VPC security group limits, see Amazon VPC Limits .
    See also: AWS API Documentation
    
    Examples
    This example enables inbound traffic on TCP port 22 (SSH). The rule includes a description to help you identify it later.
    Expected Output:
    This example enables inbound traffic on TCP port 80 from the specified security group. The group must be in the same VPC or a peer VPC. Incoming traffic is allowed based on the private IP addresses of instances that are associated with the specified security group.
    Expected Output:
    This example adds an inbound rule that allows RDP traffic from the specified IPv6 address range. The rule includes a description to help you identify it later.
    Expected Output:
    
    :example: response = client.authorize_security_group_ingress(
        CidrIp='string',
        FromPort=123,
        GroupId='string',
        GroupName='string',
        IpPermissions=[
            {
                'FromPort': 123,
                'IpProtocol': 'string',
                'IpRanges': [
                    {
                        'CidrIp': 'string',
                        'Description': 'string'
                    },
                ],
                'Ipv6Ranges': [
                    {
                        'CidrIpv6': 'string',
                        'Description': 'string'
                    },
                ],
                'PrefixListIds': [
                    {
                        'Description': 'string',
                        'PrefixListId': 'string'
                    },
                ],
                'ToPort': 123,
                'UserIdGroupPairs': [
                    {
                        'Description': 'string',
                        'GroupId': 'string',
                        'GroupName': 'string',
                        'PeeringStatus': 'string',
                        'UserId': 'string',
                        'VpcId': 'string',
                        'VpcPeeringConnectionId': 'string'
                    },
                ]
            },
        ],
        IpProtocol='string',
        SourceSecurityGroupName='string',
        SourceSecurityGroupOwnerId='string',
        ToPort=123,
        DryRun=True|False
    )
    
    
    :type CidrIp: string
    :param CidrIp: The IPv4 address range, in CIDR format. You can\'t specify this parameter when specifying a source security group. To specify an IPv6 address range, use a set of IP permissions.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.\n

    :type FromPort: integer
    :param FromPort: The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use -1 to specify all types. If you specify all ICMP types, you must specify all codes.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.\n

    :type GroupId: string
    :param GroupId: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.

    :type GroupName: string
    :param GroupName: [EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.

    :type IpPermissions: list
    :param IpPermissions: The sets of IP permissions.\n\n(dict) --Describes a set of permissions for a security group rule.\n\nFromPort (integer) --The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nIpProtocol (string) --The IP protocol name (tcp , udp , icmp , icmpv6 ) or number (see Protocol Numbers ).\n[VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp , udp , icmp , or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp , udp , and icmp , you must specify a port range. For icmpv6 , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n\nIpRanges (list) --The IPv4 ranges.\n\n(dict) --Describes an IPv4 range.\n\nCidrIp (string) --The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv4 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nIpv6Ranges (list) --[VPC only] The IPv6 ranges.\n\n(dict) --[EC2-VPC only] Describes an IPv6 range.\n\nCidrIpv6 (string) --The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv6 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nPrefixListIds (list) --[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group.\n\n(dict) --Describes a prefix list ID.\n\nDescription (string) --A description for the security group rule that references this prefix list ID.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nPrefixListId (string) --The ID of the prefix.\n\n\n\n\n\nToPort (integer) --The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUserIdGroupPairs (list) --The security group and AWS account ID pairs.\n\n(dict) --Describes a security group and AWS account ID pair.\n\nDescription (string) --A description for the security group rule that references this user ID group pair.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nGroupId (string) --The ID of the security group.\n\nGroupName (string) --The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.\nFor a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.\n\nPeeringStatus (string) --The status of a VPC peering connection, if applicable.\n\nUserId (string) --The ID of an AWS account.\nFor a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.\n[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.\n\nVpcId (string) --The ID of the VPC for the referenced security group, if applicable.\n\nVpcPeeringConnectionId (string) --The ID of the VPC peering connection, if applicable.\n\n\n\n\n\n\n\n\n

    :type IpProtocol: string
    :param IpProtocol: The IP protocol name (tcp , udp , icmp ) or number (see Protocol Numbers ). To specify icmpv6 , use a set of IP permissions.\n[VPC only] Use -1 to specify all protocols. If you specify -1 or a protocol other than tcp , udp , or icmp , traffic on all ports is allowed, regardless of any ports you specify.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.\n

    :type SourceSecurityGroupName: string
    :param SourceSecurityGroupName: [EC2-Classic, default VPC] The name of the source security group. You can\'t specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For EC2-VPC, the source security group must be in the same VPC.

    :type SourceSecurityGroupOwnerId: string
    :param SourceSecurityGroupOwnerId: [nondefault VPC] The AWS account ID for the source security group, if the source security group is in a different account. You can\'t specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead.

    :type ToPort: integer
    :param ToPort: The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use -1 to specify all codes. If you specify all ICMP types, you must specify all codes.\nAlternatively, use a set of IP permissions to specify multiple rules and a description for the rule.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.authorize_security_group_ingress(
        GroupId='sg-903004f8',
        IpPermissions=[
            {
                'FromPort': 22,
                'IpProtocol': 'tcp',
                'IpRanges': [
                    {
                        'CidrIp': '203.0.113.0/24',
                        'Description': 'SSH access from the LA office',
                    },
                ],
                'ToPort': 22,
            },
        ],
    )
    
    print(response)
    
    
    """
    pass

def bundle_instance(InstanceId=None, Storage=None, DryRun=None):
    """
    Bundles an Amazon instance store-backed Windows instance.
    During bundling, only the root device volume (C:) is bundled. Data on other instance store volumes is not preserved.
    See also: AWS API Documentation
    
    
    :example: response = client.bundle_instance(
        InstanceId='string',
        Storage={
            'S3': {
                'AWSAccessKeyId': 'string',
                'Bucket': 'string',
                'Prefix': 'string',
                'UploadPolicy': b'bytes',
                'UploadPolicySignature': 'string'
            }
        },
        DryRun=True|False
    )
    
    
    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance to bundle.\nType: String\nDefault: None\nRequired: Yes\n

    :type Storage: dict
    :param Storage: [REQUIRED]\nThe bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.\n\nS3 (dict) --An Amazon S3 storage location.\n\nAWSAccessKeyId (string) --The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in Best Practices for Managing AWS Access Keys .\n\nBucket (string) --The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.\n\nPrefix (string) --The beginning of the file name of the AMI.\n\nUploadPolicy (bytes) --An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.\n\nUploadPolicySignature (string) --The signature of the JSON document.\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'BundleTask': {
        'BundleId': 'string',
        'BundleTaskError': {
            'Code': 'string',
            'Message': 'string'
        },
        'InstanceId': 'string',
        'Progress': 'string',
        'StartTime': datetime(2015, 1, 1),
        'State': 'pending'|'waiting-for-shutdown'|'bundling'|'storing'|'cancelling'|'complete'|'failed',
        'Storage': {
            'S3': {
                'AWSAccessKeyId': 'string',
                'Bucket': 'string',
                'Prefix': 'string',
                'UploadPolicy': b'bytes',
                'UploadPolicySignature': 'string'
            }
        },
        'UpdateTime': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --
Contains the output of BundleInstance.

BundleTask (dict) --
Information about the bundle task.

BundleId (string) --
The ID of the bundle task.

BundleTaskError (dict) --
If the task fails, a description of the error.

Code (string) --
The error code.

Message (string) --
The error message.



InstanceId (string) --
The ID of the instance associated with this bundle task.

Progress (string) --
The level of task completion, as a percent (for example, 20%).

StartTime (datetime) --
The time this task started.

State (string) --
The state of the task.

Storage (dict) --
The Amazon S3 storage locations.

S3 (dict) --
An Amazon S3 storage location.

AWSAccessKeyId (string) --
The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in Best Practices for Managing AWS Access Keys .

Bucket (string) --
The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.

Prefix (string) --
The beginning of the file name of the AMI.

UploadPolicy (bytes) --
An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.

UploadPolicySignature (string) --
The signature of the JSON document.





UpdateTime (datetime) --
The time of the most recent update for the task.










    :return: {
        'BundleTask': {
            'BundleId': 'string',
            'BundleTaskError': {
                'Code': 'string',
                'Message': 'string'
            },
            'InstanceId': 'string',
            'Progress': 'string',
            'StartTime': datetime(2015, 1, 1),
            'State': 'pending'|'waiting-for-shutdown'|'bundling'|'storing'|'cancelling'|'complete'|'failed',
            'Storage': {
                'S3': {
                    'AWSAccessKeyId': 'string',
                    'Bucket': 'string',
                    'Prefix': 'string',
                    'UploadPolicy': b'bytes',
                    'UploadPolicySignature': 'string'
                }
            },
            'UpdateTime': datetime(2015, 1, 1)
        }
    }
    
    
    """
    pass

def can_paginate(operation_name=None):
    """
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name. This is the same name\nas the method name on the client. For example, if the\nmethod name is create_foo, and you\'d normally invoke the\noperation as client.create_foo(**kwargs), if the\ncreate_foo operation can be paginated, you can use the\ncall client.get_paginator('create_foo').

    """
    pass

def cancel_bundle_task(BundleId=None, DryRun=None):
    """
    Cancels a bundling operation for an instance store-backed Windows instance.
    See also: AWS API Documentation
    
    
    :example: response = client.cancel_bundle_task(
        BundleId='string',
        DryRun=True|False
    )
    
    
    :type BundleId: string
    :param BundleId: [REQUIRED]\nThe ID of the bundle task.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'BundleTask': {
        'BundleId': 'string',
        'BundleTaskError': {
            'Code': 'string',
            'Message': 'string'
        },
        'InstanceId': 'string',
        'Progress': 'string',
        'StartTime': datetime(2015, 1, 1),
        'State': 'pending'|'waiting-for-shutdown'|'bundling'|'storing'|'cancelling'|'complete'|'failed',
        'Storage': {
            'S3': {
                'AWSAccessKeyId': 'string',
                'Bucket': 'string',
                'Prefix': 'string',
                'UploadPolicy': b'bytes',
                'UploadPolicySignature': 'string'
            }
        },
        'UpdateTime': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --
Contains the output of CancelBundleTask.

BundleTask (dict) --
Information about the bundle task.

BundleId (string) --
The ID of the bundle task.

BundleTaskError (dict) --
If the task fails, a description of the error.

Code (string) --
The error code.

Message (string) --
The error message.



InstanceId (string) --
The ID of the instance associated with this bundle task.

Progress (string) --
The level of task completion, as a percent (for example, 20%).

StartTime (datetime) --
The time this task started.

State (string) --
The state of the task.

Storage (dict) --
The Amazon S3 storage locations.

S3 (dict) --
An Amazon S3 storage location.

AWSAccessKeyId (string) --
The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in Best Practices for Managing AWS Access Keys .

Bucket (string) --
The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.

Prefix (string) --
The beginning of the file name of the AMI.

UploadPolicy (bytes) --
An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.

UploadPolicySignature (string) --
The signature of the JSON document.





UpdateTime (datetime) --
The time of the most recent update for the task.










    :return: {
        'BundleTask': {
            'BundleId': 'string',
            'BundleTaskError': {
                'Code': 'string',
                'Message': 'string'
            },
            'InstanceId': 'string',
            'Progress': 'string',
            'StartTime': datetime(2015, 1, 1),
            'State': 'pending'|'waiting-for-shutdown'|'bundling'|'storing'|'cancelling'|'complete'|'failed',
            'Storage': {
                'S3': {
                    'AWSAccessKeyId': 'string',
                    'Bucket': 'string',
                    'Prefix': 'string',
                    'UploadPolicy': b'bytes',
                    'UploadPolicySignature': 'string'
                }
            },
            'UpdateTime': datetime(2015, 1, 1)
        }
    }
    
    
    """
    pass

def cancel_capacity_reservation(CapacityReservationId=None, DryRun=None):
    """
    Cancels the specified Capacity Reservation, releases the reserved capacity, and changes the Capacity Reservation\'s state to cancelled .
    Instances running in the reserved capacity continue running until you stop them. Stopped instances that target the Capacity Reservation can no longer launch. Modify these instances to either target a different Capacity Reservation, launch On-Demand Instance capacity, or run in any open Capacity Reservation that has matching attributes and sufficient capacity.
    See also: AWS API Documentation
    
    
    :example: response = client.cancel_capacity_reservation(
        CapacityReservationId='string',
        DryRun=True|False
    )
    
    
    :type CapacityReservationId: string
    :param CapacityReservationId: [REQUIRED]\nThe ID of the Capacity Reservation to be cancelled.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def cancel_conversion_task(ConversionTaskId=None, DryRun=None, ReasonMessage=None):
    """
    Cancels an active conversion task. The task can be the import of an instance or volume. The action removes all artifacts of the conversion, including a partially uploaded volume or instance. If the conversion is complete or is in the process of transferring the final disk image, the command fails and returns an exception.
    For more information, see Importing a Virtual Machine Using the Amazon EC2 CLI .
    See also: AWS API Documentation
    
    
    :example: response = client.cancel_conversion_task(
        ConversionTaskId='string',
        DryRun=True|False,
        ReasonMessage='string'
    )
    
    
    :type ConversionTaskId: string
    :param ConversionTaskId: [REQUIRED]\nThe ID of the conversion task.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ReasonMessage: string
    :param ReasonMessage: The reason for canceling the conversion task.

    """
    pass

def cancel_export_task(ExportTaskId=None):
    """
    Cancels an active export task. The request removes all artifacts of the export, including any partially-created Amazon S3 objects. If the export task is complete or is in the process of transferring the final disk image, the command fails and returns an error.
    See also: AWS API Documentation
    
    
    :example: response = client.cancel_export_task(
        ExportTaskId='string'
    )
    
    
    :type ExportTaskId: string
    :param ExportTaskId: [REQUIRED]\nThe ID of the export task. This is the ID returned by CreateInstanceExportTask .\n

    """
    pass

def cancel_import_task(CancelReason=None, DryRun=None, ImportTaskId=None):
    """
    Cancels an in-process import virtual machine or import snapshot task.
    See also: AWS API Documentation
    
    
    :example: response = client.cancel_import_task(
        CancelReason='string',
        DryRun=True|False,
        ImportTaskId='string'
    )
    
    
    :type CancelReason: string
    :param CancelReason: The reason for canceling the task.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ImportTaskId: string
    :param ImportTaskId: The ID of the import image or import snapshot task to be canceled.

    :rtype: dict

ReturnsResponse Syntax
{
    'ImportTaskId': 'string',
    'PreviousState': 'string',
    'State': 'string'
}


Response Structure

(dict) --

ImportTaskId (string) --
The ID of the task being canceled.

PreviousState (string) --
The current state of the task being canceled.

State (string) --
The current state of the task being canceled.








    :return: {
        'ImportTaskId': 'string',
        'PreviousState': 'string',
        'State': 'string'
    }
    
    
    """
    pass

def cancel_reserved_instances_listing(ReservedInstancesListingId=None):
    """
    Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.
    For more information, see Reserved Instance Marketplace in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.cancel_reserved_instances_listing(
        ReservedInstancesListingId='string'
    )
    
    
    :type ReservedInstancesListingId: string
    :param ReservedInstancesListingId: [REQUIRED]\nThe ID of the Reserved Instance listing.\n

    :rtype: dict
ReturnsResponse Syntax{
    'ReservedInstancesListings': [
        {
            'ClientToken': 'string',
            'CreateDate': datetime(2015, 1, 1),
            'InstanceCounts': [
                {
                    'InstanceCount': 123,
                    'State': 'available'|'sold'|'cancelled'|'pending'
                },
            ],
            'PriceSchedules': [
                {
                    'Active': True|False,
                    'CurrencyCode': 'USD',
                    'Price': 123.0,
                    'Term': 123
                },
            ],
            'ReservedInstancesId': 'string',
            'ReservedInstancesListingId': 'string',
            'Status': 'active'|'pending'|'cancelled'|'closed',
            'StatusMessage': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'UpdateDate': datetime(2015, 1, 1)
        },
    ]
}


Response Structure

(dict) --Contains the output of CancelReservedInstancesListing.

ReservedInstancesListings (list) --The Reserved Instance listing.

(dict) --Describes a Reserved Instance listing.

ClientToken (string) --A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see Ensuring Idempotency .

CreateDate (datetime) --The time the listing was created.

InstanceCounts (list) --The number of instances in this state.

(dict) --Describes a Reserved Instance listing state.

InstanceCount (integer) --The number of listed Reserved Instances in the state specified by the state .

State (string) --The states of the listed Reserved Instances.





PriceSchedules (list) --The price of the Reserved Instance listing.

(dict) --Describes the price for a Reserved Instance.

Active (boolean) --The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.
A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.

CurrencyCode (string) --The currency for transacting the Reserved Instance resale. At this time, the only supported currency is USD .

Price (float) --The fixed price for the term.

Term (integer) --The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.





ReservedInstancesId (string) --The ID of the Reserved Instance.

ReservedInstancesListingId (string) --The ID of the Reserved Instance listing.

Status (string) --The status of the Reserved Instance listing.

StatusMessage (string) --The reason for the current status of the Reserved Instance listing. The response can be blank.

Tags (list) --Any tags assigned to the resource.

(dict) --Describes a tag.

Key (string) --The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





UpdateDate (datetime) --The last modified timestamp of the listing.











    :return: {
        'ReservedInstancesListings': [
            {
                'ClientToken': 'string',
                'CreateDate': datetime(2015, 1, 1),
                'InstanceCounts': [
                    {
                        'InstanceCount': 123,
                        'State': 'available'|'sold'|'cancelled'|'pending'
                    },
                ],
                'PriceSchedules': [
                    {
                        'Active': True|False,
                        'CurrencyCode': 'USD',
                        'Price': 123.0,
                        'Term': 123
                    },
                ],
                'ReservedInstancesId': 'string',
                'ReservedInstancesListingId': 'string',
                'Status': 'active'|'pending'|'cancelled'|'closed',
                'StatusMessage': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'UpdateDate': datetime(2015, 1, 1)
            },
        ]
    }
    
    
    """
    pass

def cancel_spot_fleet_requests(DryRun=None, SpotFleetRequestIds=None, TerminateInstances=None):
    """
    Cancels the specified Spot Fleet requests.
    After you cancel a Spot Fleet request, the Spot Fleet launches no new Spot Instances. You must specify whether the Spot Fleet should also terminate its Spot Instances. If you terminate the instances, the Spot Fleet request enters the cancelled_terminating state. Otherwise, the Spot Fleet request enters the cancelled_running state and the instances continue to run until they are interrupted or you terminate them manually.
    See also: AWS API Documentation
    
    Examples
    This example cancels the specified Spot fleet request and terminates its associated Spot Instances.
    Expected Output:
    This example cancels the specified Spot fleet request without terminating its associated Spot Instances.
    Expected Output:
    
    :example: response = client.cancel_spot_fleet_requests(
        DryRun=True|False,
        SpotFleetRequestIds=[
            'string',
        ],
        TerminateInstances=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type SpotFleetRequestIds: list
    :param SpotFleetRequestIds: [REQUIRED]\nThe IDs of the Spot Fleet requests.\n\n(string) --\n\n

    :type TerminateInstances: boolean
    :param TerminateInstances: [REQUIRED]\nIndicates whether to terminate instances for a Spot Fleet request if it is canceled successfully.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'SuccessfulFleetRequests': [
        {
            'CurrentSpotFleetRequestState': 'submitted'|'active'|'cancelled'|'failed'|'cancelled_running'|'cancelled_terminating'|'modifying',
            'PreviousSpotFleetRequestState': 'submitted'|'active'|'cancelled'|'failed'|'cancelled_running'|'cancelled_terminating'|'modifying',
            'SpotFleetRequestId': 'string'
        },
    ],
    'UnsuccessfulFleetRequests': [
        {
            'Error': {
                'Code': 'fleetRequestIdDoesNotExist'|'fleetRequestIdMalformed'|'fleetRequestNotInCancellableState'|'unexpectedError',
                'Message': 'string'
            },
            'SpotFleetRequestId': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the output of CancelSpotFleetRequests.

SuccessfulFleetRequests (list) --
Information about the Spot Fleet requests that are successfully canceled.

(dict) --
Describes a Spot Fleet request that was successfully canceled.

CurrentSpotFleetRequestState (string) --
The current state of the Spot Fleet request.

PreviousSpotFleetRequestState (string) --
The previous state of the Spot Fleet request.

SpotFleetRequestId (string) --
The ID of the Spot Fleet request.





UnsuccessfulFleetRequests (list) --
Information about the Spot Fleet requests that are not successfully canceled.

(dict) --
Describes a Spot Fleet request that was not successfully canceled.

Error (dict) --
The error.

Code (string) --
The error code.

Message (string) --
The description for the error code.



SpotFleetRequestId (string) --
The ID of the Spot Fleet request.











Examples
This example cancels the specified Spot fleet request and terminates its associated Spot Instances.
response = client.cancel_spot_fleet_requests(
    SpotFleetRequestIds=[
        'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    ],
    TerminateInstances=True,
)

print(response)


Expected Output:
{
    'SuccessfulFleetRequests': [
        {
            'CurrentSpotFleetRequestState': 'cancelled_running',
            'PreviousSpotFleetRequestState': 'active',
            'SpotFleetRequestId': 'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}


This example cancels the specified Spot fleet request without terminating its associated Spot Instances.
response = client.cancel_spot_fleet_requests(
    SpotFleetRequestIds=[
        'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    ],
    TerminateInstances=False,
)

print(response)


Expected Output:
{
    'SuccessfulFleetRequests': [
        {
            'CurrentSpotFleetRequestState': 'cancelled_terminating',
            'PreviousSpotFleetRequestState': 'active',
            'SpotFleetRequestId': 'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SuccessfulFleetRequests': [
            {
                'CurrentSpotFleetRequestState': 'submitted'|'active'|'cancelled'|'failed'|'cancelled_running'|'cancelled_terminating'|'modifying',
                'PreviousSpotFleetRequestState': 'submitted'|'active'|'cancelled'|'failed'|'cancelled_running'|'cancelled_terminating'|'modifying',
                'SpotFleetRequestId': 'string'
            },
        ],
        'UnsuccessfulFleetRequests': [
            {
                'Error': {
                    'Code': 'fleetRequestIdDoesNotExist'|'fleetRequestIdMalformed'|'fleetRequestNotInCancellableState'|'unexpectedError',
                    'Message': 'string'
                },
                'SpotFleetRequestId': 'string'
            },
        ]
    }
    
    
    """
    pass

def cancel_spot_instance_requests(DryRun=None, SpotInstanceRequestIds=None):
    """
    Cancels one or more Spot Instance requests.
    See also: AWS API Documentation
    
    Examples
    This example cancels a Spot Instance request.
    Expected Output:
    
    :example: response = client.cancel_spot_instance_requests(
        DryRun=True|False,
        SpotInstanceRequestIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type SpotInstanceRequestIds: list
    :param SpotInstanceRequestIds: [REQUIRED]\nOne or more Spot Instance request IDs.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'CancelledSpotInstanceRequests': [
        {
            'SpotInstanceRequestId': 'string',
            'State': 'active'|'open'|'closed'|'cancelled'|'completed'
        },
    ]
}


Response Structure

(dict) --
Contains the output of CancelSpotInstanceRequests.

CancelledSpotInstanceRequests (list) --
One or more Spot Instance requests.

(dict) --
Describes a request to cancel a Spot Instance.

SpotInstanceRequestId (string) --
The ID of the Spot Instance request.

State (string) --
The state of the Spot Instance request.











Examples
This example cancels a Spot Instance request.
response = client.cancel_spot_instance_requests(
    SpotInstanceRequestIds=[
        'sir-08b93456',
    ],
)

print(response)


Expected Output:
{
    'CancelledSpotInstanceRequests': [
        {
            'SpotInstanceRequestId': 'sir-08b93456',
            'State': 'cancelled',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'CancelledSpotInstanceRequests': [
            {
                'SpotInstanceRequestId': 'string',
                'State': 'active'|'open'|'closed'|'cancelled'|'completed'
            },
        ]
    }
    
    
    """
    pass

def confirm_product_instance(InstanceId=None, ProductCode=None, DryRun=None):
    """
    Determines whether a product code is associated with an instance. This action can only be used by the owner of the product code. It is useful when a product code owner must verify whether another user\'s instance is eligible for support.
    See also: AWS API Documentation
    
    Examples
    This example determines whether the specified product code is associated with the specified instance.
    Expected Output:
    
    :example: response = client.confirm_product_instance(
        InstanceId='string',
        ProductCode='string',
        DryRun=True|False
    )
    
    
    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type ProductCode: string
    :param ProductCode: [REQUIRED]\nThe product code. This must be a product code that you own.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'OwnerId': 'string',
    'Return': True|False
}


Response Structure

(dict) --

OwnerId (string) --
The AWS account ID of the instance owner. This is only present if the product code is attached to the instance.

Return (boolean) --
The return value of the request. Returns true if the specified product code is owned by the requester and associated with the specified instance.







Examples
This example determines whether the specified product code is associated with the specified instance.
response = client.confirm_product_instance(
    InstanceId='i-1234567890abcdef0',
    ProductCode='774F4FF8',
)

print(response)


Expected Output:
{
    'OwnerId': '123456789012',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'OwnerId': 'string',
        'Return': True|False
    }
    
    
    """
    pass

def copy_fpga_image(DryRun=None, SourceFpgaImageId=None, Description=None, Name=None, SourceRegion=None, ClientToken=None):
    """
    Copies the specified Amazon FPGA Image (AFI) to the current Region.
    See also: AWS API Documentation
    
    
    :example: response = client.copy_fpga_image(
        DryRun=True|False,
        SourceFpgaImageId='string',
        Description='string',
        Name='string',
        SourceRegion='string',
        ClientToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type SourceFpgaImageId: string
    :param SourceFpgaImageId: [REQUIRED]\nThe ID of the source AFI.\n

    :type Description: string
    :param Description: The description for the new AFI.

    :type Name: string
    :param Name: The name for the new AFI. The default is the name of the source AFI.

    :type SourceRegion: string
    :param SourceRegion: [REQUIRED]\nThe Region that contains the source AFI.\n

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .

    :rtype: dict

ReturnsResponse Syntax
{
    'FpgaImageId': 'string'
}


Response Structure

(dict) --

FpgaImageId (string) --
The ID of the new AFI.








    :return: {
        'FpgaImageId': 'string'
    }
    
    
    """
    pass

def copy_image(ClientToken=None, Description=None, Encrypted=None, KmsKeyId=None, Name=None, SourceImageId=None, SourceRegion=None, DryRun=None):
    """
    Initiates the copy of an AMI from the specified source Region to the current Region. You specify the destination Region by using its endpoint when making the request.
    Copies of encrypted backing snapshots for the AMI are encrypted. Copies of unencrypted backing snapshots remain unencrypted, unless you set Encrypted during the copy operation. You cannot create an unencrypted copy of an encrypted backing snapshot.
    For more information about the prerequisites and limits when copying an AMI, see Copying an AMI in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example copies the specified AMI from the us-east-1 region to the current region.
    Expected Output:
    
    :example: response = client.copy_image(
        ClientToken='string',
        Description='string',
        Encrypted=True|False,
        KmsKeyId='string',
        Name='string',
        SourceImageId='string',
        SourceRegion='string',
        DryRun=True|False
    )
    
    
    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see How to Ensure Idempotency in the Amazon Elastic Compute Cloud User Guide .

    :type Description: string
    :param Description: A description for the new AMI in the destination Region.

    :type Encrypted: boolean
    :param Encrypted: Specifies whether the destination snapshots of the copied image should be encrypted. You can encrypt a copy of an unencrypted snapshot, but you cannot create an unencrypted copy of an encrypted snapshot. The default CMK for EBS is used unless you specify a non-default AWS Key Management Service (AWS KMS) CMK using KmsKeyId . For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .

    :type KmsKeyId: string
    :param KmsKeyId: An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.\nTo specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. When using an alias name, prefix it with 'alias/'. For example:\n\nKey ID: 1234abcd-12ab-34cd-56ef-1234567890ab\nKey ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\nAlias name: alias/ExampleAlias\nAlias ARN: arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias\n\nAWS parses KmsKeyId asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure.\nThe specified CMK must exist in the Region that the snapshot is being copied to.\nAmazon EBS does not support asymmetric CMKs.\n

    :type Name: string
    :param Name: [REQUIRED]\nThe name of the new AMI in the destination Region.\n

    :type SourceImageId: string
    :param SourceImageId: [REQUIRED]\nThe ID of the AMI to copy.\n

    :type SourceRegion: string
    :param SourceRegion: [REQUIRED]\nThe name of the Region that contains the AMI to copy.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ImageId': 'string'
}


Response Structure

(dict) --
Contains the output of CopyImage.

ImageId (string) --
The ID of the new AMI.







Examples
This example copies the specified AMI from the us-east-1 region to the current region.
response = client.copy_image(
    Description='',
    Name='My server',
    SourceImageId='ami-5731123e',
    SourceRegion='us-east-1',
)

print(response)


Expected Output:
{
    'ImageId': 'ami-438bea42',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'ImageId': 'string'
    }
    
    
    """
    pass

def copy_snapshot(Description=None, DestinationRegion=None, Encrypted=None, KmsKeyId=None, PresignedUrl=None, SourceRegion=None, SourceSnapshotId=None, TagSpecifications=None, DryRun=None):
    """
    Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can copy the snapshot within the same Region or from one Region to another. You can use the snapshot to create EBS volumes or Amazon Machine Images (AMIs).
    Copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots remain unencrypted, unless you enable encryption for the snapshot copy operation. By default, encrypted snapshot copies use the default AWS Key Management Service (AWS KMS) customer master key (CMK); however, you can specify a different CMK.
    To copy an encrypted snapshot that has been shared from another account, you must have permissions for the CMK used to encrypt the snapshot.
    Snapshots created by copying another snapshot have an arbitrary volume ID that should not be used for any purpose.
    For more information, see Copying an Amazon EBS Snapshot in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example copies a snapshot with the snapshot ID of snap-066877671789bd71b from the us-west-2 region to the us-east-1 region and adds a short description to identify the snapshot.
    Expected Output:
    
    :example: response = client.copy_snapshot(
        Description='string',
        Encrypted=True|False,
        KmsKeyId='string',
        SourceRegion='string',
        SourceSnapshotId='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type Description: string
    :param Description: A description for the EBS snapshot.

    :type DestinationRegion: string
    :param DestinationRegion: The destination Region to use in the PresignedUrl parameter of a snapshot copy operation. This parameter is only valid for specifying the destination Region in a PresignedUrl parameter, where it is required.\nThe snapshot copy is sent to the regional endpoint that you sent the HTTP request to (for example, ec2.us-east-1.amazonaws.com ). With the AWS CLI, this is specified using the --region parameter or the default Region in your AWS configuration file.\n\nPlease note that this parameter is automatically populated if it is not provided. Including this parameter is not required\n

    :type Encrypted: boolean
    :param Encrypted: To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots are encrypted, even if you omit this parameter and encryption by default is not enabled. You cannot set this parameter to false. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .

    :type KmsKeyId: string
    :param KmsKeyId: The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used. If KmsKeyId is specified, the encrypted state must be true .\nYou can specify the CMK using any of the following:\n\nKey ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.\nKey alias. For example, alias/ExampleAlias.\nKey ARN. For example, arn:aws:kms:us-east-1 :012345678910 :key/abcd1234-a123-456a-a12b-a123b4cd56ef .\nAlias ARN. For example, arn:aws:kms:us-east-1 :012345678910 :alias/ExampleAlias .\n\nAWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.\n

    :type PresignedUrl: string
    :param PresignedUrl: When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a pre-signed URL. This parameter is optional for unencrypted snapshots. For more information, see Query Requests .\nThe PresignedUrl should use the snapshot source endpoint, the CopySnapshot action, and include the SourceRegion , SourceSnapshotId , and DestinationRegion parameters. The PresignedUrl must be signed using AWS Signature Version 4. Because EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in Authenticating Requests by Using Query Parameters (AWS Signature Version 4) in the Amazon Simple Storage Service API Reference . An invalid or improperly signed PresignedUrl will cause the copy operation to fail asynchronously, and the snapshot will move to an error state.\n\nPlease note that this parameter is automatically populated if it is not provided. Including this parameter is not required\n

    :type SourceRegion: string
    :param SourceRegion: [REQUIRED]\nThe ID of the Region that contains the snapshot to be copied.\n

    :type SourceSnapshotId: string
    :param SourceSnapshotId: [REQUIRED]\nThe ID of the EBS snapshot to copy.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the new snapshot.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'SnapshotId': 'string',
    'Tags': [
        {
            'Key': 'string',
            'Value': 'string'
        },
    ]
}


Response Structure

(dict) --

SnapshotId (string) --
The ID of the new snapshot.

Tags (list) --
Any tags applied to the new snapshot.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.











Examples
This example copies a snapshot with the snapshot ID of snap-066877671789bd71b from the us-west-2 region to the us-east-1 region and adds a short description to identify the snapshot.
response = client.copy_snapshot(
    Description='This is my copied snapshot.',
    DestinationRegion='us-east-1',
    SourceRegion='us-west-2',
    SourceSnapshotId='snap-066877671789bd71b',
)

print(response)


Expected Output:
{
    'SnapshotId': 'snap-066877671789bd71b',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SnapshotId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
    
    
    """
    pass

def create_capacity_reservation(ClientToken=None, InstanceType=None, InstancePlatform=None, AvailabilityZone=None, AvailabilityZoneId=None, Tenancy=None, InstanceCount=None, EbsOptimized=None, EphemeralStorage=None, EndDate=None, EndDateType=None, InstanceMatchCriteria=None, TagSpecifications=None, DryRun=None):
    """
    Creates a new Capacity Reservation with the specified attributes.
    Capacity Reservations enable you to reserve capacity for your Amazon EC2 instances in a specific Availability Zone for any duration. This gives you the flexibility to selectively add capacity reservations and still get the Regional RI discounts for that usage. By creating Capacity Reservations, you ensure that you always have access to Amazon EC2 capacity when you need it, for as long as you need it. For more information, see Capacity Reservations in the Amazon Elastic Compute Cloud User Guide .
    Your request to create a Capacity Reservation could fail if Amazon EC2 does not have sufficient capacity to fulfill the request. If your request fails due to Amazon EC2 capacity constraints, either try again at a later time, try in a different Availability Zone, or request a smaller capacity reservation. If your application is flexible across instance types and sizes, try to create a Capacity Reservation with different instance attributes.
    Your request could also fail if the requested quantity exceeds your On-Demand Instance limit for the selected instance type. If your request fails due to limit constraints, increase your On-Demand Instance limit for the required instance type and try again. For more information about increasing your instance limits, see Amazon EC2 Service Limits in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_capacity_reservation(
        ClientToken='string',
        InstanceType='string',
        InstancePlatform='Linux/UNIX'|'Red Hat Enterprise Linux'|'SUSE Linux'|'Windows'|'Windows with SQL Server'|'Windows with SQL Server Enterprise'|'Windows with SQL Server Standard'|'Windows with SQL Server Web'|'Linux with SQL Server Standard'|'Linux with SQL Server Web'|'Linux with SQL Server Enterprise',
        AvailabilityZone='string',
        AvailabilityZoneId='string',
        Tenancy='default'|'dedicated',
        InstanceCount=123,
        EbsOptimized=True|False,
        EphemeralStorage=True|False,
        EndDate=datetime(2015, 1, 1),
        EndDateType='unlimited'|'limited',
        InstanceMatchCriteria='open'|'targeted',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nConstraint: Maximum 64 ASCII characters.\n

    :type InstanceType: string
    :param InstanceType: [REQUIRED]\nThe instance type for which to reserve capacity. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .\n

    :type InstancePlatform: string
    :param InstancePlatform: [REQUIRED]\nThe type of operating system for which to reserve capacity.\n

    :type AvailabilityZone: string
    :param AvailabilityZone: The Availability Zone in which to create the Capacity Reservation.

    :type AvailabilityZoneId: string
    :param AvailabilityZoneId: The ID of the Availability Zone in which to create the Capacity Reservation.

    :type Tenancy: string
    :param Tenancy: Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:\n\ndefault - The Capacity Reservation is created on hardware that is shared with other AWS accounts.\ndedicated - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account.\n\n

    :type InstanceCount: integer
    :param InstanceCount: [REQUIRED]\nThe number of instances for which to reserve capacity.\n

    :type EbsOptimized: boolean
    :param EbsOptimized: Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS- optimized instance.

    :type EphemeralStorage: boolean
    :param EphemeralStorage: Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.

    :type EndDate: datetime
    :param EndDate: The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation\'s state changes to expired when it reaches its end date and time.\nYou must provide an EndDate value if EndDateType is limited . Omit EndDate if EndDateType is unlimited .\nIf the EndDateType is limited , the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.\n

    :type EndDateType: string
    :param EndDateType: Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:\n\nunlimited - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an EndDate if the EndDateType is unlimited .\nlimited - The Capacity Reservation expires automatically at a specified date and time. You must provide an EndDate value if the EndDateType value is limited .\n\n

    :type InstanceMatchCriteria: string
    :param InstanceMatchCriteria: Indicates the type of instance launches that the Capacity Reservation accepts. The options include:\n\nopen - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.\ntargeted - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.\n\nDefault: open\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the Capacity Reservation during launch.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'CapacityReservation': {
        'CapacityReservationId': 'string',
        'OwnerId': 'string',
        'CapacityReservationArn': 'string',
        'AvailabilityZoneId': 'string',
        'InstanceType': 'string',
        'InstancePlatform': 'Linux/UNIX'|'Red Hat Enterprise Linux'|'SUSE Linux'|'Windows'|'Windows with SQL Server'|'Windows with SQL Server Enterprise'|'Windows with SQL Server Standard'|'Windows with SQL Server Web'|'Linux with SQL Server Standard'|'Linux with SQL Server Web'|'Linux with SQL Server Enterprise',
        'AvailabilityZone': 'string',
        'Tenancy': 'default'|'dedicated',
        'TotalInstanceCount': 123,
        'AvailableInstanceCount': 123,
        'EbsOptimized': True|False,
        'EphemeralStorage': True|False,
        'State': 'active'|'expired'|'cancelled'|'pending'|'failed',
        'EndDate': datetime(2015, 1, 1),
        'EndDateType': 'unlimited'|'limited',
        'InstanceMatchCriteria': 'open'|'targeted',
        'CreateDate': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

CapacityReservation (dict) --
Information about the Capacity Reservation.

CapacityReservationId (string) --
The ID of the Capacity Reservation.

OwnerId (string) --
The ID of the AWS account that owns the Capacity Reservation.

CapacityReservationArn (string) --
The Amazon Resource Name (ARN) of the Capacity Reservation.

AvailabilityZoneId (string) --
The Availability Zone ID of the Capacity Reservation.

InstanceType (string) --
The type of instance for which the Capacity Reservation reserves capacity.

InstancePlatform (string) --
The type of operating system for which the Capacity Reservation reserves capacity.

AvailabilityZone (string) --
The Availability Zone in which the capacity is reserved.

Tenancy (string) --
Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:

default - The Capacity Reservation is created on hardware that is shared with other AWS accounts.
dedicated - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account.


TotalInstanceCount (integer) --
The total number of instances for which the Capacity Reservation reserves capacity.

AvailableInstanceCount (integer) --
The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.

EbsOptimized (boolean) --
Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS- optimized instance.

EphemeralStorage (boolean) --
Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.

State (string) --
The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:

active - The Capacity Reservation is active and the capacity is available for your use.
expired - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.
cancelled - The Capacity Reservation was manually cancelled. The reserved capacity is no longer available for your use.
pending - The Capacity Reservation request was successful but the capacity provisioning is still pending.
failed - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.


EndDate (datetime) --
The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation\'s state changes to expired when it reaches its end date and time.

EndDateType (string) --
Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:

unlimited - The Capacity Reservation remains active until you explicitly cancel it.
limited - The Capacity Reservation expires automatically at a specified date and time.


InstanceMatchCriteria (string) --
Indicates the type of instance launches that the Capacity Reservation accepts. The options include:

open - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying any additional parameters.
targeted - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.


CreateDate (datetime) --
The date and time at which the Capacity Reservation was created.

Tags (list) --
Any tags assigned to the Capacity Reservation.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'CapacityReservation': {
            'CapacityReservationId': 'string',
            'OwnerId': 'string',
            'CapacityReservationArn': 'string',
            'AvailabilityZoneId': 'string',
            'InstanceType': 'string',
            'InstancePlatform': 'Linux/UNIX'|'Red Hat Enterprise Linux'|'SUSE Linux'|'Windows'|'Windows with SQL Server'|'Windows with SQL Server Enterprise'|'Windows with SQL Server Standard'|'Windows with SQL Server Web'|'Linux with SQL Server Standard'|'Linux with SQL Server Web'|'Linux with SQL Server Enterprise',
            'AvailabilityZone': 'string',
            'Tenancy': 'default'|'dedicated',
            'TotalInstanceCount': 123,
            'AvailableInstanceCount': 123,
            'EbsOptimized': True|False,
            'EphemeralStorage': True|False,
            'State': 'active'|'expired'|'cancelled'|'pending'|'failed',
            'EndDate': datetime(2015, 1, 1),
            'EndDateType': 'unlimited'|'limited',
            'InstanceMatchCriteria': 'open'|'targeted',
            'CreateDate': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    default - The Capacity Reservation is created on hardware that is shared with other AWS accounts.
    dedicated - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account.
    
    """
    pass

def create_client_vpn_endpoint(ClientCidrBlock=None, ServerCertificateArn=None, AuthenticationOptions=None, ConnectionLogOptions=None, DnsServers=None, TransportProtocol=None, VpnPort=None, Description=None, SplitTunnel=None, DryRun=None, ClientToken=None, TagSpecifications=None, SecurityGroupIds=None, VpcId=None):
    """
    Creates a Client VPN endpoint. A Client VPN endpoint is the resource you create and configure to enable and manage client VPN sessions. It is the destination endpoint at which all client VPN sessions are terminated.
    See also: AWS API Documentation
    
    
    :example: response = client.create_client_vpn_endpoint(
        ClientCidrBlock='string',
        ServerCertificateArn='string',
        AuthenticationOptions=[
            {
                'Type': 'certificate-authentication'|'directory-service-authentication'|'federated-authentication',
                'ActiveDirectory': {
                    'DirectoryId': 'string'
                },
                'MutualAuthentication': {
                    'ClientRootCertificateChainArn': 'string'
                },
                'FederatedAuthentication': {
                    'SAMLProviderArn': 'string'
                }
            },
        ],
        ConnectionLogOptions={
            'Enabled': True|False,
            'CloudwatchLogGroup': 'string',
            'CloudwatchLogStream': 'string'
        },
        DnsServers=[
            'string',
        ],
        TransportProtocol='tcp'|'udp',
        VpnPort=123,
        Description='string',
        SplitTunnel=True|False,
        DryRun=True|False,
        ClientToken='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        SecurityGroupIds=[
            'string',
        ],
        VpcId='string'
    )
    
    
    :type ClientCidrBlock: string
    :param ClientCidrBlock: [REQUIRED]\nThe IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.\n

    :type ServerCertificateArn: string
    :param ServerCertificateArn: [REQUIRED]\nThe ARN of the server certificate. For more information, see the AWS Certificate Manager User Guide .\n

    :type AuthenticationOptions: list
    :param AuthenticationOptions: [REQUIRED]\nInformation about the authentication method to be used to authenticate clients.\n\n(dict) --Describes the authentication method to be used by a Client VPN endpoint. For more information, see Authentication in the AWS Client VPN Administrator Guide .\n\nType (string) --The type of client authentication to be used.\n\nActiveDirectory (dict) --Information about the Active Directory to be used, if applicable. You must provide this information if Type is directory-service-authentication .\n\nDirectoryId (string) --The ID of the Active Directory to be used for authentication.\n\n\n\nMutualAuthentication (dict) --Information about the authentication certificates to be used, if applicable. You must provide this information if Type is certificate-authentication .\n\nClientRootCertificateChainArn (string) --The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM).\n\n\n\nFederatedAuthentication (dict) --Information about the IAM SAML identity provider to be used, if applicable. You must provide this information if Type is federated-authentication .\n\nSAMLProviderArn (string) --The Amazon Resource Name (ARN) of the IAM SAML identity provider.\n\n\n\n\n\n\n

    :type ConnectionLogOptions: dict
    :param ConnectionLogOptions: [REQUIRED]\nInformation about the client connection logging options.\nIf you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:\n\nClient connection requests\nClient connection results (successful and unsuccessful)\nReasons for unsuccessful client connection requests\nClient connection termination time\n\n\nEnabled (boolean) --Indicates whether connection logging is enabled.\n\nCloudwatchLogGroup (string) --The name of the CloudWatch Logs log group.\n\nCloudwatchLogStream (string) --The name of the CloudWatch Logs log stream to which the connection data is published.\n\n\n

    :type DnsServers: list
    :param DnsServers: Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.\n\n(string) --\n\n

    :type TransportProtocol: string
    :param TransportProtocol: The transport protocol to be used by the VPN session.\nDefault value: udp\n

    :type VpnPort: integer
    :param VpnPort: The port number to assign to the Client VPN endpoint for TCP and UDP traffic.\nValid Values: 443 | 1194\nDefault Value: 443\n

    :type Description: string
    :param Description: A brief description of the Client VPN endpoint.

    :type SplitTunnel: boolean
    :param SplitTunnel: Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint.\nBy default, split-tunnel on a VPN endpoint is disabled.\nFor information about split-tunnel VPN endpoints, see Split-Tunnel AWS Client VPN Endpoint in the AWS Client VPN Administrator Guide .\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the Client VPN endpoint during creation.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type SecurityGroupIds: list
    :param SecurityGroupIds: The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.\n\n(string) --\n\n

    :type VpcId: string
    :param VpcId: The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.

    :rtype: dict

ReturnsResponse Syntax
{
    'ClientVpnEndpointId': 'string',
    'Status': {
        'Code': 'pending-associate'|'available'|'deleting'|'deleted',
        'Message': 'string'
    },
    'DnsName': 'string'
}


Response Structure

(dict) --

ClientVpnEndpointId (string) --
The ID of the Client VPN endpoint.

Status (dict) --
The current state of the Client VPN endpoint.

Code (string) --
The state of the Client VPN endpoint. Possible states include:

pending-associate - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.
available - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.
deleting - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.
deleted - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.


Message (string) --
A message about the status of the Client VPN endpoint.



DnsName (string) --
The DNS name to be used by clients when establishing their VPN session.








    :return: {
        'ClientVpnEndpointId': 'string',
        'Status': {
            'Code': 'pending-associate'|'available'|'deleting'|'deleted',
            'Message': 'string'
        },
        'DnsName': 'string'
    }
    
    
    :returns: 
    pending-associate - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.
    available - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.
    deleting - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.
    deleted - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.
    
    """
    pass

def create_client_vpn_route(ClientVpnEndpointId=None, DestinationCidrBlock=None, TargetVpcSubnetId=None, Description=None, ClientToken=None, DryRun=None):
    """
    Adds a route to a network to a Client VPN endpoint. Each Client VPN endpoint has a route table that describes the available destination network routes. Each route in the route table specifies the path for tra\xef\xac\x83c to speci\xef\xac\x81c resources or networks.
    See also: AWS API Documentation
    
    
    :example: response = client.create_client_vpn_route(
        ClientVpnEndpointId='string',
        DestinationCidrBlock='string',
        TargetVpcSubnetId='string',
        Description='string',
        ClientToken='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint to which to add the route.\n

    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe IPv4 address range, in CIDR notation, of the route destination. For example:\n\nTo add a route for Internet access, enter 0.0.0.0/0\nTo add a route for a peered VPC, enter the peered VPC\'s IPv4 CIDR range\nTo add a route for an on-premises network, enter the AWS Site-to-Site VPN connection\'s IPv4 CIDR range\n\nRoute address ranges cannot overlap with the CIDR range specified for client allocation.\n

    :type TargetVpcSubnetId: string
    :param TargetVpcSubnetId: [REQUIRED]\nThe ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.\n

    :type Description: string
    :param Description: A brief description of the route.

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Status': {
        'Code': 'creating'|'active'|'failed'|'deleting',
        'Message': 'string'
    }
}


Response Structure

(dict) --

Status (dict) --
The current state of the route.

Code (string) --
The state of the Client VPN endpoint route.

Message (string) --
A message about the status of the Client VPN endpoint route, if applicable.










    :return: {
        'Status': {
            'Code': 'creating'|'active'|'failed'|'deleting',
            'Message': 'string'
        }
    }
    
    
    """
    pass

def create_customer_gateway(BgpAsn=None, PublicIp=None, CertificateArn=None, Type=None, DeviceName=None, DryRun=None):
    """
    Provides information to AWS about your VPN customer gateway device. The customer gateway is the appliance at your end of the VPN connection. (The device on the AWS side of the VPN connection is the virtual private gateway.) You must provide the Internet-routable IP address of the customer gateway\'s external interface. The IP address must be static and can be behind a device performing network address translation (NAT).
    For devices that use Border Gateway Protocol (BGP), you can also provide the device\'s BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network. If you don\'t have an ASN already, you can use a private ASN (in the 64512 - 65534 range).
    For more information, see AWS Site-to-Site VPN in the AWS Site-to-Site VPN User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a customer gateway with the specified IP address for its outside interface.
    Expected Output:
    
    :example: response = client.create_customer_gateway(
        BgpAsn=123,
        PublicIp='string',
        CertificateArn='string',
        Type='ipsec.1',
        DeviceName='string',
        DryRun=True|False
    )
    
    
    :type BgpAsn: integer
    :param BgpAsn: [REQUIRED]\nFor devices that support BGP, the customer gateway\'s BGP ASN.\nDefault: 65000\n

    :type PublicIp: string
    :param PublicIp: The Internet-routable IP address for the customer gateway\'s outside interface. The address must be static.

    :type CertificateArn: string
    :param CertificateArn: The Amazon Resource Name (ARN) for the customer gateway certificate.

    :type Type: string
    :param Type: [REQUIRED]\nThe type of VPN connection that this customer gateway supports (ipsec.1 ).\n

    :type DeviceName: string
    :param DeviceName: A name for the customer gateway device.\nLength Constraints: Up to 255 characters.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'CustomerGateway': {
        'BgpAsn': 'string',
        'CustomerGatewayId': 'string',
        'IpAddress': 'string',
        'CertificateArn': 'string',
        'State': 'string',
        'Type': 'string',
        'DeviceName': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --
Contains the output of CreateCustomerGateway.

CustomerGateway (dict) --
Information about the customer gateway.

BgpAsn (string) --
The customer gateway\'s Border Gateway Protocol (BGP) Autonomous System Number (ASN).

CustomerGatewayId (string) --
The ID of the customer gateway.

IpAddress (string) --
The Internet-routable IP address of the customer gateway\'s outside interface.

CertificateArn (string) --
The Amazon Resource Name (ARN) for the customer gateway certificate.

State (string) --
The current state of the customer gateway (pending | available | deleting | deleted ).

Type (string) --
The type of VPN connection the customer gateway supports (ipsec.1 ).

DeviceName (string) --
The name of customer gateway device.

Tags (list) --
Any tags assigned to the customer gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.













Examples
This example creates a customer gateway with the specified IP address for its outside interface.
response = client.create_customer_gateway(
    BgpAsn=65534,
    PublicIp='12.1.2.3',
    Type='ipsec.1',
)

print(response)


Expected Output:
{
    'CustomerGateway': {
        'BgpAsn': '65534',
        'CustomerGatewayId': 'cgw-0e11f167',
        'IpAddress': '12.1.2.3',
        'State': 'available',
        'Type': 'ipsec.1',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'CustomerGateway': {
            'BgpAsn': 'string',
            'CustomerGatewayId': 'string',
            'IpAddress': 'string',
            'CertificateArn': 'string',
            'State': 'string',
            'Type': 'string',
            'DeviceName': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_default_subnet(AvailabilityZone=None, DryRun=None):
    """
    Creates a default subnet with a size /20 IPv4 CIDR block in the specified Availability Zone in your default VPC. You can have only one default subnet per Availability Zone. For more information, see Creating a Default Subnet in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_default_subnet(
        AvailabilityZone='string',
        DryRun=True|False
    )
    
    
    :type AvailabilityZone: string
    :param AvailabilityZone: [REQUIRED]\nThe Availability Zone in which to create the default subnet.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Subnet': {
        'AvailabilityZone': 'string',
        'AvailabilityZoneId': 'string',
        'AvailableIpAddressCount': 123,
        'CidrBlock': 'string',
        'DefaultForAz': True|False,
        'MapPublicIpOnLaunch': True|False,
        'MapCustomerOwnedIpOnLaunch': True|False,
        'CustomerOwnedIpv4Pool': 'string',
        'State': 'pending'|'available',
        'SubnetId': 'string',
        'VpcId': 'string',
        'OwnerId': 'string',
        'AssignIpv6AddressOnCreation': True|False,
        'Ipv6CidrBlockAssociationSet': [
            {
                'AssociationId': 'string',
                'Ipv6CidrBlock': 'string',
                'Ipv6CidrBlockState': {
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                    'StatusMessage': 'string'
                }
            },
        ],
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'SubnetArn': 'string',
        'OutpostArn': 'string'
    }
}


Response Structure

(dict) --

Subnet (dict) --
Information about the subnet.

AvailabilityZone (string) --
The Availability Zone of the subnet.

AvailabilityZoneId (string) --
The AZ ID of the subnet.

AvailableIpAddressCount (integer) --
The number of unused private IPv4 addresses in the subnet. The IPv4 addresses for any stopped instances are considered unavailable.

CidrBlock (string) --
The IPv4 CIDR block assigned to the subnet.

DefaultForAz (boolean) --
Indicates whether this is the default subnet for the Availability Zone.

MapPublicIpOnLaunch (boolean) --
Indicates whether instances launched in this subnet receive a public IPv4 address.

MapCustomerOwnedIpOnLaunch (boolean) --
Indicates whether a network interface created in this subnet (including a network interface created by  RunInstances ) receives a customer-owned IPv4 address.

CustomerOwnedIpv4Pool (string) --
The customer-owned IPv4 address pool associated with the subnet.

State (string) --
The current state of the subnet.

SubnetId (string) --
The ID of the subnet.

VpcId (string) --
The ID of the VPC the subnet is in.

OwnerId (string) --
The ID of the AWS account that owns the subnet.

AssignIpv6AddressOnCreation (boolean) --
Indicates whether a network interface created in this subnet (including a network interface created by  RunInstances ) receives an IPv6 address.

Ipv6CidrBlockAssociationSet (list) --
Information about the IPv6 CIDR blocks associated with the subnet.

(dict) --
Describes an IPv6 CIDR block associated with a subnet.

AssociationId (string) --
The association ID for the CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of a CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.







Tags (list) --
Any tags assigned to the subnet.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





SubnetArn (string) --
The Amazon Resource Name (ARN) of the subnet.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.










    :return: {
        'Subnet': {
            'AvailabilityZone': 'string',
            'AvailabilityZoneId': 'string',
            'AvailableIpAddressCount': 123,
            'CidrBlock': 'string',
            'DefaultForAz': True|False,
            'MapPublicIpOnLaunch': True|False,
            'MapCustomerOwnedIpOnLaunch': True|False,
            'CustomerOwnedIpv4Pool': 'string',
            'State': 'pending'|'available',
            'SubnetId': 'string',
            'VpcId': 'string',
            'OwnerId': 'string',
            'AssignIpv6AddressOnCreation': True|False,
            'Ipv6CidrBlockAssociationSet': [
                {
                    'AssociationId': 'string',
                    'Ipv6CidrBlock': 'string',
                    'Ipv6CidrBlockState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                        'StatusMessage': 'string'
                    }
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'SubnetArn': 'string',
            'OutpostArn': 'string'
        }
    }
    
    
    """
    pass

def create_default_vpc(DryRun=None):
    """
    Creates a default VPC with a size /16 IPv4 CIDR block and a default subnet in each Availability Zone. For more information about the components of a default VPC, see Default VPC and Default Subnets in the Amazon Virtual Private Cloud User Guide . You cannot specify the components of the default VPC yourself.
    If you deleted your previous default VPC, you can create a default VPC. You cannot have more than one default VPC per Region.
    If your account supports EC2-Classic, you cannot use this action to create a default VPC in a Region that supports EC2-Classic. If you want a default VPC in a Region that supports EC2-Classic, see "I really want a default VPC for my existing EC2 account. Is that possible?" in the Default VPCs FAQ .
    See also: AWS API Documentation
    
    
    :example: response = client.create_default_vpc(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'Vpc': {
        'CidrBlock': 'string',
        'DhcpOptionsId': 'string',
        'State': 'pending'|'available',
        'VpcId': 'string',
        'OwnerId': 'string',
        'InstanceTenancy': 'default'|'dedicated'|'host',
        'Ipv6CidrBlockAssociationSet': [
            {
                'AssociationId': 'string',
                'Ipv6CidrBlock': 'string',
                'Ipv6CidrBlockState': {
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                    'StatusMessage': 'string'
                },
                'NetworkBorderGroup': 'string',
                'Ipv6Pool': 'string'
            },
        ],
        'CidrBlockAssociationSet': [
            {
                'AssociationId': 'string',
                'CidrBlock': 'string',
                'CidrBlockState': {
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                    'StatusMessage': 'string'
                }
            },
        ],
        'IsDefault': True|False,
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --
Vpc (dict) --Information about the VPC.

CidrBlock (string) --The primary IPv4 CIDR block for the VPC.

DhcpOptionsId (string) --The ID of the set of DHCP options you\'ve associated with the VPC (or default if the default options are associated with the VPC).

State (string) --The current state of the VPC.

VpcId (string) --The ID of the VPC.

OwnerId (string) --The ID of the AWS account that owns the VPC.

InstanceTenancy (string) --The allowed tenancy of instances launched into the VPC.

Ipv6CidrBlockAssociationSet (list) --Information about the IPv6 CIDR blocks associated with the VPC.

(dict) --Describes an IPv6 CIDR block associated with a VPC.

AssociationId (string) --The association ID for the IPv6 CIDR block.

Ipv6CidrBlock (string) --The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --Information about the state of the CIDR block.

State (string) --The state of the CIDR block.

StatusMessage (string) --A message about the status of the CIDR block, if applicable.



NetworkBorderGroup (string) --The name of the location from which we advertise the IPV6 CIDR block.

Ipv6Pool (string) --The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.





CidrBlockAssociationSet (list) --Information about the IPv4 CIDR blocks associated with the VPC.

(dict) --Describes an IPv4 CIDR block associated with a VPC.

AssociationId (string) --The association ID for the IPv4 CIDR block.

CidrBlock (string) --The IPv4 CIDR block.

CidrBlockState (dict) --Information about the state of the CIDR block.

State (string) --The state of the CIDR block.

StatusMessage (string) --A message about the status of the CIDR block, if applicable.







IsDefault (boolean) --Indicates whether the VPC is the default VPC.

Tags (list) --Any tags assigned to the VPC.

(dict) --Describes a tag.

Key (string) --The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.













    :return: {
        'Vpc': {
            'CidrBlock': 'string',
            'DhcpOptionsId': 'string',
            'State': 'pending'|'available',
            'VpcId': 'string',
            'OwnerId': 'string',
            'InstanceTenancy': 'default'|'dedicated'|'host',
            'Ipv6CidrBlockAssociationSet': [
                {
                    'AssociationId': 'string',
                    'Ipv6CidrBlock': 'string',
                    'Ipv6CidrBlockState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                        'StatusMessage': 'string'
                    },
                    'NetworkBorderGroup': 'string',
                    'Ipv6Pool': 'string'
                },
            ],
            'CidrBlockAssociationSet': [
                {
                    'AssociationId': 'string',
                    'CidrBlock': 'string',
                    'CidrBlockState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                        'StatusMessage': 'string'
                    }
                },
            ],
            'IsDefault': True|False,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_dhcp_options(DhcpConfigurations=None, DryRun=None):
    """
    Creates a set of DHCP options for your VPC. After creating the set, you must associate it with the VPC, causing all existing and new instances that you launch in the VPC to use this set of DHCP options. The following are the individual DHCP options you can specify. For more information about the options, see RFC 2132 .
    Your VPC automatically starts out with a set of DHCP options that includes only a DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and if your VPC has an internet gateway, make sure to set the domain-name-servers option either to AmazonProvidedDNS or to a domain name server of your choice. For more information, see DHCP Options Sets in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a DHCP options set.
    Expected Output:
    
    :example: response = client.create_dhcp_options(
        DhcpConfigurations=[
            {
                'Key': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type DhcpConfigurations: list
    :param DhcpConfigurations: [REQUIRED]\nA DHCP configuration option.\n\n(dict) --\nKey (string) --\nValues (list) --\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'DhcpOptions': {
        'DhcpConfigurations': [
            {
                'Key': 'string',
                'Values': [
                    {
                        'Value': 'string'
                    },
                ]
            },
        ],
        'DhcpOptionsId': 'string',
        'OwnerId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

DhcpOptions (dict) --
A set of DHCP options.

DhcpConfigurations (list) --
One or more DHCP options in the set.

(dict) --
Describes a DHCP configuration option.

Key (string) --
The name of a DHCP option.

Values (list) --
One or more values for the DHCP option.

(dict) --
Describes a value for a resource attribute that is a String.

Value (string) --
The attribute value. The value is case-sensitive.









DhcpOptionsId (string) --
The ID of the set of DHCP options.

OwnerId (string) --
The ID of the AWS account that owns the DHCP options set.

Tags (list) --
Any tags assigned to the DHCP options set.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.













Examples
This example creates a DHCP options set.
response = client.create_dhcp_options(
    DhcpConfigurations=[
        {
            'Key': 'domain-name-servers',
            'Values': [
                '10.2.5.1',
                '10.2.5.2',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'DhcpOptions': {
        'DhcpConfigurations': [
            {
                'Key': 'domain-name-servers',
                'Values': [
                    {
                        'Value': '10.2.5.2',
                    },
                    {
                        'Value': '10.2.5.1',
                    },
                ],
            },
        ],
        'DhcpOptionsId': 'dopt-d9070ebb',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DhcpOptions': {
            'DhcpConfigurations': [
                {
                    'Key': 'string',
                    'Values': [
                        {
                            'Value': 'string'
                        },
                    ]
                },
            ],
            'DhcpOptionsId': 'string',
            'OwnerId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    DhcpConfigurations (list) -- [REQUIRED]
    A DHCP configuration option.
    
    (dict) --
    Key (string) --
    Values (list) --
    (string) --
    
    
    
    
    
    
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    
    """
    pass

def create_egress_only_internet_gateway(ClientToken=None, DryRun=None, VpcId=None):
    """
    [IPv6 only] Creates an egress-only internet gateway for your VPC. An egress-only internet gateway is used to enable outbound communication over IPv6 from instances in your VPC to the internet, and prevents hosts outside of your VPC from initiating an IPv6 connection with your instance.
    See also: AWS API Documentation
    
    
    :example: response = client.create_egress_only_internet_gateway(
        ClientToken='string',
        DryRun=True|False,
        VpcId='string'
    )
    
    
    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC for which to create the egress-only internet gateway.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ClientToken': 'string',
    'EgressOnlyInternetGateway': {
        'Attachments': [
            {
                'State': 'attaching'|'attached'|'detaching'|'detached',
                'VpcId': 'string'
            },
        ],
        'EgressOnlyInternetGatewayId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

EgressOnlyInternetGateway (dict) --
Information about the egress-only internet gateway.

Attachments (list) --
Information about the attachment of the egress-only internet gateway.

(dict) --
Describes the attachment of a VPC to an internet gateway or an egress-only internet gateway.

State (string) --
The current state of the attachment. For an internet gateway, the state is available when attached to a VPC; otherwise, this value is not returned.

VpcId (string) --
The ID of the VPC.





EgressOnlyInternetGatewayId (string) --
The ID of the egress-only internet gateway.

Tags (list) --
The tags assigned to the egress-only internet gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'ClientToken': 'string',
        'EgressOnlyInternetGateway': {
            'Attachments': [
                {
                    'State': 'attaching'|'attached'|'detaching'|'detached',
                    'VpcId': 'string'
                },
            ],
            'EgressOnlyInternetGatewayId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_fleet(DryRun=None, ClientToken=None, SpotOptions=None, OnDemandOptions=None, ExcessCapacityTerminationPolicy=None, LaunchTemplateConfigs=None, TargetCapacitySpecification=None, TerminateInstancesWithExpiration=None, Type=None, ValidFrom=None, ValidUntil=None, ReplaceUnhealthyInstances=None, TagSpecifications=None):
    """
    Launches an EC2 Fleet.
    You can create a single EC2 Fleet that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.
    For more information, see Launching an EC2 Fleet in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_fleet(
        DryRun=True|False,
        ClientToken='string',
        SpotOptions={
            'AllocationStrategy': 'lowest-price'|'diversified'|'capacity-optimized',
            'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate',
            'InstancePoolsToUseCount': 123,
            'SingleInstanceType': True|False,
            'SingleAvailabilityZone': True|False,
            'MinTargetCapacity': 123,
            'MaxTotalPrice': 'string'
        },
        OnDemandOptions={
            'AllocationStrategy': 'lowest-price'|'prioritized',
            'CapacityReservationOptions': {
                'UsageStrategy': 'use-capacity-reservations-first'
            },
            'SingleInstanceType': True|False,
            'SingleAvailabilityZone': True|False,
            'MinTargetCapacity': 123,
            'MaxTotalPrice': 'string'
        },
        ExcessCapacityTerminationPolicy='no-termination'|'termination',
        LaunchTemplateConfigs=[
            {
                'LaunchTemplateSpecification': {
                    'LaunchTemplateId': 'string',
                    'LaunchTemplateName': 'string',
                    'Version': 'string'
                },
                'Overrides': [
                    {
                        'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                        'MaxPrice': 'string',
                        'SubnetId': 'string',
                        'AvailabilityZone': 'string',
                        'WeightedCapacity': 123.0,
                        'Priority': 123.0,
                        'Placement': {
                            'AvailabilityZone': 'string',
                            'Affinity': 'string',
                            'GroupName': 'string',
                            'PartitionNumber': 123,
                            'HostId': 'string',
                            'Tenancy': 'default'|'dedicated'|'host',
                            'SpreadDomain': 'string',
                            'HostResourceGroupArn': 'string'
                        }
                    },
                ]
            },
        ],
        TargetCapacitySpecification={
            'TotalTargetCapacity': 123,
            'OnDemandTargetCapacity': 123,
            'SpotTargetCapacity': 123,
            'DefaultTargetCapacityType': 'spot'|'on-demand'
        },
        TerminateInstancesWithExpiration=True|False,
        Type='request'|'maintain'|'instant',
        ValidFrom=datetime(2015, 1, 1),
        ValidUntil=datetime(2015, 1, 1),
        ReplaceUnhealthyInstances=True|False,
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .

    :type SpotOptions: dict
    :param SpotOptions: Describes the configuration of Spot Instances in an EC2 Fleet.\n\nAllocationStrategy (string) --Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet.\nIf the allocation strategy is lowest-price , EC2 Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.\nIf the allocation strategy is diversified , EC2 Fleet launches instances from all of the Spot Instance pools that you specify.\nIf the allocation strategy is capacity-optimized , EC2 Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.\n\nInstanceInterruptionBehavior (string) --The behavior when a Spot Instance is interrupted. The default is terminate .\n\nInstancePoolsToUseCount (integer) --The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot AllocationStrategy is set to lowest-price . EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.\n\nSingleInstanceType (boolean) --Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type instant .\n\nSingleAvailabilityZone (boolean) --Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type instant .\n\nMinTargetCapacity (integer) --The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.\n\nMaxTotalPrice (string) --The maximum amount per hour for Spot Instances that you\'re willing to pay.\n\n\n

    :type OnDemandOptions: dict
    :param OnDemandOptions: Describes the configuration of On-Demand Instances in an EC2 Fleet.\n\nAllocationStrategy (string) --The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify lowest-price , EC2 Fleet uses price to determine the order, launching the lowest price first. If you specify prioritized , EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first. If you do not specify a value, EC2 Fleet defaults to lowest-price .\n\nCapacityReservationOptions (dict) --The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity. Supported only for fleets of type instant .\n\nUsageStrategy (string) --Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.\nIf you specify use-capacity-reservations-first , the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy (lowest-price or prioritized ) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy (lowest-price or prioritized ).\nIf you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.\n\n\n\nSingleInstanceType (boolean) --Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant .\n\nSingleAvailabilityZone (boolean) --Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant .\n\nMinTargetCapacity (integer) --The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.\n\nMaxTotalPrice (string) --The maximum amount per hour for On-Demand Instances that you\'re willing to pay.\n\n\n

    :type ExcessCapacityTerminationPolicy: string
    :param ExcessCapacityTerminationPolicy: Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.

    :type LaunchTemplateConfigs: list
    :param LaunchTemplateConfigs: [REQUIRED]\nThe configuration for the EC2 Fleet.\n\n(dict) --Describes a launch template and overrides.\n\nLaunchTemplateSpecification (dict) --The launch template to use. You must specify either the launch template ID or launch template name in the request.\n\nLaunchTemplateId (string) --The ID of the launch template. If you specify the template ID, you can\'t specify the template name.\n\nLaunchTemplateName (string) --The name of the launch template. If you specify the template name, you can\'t specify the template ID.\n\nVersion (string) --The launch template version number, $Latest , or $Default . You must specify a value, otherwise the request fails.\nIf the value is $Latest , Amazon EC2 uses the latest version of the launch template.\nIf the value is $Default , Amazon EC2 uses the default version of the launch template.\n\n\n\nOverrides (list) --Any parameters that you specify override the same parameters in the launch template.\n\n(dict) --Describes overrides for a launch template.\n\nInstanceType (string) --The instance type.\n\nMaxPrice (string) --The maximum price per unit hour that you are willing to pay for a Spot Instance.\n\nSubnetId (string) --The IDs of the subnets in which to launch the instances. Separate multiple subnet IDs using commas (for example, subnet-1234abcdeexample1, subnet-0987cdef6example2 ). A request of type instant can have only one subnet ID.\n\nAvailabilityZone (string) --The Availability Zone in which to launch the instances.\n\nWeightedCapacity (float) --The number of units provided by the specified instance type.\n\nPriority (float) --The priority for the launch template override. If AllocationStrategy is set to prioritized , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0 . The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.\n\nPlacement (dict) --The location where the instance launched, if applicable.\n\nAvailabilityZone (string) --The Availability Zone of the instance.\nIf not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.\nThis parameter is not supported by CreateFleet .\n\nAffinity (string) --The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance command.\nThis parameter is not supported by CreateFleet .\n\nGroupName (string) --The name of the placement group the instance is in.\n\nPartitionNumber (integer) --The number of the partition the instance is in. Valid only if the placement group strategy is set to partition .\nThis parameter is not supported by CreateFleet .\n\nHostId (string) --The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance command.\nThis parameter is not supported by CreateFleet .\n\nTenancy (string) --The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance command.\nThis parameter is not supported by CreateFleet .\n\nSpreadDomain (string) --Reserved for future use.\nThis parameter is not supported by CreateFleet .\n\nHostResourceGroupArn (string) --The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host .\nThis parameter is not supported by CreateFleet .\n\n\n\n\n\n\n\n\n\n\n

    :type TargetCapacitySpecification: dict
    :param TargetCapacitySpecification: [REQUIRED]\nThe number of units to request.\n\nTotalTargetCapacity (integer) -- [REQUIRED]The number of units to request, filled using DefaultTargetCapacityType .\n\nOnDemandTargetCapacity (integer) --The number of On-Demand units to request.\n\nSpotTargetCapacity (integer) --The number of Spot units to request.\n\nDefaultTargetCapacityType (string) --The default TotalTargetCapacity , which is either Spot or On-Demand .\n\n\n

    :type TerminateInstancesWithExpiration: boolean
    :param TerminateInstancesWithExpiration: Indicates whether running instances should be terminated when the EC2 Fleet expires.

    :type Type: string
    :param Type: The type of the request. By default, the EC2 Fleet places an asynchronous request for your desired capacity, and maintains it by replenishing interrupted Spot Instances (maintain ). A value of instant places a synchronous one-time request, and returns errors for any instances that could not be launched. A value of request places an asynchronous one-time request without maintaining capacity or submitting requests in alternative capacity pools if capacity is unavailable. For more information, see EC2 Fleet Request Types in the Amazon Elastic Compute Cloud User Guide .

    :type ValidFrom: datetime
    :param ValidFrom: The start date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). The default is to start fulfilling the request immediately.

    :type ValidUntil: datetime
    :param ValidUntil: The end date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.

    :type ReplaceUnhealthyInstances: boolean
    :param ReplaceUnhealthyInstances: Indicates whether EC2 Fleet should replace unhealthy instances.

    :type TagSpecifications: list
    :param TagSpecifications: The key-value pair for tagging the EC2 Fleet request on creation. The value for ResourceType must be fleet , otherwise the fleet request fails. To tag instances at launch, specify the tags in the launch template . For information about tagging after launch, see Tagging Your Resources .\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'FleetId': 'string',
    'Errors': [
        {
            'LaunchTemplateAndOverrides': {
                'LaunchTemplateSpecification': {
                    'LaunchTemplateId': 'string',
                    'LaunchTemplateName': 'string',
                    'Version': 'string'
                },
                'Overrides': {
                    'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                    'MaxPrice': 'string',
                    'SubnetId': 'string',
                    'AvailabilityZone': 'string',
                    'WeightedCapacity': 123.0,
                    'Priority': 123.0,
                    'Placement': {
                        'GroupName': 'string'
                    }
                }
            },
            'Lifecycle': 'spot'|'on-demand',
            'ErrorCode': 'string',
            'ErrorMessage': 'string'
        },
    ],
    'Instances': [
        {
            'LaunchTemplateAndOverrides': {
                'LaunchTemplateSpecification': {
                    'LaunchTemplateId': 'string',
                    'LaunchTemplateName': 'string',
                    'Version': 'string'
                },
                'Overrides': {
                    'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                    'MaxPrice': 'string',
                    'SubnetId': 'string',
                    'AvailabilityZone': 'string',
                    'WeightedCapacity': 123.0,
                    'Priority': 123.0,
                    'Placement': {
                        'GroupName': 'string'
                    }
                }
            },
            'Lifecycle': 'spot'|'on-demand',
            'InstanceIds': [
                'string',
            ],
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'Platform': 'Windows'
        },
    ]
}


Response Structure

(dict) --

FleetId (string) --
The ID of the EC2 Fleet.

Errors (list) --
Information about the instances that could not be launched by the fleet. Valid only when Type is set to instant .

(dict) --
Describes the instances that could not be launched by the fleet.

LaunchTemplateAndOverrides (dict) --
The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.

LaunchTemplateSpecification (dict) --
The launch template.

LaunchTemplateId (string) --
The ID of the launch template. If you specify the template ID, you can\'t specify the template name.

LaunchTemplateName (string) --
The name of the launch template. If you specify the template name, you can\'t specify the template ID.

Version (string) --
The launch template version number, $Latest , or $Default . You must specify a value, otherwise the request fails.
If the value is $Latest , Amazon EC2 uses the latest version of the launch template.
If the value is $Default , Amazon EC2 uses the default version of the launch template.



Overrides (dict) --
Any parameters that you specify override the same parameters in the launch template.

InstanceType (string) --
The instance type.

MaxPrice (string) --
The maximum price per unit hour that you are willing to pay for a Spot Instance.

SubnetId (string) --
The ID of the subnet in which to launch the instances.

AvailabilityZone (string) --
The Availability Zone in which to launch the instances.

WeightedCapacity (float) --
The number of units provided by the specified instance type.

Priority (float) --
The priority for the launch template override. If AllocationStrategy is set to prioritized , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0 . The lower the number, the higher the priority. If no number is set, the override has the lowest priority.

Placement (dict) --
The location where the instance launched, if applicable.

GroupName (string) --
The name of the placement group that the instance is in.







Lifecycle (string) --
Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.

ErrorCode (string) --
The error code that indicates why the instance could not be launched. For more information about error codes, see Error Codes .

ErrorMessage (string) --
The error message that describes why the instance could not be launched. For more information about error messages, see Error Codes .





Instances (list) --
Information about the instances that were launched by the fleet. Valid only when Type is set to instant .

(dict) --
Describes the instances that were launched by the fleet.

LaunchTemplateAndOverrides (dict) --
The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.

LaunchTemplateSpecification (dict) --
The launch template.

LaunchTemplateId (string) --
The ID of the launch template. If you specify the template ID, you can\'t specify the template name.

LaunchTemplateName (string) --
The name of the launch template. If you specify the template name, you can\'t specify the template ID.

Version (string) --
The launch template version number, $Latest , or $Default . You must specify a value, otherwise the request fails.
If the value is $Latest , Amazon EC2 uses the latest version of the launch template.
If the value is $Default , Amazon EC2 uses the default version of the launch template.



Overrides (dict) --
Any parameters that you specify override the same parameters in the launch template.

InstanceType (string) --
The instance type.

MaxPrice (string) --
The maximum price per unit hour that you are willing to pay for a Spot Instance.

SubnetId (string) --
The ID of the subnet in which to launch the instances.

AvailabilityZone (string) --
The Availability Zone in which to launch the instances.

WeightedCapacity (float) --
The number of units provided by the specified instance type.

Priority (float) --
The priority for the launch template override. If AllocationStrategy is set to prioritized , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0 . The lower the number, the higher the priority. If no number is set, the override has the lowest priority.

Placement (dict) --
The location where the instance launched, if applicable.

GroupName (string) --
The name of the placement group that the instance is in.







Lifecycle (string) --
Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.

InstanceIds (list) --
The IDs of the instances.

(string) --


InstanceType (string) --
The instance type.

Platform (string) --
The value is Windows for Windows instances. Otherwise, the value is blank.












    :return: {
        'FleetId': 'string',
        'Errors': [
            {
                'LaunchTemplateAndOverrides': {
                    'LaunchTemplateSpecification': {
                        'LaunchTemplateId': 'string',
                        'LaunchTemplateName': 'string',
                        'Version': 'string'
                    },
                    'Overrides': {
                        'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                        'MaxPrice': 'string',
                        'SubnetId': 'string',
                        'AvailabilityZone': 'string',
                        'WeightedCapacity': 123.0,
                        'Priority': 123.0,
                        'Placement': {
                            'GroupName': 'string'
                        }
                    }
                },
                'Lifecycle': 'spot'|'on-demand',
                'ErrorCode': 'string',
                'ErrorMessage': 'string'
            },
        ],
        'Instances': [
            {
                'LaunchTemplateAndOverrides': {
                    'LaunchTemplateSpecification': {
                        'LaunchTemplateId': 'string',
                        'LaunchTemplateName': 'string',
                        'Version': 'string'
                    },
                    'Overrides': {
                        'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                        'MaxPrice': 'string',
                        'SubnetId': 'string',
                        'AvailabilityZone': 'string',
                        'WeightedCapacity': 123.0,
                        'Priority': 123.0,
                        'Placement': {
                            'GroupName': 'string'
                        }
                    }
                },
                'Lifecycle': 'spot'|'on-demand',
                'InstanceIds': [
                    'string',
                ],
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'Platform': 'Windows'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_flow_logs(DryRun=None, ClientToken=None, DeliverLogsPermissionArn=None, LogGroupName=None, ResourceIds=None, ResourceType=None, TrafficType=None, LogDestinationType=None, LogDestination=None, LogFormat=None, TagSpecifications=None, MaxAggregationInterval=None):
    """
    Creates one or more flow logs to capture information about IP traffic for a specific network interface, subnet, or VPC.
    Flow log data for a monitored network interface is recorded as flow log records, which are log events consisting of fields that describe the traffic flow. For more information, see Flow Log Records in the Amazon Virtual Private Cloud User Guide .
    When publishing to CloudWatch Logs, flow log records are published to a log group, and each network interface has a unique log stream in the log group. When publishing to Amazon S3, flow log records for all of the monitored network interfaces are published to a single log file object that is stored in the specified bucket.
    For more information, see VPC Flow Logs in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_flow_logs(
        DryRun=True|False,
        ClientToken='string',
        DeliverLogsPermissionArn='string',
        LogGroupName='string',
        ResourceIds=[
            'string',
        ],
        ResourceType='VPC'|'Subnet'|'NetworkInterface',
        TrafficType='ACCEPT'|'REJECT'|'ALL',
        LogDestinationType='cloud-watch-logs'|'s3',
        LogDestination='string',
        LogFormat='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        MaxAggregationInterval=123
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .

    :type DeliverLogsPermissionArn: string
    :param DeliverLogsPermissionArn: The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.\nIf you specify LogDestinationType as s3 , do not specify DeliverLogsPermissionArn or LogGroupName .\n

    :type LogGroupName: string
    :param LogGroupName: The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.\nIf you specify LogDestinationType as s3 , do not specify DeliverLogsPermissionArn or LogGroupName .\n

    :type ResourceIds: list
    :param ResourceIds: [REQUIRED]\nThe ID of the subnet, network interface, or VPC for which you want to create a flow log.\nConstraints: Maximum of 1000 resources\n\n(string) --\n\n

    :type ResourceType: string
    :param ResourceType: [REQUIRED]\nThe type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property.\n

    :type TrafficType: string
    :param TrafficType: [REQUIRED]\nThe type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.\n

    :type LogDestinationType: string
    :param LogDestinationType: Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify cloud-watch-logs . To publish flow log data to Amazon S3, specify s3 .\nIf you specify LogDestinationType as s3 , do not specify DeliverLogsPermissionArn or LogGroupName .\nDefault: cloud-watch-logs\n

    :type LogDestination: string
    :param LogDestination: Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for LogDestinationType .\nIf LogDestinationType is not specified or cloud-watch-logs , specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish to a log group called my-logs , specify arn:aws:logs:us-east-1:123456789012:log-group:my-logs . Alternatively, use LogGroupName instead.\nIf LogDestinationType is s3 , specify the ARN of the Amazon S3 bucket. You can also specify a subfolder in the bucket. To specify a subfolder in the bucket, use the following ARN format: bucket_ARN/subfolder_name/ . For example, to specify a subfolder named my-logs in a bucket named my-bucket , use the following ARN: arn:aws:s3:::my-bucket/my-logs/ . You cannot use AWSLogs as a subfolder name. This is a reserved term.\n

    :type LogFormat: string
    :param LogFormat: The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see Flow Log Records . If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.\nSpecify the fields using the ${field-id} format, separated by spaces. For the AWS CLI, use single quotation marks (\' \') to surround the parameter value.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the flow logs.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type MaxAggregationInterval: integer
    :param MaxAggregationInterval: The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).\nWhen a network interface is attached to a Nitro-based instance , the aggregation interval is always 60 seconds or less, regardless of the value that you specify.\nDefault: 600\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ClientToken': 'string',
    'FlowLogIds': [
        'string',
    ],
    'Unsuccessful': [
        {
            'Error': {
                'Code': 'string',
                'Message': 'string'
            },
            'ResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --

ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

FlowLogIds (list) --
The IDs of the flow logs.

(string) --


Unsuccessful (list) --
Information about the flow logs that could not be created successfully.

(dict) --
Information about items that were not successfully processed in a batch call.

Error (dict) --
Information about the error.

Code (string) --
The error code.

Message (string) --
The error message accompanying the error code.



ResourceId (string) --
The ID of the resource.












    :return: {
        'ClientToken': 'string',
        'FlowLogIds': [
            'string',
        ],
        'Unsuccessful': [
            {
                'Error': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'ResourceId': 'string'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_fpga_image(DryRun=None, InputStorageLocation=None, LogsStorageLocation=None, Description=None, Name=None, ClientToken=None, TagSpecifications=None):
    """
    Creates an Amazon FPGA Image (AFI) from the specified design checkpoint (DCP).
    The create operation is asynchronous. To verify that the AFI is ready for use, check the output logs.
    An AFI contains the FPGA bitstream that is ready to download to an FPGA. You can securely deploy an AFI on multiple FPGA-accelerated instances. For more information, see the AWS FPGA Hardware Development Kit .
    See also: AWS API Documentation
    
    
    :example: response = client.create_fpga_image(
        DryRun=True|False,
        InputStorageLocation={
            'Bucket': 'string',
            'Key': 'string'
        },
        LogsStorageLocation={
            'Bucket': 'string',
            'Key': 'string'
        },
        Description='string',
        Name='string',
        ClientToken='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InputStorageLocation: dict
    :param InputStorageLocation: [REQUIRED]\nThe location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.\n\nBucket (string) --The name of the S3 bucket.\n\nKey (string) --The key.\n\n\n

    :type LogsStorageLocation: dict
    :param LogsStorageLocation: The location in Amazon S3 for the output logs.\n\nBucket (string) --The name of the S3 bucket.\n\nKey (string) --The key.\n\n\n

    :type Description: string
    :param Description: A description for the AFI.

    :type Name: string
    :param Name: A name for the AFI.

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the FPGA image during creation.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'FpgaImageId': 'string',
    'FpgaImageGlobalId': 'string'
}


Response Structure

(dict) --

FpgaImageId (string) --
The FPGA image identifier (AFI ID).

FpgaImageGlobalId (string) --
The global FPGA image identifier (AGFI ID).








    :return: {
        'FpgaImageId': 'string',
        'FpgaImageGlobalId': 'string'
    }
    
    
    """
    pass

def create_image(BlockDeviceMappings=None, Description=None, DryRun=None, InstanceId=None, Name=None, NoReboot=None):
    """
    Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped.
    If you customized your instance with instance store volumes or EBS volumes in addition to the root device volume, the new AMI contains block device mapping information for those volumes. When you launch an instance from this new AMI, the instance automatically launches with those additional volumes.
    For more information, see Creating Amazon EBS-Backed Linux AMIs in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates an AMI from the specified instance and adds an EBS volume with the device name /dev/sdh and an instance store volume with the device name /dev/sdc.
    Expected Output:
    
    :example: response = client.create_image(
        BlockDeviceMappings=[
            {
                'DeviceName': 'string',
                'VirtualName': 'string',
                'Ebs': {
                    'DeleteOnTermination': True|False,
                    'Iops': 123,
                    'SnapshotId': 'string',
                    'VolumeSize': 123,
                    'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                    'KmsKeyId': 'string',
                    'Encrypted': True|False
                },
                'NoDevice': 'string'
            },
        ],
        Description='string',
        DryRun=True|False,
        InstanceId='string',
        Name='string',
        NoReboot=True|False
    )
    
    
    :type BlockDeviceMappings: list
    :param BlockDeviceMappings: The block device mappings. This parameter cannot be used to modify the encryption status of existing volumes or snapshots. To create an AMI with encrypted snapshots, use the CopyImage action.\n\n(dict) --Describes a block device mapping.\n\nDeviceName (string) --The device name (for example, /dev/sdh or xvdh ).\n\nVirtualName (string) --The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\nNVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.\nConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\n\nEbs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.\n\nDeleteOnTermination (boolean) --Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.\n\nIops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nConstraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nCondition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.\n\nSnapshotId (string) --The ID of the snapshot.\n\nVolumeSize (integer) --The size of the volume, in GiB.\nDefault: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.\nConstraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.\n\nVolumeType (string) --The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.\nDefault: gp2\n\nKmsKeyId (string) --Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\nThis parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .\n\nEncrypted (boolean) --Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .\nIn no case can you remove encryption from an encrypted volume.\nEncrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .\nThis parameter is not returned by .\n\n\n\nNoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.\n\n\n\n\n

    :type Description: string
    :param Description: A description for the new image.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type Name: string
    :param Name: [REQUIRED]\nA name for the new image.\nConstraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes (\'), at-signs (@), or underscores(_)\n

    :type NoReboot: boolean
    :param NoReboot: By default, Amazon EC2 attempts to shut down and reboot the instance before creating the image. If the \'No Reboot\' option is set, Amazon EC2 doesn\'t shut down the instance before creating the image. When this option is used, file system integrity on the created image can\'t be guaranteed.

    :rtype: dict

ReturnsResponse Syntax
{
    'ImageId': 'string'
}


Response Structure

(dict) --

ImageId (string) --
The ID of the new AMI.







Examples
This example creates an AMI from the specified instance and adds an EBS volume with the device name /dev/sdh and an instance store volume with the device name /dev/sdc.
response = client.create_image(
    BlockDeviceMappings=[
        {
            'DeviceName': '/dev/sdh',
            'Ebs': {
                'VolumeSize': '100',
            },
        },
        {
            'DeviceName': '/dev/sdc',
            'VirtualName': 'ephemeral1',
        },
    ],
    Description='An AMI for my server',
    InstanceId='i-1234567890abcdef0',
    Name='My server',
    NoReboot=True,
)

print(response)


Expected Output:
{
    'ImageId': 'ami-1a2b3c4d',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'ImageId': 'string'
    }
    
    
    """
    pass

def create_instance_export_task(Description=None, ExportToS3Task=None, InstanceId=None, TargetEnvironment=None):
    """
    Exports a running or stopped instance to an S3 bucket.
    For information about the supported operating systems, image formats, and known limitations for the types of instances you can export, see Exporting an Instance as a VM Using VM Import/Export in the VM Import/Export User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_instance_export_task(
        Description='string',
        ExportToS3Task={
            'ContainerFormat': 'ova',
            'DiskImageFormat': 'VMDK'|'RAW'|'VHD',
            'S3Bucket': 'string',
            'S3Prefix': 'string'
        },
        InstanceId='string',
        TargetEnvironment='citrix'|'vmware'|'microsoft'
    )
    
    
    :type Description: string
    :param Description: A description for the conversion task or the resource being exported. The maximum length is 255 bytes.

    :type ExportToS3Task: dict
    :param ExportToS3Task: The format and location for an instance export task.\n\nContainerFormat (string) --The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.\n\nDiskImageFormat (string) --The format for the exported image.\n\nS3Bucket (string) --The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account vm-import-export@amazon.com .\n\nS3Prefix (string) --The image is written to a single object in the S3 bucket at the S3 key s3prefix + exportTaskId + \'.\' + diskImageFormat.\n\n\n

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type TargetEnvironment: string
    :param TargetEnvironment: The target virtualization environment.

    :rtype: dict

ReturnsResponse Syntax
{
    'ExportTask': {
        'Description': 'string',
        'ExportTaskId': 'string',
        'ExportToS3Task': {
            'ContainerFormat': 'ova',
            'DiskImageFormat': 'VMDK'|'RAW'|'VHD',
            'S3Bucket': 'string',
            'S3Key': 'string'
        },
        'InstanceExportDetails': {
            'InstanceId': 'string',
            'TargetEnvironment': 'citrix'|'vmware'|'microsoft'
        },
        'State': 'active'|'cancelling'|'cancelled'|'completed',
        'StatusMessage': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

ExportTask (dict) --
Information about the instance export task.

Description (string) --
A description of the resource being exported.

ExportTaskId (string) --
The ID of the export task.

ExportToS3Task (dict) --
Information about the export task.

ContainerFormat (string) --
The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.

DiskImageFormat (string) --
The format for the exported image.

S3Bucket (string) --
The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account vm-import-export@amazon.com .

S3Key (string) --
The encryption key for your S3 bucket.



InstanceExportDetails (dict) --
Information about the instance to export.

InstanceId (string) --
The ID of the resource being exported.

TargetEnvironment (string) --
The target virtualization environment.



State (string) --
The state of the export task.

StatusMessage (string) --
The status message related to the export task.

Tags (list) --
The tags for the export task.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'ExportTask': {
            'Description': 'string',
            'ExportTaskId': 'string',
            'ExportToS3Task': {
                'ContainerFormat': 'ova',
                'DiskImageFormat': 'VMDK'|'RAW'|'VHD',
                'S3Bucket': 'string',
                'S3Key': 'string'
            },
            'InstanceExportDetails': {
                'InstanceId': 'string',
                'TargetEnvironment': 'citrix'|'vmware'|'microsoft'
            },
            'State': 'active'|'cancelling'|'cancelled'|'completed',
            'StatusMessage': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_internet_gateway(DryRun=None):
    """
    Creates an internet gateway for use with a VPC. After creating the internet gateway, you attach it to a VPC using  AttachInternetGateway .
    For more information about your VPC and internet gateway, see the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates an Internet gateway.
    Expected Output:
    
    :example: response = client.create_internet_gateway(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'InternetGateway': {
        'Attachments': [
            {
                'State': 'attaching'|'attached'|'detaching'|'detached',
                'VpcId': 'string'
            },
        ],
        'InternetGatewayId': 'string',
        'OwnerId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --
InternetGateway (dict) --Information about the internet gateway.

Attachments (list) --Any VPCs attached to the internet gateway.

(dict) --Describes the attachment of a VPC to an internet gateway or an egress-only internet gateway.

State (string) --The current state of the attachment. For an internet gateway, the state is available when attached to a VPC; otherwise, this value is not returned.

VpcId (string) --The ID of the VPC.





InternetGatewayId (string) --The ID of the internet gateway.

OwnerId (string) --The ID of the AWS account that owns the internet gateway.

Tags (list) --Any tags assigned to the internet gateway.

(dict) --Describes a tag.

Key (string) --The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.












Examples
This example creates an Internet gateway.
response = client.create_internet_gateway(
)

print(response)


Expected Output:
{
    'InternetGateway': {
        'Attachments': [
        ],
        'InternetGatewayId': 'igw-c0a643a9',
        'Tags': [
        ],
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'InternetGateway': {
            'Attachments': [
                {
                    'State': 'attaching'|'attached'|'detaching'|'detached',
                    'VpcId': 'string'
                },
            ],
            'InternetGatewayId': 'string',
            'OwnerId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_key_pair(KeyName=None, DryRun=None, TagSpecifications=None):
    """
    Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public key and displays the private key for you to save to a file. The private key is returned as an unencrypted PEM encoded PKCS#1 private key. If a key with the specified name already exists, Amazon EC2 returns an error.
    You can have up to five thousand key pairs per Region.
    The key pair returned to you is available only in the Region in which you create it. If you prefer, you can create your own key pair using a third-party tool and upload it to any Region using  ImportKeyPair .
    For more information, see Key Pairs in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a key pair named my-key-pair.
    Expected Output:
    
    :example: response = client.create_key_pair(
        KeyName='string',
        DryRun=True|False,
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type KeyName: string
    :param KeyName: [REQUIRED]\nA unique name for the key pair.\nConstraints: Up to 255 ASCII characters\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the new key pair.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'KeyFingerprint': 'string',
    'KeyMaterial': 'string',
    'KeyName': 'string',
    'KeyPairId': 'string',
    'Tags': [
        {
            'Key': 'string',
            'Value': 'string'
        },
    ]
}


Response Structure

(dict) --
Describes a key pair.

KeyFingerprint (string) --
The SHA-1 digest of the DER encoded private key.

KeyMaterial (string) --
An unencrypted PEM encoded RSA private key.

KeyName (string) --
The name of the key pair.

KeyPairId (string) --
The ID of the key pair.

Tags (list) --
Any tags applied to the key pair.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.











Examples
This example creates a key pair named my-key-pair.
response = client.create_key_pair(
    KeyName='my-key-pair',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'KeyFingerprint': 'string',
        'KeyMaterial': 'string',
        'KeyName': 'string',
        'KeyPairId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
    
    
    """
    pass

def create_launch_template(DryRun=None, ClientToken=None, LaunchTemplateName=None, VersionDescription=None, LaunchTemplateData=None, TagSpecifications=None):
    """
    Creates a launch template. A launch template contains the parameters to launch an instance. When you launch an instance using  RunInstances , you can specify a launch template instead of providing the launch parameters in the request. For more information, see Launching an instance from a launch template in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a launch template that specifies the subnet in which to launch the instance, assigns a public IP address and an IPv6 address to the instance, and creates a tag for the instance.
    Expected Output:
    
    :example: response = client.create_launch_template(
        DryRun=True|False,
        ClientToken='string',
        LaunchTemplateName='string',
        VersionDescription='string',
        LaunchTemplateData={
            'KernelId': 'string',
            'EbsOptimized': True|False,
            'IamInstanceProfile': {
                'Arn': 'string',
                'Name': 'string'
            },
            'BlockDeviceMappings': [
                {
                    'DeviceName': 'string',
                    'VirtualName': 'string',
                    'Ebs': {
                        'Encrypted': True|False,
                        'DeleteOnTermination': True|False,
                        'Iops': 123,
                        'KmsKeyId': 'string',
                        'SnapshotId': 'string',
                        'VolumeSize': 123,
                        'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1'
                    },
                    'NoDevice': 'string'
                },
            ],
            'NetworkInterfaces': [
                {
                    'AssociatePublicIpAddress': True|False,
                    'DeleteOnTermination': True|False,
                    'Description': 'string',
                    'DeviceIndex': 123,
                    'Groups': [
                        'string',
                    ],
                    'InterfaceType': 'string',
                    'Ipv6AddressCount': 123,
                    'Ipv6Addresses': [
                        {
                            'Ipv6Address': 'string'
                        },
                    ],
                    'NetworkInterfaceId': 'string',
                    'PrivateIpAddress': 'string',
                    'PrivateIpAddresses': [
                        {
                            'Primary': True|False,
                            'PrivateIpAddress': 'string'
                        },
                    ],
                    'SecondaryPrivateIpAddressCount': 123,
                    'SubnetId': 'string'
                },
            ],
            'ImageId': 'string',
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'KeyName': 'string',
            'Monitoring': {
                'Enabled': True|False
            },
            'Placement': {
                'AvailabilityZone': 'string',
                'Affinity': 'string',
                'GroupName': 'string',
                'HostId': 'string',
                'Tenancy': 'default'|'dedicated'|'host',
                'SpreadDomain': 'string',
                'HostResourceGroupArn': 'string',
                'PartitionNumber': 123
            },
            'RamDiskId': 'string',
            'DisableApiTermination': True|False,
            'InstanceInitiatedShutdownBehavior': 'stop'|'terminate',
            'UserData': 'string',
            'TagSpecifications': [
                {
                    'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                    'Tags': [
                        {
                            'Key': 'string',
                            'Value': 'string'
                        },
                    ]
                },
            ],
            'ElasticGpuSpecifications': [
                {
                    'Type': 'string'
                },
            ],
            'ElasticInferenceAccelerators': [
                {
                    'Type': 'string',
                    'Count': 123
                },
            ],
            'SecurityGroupIds': [
                'string',
            ],
            'SecurityGroups': [
                'string',
            ],
            'InstanceMarketOptions': {
                'MarketType': 'spot',
                'SpotOptions': {
                    'MaxPrice': 'string',
                    'SpotInstanceType': 'one-time'|'persistent',
                    'BlockDurationMinutes': 123,
                    'ValidUntil': datetime(2015, 1, 1),
                    'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
                }
            },
            'CreditSpecification': {
                'CpuCredits': 'string'
            },
            'CpuOptions': {
                'CoreCount': 123,
                'ThreadsPerCore': 123
            },
            'CapacityReservationSpecification': {
                'CapacityReservationPreference': 'open'|'none',
                'CapacityReservationTarget': {
                    'CapacityReservationId': 'string'
                }
            },
            'LicenseSpecifications': [
                {
                    'LicenseConfigurationArn': 'string'
                },
            ],
            'HibernationOptions': {
                'Configured': True|False
            },
            'MetadataOptions': {
                'HttpTokens': 'optional'|'required',
                'HttpPutResponseHopLimit': 123,
                'HttpEndpoint': 'disabled'|'enabled'
            }
        },
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .\nConstraint: Maximum 128 ASCII characters.\n

    :type LaunchTemplateName: string
    :param LaunchTemplateName: [REQUIRED]\nA name for the launch template.\n

    :type VersionDescription: string
    :param VersionDescription: A description for the first version of the launch template.

    :type LaunchTemplateData: dict
    :param LaunchTemplateData: [REQUIRED]\nThe information for the launch template.\n\nKernelId (string) --The ID of the kernel.\n\nWarning\nWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see User Provided Kernels in the Amazon Elastic Compute Cloud User Guide .\n\n\nEbsOptimized (boolean) --Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\n\nIamInstanceProfile (dict) --The IAM instance profile.\n\nArn (string) --The Amazon Resource Name (ARN) of the instance profile.\n\nName (string) --The name of the instance profile.\n\n\n\nBlockDeviceMappings (list) --The block device mapping.\n\n(dict) --Describes a block device mapping.\n\nDeviceName (string) --The device name (for example, /dev/sdh or xvdh).\n\nVirtualName (string) --The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\n\nEbs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.\n\nEncrypted (boolean) --Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can\'t specify an encryption value.\n\nDeleteOnTermination (boolean) --Indicates whether the EBS volume is deleted on instance termination.\n\nIops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1, this represents the number of IOPS that are provisioned for the volume. For gp2, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about General Purpose SSD baseline performance, I/O credits, and bursting, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nCondition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2, st1, sc1, or standard volumes.\n\nKmsKeyId (string) --The ARN of the symmetric AWS Key Management Service (AWS KMS) CMK used for encryption.\n\nSnapshotId (string) --The ID of the snapshot.\n\nVolumeSize (integer) --The size of the volume, in GiB.\nDefault: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.\n\nVolumeType (string) --The volume type.\n\n\n\nNoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.\n\n\n\n\n\nNetworkInterfaces (list) --One or more network interfaces. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.\n\n(dict) --The parameters for a network interface.\n\nAssociatePublicIpAddress (boolean) --Associates a public IPv4 address with eth0 for a new network interface.\n\nDeleteOnTermination (boolean) --Indicates whether the network interface is deleted when the instance is terminated.\n\nDescription (string) --A description for the network interface.\n\nDeviceIndex (integer) --The device index for the network interface attachment.\n\nGroups (list) --The IDs of one or more security groups.\n\n(string) --\n\n\nInterfaceType (string) --The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .\nIf you are not creating an EFA, specify interface or omit this parameter.\nValid values: interface | efa\n\nIpv6AddressCount (integer) --The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can\'t use this option if specifying specific IPv6 addresses.\n\nIpv6Addresses (list) --One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can\'t use this option if you\'re specifying a number of IPv6 addresses.\n\n(dict) --Describes an IPv6 address.\n\nIpv6Address (string) --The IPv6 address.\n\n\n\n\n\nNetworkInterfaceId (string) --The ID of the network interface.\n\nPrivateIpAddress (string) --The primary private IPv4 address of the network interface.\n\nPrivateIpAddresses (list) --One or more private IPv4 addresses.\n\n(dict) --Describes a secondary private IPv4 address for a network interface.\n\nPrimary (boolean) --Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n\nPrivateIpAddress (string) --The private IPv4 addresses.\n\n\n\n\n\nSecondaryPrivateIpAddressCount (integer) --The number of secondary private IPv4 addresses to assign to a network interface.\n\nSubnetId (string) --The ID of the subnet for the network interface.\n\n\n\n\n\nImageId (string) --The ID of the AMI.\n\nInstanceType (string) --The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .\n\nKeyName (string) --The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair .\n\nWarning\nIf you do not specify a key pair, you can\'t connect to the instance unless you choose an AMI that is configured to allow users another way to log in.\n\n\nMonitoring (dict) --The monitoring for the instance.\n\nEnabled (boolean) --Specify true to enable detailed monitoring. Otherwise, basic monitoring is enabled.\n\n\n\nPlacement (dict) --The placement for the instance.\n\nAvailabilityZone (string) --The Availability Zone for the instance.\n\nAffinity (string) --The affinity setting for an instance on a Dedicated Host.\n\nGroupName (string) --The name of the placement group for the instance.\n\nHostId (string) --The ID of the Dedicated Host for the instance.\n\nTenancy (string) --The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.\n\nSpreadDomain (string) --Reserved for future use.\n\nHostResourceGroupArn (string) --The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host .\n\nPartitionNumber (integer) --The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition .\n\n\n\nRamDiskId (string) --The ID of the RAM disk.\n\nWarning\nWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see User Provided Kernels in the Amazon Elastic Compute Cloud User Guide .\n\n\nDisableApiTermination (boolean) --If you set this parameter to true , you can\'t terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute . Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate , you can terminate the instance by running the shutdown command from the instance.\n\nInstanceInitiatedShutdownBehavior (string) --Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\nDefault: stop\n\nUserData (string) --The Base64-encoded user data to make available to the instance. For more information, see Running Commands on Your Linux Instance at Launch (Linux) and Adding User Data (Windows).\n\nTagSpecifications (list) --The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .\n\n(dict) --The tags specification for the launch template.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are instance and volume . To tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n\nElasticGpuSpecifications (list) --An elastic GPU to associate with the instance.\n\n(dict) --A specification for an Elastic Graphics accelerator.\n\nType (string) -- [REQUIRED]The type of Elastic Graphics accelerator. For more information about the values to specify for Type , see Elastic Graphics Basics , specifically the Elastic Graphics accelerator column, in the Amazon Elastic Compute Cloud User Guide for Windows Instances .\n\n\n\n\n\nElasticInferenceAccelerators (list) --The elastic inference accelerator for the instance.\n\n(dict) --Describes an elastic inference accelerator.\n\nType (string) -- [REQUIRED]The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.\n\nCount (integer) --The number of elastic inference accelerators to attach to the instance.\nDefault: 1\n\n\n\n\n\nSecurityGroupIds (list) --One or more security group IDs. You can create a security group using CreateSecurityGroup . You cannot specify both a security group ID and security name in the same request.\n\n(string) --\n\n\nSecurityGroups (list) --[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead. You cannot specify both a security group ID and security name in the same request.\n\n(string) --\n\n\nInstanceMarketOptions (dict) --The market (purchasing) option for the instances.\n\nMarketType (string) --The market type.\n\nSpotOptions (dict) --The options for Spot Instances.\n\nMaxPrice (string) --The maximum hourly price you\'re willing to pay for the Spot Instances.\n\nSpotInstanceType (string) --The Spot Instance request type.\n\nBlockDurationMinutes (integer) --The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).\n\nValidUntil (datetime) --The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date.\n\nInstanceInterruptionBehavior (string) --The behavior when a Spot Instance is interrupted. The default is terminate .\n\n\n\n\n\nCreditSpecification (dict) --The credit option for CPU usage of the instance. Valid for T2 or T3 instances only.\n\nCpuCredits (string) -- [REQUIRED]The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited .\n\n\n\nCpuOptions (dict) --The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide .\n\nCoreCount (integer) --The number of CPU cores for the instance.\n\nThreadsPerCore (integer) --The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.\n\n\n\nCapacityReservationSpecification (dict) --The Capacity Reservation targeting option. If you do not specify this parameter, the instance\'s Capacity Reservation preference defaults to open , which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\n\nCapacityReservationPreference (string) --Indicates the instance\'s Capacity Reservation preferences. Possible preferences include:\n\nopen - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\nnone - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.\n\n\nCapacityReservationTarget (dict) --Information about the target Capacity Reservation.\n\nCapacityReservationId (string) --The ID of the Capacity Reservation.\n\n\n\n\n\nLicenseSpecifications (list) --The license configurations.\n\n(dict) --Describes a license configuration.\n\nLicenseConfigurationArn (string) --The Amazon Resource Name (ARN) of the license configuration.\n\n\n\n\n\nHibernationOptions (dict) --Indicates whether an instance is enabled for hibernation. This parameter is valid only if the instance meets the hibernation prerequisites . For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide .\n\nConfigured (boolean) --If you set this parameter to true , the instance is enabled for hibernation.\nDefault: false\n\n\n\nMetadataOptions (dict) --The metadata options for the instance. For more information, see Instance Metadata and User Data in the Amazon Elastic Compute Cloud User Guide .\n\nHttpTokens (string) --The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .\nIf the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.\nIf the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.\n\nHttpPutResponseHopLimit (integer) --The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.\nDefault: 1\nPossible values: Integers from 1 to 64\n\nHttpEndpoint (string) --This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .\n\nNote\nIf you specify a value of disabled , you will not be able to access your instance metadata.\n\n\n\n\n\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the launch template during creation.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'LaunchTemplate': {
        'LaunchTemplateId': 'string',
        'LaunchTemplateName': 'string',
        'CreateTime': datetime(2015, 1, 1),
        'CreatedBy': 'string',
        'DefaultVersionNumber': 123,
        'LatestVersionNumber': 123,
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    },
    'Warning': {
        'Errors': [
            {
                'Code': 'string',
                'Message': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

LaunchTemplate (dict) --
Information about the launch template.

LaunchTemplateId (string) --
The ID of the launch template.

LaunchTemplateName (string) --
The name of the launch template.

CreateTime (datetime) --
The time launch template was created.

CreatedBy (string) --
The principal that created the launch template.

DefaultVersionNumber (integer) --
The version number of the default version of the launch template.

LatestVersionNumber (integer) --
The version number of the latest version of the launch template.

Tags (list) --
The tags for the launch template.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.







Warning (dict) --
If the launch template contains parameters or parameter combinations that are not valid, an error code and an error message are returned for each issue that\'s found.

Errors (list) --
The error codes and error messages.

(dict) --
The error code and error message that is returned for a parameter or parameter combination that is not valid when a new launch template or new version of a launch template is created.

Code (string) --
The error code that indicates why the parameter or parameter combination is not valid. For more information about error codes, see Error Codes .

Message (string) --
The error message that describes why the parameter or parameter combination is not valid. For more information about error messages, see Error Codes .













Examples
This example creates a launch template that specifies the subnet in which to launch the instance, assigns a public IP address and an IPv6 address to the instance, and creates a tag for the instance.
response = client.create_launch_template(
    LaunchTemplateData={
        'ImageId': 'ami-8c1be5f6',
        'InstanceType': 't2.small',
        'NetworkInterfaces': [
            {
                'AssociatePublicIpAddress': True,
                'DeviceIndex': 0,
                'Ipv6AddressCount': 1,
                'SubnetId': 'subnet-7b16de0c',
            },
        ],
        'TagSpecifications': [
            {
                'ResourceType': 'instance',
                'Tags': [
                    {
                        'Key': 'Name',
                        'Value': 'webserver',
                    },
                ],
            },
        ],
    },
    LaunchTemplateName='my-template',
    VersionDescription='WebVersion1',
)

print(response)


Expected Output:
{
    'LaunchTemplate': {
        'CreateTime': datetime(2017, 11, 27, 9, 13, 24, 0, 331, 0),
        'CreatedBy': 'arn:aws:iam::123456789012:root',
        'DefaultVersionNumber': 1,
        'LatestVersionNumber': 1,
        'LaunchTemplateId': 'lt-01238c059e3466abc',
        'LaunchTemplateName': 'my-template',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'LaunchTemplate': {
            'LaunchTemplateId': 'string',
            'LaunchTemplateName': 'string',
            'CreateTime': datetime(2015, 1, 1),
            'CreatedBy': 'string',
            'DefaultVersionNumber': 123,
            'LatestVersionNumber': 123,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
        'Warning': {
            'Errors': [
                {
                    'Code': 'string',
                    'Message': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_launch_template_version(DryRun=None, ClientToken=None, LaunchTemplateId=None, LaunchTemplateName=None, SourceVersion=None, VersionDescription=None, LaunchTemplateData=None):
    """
    Creates a new version for a launch template. You can specify an existing version of launch template from which to base the new version.
    Launch template versions are numbered in the order in which they are created. You cannot specify, change, or replace the numbering of launch template versions.
    For more information, see Managing launch template versions in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a new launch template version based on version 1 of the specified launch template and specifies a different AMI ID.
    Expected Output:
    
    :example: response = client.create_launch_template_version(
        DryRun=True|False,
        ClientToken='string',
        LaunchTemplateId='string',
        LaunchTemplateName='string',
        SourceVersion='string',
        VersionDescription='string',
        LaunchTemplateData={
            'KernelId': 'string',
            'EbsOptimized': True|False,
            'IamInstanceProfile': {
                'Arn': 'string',
                'Name': 'string'
            },
            'BlockDeviceMappings': [
                {
                    'DeviceName': 'string',
                    'VirtualName': 'string',
                    'Ebs': {
                        'Encrypted': True|False,
                        'DeleteOnTermination': True|False,
                        'Iops': 123,
                        'KmsKeyId': 'string',
                        'SnapshotId': 'string',
                        'VolumeSize': 123,
                        'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1'
                    },
                    'NoDevice': 'string'
                },
            ],
            'NetworkInterfaces': [
                {
                    'AssociatePublicIpAddress': True|False,
                    'DeleteOnTermination': True|False,
                    'Description': 'string',
                    'DeviceIndex': 123,
                    'Groups': [
                        'string',
                    ],
                    'InterfaceType': 'string',
                    'Ipv6AddressCount': 123,
                    'Ipv6Addresses': [
                        {
                            'Ipv6Address': 'string'
                        },
                    ],
                    'NetworkInterfaceId': 'string',
                    'PrivateIpAddress': 'string',
                    'PrivateIpAddresses': [
                        {
                            'Primary': True|False,
                            'PrivateIpAddress': 'string'
                        },
                    ],
                    'SecondaryPrivateIpAddressCount': 123,
                    'SubnetId': 'string'
                },
            ],
            'ImageId': 'string',
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'KeyName': 'string',
            'Monitoring': {
                'Enabled': True|False
            },
            'Placement': {
                'AvailabilityZone': 'string',
                'Affinity': 'string',
                'GroupName': 'string',
                'HostId': 'string',
                'Tenancy': 'default'|'dedicated'|'host',
                'SpreadDomain': 'string',
                'HostResourceGroupArn': 'string',
                'PartitionNumber': 123
            },
            'RamDiskId': 'string',
            'DisableApiTermination': True|False,
            'InstanceInitiatedShutdownBehavior': 'stop'|'terminate',
            'UserData': 'string',
            'TagSpecifications': [
                {
                    'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                    'Tags': [
                        {
                            'Key': 'string',
                            'Value': 'string'
                        },
                    ]
                },
            ],
            'ElasticGpuSpecifications': [
                {
                    'Type': 'string'
                },
            ],
            'ElasticInferenceAccelerators': [
                {
                    'Type': 'string',
                    'Count': 123
                },
            ],
            'SecurityGroupIds': [
                'string',
            ],
            'SecurityGroups': [
                'string',
            ],
            'InstanceMarketOptions': {
                'MarketType': 'spot',
                'SpotOptions': {
                    'MaxPrice': 'string',
                    'SpotInstanceType': 'one-time'|'persistent',
                    'BlockDurationMinutes': 123,
                    'ValidUntil': datetime(2015, 1, 1),
                    'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
                }
            },
            'CreditSpecification': {
                'CpuCredits': 'string'
            },
            'CpuOptions': {
                'CoreCount': 123,
                'ThreadsPerCore': 123
            },
            'CapacityReservationSpecification': {
                'CapacityReservationPreference': 'open'|'none',
                'CapacityReservationTarget': {
                    'CapacityReservationId': 'string'
                }
            },
            'LicenseSpecifications': [
                {
                    'LicenseConfigurationArn': 'string'
                },
            ],
            'HibernationOptions': {
                'Configured': True|False
            },
            'MetadataOptions': {
                'HttpTokens': 'optional'|'required',
                'HttpPutResponseHopLimit': 123,
                'HttpEndpoint': 'disabled'|'enabled'
            }
        }
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .\nConstraint: Maximum 128 ASCII characters.\n

    :type LaunchTemplateId: string
    :param LaunchTemplateId: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.

    :type LaunchTemplateName: string
    :param LaunchTemplateName: The name of the launch template. You must specify either the launch template ID or launch template name in the request.

    :type SourceVersion: string
    :param SourceVersion: The version number of the launch template version on which to base the new version. The new version inherits the same launch parameters as the source version, except for parameters that you specify in LaunchTemplateData . Snapshots applied to the block device mapping are ignored when creating a new version unless they are explicitly included.

    :type VersionDescription: string
    :param VersionDescription: A description for the version of the launch template.

    :type LaunchTemplateData: dict
    :param LaunchTemplateData: [REQUIRED]\nThe information for the launch template.\n\nKernelId (string) --The ID of the kernel.\n\nWarning\nWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see User Provided Kernels in the Amazon Elastic Compute Cloud User Guide .\n\n\nEbsOptimized (boolean) --Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\n\nIamInstanceProfile (dict) --The IAM instance profile.\n\nArn (string) --The Amazon Resource Name (ARN) of the instance profile.\n\nName (string) --The name of the instance profile.\n\n\n\nBlockDeviceMappings (list) --The block device mapping.\n\n(dict) --Describes a block device mapping.\n\nDeviceName (string) --The device name (for example, /dev/sdh or xvdh).\n\nVirtualName (string) --The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\n\nEbs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.\n\nEncrypted (boolean) --Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can\'t specify an encryption value.\n\nDeleteOnTermination (boolean) --Indicates whether the EBS volume is deleted on instance termination.\n\nIops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1, this represents the number of IOPS that are provisioned for the volume. For gp2, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about General Purpose SSD baseline performance, I/O credits, and bursting, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nCondition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2, st1, sc1, or standard volumes.\n\nKmsKeyId (string) --The ARN of the symmetric AWS Key Management Service (AWS KMS) CMK used for encryption.\n\nSnapshotId (string) --The ID of the snapshot.\n\nVolumeSize (integer) --The size of the volume, in GiB.\nDefault: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.\n\nVolumeType (string) --The volume type.\n\n\n\nNoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.\n\n\n\n\n\nNetworkInterfaces (list) --One or more network interfaces. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.\n\n(dict) --The parameters for a network interface.\n\nAssociatePublicIpAddress (boolean) --Associates a public IPv4 address with eth0 for a new network interface.\n\nDeleteOnTermination (boolean) --Indicates whether the network interface is deleted when the instance is terminated.\n\nDescription (string) --A description for the network interface.\n\nDeviceIndex (integer) --The device index for the network interface attachment.\n\nGroups (list) --The IDs of one or more security groups.\n\n(string) --\n\n\nInterfaceType (string) --The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .\nIf you are not creating an EFA, specify interface or omit this parameter.\nValid values: interface | efa\n\nIpv6AddressCount (integer) --The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can\'t use this option if specifying specific IPv6 addresses.\n\nIpv6Addresses (list) --One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can\'t use this option if you\'re specifying a number of IPv6 addresses.\n\n(dict) --Describes an IPv6 address.\n\nIpv6Address (string) --The IPv6 address.\n\n\n\n\n\nNetworkInterfaceId (string) --The ID of the network interface.\n\nPrivateIpAddress (string) --The primary private IPv4 address of the network interface.\n\nPrivateIpAddresses (list) --One or more private IPv4 addresses.\n\n(dict) --Describes a secondary private IPv4 address for a network interface.\n\nPrimary (boolean) --Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n\nPrivateIpAddress (string) --The private IPv4 addresses.\n\n\n\n\n\nSecondaryPrivateIpAddressCount (integer) --The number of secondary private IPv4 addresses to assign to a network interface.\n\nSubnetId (string) --The ID of the subnet for the network interface.\n\n\n\n\n\nImageId (string) --The ID of the AMI.\n\nInstanceType (string) --The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .\n\nKeyName (string) --The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair .\n\nWarning\nIf you do not specify a key pair, you can\'t connect to the instance unless you choose an AMI that is configured to allow users another way to log in.\n\n\nMonitoring (dict) --The monitoring for the instance.\n\nEnabled (boolean) --Specify true to enable detailed monitoring. Otherwise, basic monitoring is enabled.\n\n\n\nPlacement (dict) --The placement for the instance.\n\nAvailabilityZone (string) --The Availability Zone for the instance.\n\nAffinity (string) --The affinity setting for an instance on a Dedicated Host.\n\nGroupName (string) --The name of the placement group for the instance.\n\nHostId (string) --The ID of the Dedicated Host for the instance.\n\nTenancy (string) --The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.\n\nSpreadDomain (string) --Reserved for future use.\n\nHostResourceGroupArn (string) --The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host .\n\nPartitionNumber (integer) --The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition .\n\n\n\nRamDiskId (string) --The ID of the RAM disk.\n\nWarning\nWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see User Provided Kernels in the Amazon Elastic Compute Cloud User Guide .\n\n\nDisableApiTermination (boolean) --If you set this parameter to true , you can\'t terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute . Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate , you can terminate the instance by running the shutdown command from the instance.\n\nInstanceInitiatedShutdownBehavior (string) --Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\nDefault: stop\n\nUserData (string) --The Base64-encoded user data to make available to the instance. For more information, see Running Commands on Your Linux Instance at Launch (Linux) and Adding User Data (Windows).\n\nTagSpecifications (list) --The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .\n\n(dict) --The tags specification for the launch template.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are instance and volume . To tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n\nElasticGpuSpecifications (list) --An elastic GPU to associate with the instance.\n\n(dict) --A specification for an Elastic Graphics accelerator.\n\nType (string) -- [REQUIRED]The type of Elastic Graphics accelerator. For more information about the values to specify for Type , see Elastic Graphics Basics , specifically the Elastic Graphics accelerator column, in the Amazon Elastic Compute Cloud User Guide for Windows Instances .\n\n\n\n\n\nElasticInferenceAccelerators (list) --The elastic inference accelerator for the instance.\n\n(dict) --Describes an elastic inference accelerator.\n\nType (string) -- [REQUIRED]The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.\n\nCount (integer) --The number of elastic inference accelerators to attach to the instance.\nDefault: 1\n\n\n\n\n\nSecurityGroupIds (list) --One or more security group IDs. You can create a security group using CreateSecurityGroup . You cannot specify both a security group ID and security name in the same request.\n\n(string) --\n\n\nSecurityGroups (list) --[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead. You cannot specify both a security group ID and security name in the same request.\n\n(string) --\n\n\nInstanceMarketOptions (dict) --The market (purchasing) option for the instances.\n\nMarketType (string) --The market type.\n\nSpotOptions (dict) --The options for Spot Instances.\n\nMaxPrice (string) --The maximum hourly price you\'re willing to pay for the Spot Instances.\n\nSpotInstanceType (string) --The Spot Instance request type.\n\nBlockDurationMinutes (integer) --The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).\n\nValidUntil (datetime) --The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date.\n\nInstanceInterruptionBehavior (string) --The behavior when a Spot Instance is interrupted. The default is terminate .\n\n\n\n\n\nCreditSpecification (dict) --The credit option for CPU usage of the instance. Valid for T2 or T3 instances only.\n\nCpuCredits (string) -- [REQUIRED]The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited .\n\n\n\nCpuOptions (dict) --The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide .\n\nCoreCount (integer) --The number of CPU cores for the instance.\n\nThreadsPerCore (integer) --The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.\n\n\n\nCapacityReservationSpecification (dict) --The Capacity Reservation targeting option. If you do not specify this parameter, the instance\'s Capacity Reservation preference defaults to open , which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\n\nCapacityReservationPreference (string) --Indicates the instance\'s Capacity Reservation preferences. Possible preferences include:\n\nopen - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\nnone - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.\n\n\nCapacityReservationTarget (dict) --Information about the target Capacity Reservation.\n\nCapacityReservationId (string) --The ID of the Capacity Reservation.\n\n\n\n\n\nLicenseSpecifications (list) --The license configurations.\n\n(dict) --Describes a license configuration.\n\nLicenseConfigurationArn (string) --The Amazon Resource Name (ARN) of the license configuration.\n\n\n\n\n\nHibernationOptions (dict) --Indicates whether an instance is enabled for hibernation. This parameter is valid only if the instance meets the hibernation prerequisites . For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide .\n\nConfigured (boolean) --If you set this parameter to true , the instance is enabled for hibernation.\nDefault: false\n\n\n\nMetadataOptions (dict) --The metadata options for the instance. For more information, see Instance Metadata and User Data in the Amazon Elastic Compute Cloud User Guide .\n\nHttpTokens (string) --The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .\nIf the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.\nIf the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.\n\nHttpPutResponseHopLimit (integer) --The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.\nDefault: 1\nPossible values: Integers from 1 to 64\n\nHttpEndpoint (string) --This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .\n\nNote\nIf you specify a value of disabled , you will not be able to access your instance metadata.\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'LaunchTemplateVersion': {
        'LaunchTemplateId': 'string',
        'LaunchTemplateName': 'string',
        'VersionNumber': 123,
        'VersionDescription': 'string',
        'CreateTime': datetime(2015, 1, 1),
        'CreatedBy': 'string',
        'DefaultVersion': True|False,
        'LaunchTemplateData': {
            'KernelId': 'string',
            'EbsOptimized': True|False,
            'IamInstanceProfile': {
                'Arn': 'string',
                'Name': 'string'
            },
            'BlockDeviceMappings': [
                {
                    'DeviceName': 'string',
                    'VirtualName': 'string',
                    'Ebs': {
                        'Encrypted': True|False,
                        'DeleteOnTermination': True|False,
                        'Iops': 123,
                        'KmsKeyId': 'string',
                        'SnapshotId': 'string',
                        'VolumeSize': 123,
                        'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1'
                    },
                    'NoDevice': 'string'
                },
            ],
            'NetworkInterfaces': [
                {
                    'AssociatePublicIpAddress': True|False,
                    'DeleteOnTermination': True|False,
                    'Description': 'string',
                    'DeviceIndex': 123,
                    'Groups': [
                        'string',
                    ],
                    'InterfaceType': 'string',
                    'Ipv6AddressCount': 123,
                    'Ipv6Addresses': [
                        {
                            'Ipv6Address': 'string'
                        },
                    ],
                    'NetworkInterfaceId': 'string',
                    'PrivateIpAddress': 'string',
                    'PrivateIpAddresses': [
                        {
                            'Primary': True|False,
                            'PrivateIpAddress': 'string'
                        },
                    ],
                    'SecondaryPrivateIpAddressCount': 123,
                    'SubnetId': 'string'
                },
            ],
            'ImageId': 'string',
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'KeyName': 'string',
            'Monitoring': {
                'Enabled': True|False
            },
            'Placement': {
                'AvailabilityZone': 'string',
                'Affinity': 'string',
                'GroupName': 'string',
                'HostId': 'string',
                'Tenancy': 'default'|'dedicated'|'host',
                'SpreadDomain': 'string',
                'HostResourceGroupArn': 'string',
                'PartitionNumber': 123
            },
            'RamDiskId': 'string',
            'DisableApiTermination': True|False,
            'InstanceInitiatedShutdownBehavior': 'stop'|'terminate',
            'UserData': 'string',
            'TagSpecifications': [
                {
                    'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                    'Tags': [
                        {
                            'Key': 'string',
                            'Value': 'string'
                        },
                    ]
                },
            ],
            'ElasticGpuSpecifications': [
                {
                    'Type': 'string'
                },
            ],
            'ElasticInferenceAccelerators': [
                {
                    'Type': 'string',
                    'Count': 123
                },
            ],
            'SecurityGroupIds': [
                'string',
            ],
            'SecurityGroups': [
                'string',
            ],
            'InstanceMarketOptions': {
                'MarketType': 'spot',
                'SpotOptions': {
                    'MaxPrice': 'string',
                    'SpotInstanceType': 'one-time'|'persistent',
                    'BlockDurationMinutes': 123,
                    'ValidUntil': datetime(2015, 1, 1),
                    'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
                }
            },
            'CreditSpecification': {
                'CpuCredits': 'string'
            },
            'CpuOptions': {
                'CoreCount': 123,
                'ThreadsPerCore': 123
            },
            'CapacityReservationSpecification': {
                'CapacityReservationPreference': 'open'|'none',
                'CapacityReservationTarget': {
                    'CapacityReservationId': 'string'
                }
            },
            'LicenseSpecifications': [
                {
                    'LicenseConfigurationArn': 'string'
                },
            ],
            'HibernationOptions': {
                'Configured': True|False
            },
            'MetadataOptions': {
                'State': 'pending'|'applied',
                'HttpTokens': 'optional'|'required',
                'HttpPutResponseHopLimit': 123,
                'HttpEndpoint': 'disabled'|'enabled'
            }
        }
    },
    'Warning': {
        'Errors': [
            {
                'Code': 'string',
                'Message': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

LaunchTemplateVersion (dict) --
Information about the launch template version.

LaunchTemplateId (string) --
The ID of the launch template.

LaunchTemplateName (string) --
The name of the launch template.

VersionNumber (integer) --
The version number.

VersionDescription (string) --
The description for the version.

CreateTime (datetime) --
The time the version was created.

CreatedBy (string) --
The principal that created the version.

DefaultVersion (boolean) --
Indicates whether the version is the default version.

LaunchTemplateData (dict) --
Information about the launch template.

KernelId (string) --
The ID of the kernel, if applicable.

EbsOptimized (boolean) --
Indicates whether the instance is optimized for Amazon EBS I/O.

IamInstanceProfile (dict) --
The IAM instance profile.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Name (string) --
The name of the instance profile.



BlockDeviceMappings (list) --
The block device mappings.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name.

VirtualName (string) --
The virtual device name (ephemeralN).

Ebs (dict) --
Information about the block device for an EBS volume.

Encrypted (boolean) --
Indicates whether the EBS volume is encrypted.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports.

KmsKeyId (string) --
The ARN of the AWS Key Management Service (AWS KMS) CMK used for encryption.

SnapshotId (string) --
The ID of the snapshot.

VolumeSize (integer) --
The size of the volume, in GiB.

VolumeType (string) --
The volume type.



NoDevice (string) --
Suppresses the specified device included in the block device mapping of the AMI.





NetworkInterfaces (list) --
The network interfaces.

(dict) --
Describes a network interface.

AssociatePublicIpAddress (boolean) --
Indicates whether to associate a public IPv4 address with eth0 for a new network interface.

DeleteOnTermination (boolean) --
Indicates whether the network interface is deleted when the instance is terminated.

Description (string) --
A description for the network interface.

DeviceIndex (integer) --
The device index for the network interface attachment.

Groups (list) --
The IDs of one or more security groups.

(string) --


InterfaceType (string) --
The type of network interface.

Ipv6AddressCount (integer) --
The number of IPv6 addresses for the network interface.

Ipv6Addresses (list) --
The IPv6 addresses for the network interface.

(dict) --
Describes an IPv6 address.

Ipv6Address (string) --
The IPv6 address.





NetworkInterfaceId (string) --
The ID of the network interface.

PrivateIpAddress (string) --
The primary private IPv4 address of the network interface.

PrivateIpAddresses (list) --
One or more private IPv4 addresses.

(dict) --
Describes a secondary private IPv4 address for a network interface.

Primary (boolean) --
Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.

PrivateIpAddress (string) --
The private IPv4 addresses.





SecondaryPrivateIpAddressCount (integer) --
The number of secondary private IPv4 addresses for the network interface.

SubnetId (string) --
The ID of the subnet for the network interface.





ImageId (string) --
The ID of the AMI that was used to launch the instance.

InstanceType (string) --
The instance type.

KeyName (string) --
The name of the key pair.

Monitoring (dict) --
The monitoring for the instance.

Enabled (boolean) --
Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.



Placement (dict) --
The placement of the instance.

AvailabilityZone (string) --
The Availability Zone of the instance.

Affinity (string) --
The affinity setting for the instance on the Dedicated Host.

GroupName (string) --
The name of the placement group for the instance.

HostId (string) --
The ID of the Dedicated Host for the instance.

Tenancy (string) --
The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.

SpreadDomain (string) --
Reserved for future use.

HostResourceGroupArn (string) --
The ARN of the host resource group in which to launch the instances.

PartitionNumber (integer) --
The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition .



RamDiskId (string) --
The ID of the RAM disk, if applicable.

DisableApiTermination (boolean) --
If set to true , indicates that the instance cannot be terminated using the Amazon EC2 console, command line tool, or API.

InstanceInitiatedShutdownBehavior (string) --
Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).

UserData (string) --
The user data for the instance.

TagSpecifications (list) --
The tags.

(dict) --
The tag specification for the launch template.

ResourceType (string) --
The type of resource.

Tags (list) --
The tags for the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









ElasticGpuSpecifications (list) --
The elastic GPU specification.

(dict) --
Describes an elastic GPU.

Type (string) --
The elastic GPU type.





ElasticInferenceAccelerators (list) --
The elastic inference accelerator for the instance.

(dict) --
Describes an elastic inference accelerator.

Type (string) --
The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.

Count (integer) --
The number of elastic inference accelerators to attach to the instance.
Default: 1





SecurityGroupIds (list) --
The security group IDs.

(string) --


SecurityGroups (list) --
The security group names.

(string) --


InstanceMarketOptions (dict) --
The market (purchasing) option for the instances.

MarketType (string) --
The market type.

SpotOptions (dict) --
The options for Spot Instances.

MaxPrice (string) --
The maximum hourly price you\'re willing to pay for the Spot Instances.

SpotInstanceType (string) --
The Spot Instance request type.

BlockDurationMinutes (integer) --
The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).

ValidUntil (datetime) --
The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.

InstanceInterruptionBehavior (string) --
The behavior when a Spot Instance is interrupted.





CreditSpecification (dict) --
The credit option for CPU usage of the instance.

CpuCredits (string) --
The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited .



CpuOptions (dict) --
The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide .

CoreCount (integer) --
The number of CPU cores for the instance.

ThreadsPerCore (integer) --
The number of threads per CPU core.



CapacityReservationSpecification (dict) --
Information about the Capacity Reservation targeting option.

CapacityReservationPreference (string) --
Indicates the instance\'s Capacity Reservation preferences. Possible preferences include:

open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.


CapacityReservationTarget (dict) --
Information about the target Capacity Reservation.

CapacityReservationId (string) --
The ID of the Capacity Reservation.





LicenseSpecifications (list) --
The license configurations.

(dict) --
Describes a license configuration.

LicenseConfigurationArn (string) --
The Amazon Resource Name (ARN) of the license configuration.





HibernationOptions (dict) --
Indicates whether an instance is configured for hibernation. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide .

Configured (boolean) --
If this parameter is set to true , the instance is enabled for hibernation; otherwise, it is not enabled for hibernation.



MetadataOptions (dict) --
The metadata options for the instance. For more information, see Instance Metadata and User Data in the Amazon Elastic Compute Cloud User Guide .

State (string) --
The state of the metadata option changes.

pending - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.
applied - The metadata options have been successfully applied on the instance.


HttpTokens (string) --
The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .
If the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.
If the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.

HttpPutResponseHopLimit (integer) --
The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
Default: 1
Possible values: Integers from 1 to 64

HttpEndpoint (string) --
This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .

Note
If you specify a value of disabled , you will not be able to access your instance metadata.








Warning (dict) --
If the new version of the launch template contains parameters or parameter combinations that are not valid, an error code and an error message are returned for each issue that\'s found.

Errors (list) --
The error codes and error messages.

(dict) --
The error code and error message that is returned for a parameter or parameter combination that is not valid when a new launch template or new version of a launch template is created.

Code (string) --
The error code that indicates why the parameter or parameter combination is not valid. For more information about error codes, see Error Codes .

Message (string) --
The error message that describes why the parameter or parameter combination is not valid. For more information about error messages, see Error Codes .













Examples
This example creates a new launch template version based on version 1 of the specified launch template and specifies a different AMI ID.
response = client.create_launch_template_version(
    LaunchTemplateData={
        'ImageId': 'ami-c998b6b2',
    },
    LaunchTemplateId='lt-0abcd290751193123',
    SourceVersion='1',
    VersionDescription='WebVersion2',
)

print(response)


Expected Output:
{
    'LaunchTemplateVersion': {
        'CreateTime': datetime(2017, 12, 1, 13, 35, 46, 4, 335, 0),
        'CreatedBy': 'arn:aws:iam::123456789012:root',
        'DefaultVersion': False,
        'LaunchTemplateData': {
            'ImageId': 'ami-c998b6b2',
            'InstanceType': 't2.micro',
            'NetworkInterfaces': [
                {
                    'AssociatePublicIpAddress': True,
                    'DeviceIndex': 0,
                    'Ipv6Addresses': [
                        {
                            'Ipv6Address': '2001:db8:1234:1a00::123',
                        },
                    ],
                    'SubnetId': 'subnet-7b16de0c',
                },
            ],
        },
        'LaunchTemplateId': 'lt-0abcd290751193123',
        'LaunchTemplateName': 'my-template',
        'VersionDescription': 'WebVersion2',
        'VersionNumber': 2,
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'LaunchTemplateVersion': {
            'LaunchTemplateId': 'string',
            'LaunchTemplateName': 'string',
            'VersionNumber': 123,
            'VersionDescription': 'string',
            'CreateTime': datetime(2015, 1, 1),
            'CreatedBy': 'string',
            'DefaultVersion': True|False,
            'LaunchTemplateData': {
                'KernelId': 'string',
                'EbsOptimized': True|False,
                'IamInstanceProfile': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'BlockDeviceMappings': [
                    {
                        'DeviceName': 'string',
                        'VirtualName': 'string',
                        'Ebs': {
                            'Encrypted': True|False,
                            'DeleteOnTermination': True|False,
                            'Iops': 123,
                            'KmsKeyId': 'string',
                            'SnapshotId': 'string',
                            'VolumeSize': 123,
                            'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1'
                        },
                        'NoDevice': 'string'
                    },
                ],
                'NetworkInterfaces': [
                    {
                        'AssociatePublicIpAddress': True|False,
                        'DeleteOnTermination': True|False,
                        'Description': 'string',
                        'DeviceIndex': 123,
                        'Groups': [
                            'string',
                        ],
                        'InterfaceType': 'string',
                        'Ipv6AddressCount': 123,
                        'Ipv6Addresses': [
                            {
                                'Ipv6Address': 'string'
                            },
                        ],
                        'NetworkInterfaceId': 'string',
                        'PrivateIpAddress': 'string',
                        'PrivateIpAddresses': [
                            {
                                'Primary': True|False,
                                'PrivateIpAddress': 'string'
                            },
                        ],
                        'SecondaryPrivateIpAddressCount': 123,
                        'SubnetId': 'string'
                    },
                ],
                'ImageId': 'string',
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'KeyName': 'string',
                'Monitoring': {
                    'Enabled': True|False
                },
                'Placement': {
                    'AvailabilityZone': 'string',
                    'Affinity': 'string',
                    'GroupName': 'string',
                    'HostId': 'string',
                    'Tenancy': 'default'|'dedicated'|'host',
                    'SpreadDomain': 'string',
                    'HostResourceGroupArn': 'string',
                    'PartitionNumber': 123
                },
                'RamDiskId': 'string',
                'DisableApiTermination': True|False,
                'InstanceInitiatedShutdownBehavior': 'stop'|'terminate',
                'UserData': 'string',
                'TagSpecifications': [
                    {
                        'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                        'Tags': [
                            {
                                'Key': 'string',
                                'Value': 'string'
                            },
                        ]
                    },
                ],
                'ElasticGpuSpecifications': [
                    {
                        'Type': 'string'
                    },
                ],
                'ElasticInferenceAccelerators': [
                    {
                        'Type': 'string',
                        'Count': 123
                    },
                ],
                'SecurityGroupIds': [
                    'string',
                ],
                'SecurityGroups': [
                    'string',
                ],
                'InstanceMarketOptions': {
                    'MarketType': 'spot',
                    'SpotOptions': {
                        'MaxPrice': 'string',
                        'SpotInstanceType': 'one-time'|'persistent',
                        'BlockDurationMinutes': 123,
                        'ValidUntil': datetime(2015, 1, 1),
                        'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
                    }
                },
                'CreditSpecification': {
                    'CpuCredits': 'string'
                },
                'CpuOptions': {
                    'CoreCount': 123,
                    'ThreadsPerCore': 123
                },
                'CapacityReservationSpecification': {
                    'CapacityReservationPreference': 'open'|'none',
                    'CapacityReservationTarget': {
                        'CapacityReservationId': 'string'
                    }
                },
                'LicenseSpecifications': [
                    {
                        'LicenseConfigurationArn': 'string'
                    },
                ],
                'HibernationOptions': {
                    'Configured': True|False
                },
                'MetadataOptions': {
                    'State': 'pending'|'applied',
                    'HttpTokens': 'optional'|'required',
                    'HttpPutResponseHopLimit': 123,
                    'HttpEndpoint': 'disabled'|'enabled'
                }
            }
        },
        'Warning': {
            'Errors': [
                {
                    'Code': 'string',
                    'Message': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_local_gateway_route(DestinationCidrBlock=None, LocalGatewayRouteTableId=None, LocalGatewayVirtualInterfaceGroupId=None, DryRun=None):
    """
    Creates a static route for the specified local gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.create_local_gateway_route(
        DestinationCidrBlock='string',
        LocalGatewayRouteTableId='string',
        LocalGatewayVirtualInterfaceGroupId='string',
        DryRun=True|False
    )
    
    
    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe CIDR range used for destination matches. Routing decisions are based on the most specific match.\n

    :type LocalGatewayRouteTableId: string
    :param LocalGatewayRouteTableId: [REQUIRED]\nThe ID of the local gateway route table.\n

    :type LocalGatewayVirtualInterfaceGroupId: string
    :param LocalGatewayVirtualInterfaceGroupId: [REQUIRED]\nThe ID of the virtual interface group.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Route': {
        'DestinationCidrBlock': 'string',
        'LocalGatewayVirtualInterfaceGroupId': 'string',
        'Type': 'static'|'propagated',
        'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted',
        'LocalGatewayRouteTableId': 'string'
    }
}


Response Structure

(dict) --

Route (dict) --
Information about the route.

DestinationCidrBlock (string) --
The CIDR block used for destination matches.

LocalGatewayVirtualInterfaceGroupId (string) --
The ID of the virtual interface group.

Type (string) --
The route type.

State (string) --
The state of the route.

LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.










    :return: {
        'Route': {
            'DestinationCidrBlock': 'string',
            'LocalGatewayVirtualInterfaceGroupId': 'string',
            'Type': 'static'|'propagated',
            'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted',
            'LocalGatewayRouteTableId': 'string'
        }
    }
    
    
    """
    pass

def create_local_gateway_route_table_vpc_association(LocalGatewayRouteTableId=None, VpcId=None, TagSpecifications=None, DryRun=None):
    """
    Associates the specified VPC with the specified local gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.create_local_gateway_route_table_vpc_association(
        LocalGatewayRouteTableId='string',
        VpcId='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type LocalGatewayRouteTableId: string
    :param LocalGatewayRouteTableId: [REQUIRED]\nThe ID of the local gateway route table.\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to assign to the local gateway route table VPC association.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'LocalGatewayRouteTableVpcAssociation': {
        'LocalGatewayRouteTableVpcAssociationId': 'string',
        'LocalGatewayRouteTableId': 'string',
        'LocalGatewayId': 'string',
        'VpcId': 'string',
        'State': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

LocalGatewayRouteTableVpcAssociation (dict) --
Information about the association.

LocalGatewayRouteTableVpcAssociationId (string) --
The ID of the association.

LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.

LocalGatewayId (string) --
The ID of the local gateway.

VpcId (string) --
The ID of the VPC.

State (string) --
The state of the association.

Tags (list) --
The tags assigned to the association.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'LocalGatewayRouteTableVpcAssociation': {
            'LocalGatewayRouteTableVpcAssociationId': 'string',
            'LocalGatewayRouteTableId': 'string',
            'LocalGatewayId': 'string',
            'VpcId': 'string',
            'State': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_nat_gateway(AllocationId=None, ClientToken=None, DryRun=None, SubnetId=None, TagSpecifications=None):
    """
    Creates a NAT gateway in the specified public subnet. This action creates a network interface in the specified subnet with a private IP address from the IP address range of the subnet. Internet-bound traffic from a private subnet can be routed to the NAT gateway, therefore enabling instances in the private subnet to connect to the internet. For more information, see NAT Gateways in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a NAT gateway in subnet subnet-1a2b3c4d and associates an Elastic IP address with the allocation ID eipalloc-37fc1a52 with the NAT gateway.
    Expected Output:
    
    :example: response = client.create_nat_gateway(
        AllocationId='string',
        ClientToken='string',
        DryRun=True|False,
        SubnetId='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type AllocationId: string
    :param AllocationId: [REQUIRED]\nThe allocation ID of an Elastic IP address to associate with the NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it.\n

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nConstraint: Maximum 64 ASCII characters.\nThis field is autopopulated if not provided.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type SubnetId: string
    :param SubnetId: [REQUIRED]\nThe subnet in which to create the NAT gateway.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to assign to the NAT gateway.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ClientToken': 'string',
    'NatGateway': {
        'CreateTime': datetime(2015, 1, 1),
        'DeleteTime': datetime(2015, 1, 1),
        'FailureCode': 'string',
        'FailureMessage': 'string',
        'NatGatewayAddresses': [
            {
                'AllocationId': 'string',
                'NetworkInterfaceId': 'string',
                'PrivateIp': 'string',
                'PublicIp': 'string'
            },
        ],
        'NatGatewayId': 'string',
        'ProvisionedBandwidth': {
            'ProvisionTime': datetime(2015, 1, 1),
            'Provisioned': 'string',
            'RequestTime': datetime(2015, 1, 1),
            'Requested': 'string',
            'Status': 'string'
        },
        'State': 'pending'|'failed'|'available'|'deleting'|'deleted',
        'SubnetId': 'string',
        'VpcId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

ClientToken (string) --
Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request.

NatGateway (dict) --
Information about the NAT gateway.

CreateTime (datetime) --
The date and time the NAT gateway was created.

DeleteTime (datetime) --
The date and time the NAT gateway was deleted, if applicable.

FailureCode (string) --
If the NAT gateway could not be created, specifies the error code for the failure. (InsufficientFreeAddressesInSubnet | Gateway.NotAttached | InvalidAllocationID.NotFound | Resource.AlreadyAssociated | InternalError | InvalidSubnetID.NotFound )

FailureMessage (string) --
If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code.

For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to create this NAT gateway"
For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached"
For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway"
For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated"
For InternalError: "Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again."
For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist or could not be found."


NatGatewayAddresses (list) --
Information about the IP addresses and network interface associated with the NAT gateway.

(dict) --
Describes the IP addresses and network interface associated with a NAT gateway.

AllocationId (string) --
The allocation ID of the Elastic IP address that\'s associated with the NAT gateway.

NetworkInterfaceId (string) --
The ID of the network interface associated with the NAT gateway.

PrivateIp (string) --
The private IP address associated with the Elastic IP address.

PublicIp (string) --
The Elastic IP address associated with the NAT gateway.





NatGatewayId (string) --
The ID of the NAT gateway.

ProvisionedBandwidth (dict) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

ProvisionTime (datetime) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

Provisioned (string) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

RequestTime (datetime) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

Requested (string) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

Status (string) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .



State (string) --
The state of the NAT gateway.

pending : The NAT gateway is being created and is not ready to process traffic.
failed : The NAT gateway could not be created. Check the failureCode and failureMessage fields for the reason.
available : The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.
deleting : The NAT gateway is in the process of being terminated and may still be processing traffic.
deleted : The NAT gateway has been terminated and is no longer processing traffic.


SubnetId (string) --
The ID of the subnet in which the NAT gateway is located.

VpcId (string) --
The ID of the VPC in which the NAT gateway is located.

Tags (list) --
The tags for the NAT gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.













Examples
This example creates a NAT gateway in subnet subnet-1a2b3c4d and associates an Elastic IP address with the allocation ID eipalloc-37fc1a52 with the NAT gateway.
response = client.create_nat_gateway(
    AllocationId='eipalloc-37fc1a52',
    SubnetId='subnet-1a2b3c4d',
)

print(response)


Expected Output:
{
    'NatGateway': {
        'CreateTime': datetime(2015, 12, 17, 12, 45, 26, 3, 351, 0),
        'NatGatewayAddresses': [
            {
                'AllocationId': 'eipalloc-37fc1a52',
            },
        ],
        'NatGatewayId': 'nat-08d48af2a8e83edfd',
        'State': 'pending',
        'SubnetId': 'subnet-1a2b3c4d',
        'VpcId': 'vpc-1122aabb',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'ClientToken': 'string',
        'NatGateway': {
            'CreateTime': datetime(2015, 1, 1),
            'DeleteTime': datetime(2015, 1, 1),
            'FailureCode': 'string',
            'FailureMessage': 'string',
            'NatGatewayAddresses': [
                {
                    'AllocationId': 'string',
                    'NetworkInterfaceId': 'string',
                    'PrivateIp': 'string',
                    'PublicIp': 'string'
                },
            ],
            'NatGatewayId': 'string',
            'ProvisionedBandwidth': {
                'ProvisionTime': datetime(2015, 1, 1),
                'Provisioned': 'string',
                'RequestTime': datetime(2015, 1, 1),
                'Requested': 'string',
                'Status': 'string'
            },
            'State': 'pending'|'failed'|'available'|'deleting'|'deleted',
            'SubnetId': 'string',
            'VpcId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to create this NAT gateway"
    For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached"
    For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway"
    For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated"
    For InternalError: "Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again."
    For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist or could not be found."
    
    """
    pass

def create_network_acl(DryRun=None, VpcId=None):
    """
    Creates a network ACL in a VPC. Network ACLs provide an optional layer of security (in addition to security groups) for the instances in your VPC.
    For more information, see Network ACLs in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a network ACL for the specified VPC.
    Expected Output:
    
    :example: response = client.create_network_acl(
        DryRun=True|False,
        VpcId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NetworkAcl': {
        'Associations': [
            {
                'NetworkAclAssociationId': 'string',
                'NetworkAclId': 'string',
                'SubnetId': 'string'
            },
        ],
        'Entries': [
            {
                'CidrBlock': 'string',
                'Egress': True|False,
                'IcmpTypeCode': {
                    'Code': 123,
                    'Type': 123
                },
                'Ipv6CidrBlock': 'string',
                'PortRange': {
                    'From': 123,
                    'To': 123
                },
                'Protocol': 'string',
                'RuleAction': 'allow'|'deny',
                'RuleNumber': 123
            },
        ],
        'IsDefault': True|False,
        'NetworkAclId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VpcId': 'string',
        'OwnerId': 'string'
    }
}


Response Structure

(dict) --

NetworkAcl (dict) --
Information about the network ACL.

Associations (list) --
Any associations between the network ACL and one or more subnets

(dict) --
Describes an association between a network ACL and a subnet.

NetworkAclAssociationId (string) --
The ID of the association between a network ACL and a subnet.

NetworkAclId (string) --
The ID of the network ACL.

SubnetId (string) --
The ID of the subnet.





Entries (list) --
One or more entries (rules) in the network ACL.

(dict) --
Describes an entry in a network ACL.

CidrBlock (string) --
The IPv4 network range to allow or deny, in CIDR notation.

Egress (boolean) --
Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).

IcmpTypeCode (dict) --
ICMP protocol: The ICMP type and code.

Code (integer) --
The ICMP code. A value of -1 means all codes for the specified ICMP type.

Type (integer) --
The ICMP type. A value of -1 means all types.



Ipv6CidrBlock (string) --
The IPv6 network range to allow or deny, in CIDR notation.

PortRange (dict) --
TCP or UDP protocols: The range of ports the rule applies to.

From (integer) --
The first port in the range.

To (integer) --
The last port in the range.



Protocol (string) --
The protocol number. A value of "-1" means all protocols.

RuleAction (string) --
Indicates whether to allow or deny the traffic that matches the rule.

RuleNumber (integer) --
The rule number for the entry. ACL entries are processed in ascending order by rule number.





IsDefault (boolean) --
Indicates whether this is the default network ACL for the VPC.

NetworkAclId (string) --
The ID of the network ACL.

Tags (list) --
Any tags assigned to the network ACL.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcId (string) --
The ID of the VPC for the network ACL.

OwnerId (string) --
The ID of the AWS account that owns the network ACL.









Examples
This example creates a network ACL for the specified VPC.
response = client.create_network_acl(
    VpcId='vpc-a01106c2',
)

print(response)


Expected Output:
{
    'NetworkAcl': {
        'Associations': [
        ],
        'Entries': [
            {
                'CidrBlock': '0.0.0.0/0',
                'Egress': True,
                'Protocol': '-1',
                'RuleAction': 'deny',
                'RuleNumber': 32767,
            },
            {
                'CidrBlock': '0.0.0.0/0',
                'Egress': False,
                'Protocol': '-1',
                'RuleAction': 'deny',
                'RuleNumber': 32767,
            },
        ],
        'IsDefault': False,
        'NetworkAclId': 'acl-5fb85d36',
        'Tags': [
        ],
        'VpcId': 'vpc-a01106c2',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NetworkAcl': {
            'Associations': [
                {
                    'NetworkAclAssociationId': 'string',
                    'NetworkAclId': 'string',
                    'SubnetId': 'string'
                },
            ],
            'Entries': [
                {
                    'CidrBlock': 'string',
                    'Egress': True|False,
                    'IcmpTypeCode': {
                        'Code': 123,
                        'Type': 123
                    },
                    'Ipv6CidrBlock': 'string',
                    'PortRange': {
                        'From': 123,
                        'To': 123
                    },
                    'Protocol': 'string',
                    'RuleAction': 'allow'|'deny',
                    'RuleNumber': 123
                },
            ],
            'IsDefault': True|False,
            'NetworkAclId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcId': 'string',
            'OwnerId': 'string'
        }
    }
    
    
    """
    pass

def create_network_acl_entry(CidrBlock=None, DryRun=None, Egress=None, IcmpTypeCode=None, Ipv6CidrBlock=None, NetworkAclId=None, PortRange=None, Protocol=None, RuleAction=None, RuleNumber=None):
    """
    Creates an entry (a rule) in a network ACL with the specified rule number. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the ACL, we process the entries in the ACL according to the rule numbers, in ascending order. Each network ACL has a set of ingress rules and a separate set of egress rules.
    We recommend that you leave room between the rule numbers (for example, 100, 110, 120, ...), and not number them one right after the other (for example, 101, 102, 103, ...). This makes it easier to add a rule between existing ones without having to renumber the rules.
    After you add an entry, you can\'t modify it; you must either replace it, or create an entry and delete the old one.
    For more information about network ACLs, see Network ACLs in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates an entry for the specified network ACL. The rule allows ingress traffic from anywhere (0.0.0.0/0) on UDP port 53 (DNS) into any associated subnet.
    Expected Output:
    
    :example: response = client.create_network_acl_entry(
        CidrBlock='string',
        DryRun=True|False,
        Egress=True|False,
        IcmpTypeCode={
            'Code': 123,
            'Type': 123
        },
        Ipv6CidrBlock='string',
        NetworkAclId='string',
        PortRange={
            'From': 123,
            'To': 123
        },
        Protocol='string',
        RuleAction='allow'|'deny',
        RuleNumber=123
    )
    
    
    :type CidrBlock: string
    :param CidrBlock: The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Egress: boolean
    :param Egress: [REQUIRED]\nIndicates whether this is an egress rule (rule is applied to traffic leaving the subnet).\n

    :type IcmpTypeCode: dict
    :param IcmpTypeCode: ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.\n\nCode (integer) --The ICMP code. A value of -1 means all codes for the specified ICMP type.\n\nType (integer) --The ICMP type. A value of -1 means all types.\n\n\n

    :type Ipv6CidrBlock: string
    :param Ipv6CidrBlock: The IPv6 network range to allow or deny, in CIDR notation (for example 2001:db8:1234:1a00::/64 ).

    :type NetworkAclId: string
    :param NetworkAclId: [REQUIRED]\nThe ID of the network ACL.\n

    :type PortRange: dict
    :param PortRange: TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).\n\nFrom (integer) --The first port in the range.\n\nTo (integer) --The last port in the range.\n\n\n

    :type Protocol: string
    :param Protocol: [REQUIRED]\nThe protocol number. A value of '-1' means all protocols. If you specify '-1' or a protocol number other than '6' (TCP), '17' (UDP), or '1' (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol '58' (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol '58' (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.\n

    :type RuleAction: string
    :param RuleAction: [REQUIRED]\nIndicates whether to allow or deny the traffic that matches the rule.\n

    :type RuleNumber: integer
    :param RuleNumber: [REQUIRED]\nThe rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.\nConstraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.\n

    :return: response = client.create_network_acl_entry(
        CidrBlock='0.0.0.0/0',
        Egress=False,
        NetworkAclId='acl-5fb85d36',
        PortRange={
            'From': 53,
            'To': 53,
        },
        Protocol='udp',
        RuleAction='allow',
        RuleNumber=100,
    )
    
    print(response)
    
    
    """
    pass

def create_network_interface(Description=None, DryRun=None, Groups=None, Ipv6AddressCount=None, Ipv6Addresses=None, PrivateIpAddress=None, PrivateIpAddresses=None, SecondaryPrivateIpAddressCount=None, InterfaceType=None, SubnetId=None):
    """
    Creates a network interface in the specified subnet.
    For more information about network interfaces, see Elastic Network Interfaces in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a network interface for the specified subnet.
    Expected Output:
    
    :example: response = client.create_network_interface(
        Description='string',
        DryRun=True|False,
        Groups=[
            'string',
        ],
        Ipv6AddressCount=123,
        Ipv6Addresses=[
            {
                'Ipv6Address': 'string'
            },
        ],
        PrivateIpAddress='string',
        PrivateIpAddresses=[
            {
                'Primary': True|False,
                'PrivateIpAddress': 'string'
            },
        ],
        SecondaryPrivateIpAddressCount=123,
        InterfaceType='efa',
        SubnetId='string'
    )
    
    
    :type Description: string
    :param Description: A description for the network interface.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Groups: list
    :param Groups: The IDs of one or more security groups.\n\n(string) --\n\n

    :type Ipv6AddressCount: integer
    :param Ipv6AddressCount: The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can\'t use this option if specifying specific IPv6 addresses. If your subnet has the AssignIpv6AddressOnCreation attribute set to true , you can specify 0 to override this setting.

    :type Ipv6Addresses: list
    :param Ipv6Addresses: One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can\'t use this option if you\'re specifying a number of IPv6 addresses.\n\n(dict) --Describes an IPv6 address.\n\nIpv6Address (string) --The IPv6 address.\n\n\n\n\n

    :type PrivateIpAddress: string
    :param PrivateIpAddress: The primary private IPv4 address of the network interface. If you don\'t specify an IPv4 address, Amazon EC2 selects one for you from the subnet\'s IPv4 CIDR range. If you specify an IP address, you cannot indicate any IP addresses specified in privateIpAddresses as primary (only one IP address can be designated as primary).

    :type PrivateIpAddresses: list
    :param PrivateIpAddresses: One or more private IPv4 addresses.\n\n(dict) --Describes a secondary private IPv4 address for a network interface.\n\nPrimary (boolean) --Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n\nPrivateIpAddress (string) --The private IPv4 addresses.\n\n\n\n\n

    :type SecondaryPrivateIpAddressCount: integer
    :param SecondaryPrivateIpAddressCount: The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet\'s IPv4 CIDR range. You can\'t specify this option and specify more than one private IP address using privateIpAddresses .\nThe number of IP addresses you can assign to a network interface varies by instance type. For more information, see IP Addresses Per ENI Per Instance Type in the Amazon Virtual Private Cloud User Guide .\n

    :type InterfaceType: string
    :param InterfaceType: Indicates the type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .

    :type SubnetId: string
    :param SubnetId: [REQUIRED]\nThe ID of the subnet to associate with the network interface.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NetworkInterface': {
        'Association': {
            'AllocationId': 'string',
            'AssociationId': 'string',
            'IpOwnerId': 'string',
            'PublicDnsName': 'string',
            'PublicIp': 'string'
        },
        'Attachment': {
            'AttachTime': datetime(2015, 1, 1),
            'AttachmentId': 'string',
            'DeleteOnTermination': True|False,
            'DeviceIndex': 123,
            'InstanceId': 'string',
            'InstanceOwnerId': 'string',
            'Status': 'attaching'|'attached'|'detaching'|'detached'
        },
        'AvailabilityZone': 'string',
        'Description': 'string',
        'Groups': [
            {
                'GroupName': 'string',
                'GroupId': 'string'
            },
        ],
        'InterfaceType': 'interface'|'natGateway'|'efa',
        'Ipv6Addresses': [
            {
                'Ipv6Address': 'string'
            },
        ],
        'MacAddress': 'string',
        'NetworkInterfaceId': 'string',
        'OutpostArn': 'string',
        'OwnerId': 'string',
        'PrivateDnsName': 'string',
        'PrivateIpAddress': 'string',
        'PrivateIpAddresses': [
            {
                'Association': {
                    'AllocationId': 'string',
                    'AssociationId': 'string',
                    'IpOwnerId': 'string',
                    'PublicDnsName': 'string',
                    'PublicIp': 'string'
                },
                'Primary': True|False,
                'PrivateDnsName': 'string',
                'PrivateIpAddress': 'string'
            },
        ],
        'RequesterId': 'string',
        'RequesterManaged': True|False,
        'SourceDestCheck': True|False,
        'Status': 'available'|'associated'|'attaching'|'in-use'|'detaching',
        'SubnetId': 'string',
        'TagSet': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VpcId': 'string'
    }
}


Response Structure

(dict) --
Contains the output of CreateNetworkInterface.

NetworkInterface (dict) --
Information about the network interface.

Association (dict) --
The association information for an Elastic IP address (IPv4) associated with the network interface.

AllocationId (string) --
The allocation ID.

AssociationId (string) --
The association ID.

IpOwnerId (string) --
The ID of the Elastic IP address owner.

PublicDnsName (string) --
The public DNS name.

PublicIp (string) --
The address of the Elastic IP address bound to the network interface.



Attachment (dict) --
The network interface attachment.

AttachTime (datetime) --
The timestamp indicating when the attachment initiated.

AttachmentId (string) --
The ID of the network interface attachment.

DeleteOnTermination (boolean) --
Indicates whether the network interface is deleted when the instance is terminated.

DeviceIndex (integer) --
The device index of the network interface attachment on the instance.

InstanceId (string) --
The ID of the instance.

InstanceOwnerId (string) --
The AWS account ID of the owner of the instance.

Status (string) --
The attachment state.



AvailabilityZone (string) --
The Availability Zone.

Description (string) --
A description.

Groups (list) --
Any security groups for the network interface.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





InterfaceType (string) --
The type of network interface.

Ipv6Addresses (list) --
The IPv6 addresses associated with the network interface.

(dict) --
Describes an IPv6 address associated with a network interface.

Ipv6Address (string) --
The IPv6 address.





MacAddress (string) --
The MAC address.

NetworkInterfaceId (string) --
The ID of the network interface.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

OwnerId (string) --
The AWS account ID of the owner of the network interface.

PrivateDnsName (string) --
The private DNS name.

PrivateIpAddress (string) --
The IPv4 address of the network interface within the subnet.

PrivateIpAddresses (list) --
The private IPv4 addresses associated with the network interface.

(dict) --
Describes the private IPv4 address of a network interface.

Association (dict) --
The association information for an Elastic IP address (IPv4) associated with the network interface.

AllocationId (string) --
The allocation ID.

AssociationId (string) --
The association ID.

IpOwnerId (string) --
The ID of the Elastic IP address owner.

PublicDnsName (string) --
The public DNS name.

PublicIp (string) --
The address of the Elastic IP address bound to the network interface.



Primary (boolean) --
Indicates whether this IPv4 address is the primary private IPv4 address of the network interface.

PrivateDnsName (string) --
The private DNS name.

PrivateIpAddress (string) --
The private IPv4 address.





RequesterId (string) --
The ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling).

RequesterManaged (boolean) --
Indicates whether the network interface is being managed by AWS.

SourceDestCheck (boolean) --
Indicates whether traffic to or from the instance is validated.

Status (string) --
The status of the network interface.

SubnetId (string) --
The ID of the subnet.

TagSet (list) --
Any tags assigned to the network interface.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcId (string) --
The ID of the VPC.









Examples
This example creates a network interface for the specified subnet.
response = client.create_network_interface(
    Description='my network interface',
    Groups=[
        'sg-903004f8',
    ],
    PrivateIpAddress='10.0.2.17',
    SubnetId='subnet-9d4a7b6c',
)

print(response)


Expected Output:
{
    'NetworkInterface': {
        'AvailabilityZone': 'us-east-1d',
        'Description': 'my network interface',
        'Groups': [
            {
                'GroupId': 'sg-903004f8',
                'GroupName': 'default',
            },
        ],
        'MacAddress': '02:1a:80:41:52:9c',
        'NetworkInterfaceId': 'eni-e5aa89a3',
        'OwnerId': '123456789012',
        'PrivateIpAddress': '10.0.2.17',
        'PrivateIpAddresses': [
            {
                'Primary': True,
                'PrivateIpAddress': '10.0.2.17',
            },
        ],
        'RequesterManaged': False,
        'SourceDestCheck': True,
        'Status': 'pending',
        'SubnetId': 'subnet-9d4a7b6c',
        'TagSet': [
        ],
        'VpcId': 'vpc-a01106c2',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NetworkInterface': {
            'Association': {
                'AllocationId': 'string',
                'AssociationId': 'string',
                'IpOwnerId': 'string',
                'PublicDnsName': 'string',
                'PublicIp': 'string'
            },
            'Attachment': {
                'AttachTime': datetime(2015, 1, 1),
                'AttachmentId': 'string',
                'DeleteOnTermination': True|False,
                'DeviceIndex': 123,
                'InstanceId': 'string',
                'InstanceOwnerId': 'string',
                'Status': 'attaching'|'attached'|'detaching'|'detached'
            },
            'AvailabilityZone': 'string',
            'Description': 'string',
            'Groups': [
                {
                    'GroupName': 'string',
                    'GroupId': 'string'
                },
            ],
            'InterfaceType': 'interface'|'natGateway'|'efa',
            'Ipv6Addresses': [
                {
                    'Ipv6Address': 'string'
                },
            ],
            'MacAddress': 'string',
            'NetworkInterfaceId': 'string',
            'OutpostArn': 'string',
            'OwnerId': 'string',
            'PrivateDnsName': 'string',
            'PrivateIpAddress': 'string',
            'PrivateIpAddresses': [
                {
                    'Association': {
                        'AllocationId': 'string',
                        'AssociationId': 'string',
                        'IpOwnerId': 'string',
                        'PublicDnsName': 'string',
                        'PublicIp': 'string'
                    },
                    'Primary': True|False,
                    'PrivateDnsName': 'string',
                    'PrivateIpAddress': 'string'
                },
            ],
            'RequesterId': 'string',
            'RequesterManaged': True|False,
            'SourceDestCheck': True|False,
            'Status': 'available'|'associated'|'attaching'|'in-use'|'detaching',
            'SubnetId': 'string',
            'TagSet': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcId': 'string'
        }
    }
    
    
    """
    pass

def create_network_interface_permission(NetworkInterfaceId=None, AwsAccountId=None, AwsService=None, Permission=None, DryRun=None):
    """
    Grants an AWS-authorized account permission to attach the specified network interface to an instance in their account.
    You can grant permission to a single AWS account only, and only one account at a time.
    See also: AWS API Documentation
    
    
    :example: response = client.create_network_interface_permission(
        NetworkInterfaceId='string',
        AwsAccountId='string',
        AwsService='string',
        Permission='INSTANCE-ATTACH'|'EIP-ASSOCIATE',
        DryRun=True|False
    )
    
    
    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :type AwsAccountId: string
    :param AwsAccountId: The AWS account ID.

    :type AwsService: string
    :param AwsService: The AWS service. Currently not supported.

    :type Permission: string
    :param Permission: [REQUIRED]\nThe type of permission to grant.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'InterfacePermission': {
        'NetworkInterfacePermissionId': 'string',
        'NetworkInterfaceId': 'string',
        'AwsAccountId': 'string',
        'AwsService': 'string',
        'Permission': 'INSTANCE-ATTACH'|'EIP-ASSOCIATE',
        'PermissionState': {
            'State': 'pending'|'granted'|'revoking'|'revoked',
            'StatusMessage': 'string'
        }
    }
}


Response Structure

(dict) --
Contains the output of CreateNetworkInterfacePermission.

InterfacePermission (dict) --
Information about the permission for the network interface.

NetworkInterfacePermissionId (string) --
The ID of the network interface permission.

NetworkInterfaceId (string) --
The ID of the network interface.

AwsAccountId (string) --
The AWS account ID.

AwsService (string) --
The AWS service.

Permission (string) --
The type of permission.

PermissionState (dict) --
Information about the state of the permission.

State (string) --
The state of the permission.

StatusMessage (string) --
A status message, if applicable.












    :return: {
        'InterfacePermission': {
            'NetworkInterfacePermissionId': 'string',
            'NetworkInterfaceId': 'string',
            'AwsAccountId': 'string',
            'AwsService': 'string',
            'Permission': 'INSTANCE-ATTACH'|'EIP-ASSOCIATE',
            'PermissionState': {
                'State': 'pending'|'granted'|'revoking'|'revoked',
                'StatusMessage': 'string'
            }
        }
    }
    
    
    """
    pass

def create_placement_group(DryRun=None, GroupName=None, Strategy=None, PartitionCount=None, TagSpecifications=None):
    """
    Creates a placement group in which to launch instances. The strategy of the placement group determines how the instances are organized within the group.
    A cluster placement group is a logical grouping of instances within a single Availability Zone that benefit from low network latency, high network throughput. A spread placement group places instances on distinct hardware. A partition placement group places groups of instances in different partitions, where instances in one partition do not share the same hardware with instances in another partition.
    For more information, see Placement Groups in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a placement group with the specified name.
    Expected Output:
    
    :example: response = client.create_placement_group(
        DryRun=True|False,
        GroupName='string',
        Strategy='cluster'|'spread'|'partition',
        PartitionCount=123,
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type GroupName: string
    :param GroupName: A name for the placement group. Must be unique within the scope of your account for the Region.\nConstraints: Up to 255 ASCII characters\n

    :type Strategy: string
    :param Strategy: The placement strategy.

    :type PartitionCount: integer
    :param PartitionCount: The number of partitions. Valid only when Strategy is set to partition .

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the new placement group.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'PlacementGroup': {
        'GroupName': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'Strategy': 'cluster'|'spread'|'partition',
        'PartitionCount': 123,
        'GroupId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

PlacementGroup (dict) --
Describes a placement group.

GroupName (string) --
The name of the placement group.

State (string) --
The state of the placement group.

Strategy (string) --
The placement strategy.

PartitionCount (integer) --
The number of partitions. Valid only if strategy is set to partition .

GroupId (string) --
The ID of the placement group.

Tags (list) --
Any tags applied to the placement group.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.













Examples
This example creates a placement group with the specified name.
response = client.create_placement_group(
    GroupName='my-cluster',
    Strategy='cluster',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'PlacementGroup': {
            'GroupName': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'Strategy': 'cluster'|'spread'|'partition',
            'PartitionCount': 123,
            'GroupId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_reserved_instances_listing(ClientToken=None, InstanceCount=None, PriceSchedules=None, ReservedInstancesId=None):
    """
    Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved Instance Marketplace. You can submit one Standard Reserved Instance listing at a time. To get a list of your Standard Reserved Instances, you can use the  DescribeReservedInstances operation.
    The Reserved Instance Marketplace matches sellers who want to resell Standard Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.
    To sell your Standard Reserved Instances, you must first register as a seller in the Reserved Instance Marketplace. After completing the registration process, you can create a Reserved Instance Marketplace listing of some or all of your Standard Reserved Instances, and specify the upfront price to receive for them. Your Standard Reserved Instance listings then become available for purchase. To view the details of your Standard Reserved Instance listing, you can use the  DescribeReservedInstancesListings operation.
    For more information, see Reserved Instance Marketplace in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_reserved_instances_listing(
        ClientToken='string',
        InstanceCount=123,
        PriceSchedules=[
            {
                'CurrencyCode': 'USD',
                'Price': 123.0,
                'Term': 123
            },
        ],
        ReservedInstancesId='string'
    )
    
    
    :type ClientToken: string
    :param ClientToken: [REQUIRED]\nUnique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see Ensuring Idempotency .\n

    :type InstanceCount: integer
    :param InstanceCount: [REQUIRED]\nThe number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.\n

    :type PriceSchedules: list
    :param PriceSchedules: [REQUIRED]\nA list specifying the price of the Standard Reserved Instance for each month remaining in the Reserved Instance term.\n\n(dict) --Describes the price for a Reserved Instance.\n\nCurrencyCode (string) --The currency for transacting the Reserved Instance resale. At this time, the only supported currency is USD .\n\nPrice (float) --The fixed price for the term.\n\nTerm (integer) --The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.\n\n\n\n\n

    :type ReservedInstancesId: string
    :param ReservedInstancesId: [REQUIRED]\nThe ID of the active Standard Reserved Instance.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ReservedInstancesListings': [
        {
            'ClientToken': 'string',
            'CreateDate': datetime(2015, 1, 1),
            'InstanceCounts': [
                {
                    'InstanceCount': 123,
                    'State': 'available'|'sold'|'cancelled'|'pending'
                },
            ],
            'PriceSchedules': [
                {
                    'Active': True|False,
                    'CurrencyCode': 'USD',
                    'Price': 123.0,
                    'Term': 123
                },
            ],
            'ReservedInstancesId': 'string',
            'ReservedInstancesListingId': 'string',
            'Status': 'active'|'pending'|'cancelled'|'closed',
            'StatusMessage': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'UpdateDate': datetime(2015, 1, 1)
        },
    ]
}


Response Structure

(dict) --
Contains the output of CreateReservedInstancesListing.

ReservedInstancesListings (list) --
Information about the Standard Reserved Instance listing.

(dict) --
Describes a Reserved Instance listing.

ClientToken (string) --
A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see Ensuring Idempotency .

CreateDate (datetime) --
The time the listing was created.

InstanceCounts (list) --
The number of instances in this state.

(dict) --
Describes a Reserved Instance listing state.

InstanceCount (integer) --
The number of listed Reserved Instances in the state specified by the state .

State (string) --
The states of the listed Reserved Instances.





PriceSchedules (list) --
The price of the Reserved Instance listing.

(dict) --
Describes the price for a Reserved Instance.

Active (boolean) --
The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.
A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.

CurrencyCode (string) --
The currency for transacting the Reserved Instance resale. At this time, the only supported currency is USD .

Price (float) --
The fixed price for the term.

Term (integer) --
The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.





ReservedInstancesId (string) --
The ID of the Reserved Instance.

ReservedInstancesListingId (string) --
The ID of the Reserved Instance listing.

Status (string) --
The status of the Reserved Instance listing.

StatusMessage (string) --
The reason for the current status of the Reserved Instance listing. The response can be blank.

Tags (list) --
Any tags assigned to the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





UpdateDate (datetime) --
The last modified timestamp of the listing.












    :return: {
        'ReservedInstancesListings': [
            {
                'ClientToken': 'string',
                'CreateDate': datetime(2015, 1, 1),
                'InstanceCounts': [
                    {
                        'InstanceCount': 123,
                        'State': 'available'|'sold'|'cancelled'|'pending'
                    },
                ],
                'PriceSchedules': [
                    {
                        'Active': True|False,
                        'CurrencyCode': 'USD',
                        'Price': 123.0,
                        'Term': 123
                    },
                ],
                'ReservedInstancesId': 'string',
                'ReservedInstancesListingId': 'string',
                'Status': 'active'|'pending'|'cancelled'|'closed',
                'StatusMessage': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'UpdateDate': datetime(2015, 1, 1)
            },
        ]
    }
    
    
    """
    pass

def create_route(DestinationCidrBlock=None, DestinationIpv6CidrBlock=None, DryRun=None, EgressOnlyInternetGatewayId=None, GatewayId=None, InstanceId=None, NatGatewayId=None, TransitGatewayId=None, LocalGatewayId=None, NetworkInterfaceId=None, RouteTableId=None, VpcPeeringConnectionId=None):
    """
    Creates a route in a route table within a VPC.
    You must specify one of the following targets: internet gateway or virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, egress-only internet gateway, or transit gateway.
    When determining how to route traffic, we use the route with the most specific match. For example, traffic is destined for the IPv4 address 192.0.2.3 , and the route table includes the following two IPv4 routes:
    Both routes apply to the traffic destined for 192.0.2.3 . However, the second route in the list covers a smaller number of IP addresses and is therefore more specific, so we use that route to determine where to target the traffic.
    For more information about route tables, see Route Tables in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a route for the specified route table. The route matches all traffic (0.0.0.0/0) and routes it to the specified Internet gateway.
    Expected Output:
    
    :example: response = client.create_route(
        DestinationCidrBlock='string',
        DestinationIpv6CidrBlock='string',
        DryRun=True|False,
        EgressOnlyInternetGatewayId='string',
        GatewayId='string',
        InstanceId='string',
        NatGatewayId='string',
        TransitGatewayId='string',
        LocalGatewayId='string',
        NetworkInterfaceId='string',
        RouteTableId='string',
        VpcPeeringConnectionId='string'
    )
    
    
    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match.

    :type DestinationIpv6CidrBlock: string
    :param DestinationIpv6CidrBlock: The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EgressOnlyInternetGatewayId: string
    :param EgressOnlyInternetGatewayId: [IPv6 traffic only] The ID of an egress-only internet gateway.

    :type GatewayId: string
    :param GatewayId: The ID of an internet gateway or virtual private gateway attached to your VPC.

    :type InstanceId: string
    :param InstanceId: The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.

    :type NatGatewayId: string
    :param NatGatewayId: [IPv4 traffic only] The ID of a NAT gateway.

    :type TransitGatewayId: string
    :param TransitGatewayId: The ID of a transit gateway.

    :type LocalGatewayId: string
    :param LocalGatewayId: The ID of the local gateway.

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: The ID of a network interface.

    :type RouteTableId: string
    :param RouteTableId: [REQUIRED]\nThe ID of the route table for the route.\n

    :type VpcPeeringConnectionId: string
    :param VpcPeeringConnectionId: The ID of a VPC peering connection.

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.







Examples
This example creates a route for the specified route table. The route matches all traffic (0.0.0.0/0) and routes it to the specified Internet gateway.
response = client.create_route(
    DestinationCidrBlock='0.0.0.0/0',
    GatewayId='igw-c0a643a9',
    RouteTableId='rtb-22574640',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Return': True|False
    }
    
    
    :returns: 
    DestinationCidrBlock (string) -- The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match.
    DestinationIpv6CidrBlock (string) -- The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    EgressOnlyInternetGatewayId (string) -- [IPv6 traffic only] The ID of an egress-only internet gateway.
    GatewayId (string) -- The ID of an internet gateway or virtual private gateway attached to your VPC.
    InstanceId (string) -- The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.
    NatGatewayId (string) -- [IPv4 traffic only] The ID of a NAT gateway.
    TransitGatewayId (string) -- The ID of a transit gateway.
    LocalGatewayId (string) -- The ID of the local gateway.
    NetworkInterfaceId (string) -- The ID of a network interface.
    RouteTableId (string) -- [REQUIRED]
    The ID of the route table for the route.
    
    VpcPeeringConnectionId (string) -- The ID of a VPC peering connection.
    
    """
    pass

def create_route_table(DryRun=None, VpcId=None):
    """
    Creates a route table for the specified VPC. After you create a route table, you can add routes and associate the table with a subnet.
    For more information, see Route Tables in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a route table for the specified VPC.
    Expected Output:
    
    :example: response = client.create_route_table(
        DryRun=True|False,
        VpcId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'RouteTable': {
        'Associations': [
            {
                'Main': True|False,
                'RouteTableAssociationId': 'string',
                'RouteTableId': 'string',
                'SubnetId': 'string',
                'GatewayId': 'string',
                'AssociationState': {
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failed',
                    'StatusMessage': 'string'
                }
            },
        ],
        'PropagatingVgws': [
            {
                'GatewayId': 'string'
            },
        ],
        'RouteTableId': 'string',
        'Routes': [
            {
                'DestinationCidrBlock': 'string',
                'DestinationIpv6CidrBlock': 'string',
                'DestinationPrefixListId': 'string',
                'EgressOnlyInternetGatewayId': 'string',
                'GatewayId': 'string',
                'InstanceId': 'string',
                'InstanceOwnerId': 'string',
                'NatGatewayId': 'string',
                'TransitGatewayId': 'string',
                'LocalGatewayId': 'string',
                'NetworkInterfaceId': 'string',
                'Origin': 'CreateRouteTable'|'CreateRoute'|'EnableVgwRoutePropagation',
                'State': 'active'|'blackhole',
                'VpcPeeringConnectionId': 'string'
            },
        ],
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VpcId': 'string',
        'OwnerId': 'string'
    }
}


Response Structure

(dict) --

RouteTable (dict) --
Information about the route table.

Associations (list) --
The associations between the route table and one or more subnets or a gateway.

(dict) --
Describes an association between a route table and a subnet or gateway.

Main (boolean) --
Indicates whether this is the main route table.

RouteTableAssociationId (string) --
The ID of the association.

RouteTableId (string) --
The ID of the route table.

SubnetId (string) --
The ID of the subnet. A subnet ID is not returned for an implicit association.

GatewayId (string) --
The ID of the internet gateway or virtual private gateway.

AssociationState (dict) --
The state of the association.

State (string) --
The state of the association.

StatusMessage (string) --
The status message, if applicable.







PropagatingVgws (list) --
Any virtual private gateway (VGW) propagating routes.

(dict) --
Describes a virtual private gateway propagating route.

GatewayId (string) --
The ID of the virtual private gateway.





RouteTableId (string) --
The ID of the route table.

Routes (list) --
The routes in the route table.

(dict) --
Describes a route in a route table.

DestinationCidrBlock (string) --
The IPv4 CIDR block used for the destination match.

DestinationIpv6CidrBlock (string) --
The IPv6 CIDR block used for the destination match.

DestinationPrefixListId (string) --
The prefix of the AWS service.

EgressOnlyInternetGatewayId (string) --
The ID of the egress-only internet gateway.

GatewayId (string) --
The ID of a gateway attached to your VPC.

InstanceId (string) --
The ID of a NAT instance in your VPC.

InstanceOwnerId (string) --
The AWS account ID of the owner of the instance.

NatGatewayId (string) --
The ID of a NAT gateway.

TransitGatewayId (string) --
The ID of a transit gateway.

LocalGatewayId (string) --
The ID of the local gateway.

NetworkInterfaceId (string) --
The ID of the network interface.

Origin (string) --
Describes how the route was created.

CreateRouteTable - The route was automatically created when the route table was created.
CreateRoute - The route was manually added to the route table.
EnableVgwRoutePropagation - The route was propagated by route propagation.


State (string) --
The state of the route. The blackhole state indicates that the route\'s target isn\'t available (for example, the specified gateway isn\'t attached to the VPC, or the specified NAT instance has been terminated).

VpcPeeringConnectionId (string) --
The ID of a VPC peering connection.





Tags (list) --
Any tags assigned to the route table.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcId (string) --
The ID of the VPC.

OwnerId (string) --
The ID of the AWS account that owns the route table.









Examples
This example creates a route table for the specified VPC.
response = client.create_route_table(
    VpcId='vpc-a01106c2',
)

print(response)


Expected Output:
{
    'RouteTable': {
        'Associations': [
        ],
        'PropagatingVgws': [
        ],
        'RouteTableId': 'rtb-22574640',
        'Routes': [
            {
                'DestinationCidrBlock': '10.0.0.0/16',
                'GatewayId': 'local',
                'State': 'active',
            },
        ],
        'Tags': [
        ],
        'VpcId': 'vpc-a01106c2',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'RouteTable': {
            'Associations': [
                {
                    'Main': True|False,
                    'RouteTableAssociationId': 'string',
                    'RouteTableId': 'string',
                    'SubnetId': 'string',
                    'GatewayId': 'string',
                    'AssociationState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failed',
                        'StatusMessage': 'string'
                    }
                },
            ],
            'PropagatingVgws': [
                {
                    'GatewayId': 'string'
                },
            ],
            'RouteTableId': 'string',
            'Routes': [
                {
                    'DestinationCidrBlock': 'string',
                    'DestinationIpv6CidrBlock': 'string',
                    'DestinationPrefixListId': 'string',
                    'EgressOnlyInternetGatewayId': 'string',
                    'GatewayId': 'string',
                    'InstanceId': 'string',
                    'InstanceOwnerId': 'string',
                    'NatGatewayId': 'string',
                    'TransitGatewayId': 'string',
                    'LocalGatewayId': 'string',
                    'NetworkInterfaceId': 'string',
                    'Origin': 'CreateRouteTable'|'CreateRoute'|'EnableVgwRoutePropagation',
                    'State': 'active'|'blackhole',
                    'VpcPeeringConnectionId': 'string'
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcId': 'string',
            'OwnerId': 'string'
        }
    }
    
    
    :returns: 
    CreateRouteTable - The route was automatically created when the route table was created.
    CreateRoute - The route was manually added to the route table.
    EnableVgwRoutePropagation - The route was propagated by route propagation.
    
    """
    pass

def create_security_group(Description=None, GroupName=None, VpcId=None, DryRun=None):
    """
    Creates a security group.
    A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. For more information, see Amazon EC2 Security Groups in the Amazon Elastic Compute Cloud User Guide and Security Groups for Your VPC in the Amazon Virtual Private Cloud User Guide .
    When you create a security group, you specify a friendly name of your choice. You can have a security group for use in EC2-Classic with the same name as a security group for use in a VPC. However, you can\'t have two security groups for use in EC2-Classic with the same name or two security groups for use in a VPC with the same name.
    You have a default security group for use in EC2-Classic and a default security group for use in your VPC. If you don\'t specify a security group when you launch an instance, the instance is launched into the appropriate default security group. A default security group includes a default rule that grants instances unrestricted network access to each other.
    You can add or remove rules from your security groups using  AuthorizeSecurityGroupIngress ,  AuthorizeSecurityGroupEgress ,  RevokeSecurityGroupIngress , and  RevokeSecurityGroupEgress .
    For more information about VPC security group limits, see Amazon VPC Limits .
    See also: AWS API Documentation
    
    Examples
    This example creates a security group for the specified VPC.
    Expected Output:
    
    :example: response = client.create_security_group(
        Description='string',
        GroupName='string',
        VpcId='string',
        DryRun=True|False
    )
    
    
    :type Description: string
    :param Description: [REQUIRED]\nA description for the security group. This is informational only.\nConstraints: Up to 255 characters in length\nConstraints for EC2-Classic: ASCII characters\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n

    :type GroupName: string
    :param GroupName: [REQUIRED]\nThe name of the security group.\nConstraints: Up to 255 characters in length. Cannot start with sg- .\nConstraints for EC2-Classic: ASCII characters\nConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n

    :type VpcId: string
    :param VpcId: [EC2-VPC] The ID of the VPC. Required for EC2-VPC.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'GroupId': 'string'
}


Response Structure

(dict) --

GroupId (string) --
The ID of the security group.







Examples
This example creates a security group for the specified VPC.
response = client.create_security_group(
    Description='My security group',
    GroupName='my-security-group',
    VpcId='vpc-1a2b3c4d',
)

print(response)


Expected Output:
{
    'GroupId': 'sg-903004f8',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'GroupId': 'string'
    }
    
    
    """
    pass

def create_snapshot(Description=None, VolumeId=None, TagSpecifications=None, DryRun=None):
    """
    Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots for backups, to make copies of EBS volumes, and to save data before shutting down an instance.
    When a snapshot is created, any AWS Marketplace product codes that are associated with the source volume are propagated to the snapshot.
    You can take a snapshot of an attached volume that is in use. However, snapshots only capture data that has been written to your EBS volume at the time the snapshot command is issued; this may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the volume long enough to take a snapshot, your snapshot should be complete. However, if you cannot pause all file writes to the volume, you should unmount the volume from within the instance, issue the snapshot command, and then remount the volume to ensure a consistent and complete snapshot. You may remount and use your volume while the snapshot status is pending .
    To create a snapshot for EBS volumes that serve as root devices, you should stop the instance before taking the snapshot.
    Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes that are created from encrypted snapshots are also automatically encrypted. Your encrypted volumes and any associated snapshots always remain protected.
    You can tag your snapshots during creation. For more information, see Tagging Your Amazon EC2 Resources in the Amazon Elastic Compute Cloud User Guide .
    For more information, see Amazon Elastic Block Store and Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a snapshot of the volume with a volume ID of vol-1234567890abcdef0 and a short description to identify the snapshot.
    Expected Output:
    
    :example: response = client.create_snapshot(
        Description='string',
        VolumeId='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type Description: string
    :param Description: A description for the snapshot.

    :type VolumeId: string
    :param VolumeId: [REQUIRED]\nThe ID of the EBS volume.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the snapshot during creation.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'DataEncryptionKeyId': 'string',
    'Description': 'string',
    'Encrypted': True|False,
    'KmsKeyId': 'string',
    'OwnerId': 'string',
    'Progress': 'string',
    'SnapshotId': 'string',
    'StartTime': datetime(2015, 1, 1),
    'State': 'pending'|'completed'|'error',
    'StateMessage': 'string',
    'VolumeId': 'string',
    'VolumeSize': 123,
    'OwnerAlias': 'string',
    'Tags': [
        {
            'Key': 'string',
            'Value': 'string'
        },
    ]
}


Response Structure

(dict) --
Describes a snapshot.

DataEncryptionKeyId (string) --
The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by  DescribeSnapshots .

Description (string) --
The description for the snapshot.

Encrypted (boolean) --
Indicates whether the snapshot is encrypted.

KmsKeyId (string) --
The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.

OwnerId (string) --
The AWS account ID of the EBS snapshot owner.

Progress (string) --
The progress of the snapshot, as a percentage.

SnapshotId (string) --
The ID of the snapshot. Each snapshot receives a unique identifier when it is created.

StartTime (datetime) --
The time stamp when the snapshot was initiated.

State (string) --
The snapshot state.

StateMessage (string) --
Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by  DescribeSnapshots .

VolumeId (string) --
The ID of the volume that was used to create the snapshot. Snapshots created by the  CopySnapshot action have an arbitrary volume ID that should not be used for any purpose.

VolumeSize (integer) --
The size of the volume, in GiB.

OwnerAlias (string) --
Value from an Amazon-maintained list (amazon | self | all | aws-marketplace | microsoft ) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.

Tags (list) --
Any tags assigned to the snapshot.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.











Examples
This example creates a snapshot of the volume with a volume ID of vol-1234567890abcdef0 and a short description to identify the snapshot.
response = client.create_snapshot(
    Description='This is my root volume snapshot.',
    VolumeId='vol-1234567890abcdef0',
)

print(response)


Expected Output:
{
    'Description': 'This is my root volume snapshot.',
    'OwnerId': '012345678910',
    'SnapshotId': 'snap-066877671789bd71b',
    'StartTime': datetime(2014, 2, 28, 21, 6, 1, 4, 59, 0),
    'State': 'pending',
    'Tags': [
    ],
    'VolumeId': 'vol-1234567890abcdef0',
    'VolumeSize': 8,
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DataEncryptionKeyId': 'string',
        'Description': 'string',
        'Encrypted': True|False,
        'KmsKeyId': 'string',
        'OwnerId': 'string',
        'Progress': 'string',
        'SnapshotId': 'string',
        'StartTime': datetime(2015, 1, 1),
        'State': 'pending'|'completed'|'error',
        'StateMessage': 'string',
        'VolumeId': 'string',
        'VolumeSize': 123,
        'OwnerAlias': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
    
    
    """
    pass

def create_snapshots(Description=None, InstanceSpecification=None, TagSpecifications=None, DryRun=None, CopyTagsFromSource=None):
    """
    Creates crash-consistent snapshots of multiple EBS volumes and stores the data in S3. Volumes are chosen by specifying an instance. Any attached volumes will produce one snapshot each that is crash-consistent across the instance. Boot volumes can be excluded by changing the parameters.
    See also: AWS API Documentation
    
    
    :example: response = client.create_snapshots(
        Description='string',
        InstanceSpecification={
            'InstanceId': 'string',
            'ExcludeBootVolume': True|False
        },
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False,
        CopyTagsFromSource='volume'
    )
    
    
    :type Description: string
    :param Description: A description propagated to every snapshot specified by the instance.

    :type InstanceSpecification: dict
    :param InstanceSpecification: [REQUIRED]\nThe instance to specify which volumes should be included in the snapshots.\n\nInstanceId (string) --The instance to specify which volumes should be snapshotted.\n\nExcludeBootVolume (boolean) --Excludes the root volume from being snapshotted.\n\n\n

    :type TagSpecifications: list
    :param TagSpecifications: Tags to apply to every snapshot specified by the instance.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type CopyTagsFromSource: string
    :param CopyTagsFromSource: Copies the tags from the specified volume to corresponding snapshot.

    :rtype: dict

ReturnsResponse Syntax
{
    'Snapshots': [
        {
            'Description': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'Encrypted': True|False,
            'VolumeId': 'string',
            'State': 'pending'|'completed'|'error',
            'VolumeSize': 123,
            'StartTime': datetime(2015, 1, 1),
            'Progress': 'string',
            'OwnerId': 'string',
            'SnapshotId': 'string'
        },
    ]
}


Response Structure

(dict) --

Snapshots (list) --
List of snapshots.

(dict) --
Information about a snapshot.

Description (string) --
Description specified by the CreateSnapshotRequest that has been applied to all snapshots.

Tags (list) --
Tags associated with this snapshot.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





Encrypted (boolean) --
Indicates whether the snapshot is encrypted.

VolumeId (string) --
Source volume from which this snapshot was created.

State (string) --
Current state of the snapshot.

VolumeSize (integer) --
Size of the volume from which this snapshot was created.

StartTime (datetime) --
Time this snapshot was started. This is the same for all snapshots initiated by the same request.

Progress (string) --
Progress this snapshot has made towards completing.

OwnerId (string) --
Account id used when creating this snapshot.

SnapshotId (string) --
Snapshot id that can be used to describe this snapshot.












    :return: {
        'Snapshots': [
            {
                'Description': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'Encrypted': True|False,
                'VolumeId': 'string',
                'State': 'pending'|'completed'|'error',
                'VolumeSize': 123,
                'StartTime': datetime(2015, 1, 1),
                'Progress': 'string',
                'OwnerId': 'string',
                'SnapshotId': 'string'
            },
        ]
    }
    
    
    """
    pass

def create_spot_datafeed_subscription(Bucket=None, DryRun=None, Prefix=None):
    """
    Creates a data feed for Spot Instances, enabling you to view Spot Instance usage logs. You can create one data feed per AWS account. For more information, see Spot Instance Data Feed in the Amazon EC2 User Guide for Linux Instances .
    See also: AWS API Documentation
    
    Examples
    This example creates a Spot Instance data feed for your AWS account.
    Expected Output:
    
    :example: response = client.create_spot_datafeed_subscription(
        Bucket='string',
        DryRun=True|False,
        Prefix='string'
    )
    
    
    :type Bucket: string
    :param Bucket: [REQUIRED]\nThe Amazon S3 bucket in which to store the Spot Instance data feed.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Prefix: string
    :param Prefix: A prefix for the data feed file names.

    :rtype: dict

ReturnsResponse Syntax
{
    'SpotDatafeedSubscription': {
        'Bucket': 'string',
        'Fault': {
            'Code': 'string',
            'Message': 'string'
        },
        'OwnerId': 'string',
        'Prefix': 'string',
        'State': 'Active'|'Inactive'
    }
}


Response Structure

(dict) --
Contains the output of CreateSpotDatafeedSubscription.

SpotDatafeedSubscription (dict) --
The Spot Instance data feed subscription.

Bucket (string) --
The Amazon S3 bucket where the Spot Instance data feed is located.

Fault (dict) --
The fault codes for the Spot Instance request, if any.

Code (string) --
The reason code for the Spot Instance state change.

Message (string) --
The message for the Spot Instance state change.



OwnerId (string) --
The AWS account ID of the account.

Prefix (string) --
The prefix that is prepended to data feed files.

State (string) --
The state of the Spot Instance data feed subscription.









Examples
This example creates a Spot Instance data feed for your AWS account.
response = client.create_spot_datafeed_subscription(
    Bucket='my-s3-bucket',
    Prefix='spotdata',
)

print(response)


Expected Output:
{
    'SpotDatafeedSubscription': {
        'Bucket': 'my-s3-bucket',
        'OwnerId': '123456789012',
        'Prefix': 'spotdata',
        'State': 'Active',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SpotDatafeedSubscription': {
            'Bucket': 'string',
            'Fault': {
                'Code': 'string',
                'Message': 'string'
            },
            'OwnerId': 'string',
            'Prefix': 'string',
            'State': 'Active'|'Inactive'
        }
    }
    
    
    """
    pass

def create_subnet(AvailabilityZone=None, AvailabilityZoneId=None, CidrBlock=None, Ipv6CidrBlock=None, OutpostArn=None, VpcId=None, DryRun=None):
    """
    Creates a subnet in an existing VPC.
    When you create each subnet, you provide the VPC ID and IPv4 CIDR block for the subnet. After you create a subnet, you can\'t change its CIDR block. The size of the subnet\'s IPv4 CIDR block can be the same as a VPC\'s IPv4 CIDR block, or a subset of a VPC\'s IPv4 CIDR block. If you create more than one subnet in a VPC, the subnets\' CIDR blocks must not overlap. The smallest IPv4 subnet (and VPC) you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses).
    If you\'ve associated an IPv6 CIDR block with your VPC, you can create a subnet with an IPv6 CIDR block that uses a /64 prefix length.
    If you add more than one subnet to a VPC, they\'re set up in a star topology with a logical router in the middle.
    If you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP address doesn\'t change if you stop and restart the instance (unlike a similar instance launched outside a VPC, which gets a new IP address when restarted). It\'s therefore possible to have a subnet with no running instances (they\'re all stopped), but no remaining IP addresses available.
    For more information about subnets, see Your VPC and Subnets in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a subnet in the specified VPC with the specified CIDR block. We recommend that you let us select an Availability Zone for you.
    Expected Output:
    
    :example: response = client.create_subnet(
        AvailabilityZone='string',
        AvailabilityZoneId='string',
        CidrBlock='string',
        Ipv6CidrBlock='string',
        OutpostArn='string',
        VpcId='string',
        DryRun=True|False
    )
    
    
    :type AvailabilityZone: string
    :param AvailabilityZone: The Availability Zone or Local Zone for the subnet.\nDefault: AWS selects one for you. If you create more than one subnet in your VPC, we do not necessarily select a different zone for each subnet.\nTo create a subnet in a Local Zone, set this value to the Local Zone ID, for example us-west-2-lax-1a . For information about the Regions that support Local Zones, see Available Regions in the Amazon Elastic Compute Cloud User Guide .\nTo create a subnet in an Outpost, set this value to the Availability Zone for the Outpost and specify the Outpost ARN.\n

    :type AvailabilityZoneId: string
    :param AvailabilityZoneId: The AZ ID or the Local Zone ID of the subnet.

    :type CidrBlock: string
    :param CidrBlock: [REQUIRED]\nThe IPv4 network range for the subnet, in CIDR notation. For example, 10.0.0.0/24 .\n

    :type Ipv6CidrBlock: string
    :param Ipv6CidrBlock: The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.

    :type OutpostArn: string
    :param OutpostArn: The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost ARN, you must also specify the Availability Zone of the Outpost subnet.

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Subnet': {
        'AvailabilityZone': 'string',
        'AvailabilityZoneId': 'string',
        'AvailableIpAddressCount': 123,
        'CidrBlock': 'string',
        'DefaultForAz': True|False,
        'MapPublicIpOnLaunch': True|False,
        'MapCustomerOwnedIpOnLaunch': True|False,
        'CustomerOwnedIpv4Pool': 'string',
        'State': 'pending'|'available',
        'SubnetId': 'string',
        'VpcId': 'string',
        'OwnerId': 'string',
        'AssignIpv6AddressOnCreation': True|False,
        'Ipv6CidrBlockAssociationSet': [
            {
                'AssociationId': 'string',
                'Ipv6CidrBlock': 'string',
                'Ipv6CidrBlockState': {
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                    'StatusMessage': 'string'
                }
            },
        ],
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'SubnetArn': 'string',
        'OutpostArn': 'string'
    }
}


Response Structure

(dict) --

Subnet (dict) --
Information about the subnet.

AvailabilityZone (string) --
The Availability Zone of the subnet.

AvailabilityZoneId (string) --
The AZ ID of the subnet.

AvailableIpAddressCount (integer) --
The number of unused private IPv4 addresses in the subnet. The IPv4 addresses for any stopped instances are considered unavailable.

CidrBlock (string) --
The IPv4 CIDR block assigned to the subnet.

DefaultForAz (boolean) --
Indicates whether this is the default subnet for the Availability Zone.

MapPublicIpOnLaunch (boolean) --
Indicates whether instances launched in this subnet receive a public IPv4 address.

MapCustomerOwnedIpOnLaunch (boolean) --
Indicates whether a network interface created in this subnet (including a network interface created by  RunInstances ) receives a customer-owned IPv4 address.

CustomerOwnedIpv4Pool (string) --
The customer-owned IPv4 address pool associated with the subnet.

State (string) --
The current state of the subnet.

SubnetId (string) --
The ID of the subnet.

VpcId (string) --
The ID of the VPC the subnet is in.

OwnerId (string) --
The ID of the AWS account that owns the subnet.

AssignIpv6AddressOnCreation (boolean) --
Indicates whether a network interface created in this subnet (including a network interface created by  RunInstances ) receives an IPv6 address.

Ipv6CidrBlockAssociationSet (list) --
Information about the IPv6 CIDR blocks associated with the subnet.

(dict) --
Describes an IPv6 CIDR block associated with a subnet.

AssociationId (string) --
The association ID for the CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of a CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.







Tags (list) --
Any tags assigned to the subnet.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





SubnetArn (string) --
The Amazon Resource Name (ARN) of the subnet.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.









Examples
This example creates a subnet in the specified VPC with the specified CIDR block. We recommend that you let us select an Availability Zone for you.
response = client.create_subnet(
    CidrBlock='10.0.1.0/24',
    VpcId='vpc-a01106c2',
)

print(response)


Expected Output:
{
    'Subnet': {
        'AvailabilityZone': 'us-west-2c',
        'AvailableIpAddressCount': 251,
        'CidrBlock': '10.0.1.0/24',
        'State': 'pending',
        'SubnetId': 'subnet-9d4a7b6c',
        'VpcId': 'vpc-a01106c2',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Subnet': {
            'AvailabilityZone': 'string',
            'AvailabilityZoneId': 'string',
            'AvailableIpAddressCount': 123,
            'CidrBlock': 'string',
            'DefaultForAz': True|False,
            'MapPublicIpOnLaunch': True|False,
            'MapCustomerOwnedIpOnLaunch': True|False,
            'CustomerOwnedIpv4Pool': 'string',
            'State': 'pending'|'available',
            'SubnetId': 'string',
            'VpcId': 'string',
            'OwnerId': 'string',
            'AssignIpv6AddressOnCreation': True|False,
            'Ipv6CidrBlockAssociationSet': [
                {
                    'AssociationId': 'string',
                    'Ipv6CidrBlock': 'string',
                    'Ipv6CidrBlockState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                        'StatusMessage': 'string'
                    }
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'SubnetArn': 'string',
            'OutpostArn': 'string'
        }
    }
    
    
    """
    pass

def create_tags(DryRun=None, Resources=None, Tags=None):
    """
    Adds or overwrites only the specified tags for the specified Amazon EC2 resource or resources. When you specify an existing tag key, the value is overwritten with the new value. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique per resource.
    For more information about tags, see Tagging Your Resources in the Amazon Elastic Compute Cloud User Guide . For more information about creating IAM policies that control users\' access to resources based on tags, see Supported Resource-Level Permissions for Amazon EC2 API Actions in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example adds the tag Stack=production to the specified image, or overwrites an existing tag for the AMI where the tag key is Stack.
    Expected Output:
    
    :example: response = client.create_tags(
        DryRun=True|False,
        Resources=[
            'string',
        ],
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Resources: list
    :param Resources: [REQUIRED]\nThe IDs of the resources, separated by spaces.\nConstraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.\n\n(string) --\n\n

    :type Tags: list
    :param Tags: [REQUIRED]\nThe tags. The value parameter is required, but if you don\'t want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n

    :return: response = client.create_tags(
        Resources=[
            'ami-78a54011',
        ],
        Tags=[
            {
                'Key': 'Stack',
                'Value': 'production',
            },
        ],
    )
    
    print(response)
    
    
    """
    pass

def create_traffic_mirror_filter(Description=None, TagSpecifications=None, DryRun=None, ClientToken=None):
    """
    Creates a Traffic Mirror filter.
    A Traffic Mirror filter is a set of rules that defines the traffic to mirror.
    By default, no traffic is mirrored. To mirror traffic, use CreateTrafficMirrorFilterRule to add Traffic Mirror rules to the filter. The rules you add define what traffic gets mirrored. You can also use ModifyTrafficMirrorFilterNetworkServices to mirror supported network services.
    See also: AWS API Documentation
    
    
    :example: response = client.create_traffic_mirror_filter(
        Description='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False,
        ClientToken='string'
    )
    
    
    :type Description: string
    :param Description: The description of the Traffic Mirror filter.

    :type TagSpecifications: list
    :param TagSpecifications: The tags to assign to a Traffic Mirror filter.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorFilter': {
        'TrafficMirrorFilterId': 'string',
        'IngressFilterRules': [
            {
                'TrafficMirrorFilterRuleId': 'string',
                'TrafficMirrorFilterId': 'string',
                'TrafficDirection': 'ingress'|'egress',
                'RuleNumber': 123,
                'RuleAction': 'accept'|'reject',
                'Protocol': 123,
                'DestinationPortRange': {
                    'FromPort': 123,
                    'ToPort': 123
                },
                'SourcePortRange': {
                    'FromPort': 123,
                    'ToPort': 123
                },
                'DestinationCidrBlock': 'string',
                'SourceCidrBlock': 'string',
                'Description': 'string'
            },
        ],
        'EgressFilterRules': [
            {
                'TrafficMirrorFilterRuleId': 'string',
                'TrafficMirrorFilterId': 'string',
                'TrafficDirection': 'ingress'|'egress',
                'RuleNumber': 123,
                'RuleAction': 'accept'|'reject',
                'Protocol': 123,
                'DestinationPortRange': {
                    'FromPort': 123,
                    'ToPort': 123
                },
                'SourcePortRange': {
                    'FromPort': 123,
                    'ToPort': 123
                },
                'DestinationCidrBlock': 'string',
                'SourceCidrBlock': 'string',
                'Description': 'string'
            },
        ],
        'NetworkServices': [
            'amazon-dns',
        ],
        'Description': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    },
    'ClientToken': 'string'
}


Response Structure

(dict) --

TrafficMirrorFilter (dict) --
Information about the Traffic Mirror filter.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter.

IngressFilterRules (list) --
Information about the ingress rules that are associated with the Traffic Mirror filter.

(dict) --
Describes the Traffic Mirror rule.

TrafficMirrorFilterRuleId (string) --
The ID of the Traffic Mirror rule.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter that the rule is associated with.

TrafficDirection (string) --
The traffic direction assigned to the Traffic Mirror rule.

RuleNumber (integer) --
The rule number of the Traffic Mirror rule.

RuleAction (string) --
The action assigned to the Traffic Mirror rule.

Protocol (integer) --
The protocol assigned to the Traffic Mirror rule.

DestinationPortRange (dict) --
The destination port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



SourcePortRange (dict) --
The source port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



DestinationCidrBlock (string) --
The destination CIDR block assigned to the Traffic Mirror rule.

SourceCidrBlock (string) --
The source CIDR block assigned to the Traffic Mirror rule.

Description (string) --
The description of the Traffic Mirror rule.





EgressFilterRules (list) --
Information about the egress rules that are associated with the Traffic Mirror filter.

(dict) --
Describes the Traffic Mirror rule.

TrafficMirrorFilterRuleId (string) --
The ID of the Traffic Mirror rule.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter that the rule is associated with.

TrafficDirection (string) --
The traffic direction assigned to the Traffic Mirror rule.

RuleNumber (integer) --
The rule number of the Traffic Mirror rule.

RuleAction (string) --
The action assigned to the Traffic Mirror rule.

Protocol (integer) --
The protocol assigned to the Traffic Mirror rule.

DestinationPortRange (dict) --
The destination port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



SourcePortRange (dict) --
The source port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



DestinationCidrBlock (string) --
The destination CIDR block assigned to the Traffic Mirror rule.

SourceCidrBlock (string) --
The source CIDR block assigned to the Traffic Mirror rule.

Description (string) --
The description of the Traffic Mirror rule.





NetworkServices (list) --
The network service traffic that is associated with the Traffic Mirror filter.

(string) --


Description (string) --
The description of the Traffic Mirror filter.

Tags (list) --
The tags assigned to the Traffic Mirror filter.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.







ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .








    :return: {
        'TrafficMirrorFilter': {
            'TrafficMirrorFilterId': 'string',
            'IngressFilterRules': [
                {
                    'TrafficMirrorFilterRuleId': 'string',
                    'TrafficMirrorFilterId': 'string',
                    'TrafficDirection': 'ingress'|'egress',
                    'RuleNumber': 123,
                    'RuleAction': 'accept'|'reject',
                    'Protocol': 123,
                    'DestinationPortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'SourcePortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'DestinationCidrBlock': 'string',
                    'SourceCidrBlock': 'string',
                    'Description': 'string'
                },
            ],
            'EgressFilterRules': [
                {
                    'TrafficMirrorFilterRuleId': 'string',
                    'TrafficMirrorFilterId': 'string',
                    'TrafficDirection': 'ingress'|'egress',
                    'RuleNumber': 123,
                    'RuleAction': 'accept'|'reject',
                    'Protocol': 123,
                    'DestinationPortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'SourcePortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'DestinationCidrBlock': 'string',
                    'SourceCidrBlock': 'string',
                    'Description': 'string'
                },
            ],
            'NetworkServices': [
                'amazon-dns',
            ],
            'Description': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
        'ClientToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_traffic_mirror_filter_rule(TrafficMirrorFilterId=None, TrafficDirection=None, RuleNumber=None, RuleAction=None, DestinationPortRange=None, SourcePortRange=None, Protocol=None, DestinationCidrBlock=None, SourceCidrBlock=None, Description=None, DryRun=None, ClientToken=None):
    """
    Creates a Traffic Mirror filter rule.
    A Traffic Mirror rule defines the Traffic Mirror source traffic to mirror.
    You need the Traffic Mirror filter ID when you create the rule.
    See also: AWS API Documentation
    
    
    :example: response = client.create_traffic_mirror_filter_rule(
        TrafficMirrorFilterId='string',
        TrafficDirection='ingress'|'egress',
        RuleNumber=123,
        RuleAction='accept'|'reject',
        DestinationPortRange={
            'FromPort': 123,
            'ToPort': 123
        },
        SourcePortRange={
            'FromPort': 123,
            'ToPort': 123
        },
        Protocol=123,
        DestinationCidrBlock='string',
        SourceCidrBlock='string',
        Description='string',
        DryRun=True|False,
        ClientToken='string'
    )
    
    
    :type TrafficMirrorFilterId: string
    :param TrafficMirrorFilterId: [REQUIRED]\nThe ID of the filter that this rule is associated with.\n

    :type TrafficDirection: string
    :param TrafficDirection: [REQUIRED]\nThe type of traffic (ingress | egress ).\n

    :type RuleNumber: integer
    :param RuleNumber: [REQUIRED]\nThe number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.\n

    :type RuleAction: string
    :param RuleAction: [REQUIRED]\nThe action to take (accept | reject ) on the filtered traffic.\n

    :type DestinationPortRange: dict
    :param DestinationPortRange: The destination port range.\n\nFromPort (integer) --The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n\nToPort (integer) --The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n\n\n

    :type SourcePortRange: dict
    :param SourcePortRange: The source port range.\n\nFromPort (integer) --The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n\nToPort (integer) --The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n\n\n

    :type Protocol: integer
    :param Protocol: The protocol, for example UDP, to assign to the Traffic Mirror rule.\nFor information about the protocol value, see Protocol Numbers on the Internet Assigned Numbers Authority (IANA) website.\n

    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe destination CIDR block to assign to the Traffic Mirror rule.\n

    :type SourceCidrBlock: string
    :param SourceCidrBlock: [REQUIRED]\nThe source CIDR block to assign to the Traffic Mirror rule.\n

    :type Description: string
    :param Description: The description of the Traffic Mirror rule.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorFilterRule': {
        'TrafficMirrorFilterRuleId': 'string',
        'TrafficMirrorFilterId': 'string',
        'TrafficDirection': 'ingress'|'egress',
        'RuleNumber': 123,
        'RuleAction': 'accept'|'reject',
        'Protocol': 123,
        'DestinationPortRange': {
            'FromPort': 123,
            'ToPort': 123
        },
        'SourcePortRange': {
            'FromPort': 123,
            'ToPort': 123
        },
        'DestinationCidrBlock': 'string',
        'SourceCidrBlock': 'string',
        'Description': 'string'
    },
    'ClientToken': 'string'
}


Response Structure

(dict) --

TrafficMirrorFilterRule (dict) --
The Traffic Mirror rule.

TrafficMirrorFilterRuleId (string) --
The ID of the Traffic Mirror rule.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter that the rule is associated with.

TrafficDirection (string) --
The traffic direction assigned to the Traffic Mirror rule.

RuleNumber (integer) --
The rule number of the Traffic Mirror rule.

RuleAction (string) --
The action assigned to the Traffic Mirror rule.

Protocol (integer) --
The protocol assigned to the Traffic Mirror rule.

DestinationPortRange (dict) --
The destination port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



SourcePortRange (dict) --
The source port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



DestinationCidrBlock (string) --
The destination CIDR block assigned to the Traffic Mirror rule.

SourceCidrBlock (string) --
The source CIDR block assigned to the Traffic Mirror rule.

Description (string) --
The description of the Traffic Mirror rule.



ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .








    :return: {
        'TrafficMirrorFilterRule': {
            'TrafficMirrorFilterRuleId': 'string',
            'TrafficMirrorFilterId': 'string',
            'TrafficDirection': 'ingress'|'egress',
            'RuleNumber': 123,
            'RuleAction': 'accept'|'reject',
            'Protocol': 123,
            'DestinationPortRange': {
                'FromPort': 123,
                'ToPort': 123
            },
            'SourcePortRange': {
                'FromPort': 123,
                'ToPort': 123
            },
            'DestinationCidrBlock': 'string',
            'SourceCidrBlock': 'string',
            'Description': 'string'
        },
        'ClientToken': 'string'
    }
    
    
    """
    pass

def create_traffic_mirror_session(NetworkInterfaceId=None, TrafficMirrorTargetId=None, TrafficMirrorFilterId=None, PacketLength=None, SessionNumber=None, VirtualNetworkId=None, Description=None, TagSpecifications=None, DryRun=None, ClientToken=None):
    """
    Creates a Traffic Mirror session.
    A Traffic Mirror session actively copies packets from a Traffic Mirror source to a Traffic Mirror target. Create a filter, and then assign it to the session to define a subset of the traffic to mirror, for example all TCP traffic.
    The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in a different VPC connected via VPC peering or a transit gateway.
    By default, no traffic is mirrored. Use CreateTrafficMirrorFilter to create filter rules that specify the traffic to mirror.
    See also: AWS API Documentation
    
    
    :example: response = client.create_traffic_mirror_session(
        NetworkInterfaceId='string',
        TrafficMirrorTargetId='string',
        TrafficMirrorFilterId='string',
        PacketLength=123,
        SessionNumber=123,
        VirtualNetworkId=123,
        Description='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False,
        ClientToken='string'
    )
    
    
    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the source network interface.\n

    :type TrafficMirrorTargetId: string
    :param TrafficMirrorTargetId: [REQUIRED]\nThe ID of the Traffic Mirror target.\n

    :type TrafficMirrorFilterId: string
    :param TrafficMirrorFilterId: [REQUIRED]\nThe ID of the Traffic Mirror filter.\n

    :type PacketLength: integer
    :param PacketLength: The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.\nIf you do not want to mirror the entire packet, use the PacketLength parameter to specify the number of bytes in each packet to mirror.\n

    :type SessionNumber: integer
    :param SessionNumber: [REQUIRED]\nThe session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.\nValid values are 1-32766.\n

    :type VirtualNetworkId: integer
    :param VirtualNetworkId: The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see RFC 7348 . If you do not specify a VirtualNetworkId , an account-wide unique id is chosen at random.

    :type Description: string
    :param Description: The description of the Traffic Mirror session.

    :type TagSpecifications: list
    :param TagSpecifications: The tags to assign to a Traffic Mirror session.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorSession': {
        'TrafficMirrorSessionId': 'string',
        'TrafficMirrorTargetId': 'string',
        'TrafficMirrorFilterId': 'string',
        'NetworkInterfaceId': 'string',
        'OwnerId': 'string',
        'PacketLength': 123,
        'SessionNumber': 123,
        'VirtualNetworkId': 123,
        'Description': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    },
    'ClientToken': 'string'
}


Response Structure

(dict) --

TrafficMirrorSession (dict) --
Information about the Traffic Mirror session.

TrafficMirrorSessionId (string) --
The ID for the Traffic Mirror session.

TrafficMirrorTargetId (string) --
The ID of the Traffic Mirror target.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter.

NetworkInterfaceId (string) --
The ID of the Traffic Mirror session\'s network interface.

OwnerId (string) --
The ID of the account that owns the Traffic Mirror session.

PacketLength (integer) --
The number of bytes in each packet to mirror. These are the bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet

SessionNumber (integer) --
The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.
Valid values are 1-32766.

VirtualNetworkId (integer) --
The virtual network ID associated with the Traffic Mirror session.

Description (string) --
The description of the Traffic Mirror session.

Tags (list) --
The tags assigned to the Traffic Mirror session.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.







ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .








    :return: {
        'TrafficMirrorSession': {
            'TrafficMirrorSessionId': 'string',
            'TrafficMirrorTargetId': 'string',
            'TrafficMirrorFilterId': 'string',
            'NetworkInterfaceId': 'string',
            'OwnerId': 'string',
            'PacketLength': 123,
            'SessionNumber': 123,
            'VirtualNetworkId': 123,
            'Description': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
        'ClientToken': 'string'
    }
    
    
    """
    pass

def create_traffic_mirror_target(NetworkInterfaceId=None, NetworkLoadBalancerArn=None, Description=None, TagSpecifications=None, DryRun=None, ClientToken=None):
    """
    Creates a target for your Traffic Mirror session.
    A Traffic Mirror target is the destination for mirrored traffic. The Traffic Mirror source and the Traffic Mirror target (monitoring appliances) can be in the same VPC, or in different VPCs connected via VPC peering or a transit gateway.
    A Traffic Mirror target can be a network interface, or a Network Load Balancer.
    To use the target in a Traffic Mirror session, use CreateTrafficMirrorSession .
    See also: AWS API Documentation
    
    
    :example: response = client.create_traffic_mirror_target(
        NetworkInterfaceId='string',
        NetworkLoadBalancerArn='string',
        Description='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False,
        ClientToken='string'
    )
    
    
    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: The network interface ID that is associated with the target.

    :type NetworkLoadBalancerArn: string
    :param NetworkLoadBalancerArn: The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.

    :type Description: string
    :param Description: The description of the Traffic Mirror target.

    :type TagSpecifications: list
    :param TagSpecifications: The tags to assign to the Traffic Mirror target.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .\nThis field is autopopulated if not provided.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorTarget': {
        'TrafficMirrorTargetId': 'string',
        'NetworkInterfaceId': 'string',
        'NetworkLoadBalancerArn': 'string',
        'Type': 'network-interface'|'network-load-balancer',
        'Description': 'string',
        'OwnerId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    },
    'ClientToken': 'string'
}


Response Structure

(dict) --

TrafficMirrorTarget (dict) --
Information about the Traffic Mirror target.

TrafficMirrorTargetId (string) --
The ID of the Traffic Mirror target.

NetworkInterfaceId (string) --
The network interface ID that is attached to the target.

NetworkLoadBalancerArn (string) --
The Amazon Resource Name (ARN) of the Network Load Balancer.

Type (string) --
The type of Traffic Mirror target.

Description (string) --
Information about the Traffic Mirror target.

OwnerId (string) --
The ID of the account that owns the Traffic Mirror target.

Tags (list) --
The tags assigned to the Traffic Mirror target.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.







ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .








    :return: {
        'TrafficMirrorTarget': {
            'TrafficMirrorTargetId': 'string',
            'NetworkInterfaceId': 'string',
            'NetworkLoadBalancerArn': 'string',
            'Type': 'network-interface'|'network-load-balancer',
            'Description': 'string',
            'OwnerId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
        'ClientToken': 'string'
    }
    
    
    """
    pass

def create_transit_gateway(Description=None, Options=None, TagSpecifications=None, DryRun=None):
    """
    Creates a transit gateway.
    You can use a transit gateway to interconnect your virtual private clouds (VPC) and on-premises networks. After the transit gateway enters the available state, you can attach your VPCs and VPN connections to the transit gateway.
    To attach your VPCs, use  CreateTransitGatewayVpcAttachment .
    To attach a VPN connection, use  CreateCustomerGateway to create a customer gateway and specify the ID of the customer gateway and the ID of the transit gateway in a call to  CreateVpnConnection .
    When you create a transit gateway, we create a default transit gateway route table and use it as the default association route table and the default propagation route table. You can use  CreateTransitGatewayRouteTable to create additional transit gateway route tables. If you disable automatic route propagation, we do not create a default transit gateway route table. You can use  EnableTransitGatewayRouteTablePropagation to propagate routes from a resource attachment to a transit gateway route table. If you disable automatic associations, you can use  AssociateTransitGatewayRouteTable to associate a resource attachment with a transit gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.create_transit_gateway(
        Description='string',
        Options={
            'AmazonSideAsn': 123,
            'AutoAcceptSharedAttachments': 'enable'|'disable',
            'DefaultRouteTableAssociation': 'enable'|'disable',
            'DefaultRouteTablePropagation': 'enable'|'disable',
            'VpnEcmpSupport': 'enable'|'disable',
            'DnsSupport': 'enable'|'disable',
            'MulticastSupport': 'enable'|'disable'
        },
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type Description: string
    :param Description: A description of the transit gateway.

    :type Options: dict
    :param Options: The transit gateway options.\n\nAmazonSideAsn (integer) --A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.\n\nAutoAcceptSharedAttachments (string) --Enable or disable automatic acceptance of attachment requests. The default is disable .\n\nDefaultRouteTableAssociation (string) --Enable or disable automatic association with the default association route table. The default is enable .\n\nDefaultRouteTablePropagation (string) --Enable or disable automatic propagation of routes to the default propagation route table. The default is enable .\n\nVpnEcmpSupport (string) --Enable or disable Equal Cost Multipath Protocol support.\n\nDnsSupport (string) --Enable or disable DNS support.\n\nMulticastSupport (string) --Indicates whether multicast is enabled on the transit gateway\n\n\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the transit gateway.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGateway': {
        'TransitGatewayId': 'string',
        'TransitGatewayArn': 'string',
        'State': 'pending'|'available'|'modifying'|'deleting'|'deleted',
        'OwnerId': 'string',
        'Description': 'string',
        'CreationTime': datetime(2015, 1, 1),
        'Options': {
            'AmazonSideAsn': 123,
            'AutoAcceptSharedAttachments': 'enable'|'disable',
            'DefaultRouteTableAssociation': 'enable'|'disable',
            'AssociationDefaultRouteTableId': 'string',
            'DefaultRouteTablePropagation': 'enable'|'disable',
            'PropagationDefaultRouteTableId': 'string',
            'VpnEcmpSupport': 'enable'|'disable',
            'DnsSupport': 'enable'|'disable',
            'MulticastSupport': 'enable'|'disable'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGateway (dict) --
Information about the transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

TransitGatewayArn (string) --
The Amazon Resource Name (ARN) of the transit gateway.

State (string) --
The state of the transit gateway.

OwnerId (string) --
The ID of the AWS account ID that owns the transit gateway.

Description (string) --
The description of the transit gateway.

CreationTime (datetime) --
The creation time.

Options (dict) --
The transit gateway options.

AmazonSideAsn (integer) --
A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.

AutoAcceptSharedAttachments (string) --
Indicates whether attachment requests are automatically accepted.

DefaultRouteTableAssociation (string) --
Indicates whether resource attachments are automatically associated with the default association route table.

AssociationDefaultRouteTableId (string) --
The ID of the default association route table.

DefaultRouteTablePropagation (string) --
Indicates whether resource attachments automatically propagate routes to the default propagation route table.

PropagationDefaultRouteTableId (string) --
The ID of the default propagation route table.

VpnEcmpSupport (string) --
Indicates whether Equal Cost Multipath Protocol support is enabled.

DnsSupport (string) --
Indicates whether DNS support is enabled.

MulticastSupport (string) --
Indicates whether multicast is enabled on the transit gateway



Tags (list) --
The tags for the transit gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGateway': {
            'TransitGatewayId': 'string',
            'TransitGatewayArn': 'string',
            'State': 'pending'|'available'|'modifying'|'deleting'|'deleted',
            'OwnerId': 'string',
            'Description': 'string',
            'CreationTime': datetime(2015, 1, 1),
            'Options': {
                'AmazonSideAsn': 123,
                'AutoAcceptSharedAttachments': 'enable'|'disable',
                'DefaultRouteTableAssociation': 'enable'|'disable',
                'AssociationDefaultRouteTableId': 'string',
                'DefaultRouteTablePropagation': 'enable'|'disable',
                'PropagationDefaultRouteTableId': 'string',
                'VpnEcmpSupport': 'enable'|'disable',
                'DnsSupport': 'enable'|'disable',
                'MulticastSupport': 'enable'|'disable'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_transit_gateway_multicast_domain(TransitGatewayId=None, TagSpecifications=None, DryRun=None):
    """
    Creates a multicast domain using the specified transit gateway.
    The transit gateway must be in the available state before you create a domain. Use DescribeTransitGateways to see the state of transit gateway.
    See also: AWS API Documentation
    
    
    :example: response = client.create_transit_gateway_multicast_domain(
        TransitGatewayId='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayId: string
    :param TransitGatewayId: [REQUIRED]\nThe ID of the transit gateway.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags for the transit gateway multicast domain.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayMulticastDomain': {
        'TransitGatewayMulticastDomainId': 'string',
        'TransitGatewayId': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'CreationTime': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayMulticastDomain (dict) --
Information about the transit gateway multicast domain.

TransitGatewayMulticastDomainId (string) --
The ID of the transit gateway multicast domain.

TransitGatewayId (string) --
The ID of the transit gateway.

State (string) --
The state of the transit gateway multicast domain.

CreationTime (datetime) --
The time the transit gateway multicast domain was created.

Tags (list) --
The tags for the transit gateway multicast domain.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayMulticastDomain': {
            'TransitGatewayMulticastDomainId': 'string',
            'TransitGatewayId': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_transit_gateway_peering_attachment(TransitGatewayId=None, PeerTransitGatewayId=None, PeerAccountId=None, PeerRegion=None, TagSpecifications=None, DryRun=None):
    """
    Requests a transit gateway peering attachment between the specified transit gateway (requester) and a peer transit gateway (accepter). The transit gateways must be in different Regions. The peer transit gateway can be in your account or a different AWS account.
    After you create the peering attachment, the owner of the accepter transit gateway must accept the attachment request.
    See also: AWS API Documentation
    
    
    :example: response = client.create_transit_gateway_peering_attachment(
        TransitGatewayId='string',
        PeerTransitGatewayId='string',
        PeerAccountId='string',
        PeerRegion='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayId: string
    :param TransitGatewayId: [REQUIRED]\nThe ID of the transit gateway.\n

    :type PeerTransitGatewayId: string
    :param PeerTransitGatewayId: [REQUIRED]\nThe ID of the peer transit gateway with which to create the peering attachment.\n

    :type PeerAccountId: string
    :param PeerAccountId: [REQUIRED]\nThe AWS account ID of the owner of the peer transit gateway.\n

    :type PeerRegion: string
    :param PeerRegion: [REQUIRED]\nThe Region where the peer transit gateway is located.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the transit gateway peering attachment.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayPeeringAttachment': {
        'TransitGatewayAttachmentId': 'string',
        'RequesterTgwInfo': {
            'TransitGatewayId': 'string',
            'OwnerId': 'string',
            'Region': 'string'
        },
        'AccepterTgwInfo': {
            'TransitGatewayId': 'string',
            'OwnerId': 'string',
            'Region': 'string'
        },
        'Status': {
            'Code': 'string',
            'Message': 'string'
        },
        'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
        'CreationTime': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayPeeringAttachment (dict) --
The transit gateway peering attachment.

TransitGatewayAttachmentId (string) --
The ID of the transit gateway peering attachment.

RequesterTgwInfo (dict) --
Information about the requester transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



AccepterTgwInfo (dict) --
Information about the accepter transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



Status (dict) --
The status of the transit gateway peering attachment.

Code (string) --
The status code.

Message (string) --
The status message, if applicable.



State (string) --
The state of the transit gateway peering attachment.

CreationTime (datetime) --
The time the transit gateway peering attachment was created.

Tags (list) --
The tags for the transit gateway peering attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayPeeringAttachment': {
            'TransitGatewayAttachmentId': 'string',
            'RequesterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'AccepterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'Status': {
                'Code': 'string',
                'Message': 'string'
            },
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_transit_gateway_route(DestinationCidrBlock=None, TransitGatewayRouteTableId=None, TransitGatewayAttachmentId=None, Blackhole=None, DryRun=None):
    """
    Creates a static route for the specified transit gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.create_transit_gateway_route(
        DestinationCidrBlock='string',
        TransitGatewayRouteTableId='string',
        TransitGatewayAttachmentId='string',
        Blackhole=True|False,
        DryRun=True|False
    )
    
    
    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe CIDR range used for destination matches. Routing decisions are based on the most specific match.\n

    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the transit gateway route table.\n

    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: The ID of the attachment.

    :type Blackhole: boolean
    :param Blackhole: Indicates whether to drop traffic that matches this route.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Route': {
        'DestinationCidrBlock': 'string',
        'TransitGatewayAttachments': [
            {
                'ResourceId': 'string',
                'TransitGatewayAttachmentId': 'string',
                'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering'
            },
        ],
        'Type': 'static'|'propagated',
        'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted'
    }
}


Response Structure

(dict) --

Route (dict) --
Information about the route.

DestinationCidrBlock (string) --
The CIDR block used for destination matches.

TransitGatewayAttachments (list) --
The attachments.

(dict) --
Describes a route attachment.

ResourceId (string) --
The ID of the resource.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceType (string) --
The resource type.





Type (string) --
The route type.

State (string) --
The state of the route.










    :return: {
        'Route': {
            'DestinationCidrBlock': 'string',
            'TransitGatewayAttachments': [
                {
                    'ResourceId': 'string',
                    'TransitGatewayAttachmentId': 'string',
                    'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering'
                },
            ],
            'Type': 'static'|'propagated',
            'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted'
        }
    }
    
    
    """
    pass

def create_transit_gateway_route_table(TransitGatewayId=None, TagSpecifications=None, DryRun=None):
    """
    Creates a route table for the specified transit gateway.
    See also: AWS API Documentation
    
    
    :example: response = client.create_transit_gateway_route_table(
        TransitGatewayId='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayId: string
    :param TransitGatewayId: [REQUIRED]\nThe ID of the transit gateway.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the transit gateway route table.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayRouteTable': {
        'TransitGatewayRouteTableId': 'string',
        'TransitGatewayId': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'DefaultAssociationRouteTable': True|False,
        'DefaultPropagationRouteTable': True|False,
        'CreationTime': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayRouteTable (dict) --
Information about the transit gateway route table.

TransitGatewayRouteTableId (string) --
The ID of the transit gateway route table.

TransitGatewayId (string) --
The ID of the transit gateway.

State (string) --
The state of the transit gateway route table.

DefaultAssociationRouteTable (boolean) --
Indicates whether this is the default association route table for the transit gateway.

DefaultPropagationRouteTable (boolean) --
Indicates whether this is the default propagation route table for the transit gateway.

CreationTime (datetime) --
The creation time.

Tags (list) --
Any tags assigned to the route table.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayRouteTable': {
            'TransitGatewayRouteTableId': 'string',
            'TransitGatewayId': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'DefaultAssociationRouteTable': True|False,
            'DefaultPropagationRouteTable': True|False,
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_transit_gateway_vpc_attachment(TransitGatewayId=None, VpcId=None, SubnetIds=None, Options=None, TagSpecifications=None, DryRun=None):
    """
    Attaches the specified VPC to the specified transit gateway.
    If you attach a VPC with a CIDR range that overlaps the CIDR range of a VPC that is already attached, the new VPC CIDR range is not propagated to the default propagation route table.
    To send VPC traffic to an attached transit gateway, add a route to the VPC route table using  CreateRoute .
    See also: AWS API Documentation
    
    
    :example: response = client.create_transit_gateway_vpc_attachment(
        TransitGatewayId='string',
        VpcId='string',
        SubnetIds=[
            'string',
        ],
        Options={
            'DnsSupport': 'enable'|'disable',
            'Ipv6Support': 'enable'|'disable'
        },
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayId: string
    :param TransitGatewayId: [REQUIRED]\nThe ID of the transit gateway.\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type SubnetIds: list
    :param SubnetIds: [REQUIRED]\nThe IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.\n\n(string) --\n\n

    :type Options: dict
    :param Options: The VPC attachment options.\n\nDnsSupport (string) --Enable or disable DNS support. The default is enable .\n\nIpv6Support (string) --Enable or disable IPv6 support. The default is enable .\n\n\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the VPC attachment.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayVpcAttachment': {
        'TransitGatewayAttachmentId': 'string',
        'TransitGatewayId': 'string',
        'VpcId': 'string',
        'VpcOwnerId': 'string',
        'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
        'SubnetIds': [
            'string',
        ],
        'CreationTime': datetime(2015, 1, 1),
        'Options': {
            'DnsSupport': 'enable'|'disable',
            'Ipv6Support': 'enable'|'disable'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayVpcAttachment (dict) --
Information about the VPC attachment.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

TransitGatewayId (string) --
The ID of the transit gateway.

VpcId (string) --
The ID of the VPC.

VpcOwnerId (string) --
The ID of the AWS account that owns the VPC.

State (string) --
The state of the VPC attachment.

SubnetIds (list) --
The IDs of the subnets.

(string) --


CreationTime (datetime) --
The creation time.

Options (dict) --
The VPC attachment options.

DnsSupport (string) --
Indicates whether DNS support is enabled.

Ipv6Support (string) --
Indicates whether IPv6 support is disabled.



Tags (list) --
The tags for the VPC attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayVpcAttachment': {
            'TransitGatewayAttachmentId': 'string',
            'TransitGatewayId': 'string',
            'VpcId': 'string',
            'VpcOwnerId': 'string',
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'SubnetIds': [
                'string',
            ],
            'CreationTime': datetime(2015, 1, 1),
            'Options': {
                'DnsSupport': 'enable'|'disable',
                'Ipv6Support': 'enable'|'disable'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_volume(AvailabilityZone=None, Encrypted=None, Iops=None, KmsKeyId=None, OutpostArn=None, Size=None, SnapshotId=None, VolumeType=None, DryRun=None, TagSpecifications=None, MultiAttachEnabled=None):
    """
    Creates an EBS volume that can be attached to an instance in the same Availability Zone. The volume is created in the regional endpoint that you send the HTTP request to. For more information see Regions and Endpoints .
    You can create a new empty volume or restore a volume from an EBS snapshot. Any AWS Marketplace product codes from the snapshot are propagated to the volume.
    You can create encrypted volumes. Encrypted volumes must be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are also automatically encrypted. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    You can tag your volumes during creation. For more information, see Tagging Your Amazon EC2 Resources in the Amazon Elastic Compute Cloud User Guide .
    For more information, see Creating an Amazon EBS Volume in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates an 80 GiB General Purpose (SSD) volume in the Availability Zone us-east-1a.
    Expected Output:
    This example creates a new Provisioned IOPS (SSD) volume with 1000 provisioned IOPS from a snapshot in the Availability Zone us-east-1a.
    Expected Output:
    
    :example: response = client.create_volume(
        AvailabilityZone='string',
        Encrypted=True|False,
        Iops=123,
        KmsKeyId='string',
        OutpostArn='string',
        Size=123,
        SnapshotId='string',
        VolumeType='standard'|'io1'|'gp2'|'sc1'|'st1',
        DryRun=True|False,
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        MultiAttachEnabled=True|False
    )
    
    
    :type AvailabilityZone: string
    :param AvailabilityZone: [REQUIRED]\nThe Availability Zone in which to create the volume.\n

    :type Encrypted: boolean
    :param Encrypted: Specifies whether the volume should be encrypted. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Encryption by Default in the Amazon Elastic Compute Cloud User Guide .\nEncrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .\n

    :type Iops: integer
    :param Iops: The number of I/O operations per second (IOPS) to provision for the volume, with a maximum ratio of 50 IOPS/GiB. Range is 100 to 64,000 IOPS for volumes in most Regions. Maximum IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nThis parameter is valid only for Provisioned IOPS SSD (io1) volumes.\n

    :type KmsKeyId: string
    :param KmsKeyId: The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used. If KmsKeyId is specified, the encrypted state must be true .\nYou can specify the CMK using any of the following:\n\nKey ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.\nKey alias. For example, alias/ExampleAlias.\nKey ARN. For example, arn:aws:kms:us-east-1 :012345678910 :key/abcd1234-a123-456a-a12b-a123b4cd56ef .\nAlias ARN. For example, arn:aws:kms:us-east-1 :012345678910 :alias/ExampleAlias .\n\nAWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.\n

    :type OutpostArn: string
    :param OutpostArn: The Amazon Resource Name (ARN) of the Outpost.

    :type Size: integer
    :param Size: The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size.\nConstraints: 1-16,384 for gp2 , 4-16,384 for io1 , 500-16,384 for st1 , 500-16,384 for sc1 , and 1-1,024 for standard . If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.\nDefault: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.\n

    :type SnapshotId: string
    :param SnapshotId: The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.

    :type VolumeType: string
    :param VolumeType: The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.\nDefault: gp2\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the volume during creation.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type MultiAttachEnabled: boolean
    :param MultiAttachEnabled: Specifies whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 Nitro-based instances in the same Availability Zone. For more information, see Amazon EBS Multi-Attach in the Amazon Elastic Compute Cloud User Guide .

    :rtype: dict

ReturnsResponse Syntax
{
    'Attachments': [
        {
            'AttachTime': datetime(2015, 1, 1),
            'Device': 'string',
            'InstanceId': 'string',
            'State': 'attaching'|'attached'|'detaching'|'detached'|'busy',
            'VolumeId': 'string',
            'DeleteOnTermination': True|False
        },
    ],
    'AvailabilityZone': 'string',
    'CreateTime': datetime(2015, 1, 1),
    'Encrypted': True|False,
    'KmsKeyId': 'string',
    'OutpostArn': 'string',
    'Size': 123,
    'SnapshotId': 'string',
    'State': 'creating'|'available'|'in-use'|'deleting'|'deleted'|'error',
    'VolumeId': 'string',
    'Iops': 123,
    'Tags': [
        {
            'Key': 'string',
            'Value': 'string'
        },
    ],
    'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
    'FastRestored': True|False,
    'MultiAttachEnabled': True|False
}


Response Structure

(dict) --
Describes a volume.

Attachments (list) --
Information about the volume attachments.

(dict) --
Describes volume attachment details.

AttachTime (datetime) --
The time stamp when the attachment initiated.

Device (string) --
The device name.

InstanceId (string) --
The ID of the instance.

State (string) --
The attachment state of the volume.

VolumeId (string) --
The ID of the volume.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination.





AvailabilityZone (string) --
The Availability Zone for the volume.

CreateTime (datetime) --
The time stamp when volume creation was initiated.

Encrypted (boolean) --
Indicates whether the volume is encrypted.

KmsKeyId (string) --
The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

Size (integer) --
The size of the volume, in GiBs.

SnapshotId (string) --
The snapshot from which the volume was created, if applicable.

State (string) --
The volume state.

VolumeId (string) --
The ID of the volume.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS SSD volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose SSD volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes, in most Regions. The maximum IOPS for io1 of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS.
Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.

Tags (list) --
Any tags assigned to the volume.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VolumeType (string) --
The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.

FastRestored (boolean) --
Indicates whether the volume was created using fast snapshot restore.

MultiAttachEnabled (boolean) --
Indicates whether Amazon EBS Multi-Attach is enabled.







Examples
This example creates an 80 GiB General Purpose (SSD) volume in the Availability Zone us-east-1a.
response = client.create_volume(
    AvailabilityZone='us-east-1a',
    Size=80,
    VolumeType='gp2',
)

print(response)


Expected Output:
{
    'AvailabilityZone': 'us-east-1a',
    'CreateTime': datetime(2016, 8, 29, 18, 52, 32, 0, 242, 0),
    'Encrypted': False,
    'Iops': 240,
    'Size': 80,
    'SnapshotId': '',
    'State': 'creating',
    'VolumeId': 'vol-6b60b7c7',
    'VolumeType': 'gp2',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example creates a new Provisioned IOPS (SSD) volume with 1000 provisioned IOPS from a snapshot in the Availability Zone us-east-1a.
response = client.create_volume(
    AvailabilityZone='us-east-1a',
    Iops=1000,
    SnapshotId='snap-066877671789bd71b',
    VolumeType='io1',
)

print(response)


Expected Output:
{
    'Attachments': [
    ],
    'AvailabilityZone': 'us-east-1a',
    'CreateTime': datetime(2016, 8, 29, 18, 52, 32, 0, 242, 0),
    'Iops': 1000,
    'Size': 500,
    'SnapshotId': 'snap-066877671789bd71b',
    'State': 'creating',
    'Tags': [
    ],
    'VolumeId': 'vol-1234567890abcdef0',
    'VolumeType': 'io1',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Attachments': [
            {
                'AttachTime': datetime(2015, 1, 1),
                'Device': 'string',
                'InstanceId': 'string',
                'State': 'attaching'|'attached'|'detaching'|'detached'|'busy',
                'VolumeId': 'string',
                'DeleteOnTermination': True|False
            },
        ],
        'AvailabilityZone': 'string',
        'CreateTime': datetime(2015, 1, 1),
        'Encrypted': True|False,
        'KmsKeyId': 'string',
        'OutpostArn': 'string',
        'Size': 123,
        'SnapshotId': 'string',
        'State': 'creating'|'available'|'in-use'|'deleting'|'deleted'|'error',
        'VolumeId': 'string',
        'Iops': 123,
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
        'FastRestored': True|False,
        'MultiAttachEnabled': True|False
    }
    
    
    """
    pass

def create_vpc(CidrBlock=None, AmazonProvidedIpv6CidrBlock=None, Ipv6Pool=None, Ipv6CidrBlock=None, DryRun=None, InstanceTenancy=None, Ipv6CidrBlockNetworkBorderGroup=None):
    """
    Creates a VPC with the specified IPv4 CIDR block. The smallest VPC you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses). For more information about how large to make your VPC, see Your VPC and Subnets in the Amazon Virtual Private Cloud User Guide .
    You can optionally request an IPv6 CIDR block for the VPC. You can request an Amazon-provided IPv6 CIDR block from Amazon\'s pool of IPv6 addresses, or an IPv6 CIDR block from an IPv6 address pool that you provisioned through bring your own IP addresses (BYOIP ).
    By default, each instance you launch in the VPC has the default DHCP options, which include only a default DNS server that we provide (AmazonProvidedDNS). For more information, see DHCP Options Sets in the Amazon Virtual Private Cloud User Guide .
    You can specify the instance tenancy value for the VPC when you create it. You can\'t change this value for the VPC after you create it. For more information, see Dedicated Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example creates a VPC with the specified CIDR block.
    Expected Output:
    
    :example: response = client.create_vpc(
        CidrBlock='string',
        AmazonProvidedIpv6CidrBlock=True|False,
        Ipv6Pool='string',
        Ipv6CidrBlock='string',
        DryRun=True|False,
        InstanceTenancy='default'|'dedicated'|'host',
        Ipv6CidrBlockNetworkBorderGroup='string'
    )
    
    
    :type CidrBlock: string
    :param CidrBlock: [REQUIRED]\nThe IPv4 network range for the VPC, in CIDR notation. For example, 10.0.0.0/16 .\n

    :type AmazonProvidedIpv6CidrBlock: boolean
    :param AmazonProvidedIpv6CidrBlock: Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.

    :type Ipv6Pool: string
    :param Ipv6Pool: The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.

    :type Ipv6CidrBlock: string
    :param Ipv6CidrBlock: The IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request.\nTo let Amazon choose the IPv6 CIDR block for you, omit this parameter.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceTenancy: string
    :param InstanceTenancy: The tenancy options for instances launched into the VPC. For default , instances are launched with shared tenancy by default. You can launch instances with any tenancy into a shared tenancy VPC. For dedicated , instances are launched as dedicated tenancy instances by default. You can only launch instances with a tenancy of dedicated or host into a dedicated tenancy VPC.\n\nImportant: The host value cannot be used with this parameter. Use the default or dedicated values only.\nDefault: default\n

    :type Ipv6CidrBlockNetworkBorderGroup: string
    :param Ipv6CidrBlockNetworkBorderGroup: The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location.\nYou must set AmazonProvidedIpv6CidrBlock to true to use this parameter.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Vpc': {
        'CidrBlock': 'string',
        'DhcpOptionsId': 'string',
        'State': 'pending'|'available',
        'VpcId': 'string',
        'OwnerId': 'string',
        'InstanceTenancy': 'default'|'dedicated'|'host',
        'Ipv6CidrBlockAssociationSet': [
            {
                'AssociationId': 'string',
                'Ipv6CidrBlock': 'string',
                'Ipv6CidrBlockState': {
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                    'StatusMessage': 'string'
                },
                'NetworkBorderGroup': 'string',
                'Ipv6Pool': 'string'
            },
        ],
        'CidrBlockAssociationSet': [
            {
                'AssociationId': 'string',
                'CidrBlock': 'string',
                'CidrBlockState': {
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                    'StatusMessage': 'string'
                }
            },
        ],
        'IsDefault': True|False,
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

Vpc (dict) --
Information about the VPC.

CidrBlock (string) --
The primary IPv4 CIDR block for the VPC.

DhcpOptionsId (string) --
The ID of the set of DHCP options you\'ve associated with the VPC (or default if the default options are associated with the VPC).

State (string) --
The current state of the VPC.

VpcId (string) --
The ID of the VPC.

OwnerId (string) --
The ID of the AWS account that owns the VPC.

InstanceTenancy (string) --
The allowed tenancy of instances launched into the VPC.

Ipv6CidrBlockAssociationSet (list) --
Information about the IPv6 CIDR blocks associated with the VPC.

(dict) --
Describes an IPv6 CIDR block associated with a VPC.

AssociationId (string) --
The association ID for the IPv6 CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of the CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.



NetworkBorderGroup (string) --
The name of the location from which we advertise the IPV6 CIDR block.

Ipv6Pool (string) --
The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.





CidrBlockAssociationSet (list) --
Information about the IPv4 CIDR blocks associated with the VPC.

(dict) --
Describes an IPv4 CIDR block associated with a VPC.

AssociationId (string) --
The association ID for the IPv4 CIDR block.

CidrBlock (string) --
The IPv4 CIDR block.

CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of the CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.







IsDefault (boolean) --
Indicates whether the VPC is the default VPC.

Tags (list) --
Any tags assigned to the VPC.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.













Examples
This example creates a VPC with the specified CIDR block.
response = client.create_vpc(
    CidrBlock='10.0.0.0/16',
)

print(response)


Expected Output:
{
    'Vpc': {
        'CidrBlock': '10.0.0.0/16',
        'DhcpOptionsId': 'dopt-7a8b9c2d',
        'InstanceTenancy': 'default',
        'State': 'pending',
        'VpcId': 'vpc-a01106c2',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Vpc': {
            'CidrBlock': 'string',
            'DhcpOptionsId': 'string',
            'State': 'pending'|'available',
            'VpcId': 'string',
            'OwnerId': 'string',
            'InstanceTenancy': 'default'|'dedicated'|'host',
            'Ipv6CidrBlockAssociationSet': [
                {
                    'AssociationId': 'string',
                    'Ipv6CidrBlock': 'string',
                    'Ipv6CidrBlockState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                        'StatusMessage': 'string'
                    },
                    'NetworkBorderGroup': 'string',
                    'Ipv6Pool': 'string'
                },
            ],
            'CidrBlockAssociationSet': [
                {
                    'AssociationId': 'string',
                    'CidrBlock': 'string',
                    'CidrBlockState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                        'StatusMessage': 'string'
                    }
                },
            ],
            'IsDefault': True|False,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_vpc_endpoint(DryRun=None, VpcEndpointType=None, VpcId=None, ServiceName=None, PolicyDocument=None, RouteTableIds=None, SubnetIds=None, SecurityGroupIds=None, ClientToken=None, PrivateDnsEnabled=None, TagSpecifications=None):
    """
    Creates a VPC endpoint for a specified service. An endpoint enables you to create a private connection between your VPC and the service. The service may be provided by AWS, an AWS Marketplace Partner, or another AWS account. For more information, see VPC Endpoints in the Amazon Virtual Private Cloud User Guide .
    A gateway endpoint serves as a target for a route in your route table for traffic destined for the AWS service. You can specify an endpoint policy to attach to the endpoint, which will control access to the service from your VPC. You can also specify the VPC route tables that use the endpoint.
    An interface endpoint is a network interface in your subnet that serves as an endpoint for communicating with the specified service. You can specify the subnets in which to create an endpoint, and the security groups to associate with the endpoint network interface.
    Use  DescribeVpcEndpointServices to get a list of supported services.
    See also: AWS API Documentation
    
    
    :example: response = client.create_vpc_endpoint(
        DryRun=True|False,
        VpcEndpointType='Interface'|'Gateway',
        VpcId='string',
        ServiceName='string',
        PolicyDocument='string',
        RouteTableIds=[
            'string',
        ],
        SubnetIds=[
            'string',
        ],
        SecurityGroupIds=[
            'string',
        ],
        ClientToken='string',
        PrivateDnsEnabled=True|False,
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcEndpointType: string
    :param VpcEndpointType: The type of endpoint.\nDefault: Gateway\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC in which the endpoint will be used.\n

    :type ServiceName: string
    :param ServiceName: [REQUIRED]\nThe service name. To get a list of available services, use the DescribeVpcEndpointServices request, or get the name from the service provider.\n

    :type PolicyDocument: string
    :param PolicyDocument: A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service.

    :type RouteTableIds: list
    :param RouteTableIds: (Gateway endpoint) One or more route table IDs.\n\n(string) --\n\n

    :type SubnetIds: list
    :param SubnetIds: (Interface endpoint) The ID of one or more subnets in which to create an endpoint network interface.\n\n(string) --\n\n

    :type SecurityGroupIds: list
    :param SecurityGroupIds: (Interface endpoint) The ID of one or more security groups to associate with the endpoint network interface.\n\n(string) --\n\n

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .

    :type PrivateDnsEnabled: boolean
    :param PrivateDnsEnabled: (Interface endpoint) Indicates whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, kinesis.us-east-1.amazonaws.com ), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.\nTo use a private hosted zone, you must set the following VPC attributes to true : enableDnsHostnames and enableDnsSupport . Use ModifyVpcAttribute to set the VPC attributes.\nDefault: true\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to associate with the endpoint.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'VpcEndpoint': {
        'VpcEndpointId': 'string',
        'VpcEndpointType': 'Interface'|'Gateway',
        'VpcId': 'string',
        'ServiceName': 'string',
        'State': 'PendingAcceptance'|'Pending'|'Available'|'Deleting'|'Deleted'|'Rejected'|'Failed'|'Expired',
        'PolicyDocument': 'string',
        'RouteTableIds': [
            'string',
        ],
        'SubnetIds': [
            'string',
        ],
        'Groups': [
            {
                'GroupId': 'string',
                'GroupName': 'string'
            },
        ],
        'PrivateDnsEnabled': True|False,
        'RequesterManaged': True|False,
        'NetworkInterfaceIds': [
            'string',
        ],
        'DnsEntries': [
            {
                'DnsName': 'string',
                'HostedZoneId': 'string'
            },
        ],
        'CreationTimestamp': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'OwnerId': 'string',
        'LastError': {
            'Message': 'string',
            'Code': 'string'
        }
    },
    'ClientToken': 'string'
}


Response Structure

(dict) --
Contains the output of CreateVpcEndpoint.

VpcEndpoint (dict) --
Information about the endpoint.

VpcEndpointId (string) --
The ID of the VPC endpoint.

VpcEndpointType (string) --
The type of endpoint.

VpcId (string) --
The ID of the VPC to which the endpoint is associated.

ServiceName (string) --
The name of the service to which the endpoint is associated.

State (string) --
The state of the VPC endpoint.

PolicyDocument (string) --
The policy document associated with the endpoint, if applicable.

RouteTableIds (list) --
(Gateway endpoint) One or more route tables associated with the endpoint.

(string) --


SubnetIds (list) --
(Interface endpoint) One or more subnets in which the endpoint is located.

(string) --


Groups (list) --
(Interface endpoint) Information about the security groups that are associated with the network interface.

(dict) --
Describes a security group.

GroupId (string) --
The ID of the security group.

GroupName (string) --
The name of the security group.





PrivateDnsEnabled (boolean) --
(Interface endpoint) Indicates whether the VPC is associated with a private hosted zone.

RequesterManaged (boolean) --
Indicates whether the VPC endpoint is being managed by its service.

NetworkInterfaceIds (list) --
(Interface endpoint) One or more network interfaces for the endpoint.

(string) --


DnsEntries (list) --
(Interface endpoint) The DNS entries for the endpoint.

(dict) --
Describes a DNS entry.

DnsName (string) --
The DNS name.

HostedZoneId (string) --
The ID of the private hosted zone.





CreationTimestamp (datetime) --
The date and time that the VPC endpoint was created.

Tags (list) --
Any tags assigned to the VPC endpoint.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





OwnerId (string) --
The ID of the AWS account that owns the VPC endpoint.

LastError (dict) --
The last error that occurred for VPC endpoint.

Message (string) --
The error message for the VPC endpoint error.

Code (string) --
The error code for the VPC endpoint error.





ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.








    :return: {
        'VpcEndpoint': {
            'VpcEndpointId': 'string',
            'VpcEndpointType': 'Interface'|'Gateway',
            'VpcId': 'string',
            'ServiceName': 'string',
            'State': 'PendingAcceptance'|'Pending'|'Available'|'Deleting'|'Deleted'|'Rejected'|'Failed'|'Expired',
            'PolicyDocument': 'string',
            'RouteTableIds': [
                'string',
            ],
            'SubnetIds': [
                'string',
            ],
            'Groups': [
                {
                    'GroupId': 'string',
                    'GroupName': 'string'
                },
            ],
            'PrivateDnsEnabled': True|False,
            'RequesterManaged': True|False,
            'NetworkInterfaceIds': [
                'string',
            ],
            'DnsEntries': [
                {
                    'DnsName': 'string',
                    'HostedZoneId': 'string'
                },
            ],
            'CreationTimestamp': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'OwnerId': 'string',
            'LastError': {
                'Message': 'string',
                'Code': 'string'
            }
        },
        'ClientToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_vpc_endpoint_connection_notification(DryRun=None, ServiceId=None, VpcEndpointId=None, ConnectionNotificationArn=None, ConnectionEvents=None, ClientToken=None):
    """
    Creates a connection notification for a specified VPC endpoint or VPC endpoint service. A connection notification notifies you of specific endpoint events. You must create an SNS topic to receive notifications. For more information, see Create a Topic in the Amazon Simple Notification Service Developer Guide .
    You can create a connection notification for interface endpoints only.
    See also: AWS API Documentation
    
    
    :example: response = client.create_vpc_endpoint_connection_notification(
        DryRun=True|False,
        ServiceId='string',
        VpcEndpointId='string',
        ConnectionNotificationArn='string',
        ConnectionEvents=[
            'string',
        ],
        ClientToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceId: string
    :param ServiceId: The ID of the endpoint service.

    :type VpcEndpointId: string
    :param VpcEndpointId: The ID of the endpoint.

    :type ConnectionNotificationArn: string
    :param ConnectionNotificationArn: [REQUIRED]\nThe ARN of the SNS topic for the notifications.\n

    :type ConnectionEvents: list
    :param ConnectionEvents: [REQUIRED]\nOne or more endpoint events for which to receive notifications. Valid values are Accept , Connect , Delete , and Reject .\n\n(string) --\n\n

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .

    :rtype: dict

ReturnsResponse Syntax
{
    'ConnectionNotification': {
        'ConnectionNotificationId': 'string',
        'ServiceId': 'string',
        'VpcEndpointId': 'string',
        'ConnectionNotificationType': 'Topic',
        'ConnectionNotificationArn': 'string',
        'ConnectionEvents': [
            'string',
        ],
        'ConnectionNotificationState': 'Enabled'|'Disabled'
    },
    'ClientToken': 'string'
}


Response Structure

(dict) --

ConnectionNotification (dict) --
Information about the notification.

ConnectionNotificationId (string) --
The ID of the notification.

ServiceId (string) --
The ID of the endpoint service.

VpcEndpointId (string) --
The ID of the VPC endpoint.

ConnectionNotificationType (string) --
The type of notification.

ConnectionNotificationArn (string) --
The ARN of the SNS topic for the notification.

ConnectionEvents (list) --
The events for the notification. Valid values are Accept , Connect , Delete , and Reject .

(string) --


ConnectionNotificationState (string) --
The state of the notification.



ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.








    :return: {
        'ConnectionNotification': {
            'ConnectionNotificationId': 'string',
            'ServiceId': 'string',
            'VpcEndpointId': 'string',
            'ConnectionNotificationType': 'Topic',
            'ConnectionNotificationArn': 'string',
            'ConnectionEvents': [
                'string',
            ],
            'ConnectionNotificationState': 'Enabled'|'Disabled'
        },
        'ClientToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_vpc_endpoint_service_configuration(DryRun=None, AcceptanceRequired=None, PrivateDnsName=None, NetworkLoadBalancerArns=None, ClientToken=None, TagSpecifications=None):
    """
    Creates a VPC endpoint service configuration to which service consumers (AWS accounts, IAM users, and IAM roles) can connect. Service consumers can create an interface VPC endpoint to connect to your service.
    To create an endpoint service configuration, you must first create a Network Load Balancer for your service. For more information, see VPC Endpoint Services in the Amazon Virtual Private Cloud User Guide .
    If you set the private DNS name, you must prove that you own the private DNS domain name. For more information, see VPC Endpoint Service Private DNS Name Verification in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_vpc_endpoint_service_configuration(
        DryRun=True|False,
        AcceptanceRequired=True|False,
        PrivateDnsName='string',
        NetworkLoadBalancerArns=[
            'string',
        ],
        ClientToken='string',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type AcceptanceRequired: boolean
    :param AcceptanceRequired: Indicates whether requests from service consumers to create an endpoint to your service must be accepted. To accept a request, use AcceptVpcEndpointConnections .

    :type PrivateDnsName: string
    :param PrivateDnsName: The private DNS name to assign to the VPC endpoint service.

    :type NetworkLoadBalancerArns: list
    :param NetworkLoadBalancerArns: [REQUIRED]\nThe Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.\n\n(string) --\n\n

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .

    :type TagSpecifications: list
    :param TagSpecifications: The tags to associate with the service.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ServiceConfiguration': {
        'ServiceType': [
            {
                'ServiceType': 'Interface'|'Gateway'
            },
        ],
        'ServiceId': 'string',
        'ServiceName': 'string',
        'ServiceState': 'Pending'|'Available'|'Deleting'|'Deleted'|'Failed',
        'AvailabilityZones': [
            'string',
        ],
        'AcceptanceRequired': True|False,
        'ManagesVpcEndpoints': True|False,
        'NetworkLoadBalancerArns': [
            'string',
        ],
        'BaseEndpointDnsNames': [
            'string',
        ],
        'PrivateDnsName': 'string',
        'PrivateDnsNameConfiguration': {
            'State': 'pendingVerification'|'verified'|'failed',
            'Type': 'string',
            'Value': 'string',
            'Name': 'string'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    },
    'ClientToken': 'string'
}


Response Structure

(dict) --

ServiceConfiguration (dict) --
Information about the service configuration.

ServiceType (list) --
The type of service.

(dict) --
Describes the type of service for a VPC endpoint.

ServiceType (string) --
The type of service.





ServiceId (string) --
The ID of the service.

ServiceName (string) --
The name of the service.

ServiceState (string) --
The service state.

AvailabilityZones (list) --
The Availability Zones in which the service is available.

(string) --


AcceptanceRequired (boolean) --
Indicates whether requests from other AWS accounts to create an endpoint to the service must first be accepted.

ManagesVpcEndpoints (boolean) --
Indicates whether the service manages its VPC endpoints. Management of the service VPC endpoints using the VPC endpoint API is restricted.

NetworkLoadBalancerArns (list) --
The Amazon Resource Names (ARNs) of the Network Load Balancers for the service.

(string) --


BaseEndpointDnsNames (list) --
The DNS names for the service.

(string) --


PrivateDnsName (string) --
The private DNS name for the service.

PrivateDnsNameConfiguration (dict) --
Information about the endpoint service private DNS name configuration.

State (string) --
The verification state of the VPC endpoint service.
>Consumers of the endpoint service can use the private name only when the state is verified .

Type (string) --
The endpoint service verification type, for example TXT.

Value (string) --
The value the service provider adds to the private DNS name domain record before verification.

Name (string) --
The name of the record subdomain the service provider needs to create. The service provider adds the value text to the name .



Tags (list) --
Any tags assigned to the service.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.







ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.








    :return: {
        'ServiceConfiguration': {
            'ServiceType': [
                {
                    'ServiceType': 'Interface'|'Gateway'
                },
            ],
            'ServiceId': 'string',
            'ServiceName': 'string',
            'ServiceState': 'Pending'|'Available'|'Deleting'|'Deleted'|'Failed',
            'AvailabilityZones': [
                'string',
            ],
            'AcceptanceRequired': True|False,
            'ManagesVpcEndpoints': True|False,
            'NetworkLoadBalancerArns': [
                'string',
            ],
            'BaseEndpointDnsNames': [
                'string',
            ],
            'PrivateDnsName': 'string',
            'PrivateDnsNameConfiguration': {
                'State': 'pendingVerification'|'verified'|'failed',
                'Type': 'string',
                'Value': 'string',
                'Name': 'string'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
        'ClientToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_vpc_peering_connection(DryRun=None, PeerOwnerId=None, PeerVpcId=None, VpcId=None, PeerRegion=None):
    """
    Requests a VPC peering connection between two VPCs: a requester VPC that you own and an accepter VPC with which to create the connection. The accepter VPC can belong to another AWS account and can be in a different Region to the requester VPC. The requester VPC and accepter VPC cannot have overlapping CIDR blocks.
    The owner of the accepter VPC must accept the peering request to activate the peering connection. The VPC peering connection request expires after 7 days, after which it cannot be accepted or rejected.
    If you create a VPC peering connection request between VPCs with overlapping CIDR blocks, the VPC peering connection has a status of failed .
    See also: AWS API Documentation
    
    
    :example: response = client.create_vpc_peering_connection(
        DryRun=True|False,
        PeerOwnerId='string',
        PeerVpcId='string',
        VpcId='string',
        PeerRegion='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type PeerOwnerId: string
    :param PeerOwnerId: The AWS account ID of the owner of the accepter VPC.\nDefault: Your AWS account ID\n

    :type PeerVpcId: string
    :param PeerVpcId: The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.

    :type VpcId: string
    :param VpcId: The ID of the requester VPC. You must specify this parameter in the request.

    :type PeerRegion: string
    :param PeerRegion: The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.\nDefault: The Region in which you make the request.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'VpcPeeringConnection': {
        'AccepterVpcInfo': {
            'CidrBlock': 'string',
            'Ipv6CidrBlockSet': [
                {
                    'Ipv6CidrBlock': 'string'
                },
            ],
            'CidrBlockSet': [
                {
                    'CidrBlock': 'string'
                },
            ],
            'OwnerId': 'string',
            'PeeringOptions': {
                'AllowDnsResolutionFromRemoteVpc': True|False,
                'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
            },
            'VpcId': 'string',
            'Region': 'string'
        },
        'ExpirationTime': datetime(2015, 1, 1),
        'RequesterVpcInfo': {
            'CidrBlock': 'string',
            'Ipv6CidrBlockSet': [
                {
                    'Ipv6CidrBlock': 'string'
                },
            ],
            'CidrBlockSet': [
                {
                    'CidrBlock': 'string'
                },
            ],
            'OwnerId': 'string',
            'PeeringOptions': {
                'AllowDnsResolutionFromRemoteVpc': True|False,
                'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
            },
            'VpcId': 'string',
            'Region': 'string'
        },
        'Status': {
            'Code': 'initiating-request'|'pending-acceptance'|'active'|'deleted'|'rejected'|'failed'|'expired'|'provisioning'|'deleting',
            'Message': 'string'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VpcPeeringConnectionId': 'string'
    }
}


Response Structure

(dict) --

VpcPeeringConnection (dict) --
Information about the VPC peering connection.

AccepterVpcInfo (dict) --
Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.

CidrBlock (string) --
The IPv4 CIDR block for the VPC.

Ipv6CidrBlockSet (list) --
The IPv6 CIDR block for the VPC.

(dict) --
Describes an IPv6 CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.





CidrBlockSet (list) --
Information about the IPv4 CIDR blocks for the VPC.

(dict) --
Describes an IPv4 CIDR block.

CidrBlock (string) --
The IPv4 CIDR block.





OwnerId (string) --
The AWS account ID of the VPC owner.

PeeringOptions (dict) --
Information about the VPC peering connection options for the accepter or requester VPC.

AllowDnsResolutionFromRemoteVpc (boolean) --
Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.

AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --
Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.

AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --
Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.



VpcId (string) --
The ID of the VPC.

Region (string) --
The Region in which the VPC is located.



ExpirationTime (datetime) --
The time that an unaccepted VPC peering connection will expire.

RequesterVpcInfo (dict) --
Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.

CidrBlock (string) --
The IPv4 CIDR block for the VPC.

Ipv6CidrBlockSet (list) --
The IPv6 CIDR block for the VPC.

(dict) --
Describes an IPv6 CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.





CidrBlockSet (list) --
Information about the IPv4 CIDR blocks for the VPC.

(dict) --
Describes an IPv4 CIDR block.

CidrBlock (string) --
The IPv4 CIDR block.





OwnerId (string) --
The AWS account ID of the VPC owner.

PeeringOptions (dict) --
Information about the VPC peering connection options for the accepter or requester VPC.

AllowDnsResolutionFromRemoteVpc (boolean) --
Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.

AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --
Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.

AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --
Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.



VpcId (string) --
The ID of the VPC.

Region (string) --
The Region in which the VPC is located.



Status (dict) --
The status of the VPC peering connection.

Code (string) --
The status of the VPC peering connection.

Message (string) --
A message that provides more information about the status, if applicable.



Tags (list) --
Any tags assigned to the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcPeeringConnectionId (string) --
The ID of the VPC peering connection.










    :return: {
        'VpcPeeringConnection': {
            'AccepterVpcInfo': {
                'CidrBlock': 'string',
                'Ipv6CidrBlockSet': [
                    {
                        'Ipv6CidrBlock': 'string'
                    },
                ],
                'CidrBlockSet': [
                    {
                        'CidrBlock': 'string'
                    },
                ],
                'OwnerId': 'string',
                'PeeringOptions': {
                    'AllowDnsResolutionFromRemoteVpc': True|False,
                    'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                    'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
                },
                'VpcId': 'string',
                'Region': 'string'
            },
            'ExpirationTime': datetime(2015, 1, 1),
            'RequesterVpcInfo': {
                'CidrBlock': 'string',
                'Ipv6CidrBlockSet': [
                    {
                        'Ipv6CidrBlock': 'string'
                    },
                ],
                'CidrBlockSet': [
                    {
                        'CidrBlock': 'string'
                    },
                ],
                'OwnerId': 'string',
                'PeeringOptions': {
                    'AllowDnsResolutionFromRemoteVpc': True|False,
                    'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                    'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
                },
                'VpcId': 'string',
                'Region': 'string'
            },
            'Status': {
                'Code': 'initiating-request'|'pending-acceptance'|'active'|'deleted'|'rejected'|'failed'|'expired'|'provisioning'|'deleting',
                'Message': 'string'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcPeeringConnectionId': 'string'
        }
    }
    
    
    """
    pass

def create_vpn_connection(CustomerGatewayId=None, Type=None, VpnGatewayId=None, TransitGatewayId=None, DryRun=None, Options=None):
    """
    Creates a VPN connection between an existing virtual private gateway and a VPN customer gateway. The supported connection type is ipsec.1 .
    The response includes information that you need to give to your network administrator to configure your customer gateway.
    If you decide to shut down your VPN connection for any reason and later create a new VPN connection, you must reconfigure your customer gateway with the new information returned from this call.
    This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn\'t return an error.
    For more information, see AWS Site-to-Site VPN in the AWS Site-to-Site VPN User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_vpn_connection(
        CustomerGatewayId='string',
        Type='string',
        VpnGatewayId='string',
        TransitGatewayId='string',
        DryRun=True|False,
        Options={
            'EnableAcceleration': True|False,
            'StaticRoutesOnly': True|False,
            'TunnelOptions': [
                {
                    'TunnelInsideCidr': 'string',
                    'PreSharedKey': 'string',
                    'Phase1LifetimeSeconds': 123,
                    'Phase2LifetimeSeconds': 123,
                    'RekeyMarginTimeSeconds': 123,
                    'RekeyFuzzPercentage': 123,
                    'ReplayWindowSize': 123,
                    'DPDTimeoutSeconds': 123,
                    'Phase1EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'Phase2DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'IKEVersions': [
                        {
                            'Value': 'string'
                        },
                    ]
                },
            ]
        }
    )
    
    
    :type CustomerGatewayId: string
    :param CustomerGatewayId: [REQUIRED]\nThe ID of the customer gateway.\n

    :type Type: string
    :param Type: [REQUIRED]\nThe type of VPN connection (ipsec.1 ).\n

    :type VpnGatewayId: string
    :param VpnGatewayId: The ID of the virtual private gateway. If you specify a virtual private gateway, you cannot specify a transit gateway.

    :type TransitGatewayId: string
    :param TransitGatewayId: The ID of the transit gateway. If you specify a transit gateway, you cannot specify a virtual private gateway.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Options: dict
    :param Options: The options for the VPN connection.\n\nEnableAcceleration (boolean) --Indicate whether to enable acceleration for the VPN connection.\nDefault: false\n\nStaticRoutesOnly (boolean) --Indicate whether the VPN connection uses static routes only. If you are creating a VPN connection for a device that does not support BGP, you must specify true . Use CreateVpnConnectionRoute to create a static route.\nDefault: false\n\nTunnelOptions (list) --The tunnel options for the VPN connection.\n\n(dict) --The tunnel options for a single VPN tunnel.\n\nTunnelInsideCidr (string) --The range of inside IP addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway.\nConstraints: A size /30 CIDR block from the 169.254.0.0/16 range. The following CIDR blocks are reserved and cannot be used:\n\n169.254.0.0/30\n169.254.1.0/30\n169.254.2.0/30\n169.254.3.0/30\n169.254.4.0/30\n169.254.5.0/30\n169.254.169.252/30\n\n\nPreSharedKey (string) --The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway.\nConstraints: Allowed characters are alphanumeric characters, periods (.), and underscores (_). Must be between 8 and 64 characters in length and cannot start with zero (0).\n\nPhase1LifetimeSeconds (integer) --The lifetime for phase 1 of the IKE negotiation, in seconds.\nConstraints: A value between 900 and 28,800.\nDefault: 28800\n\nPhase2LifetimeSeconds (integer) --The lifetime for phase 2 of the IKE negotiation, in seconds.\nConstraints: A value between 900 and 3,600. The value must be less than the value for Phase1LifetimeSeconds .\nDefault: 3600\n\nRekeyMarginTimeSeconds (integer) --The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for RekeyFuzzPercentage .\nConstraints: A value between 60 and half of Phase2LifetimeSeconds .\nDefault: 540\n\nRekeyFuzzPercentage (integer) --The percentage of the rekey window (determined by RekeyMarginTimeSeconds ) during which the rekey time is randomly selected.\nConstraints: A value between 0 and 100.\nDefault: 100\n\nReplayWindowSize (integer) --The number of packets in an IKE replay window.\nConstraints: A value between 64 and 2048.\nDefault: 1024\n\nDPDTimeoutSeconds (integer) --The number of seconds after which a DPD timeout occurs.\nConstraints: A value between 0 and 30.\nDefault: 30\n\nPhase1EncryptionAlgorithms (list) --One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.\nValid values: AES128 | AES256\n\n(dict) --Specifies the encryption algorithm for the VPN tunnel for phase 1 IKE negotiations.\n\nValue (string) --The value for the encryption algorithm.\n\n\n\n\n\nPhase2EncryptionAlgorithms (list) --One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.\nValid values: AES128 | AES256\n\n(dict) --Specifies the encryption algorithm for the VPN tunnel for phase 2 IKE negotiations.\n\nValue (string) --The encryption algorithm.\n\n\n\n\n\nPhase1IntegrityAlgorithms (list) --One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.\nValid values: SHA1 | SHA2-256\n\n(dict) --Specifies the integrity algorithm for the VPN tunnel for phase 1 IKE negotiations.\n\nValue (string) --The value for the integrity algorithm.\n\n\n\n\n\nPhase2IntegrityAlgorithms (list) --One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.\nValid values: SHA1 | SHA2-256\n\n(dict) --Specifies the integrity algorithm for the VPN tunnel for phase 2 IKE negotiations.\n\nValue (string) --The integrity algorithm.\n\n\n\n\n\nPhase1DHGroupNumbers (list) --One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.\nValid values: 2 | 14 | 15 | 16 | 17 | 18 | 22 | 23 | 24\n\n(dict) --Specifies a Diffie-Hellman group number for the VPN tunnel for phase 1 IKE negotiations.\n\nValue (integer) --The Diffie-Hellmann group number.\n\n\n\n\n\nPhase2DHGroupNumbers (list) --One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.\nValid values: 2 | 5 | 14 | 15 | 16 | 17 | 18 | 22 | 23 | 24\n\n(dict) --Specifies a Diffie-Hellman group number for the VPN tunnel for phase 2 IKE negotiations.\n\nValue (integer) --The Diffie-Hellmann group number.\n\n\n\n\n\nIKEVersions (list) --The IKE versions that are permitted for the VPN tunnel.\nValid values: ikev1 | ikev2\n\n(dict) --The IKE version that is permitted for the VPN tunnel.\n\nValue (string) --The IKE version.\n\n\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'VpnConnection': {
        'CustomerGatewayConfiguration': 'string',
        'CustomerGatewayId': 'string',
        'Category': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'Type': 'ipsec.1',
        'VpnConnectionId': 'string',
        'VpnGatewayId': 'string',
        'TransitGatewayId': 'string',
        'Options': {
            'EnableAcceleration': True|False,
            'StaticRoutesOnly': True|False,
            'TunnelOptions': [
                {
                    'OutsideIpAddress': 'string',
                    'TunnelInsideCidr': 'string',
                    'PreSharedKey': 'string',
                    'Phase1LifetimeSeconds': 123,
                    'Phase2LifetimeSeconds': 123,
                    'RekeyMarginTimeSeconds': 123,
                    'RekeyFuzzPercentage': 123,
                    'ReplayWindowSize': 123,
                    'DpdTimeoutSeconds': 123,
                    'Phase1EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'Phase2DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'IkeVersions': [
                        {
                            'Value': 'string'
                        },
                    ]
                },
            ]
        },
        'Routes': [
            {
                'DestinationCidrBlock': 'string',
                'Source': 'Static',
                'State': 'pending'|'available'|'deleting'|'deleted'
            },
        ],
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VgwTelemetry': [
            {
                'AcceptedRouteCount': 123,
                'LastStatusChange': datetime(2015, 1, 1),
                'OutsideIpAddress': 'string',
                'Status': 'UP'|'DOWN',
                'StatusMessage': 'string',
                'CertificateArn': 'string'
            },
        ]
    }
}


Response Structure

(dict) --
Contains the output of CreateVpnConnection.

VpnConnection (dict) --
Information about the VPN connection.

CustomerGatewayConfiguration (string) --
The configuration information for the VPN connection\'s customer gateway (in the native XML format). This element is always present in the  CreateVpnConnection response; however, it\'s present in the  DescribeVpnConnections response only if the VPN connection is in the pending or available state.

CustomerGatewayId (string) --
The ID of the customer gateway at your end of the VPN connection.

Category (string) --
The category of the VPN connection. A value of VPN indicates an AWS VPN connection. A value of VPN-Classic indicates an AWS Classic VPN connection.

State (string) --
The current state of the VPN connection.

Type (string) --
The type of VPN connection.

VpnConnectionId (string) --
The ID of the VPN connection.

VpnGatewayId (string) --
The ID of the virtual private gateway at the AWS side of the VPN connection.

TransitGatewayId (string) --
The ID of the transit gateway associated with the VPN connection.

Options (dict) --
The VPN connection options.

EnableAcceleration (boolean) --
Indicates whether acceleration is enabled for the VPN connection.

StaticRoutesOnly (boolean) --
Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don\'t support BGP.

TunnelOptions (list) --
Indicates the VPN tunnel options.

(dict) --
The VPN tunnel options.

OutsideIpAddress (string) --
The external IP address of the VPN tunnel.

TunnelInsideCidr (string) --
The range of inside IP addresses for the tunnel.

PreSharedKey (string) --
The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.

Phase1LifetimeSeconds (integer) --
The lifetime for phase 1 of the IKE negotiation, in seconds.

Phase2LifetimeSeconds (integer) --
The lifetime for phase 2 of the IKE negotiation, in seconds.

RekeyMarginTimeSeconds (integer) --
The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey.

RekeyFuzzPercentage (integer) --
The percentage of the rekey window determined by RekeyMarginTimeSeconds during which the rekey time is randomly selected.

ReplayWindowSize (integer) --
The number of packets in an IKE replay window.

DpdTimeoutSeconds (integer) --
The number of seconds after which a DPD timeout occurs.

Phase1EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The encryption algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the encryption algorithm.





Phase2EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The encryption algorithm for phase 2 IKE negotiations.

Value (string) --
The encryption algorithm.





Phase1IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The integrity algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the integrity algorithm.





Phase2IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The integrity algorithm for phase 2 IKE negotiations.

Value (string) --
The integrity algorithm.





Phase1DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 1 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





Phase2DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 2 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





IkeVersions (list) --
The IKE versions that are permitted for the VPN tunnel.

(dict) --
The internet key exchange (IKE) version permitted for the VPN tunnel.

Value (string) --
The IKE version.











Routes (list) --
The static routes associated with the VPN connection.

(dict) --
Describes a static route for a VPN connection.

DestinationCidrBlock (string) --
The CIDR block associated with the local subnet of the customer data center.

Source (string) --
Indicates how the routes were provided.

State (string) --
The current state of the static route.





Tags (list) --
Any tags assigned to the VPN connection.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VgwTelemetry (list) --
Information about the VPN tunnel.

(dict) --
Describes telemetry for a VPN tunnel.

AcceptedRouteCount (integer) --
The number of accepted routes.

LastStatusChange (datetime) --
The date and time of the last change in status.

OutsideIpAddress (string) --
The Internet-routable IP address of the virtual private gateway\'s outside interface.

Status (string) --
The status of the VPN tunnel.

StatusMessage (string) --
If an error occurs, a description of the error.

CertificateArn (string) --
The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.














    :return: {
        'VpnConnection': {
            'CustomerGatewayConfiguration': 'string',
            'CustomerGatewayId': 'string',
            'Category': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'Type': 'ipsec.1',
            'VpnConnectionId': 'string',
            'VpnGatewayId': 'string',
            'TransitGatewayId': 'string',
            'Options': {
                'EnableAcceleration': True|False,
                'StaticRoutesOnly': True|False,
                'TunnelOptions': [
                    {
                        'OutsideIpAddress': 'string',
                        'TunnelInsideCidr': 'string',
                        'PreSharedKey': 'string',
                        'Phase1LifetimeSeconds': 123,
                        'Phase2LifetimeSeconds': 123,
                        'RekeyMarginTimeSeconds': 123,
                        'RekeyFuzzPercentage': 123,
                        'ReplayWindowSize': 123,
                        'DpdTimeoutSeconds': 123,
                        'Phase1EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'Phase2DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'IkeVersions': [
                            {
                                'Value': 'string'
                            },
                        ]
                    },
                ]
            },
            'Routes': [
                {
                    'DestinationCidrBlock': 'string',
                    'Source': 'Static',
                    'State': 'pending'|'available'|'deleting'|'deleted'
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VgwTelemetry': [
                {
                    'AcceptedRouteCount': 123,
                    'LastStatusChange': datetime(2015, 1, 1),
                    'OutsideIpAddress': 'string',
                    'Status': 'UP'|'DOWN',
                    'StatusMessage': 'string',
                    'CertificateArn': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def create_vpn_connection_route(DestinationCidrBlock=None, VpnConnectionId=None):
    """
    Creates a static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.
    For more information, see AWS Site-to-Site VPN in the AWS Site-to-Site VPN User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_vpn_connection_route(
        DestinationCidrBlock='string',
        VpnConnectionId='string'
    )
    
    
    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe CIDR block associated with the local subnet of the customer network.\n

    :type VpnConnectionId: string
    :param VpnConnectionId: [REQUIRED]\nThe ID of the VPN connection.\n

    """
    pass

def create_vpn_gateway(AvailabilityZone=None, Type=None, AmazonSideAsn=None, DryRun=None):
    """
    Creates a virtual private gateway. A virtual private gateway is the endpoint on the VPC side of your VPN connection. You can create a virtual private gateway before creating the VPC itself.
    For more information, see AWS Site-to-Site VPN in the AWS Site-to-Site VPN User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.create_vpn_gateway(
        AvailabilityZone='string',
        Type='ipsec.1',
        AmazonSideAsn=123,
        DryRun=True|False
    )
    
    
    :type AvailabilityZone: string
    :param AvailabilityZone: The Availability Zone for the virtual private gateway.

    :type Type: string
    :param Type: [REQUIRED]\nThe type of VPN connection this virtual private gateway supports.\n

    :type AmazonSideAsn: integer
    :param AmazonSideAsn: A private Autonomous System Number (ASN) for the Amazon side of a BGP session. If you\'re using a 16-bit ASN, it must be in the 64512 to 65534 range. If you\'re using a 32-bit ASN, it must be in the 4200000000 to 4294967294 range.\nDefault: 64512\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'VpnGateway': {
        'AvailabilityZone': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'Type': 'ipsec.1',
        'VpcAttachments': [
            {
                'State': 'attaching'|'attached'|'detaching'|'detached',
                'VpcId': 'string'
            },
        ],
        'VpnGatewayId': 'string',
        'AmazonSideAsn': 123,
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --
Contains the output of CreateVpnGateway.

VpnGateway (dict) --
Information about the virtual private gateway.

AvailabilityZone (string) --
The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned.

State (string) --
The current state of the virtual private gateway.

Type (string) --
The type of VPN connection the virtual private gateway supports.

VpcAttachments (list) --
Any VPCs attached to the virtual private gateway.

(dict) --
Describes an attachment between a virtual private gateway and a VPC.

State (string) --
The current state of the attachment.

VpcId (string) --
The ID of the VPC.





VpnGatewayId (string) --
The ID of the virtual private gateway.

AmazonSideAsn (integer) --
The private Autonomous System Number (ASN) for the Amazon side of a BGP session.

Tags (list) --
Any tags assigned to the virtual private gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'VpnGateway': {
            'AvailabilityZone': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'Type': 'ipsec.1',
            'VpcAttachments': [
                {
                    'State': 'attaching'|'attached'|'detaching'|'detached',
                    'VpcId': 'string'
                },
            ],
            'VpnGatewayId': 'string',
            'AmazonSideAsn': 123,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def delete_client_vpn_endpoint(ClientVpnEndpointId=None, DryRun=None):
    """
    Deletes the specified Client VPN endpoint. You must disassociate all target networks before you can delete a Client VPN endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_client_vpn_endpoint(
        ClientVpnEndpointId='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN to be deleted.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Status': {
        'Code': 'pending-associate'|'available'|'deleting'|'deleted',
        'Message': 'string'
    }
}


Response Structure

(dict) --

Status (dict) --
The current state of the Client VPN endpoint.

Code (string) --
The state of the Client VPN endpoint. Possible states include:

pending-associate - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.
available - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.
deleting - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.
deleted - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.


Message (string) --
A message about the status of the Client VPN endpoint.










    :return: {
        'Status': {
            'Code': 'pending-associate'|'available'|'deleting'|'deleted',
            'Message': 'string'
        }
    }
    
    
    :returns: 
    pending-associate - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.
    available - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.
    deleting - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.
    deleted - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.
    
    """
    pass

def delete_client_vpn_route(ClientVpnEndpointId=None, TargetVpcSubnetId=None, DestinationCidrBlock=None, DryRun=None):
    """
    Deletes a route from a Client VPN endpoint. You can only delete routes that you manually added using the CreateClientVpnRoute action. You cannot delete routes that were automatically added when associating a subnet. To remove routes that have been automatically added, disassociate the target subnet from the Client VPN endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_client_vpn_route(
        ClientVpnEndpointId='string',
        TargetVpcSubnetId='string',
        DestinationCidrBlock='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint from which the route is to be deleted.\n

    :type TargetVpcSubnetId: string
    :param TargetVpcSubnetId: The ID of the target subnet used by the route.

    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe IPv4 address range, in CIDR notation, of the route to be deleted.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Status': {
        'Code': 'creating'|'active'|'failed'|'deleting',
        'Message': 'string'
    }
}


Response Structure

(dict) --

Status (dict) --
The current state of the route.

Code (string) --
The state of the Client VPN endpoint route.

Message (string) --
A message about the status of the Client VPN endpoint route, if applicable.










    :return: {
        'Status': {
            'Code': 'creating'|'active'|'failed'|'deleting',
            'Message': 'string'
        }
    }
    
    
    """
    pass

def delete_customer_gateway(CustomerGatewayId=None, DryRun=None):
    """
    Deletes the specified customer gateway. You must delete the VPN connection before you can delete the customer gateway.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified customer gateway.
    Expected Output:
    
    :example: response = client.delete_customer_gateway(
        CustomerGatewayId='string',
        DryRun=True|False
    )
    
    
    :type CustomerGatewayId: string
    :param CustomerGatewayId: [REQUIRED]\nThe ID of the customer gateway.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.delete_customer_gateway(
        CustomerGatewayId='cgw-0e11f167',
    )
    
    print(response)
    
    
    """
    pass

def delete_dhcp_options(DhcpOptionsId=None, DryRun=None):
    """
    Deletes the specified set of DHCP options. You must disassociate the set of DHCP options before you can delete it. You can disassociate the set of DHCP options by associating either a new set of options or the default set of options with the VPC.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified DHCP options set.
    Expected Output:
    
    :example: response = client.delete_dhcp_options(
        DhcpOptionsId='string',
        DryRun=True|False
    )
    
    
    :type DhcpOptionsId: string
    :param DhcpOptionsId: [REQUIRED]\nThe ID of the DHCP options set.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.delete_dhcp_options(
        DhcpOptionsId='dopt-d9070ebb',
    )
    
    print(response)
    
    
    """
    pass

def delete_egress_only_internet_gateway(DryRun=None, EgressOnlyInternetGatewayId=None):
    """
    Deletes an egress-only internet gateway.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_egress_only_internet_gateway(
        DryRun=True|False,
        EgressOnlyInternetGatewayId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EgressOnlyInternetGatewayId: string
    :param EgressOnlyInternetGatewayId: [REQUIRED]\nThe ID of the egress-only internet gateway.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ReturnCode': True|False
}


Response Structure

(dict) --

ReturnCode (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'ReturnCode': True|False
    }
    
    
    """
    pass

def delete_fleets(DryRun=None, FleetIds=None, TerminateInstances=None):
    """
    Deletes the specified EC2 Fleet.
    After you delete an EC2 Fleet, it launches no new instances. You must specify whether an EC2 Fleet should also terminate its instances. If you terminate the instances, the EC2 Fleet enters the deleted_terminating state. Otherwise, the EC2 Fleet enters the deleted_running state, and the instances continue to run until they are interrupted or you terminate them manually.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_fleets(
        DryRun=True|False,
        FleetIds=[
            'string',
        ],
        TerminateInstances=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type FleetIds: list
    :param FleetIds: [REQUIRED]\nThe IDs of the EC2 Fleets.\n\n(string) --\n\n

    :type TerminateInstances: boolean
    :param TerminateInstances: [REQUIRED]\nIndicates whether to terminate instances for an EC2 Fleet if it is deleted successfully.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'SuccessfulFleetDeletions': [
        {
            'CurrentFleetState': 'submitted'|'active'|'deleted'|'failed'|'deleted_running'|'deleted_terminating'|'modifying',
            'PreviousFleetState': 'submitted'|'active'|'deleted'|'failed'|'deleted_running'|'deleted_terminating'|'modifying',
            'FleetId': 'string'
        },
    ],
    'UnsuccessfulFleetDeletions': [
        {
            'Error': {
                'Code': 'fleetIdDoesNotExist'|'fleetIdMalformed'|'fleetNotInDeletableState'|'unexpectedError',
                'Message': 'string'
            },
            'FleetId': 'string'
        },
    ]
}


Response Structure

(dict) --

SuccessfulFleetDeletions (list) --
Information about the EC2 Fleets that are successfully deleted.

(dict) --
Describes an EC2 Fleet that was successfully deleted.

CurrentFleetState (string) --
The current state of the EC2 Fleet.

PreviousFleetState (string) --
The previous state of the EC2 Fleet.

FleetId (string) --
The ID of the EC2 Fleet.





UnsuccessfulFleetDeletions (list) --
Information about the EC2 Fleets that are not successfully deleted.

(dict) --
Describes an EC2 Fleet that was not successfully deleted.

Error (dict) --
The error.

Code (string) --
The error code.

Message (string) --
The description for the error code.



FleetId (string) --
The ID of the EC2 Fleet.












    :return: {
        'SuccessfulFleetDeletions': [
            {
                'CurrentFleetState': 'submitted'|'active'|'deleted'|'failed'|'deleted_running'|'deleted_terminating'|'modifying',
                'PreviousFleetState': 'submitted'|'active'|'deleted'|'failed'|'deleted_running'|'deleted_terminating'|'modifying',
                'FleetId': 'string'
            },
        ],
        'UnsuccessfulFleetDeletions': [
            {
                'Error': {
                    'Code': 'fleetIdDoesNotExist'|'fleetIdMalformed'|'fleetNotInDeletableState'|'unexpectedError',
                    'Message': 'string'
                },
                'FleetId': 'string'
            },
        ]
    }
    
    
    """
    pass

def delete_flow_logs(DryRun=None, FlowLogIds=None):
    """
    Deletes one or more flow logs.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_flow_logs(
        DryRun=True|False,
        FlowLogIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type FlowLogIds: list
    :param FlowLogIds: [REQUIRED]\nOne or more flow log IDs.\nConstraint: Maximum of 1000 flow log IDs.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Unsuccessful': [
        {
            'Error': {
                'Code': 'string',
                'Message': 'string'
            },
            'ResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --

Unsuccessful (list) --
Information about the flow logs that could not be deleted successfully.

(dict) --
Information about items that were not successfully processed in a batch call.

Error (dict) --
Information about the error.

Code (string) --
The error code.

Message (string) --
The error message accompanying the error code.



ResourceId (string) --
The ID of the resource.












    :return: {
        'Unsuccessful': [
            {
                'Error': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'ResourceId': 'string'
            },
        ]
    }
    
    
    """
    pass

def delete_fpga_image(DryRun=None, FpgaImageId=None):
    """
    Deletes the specified Amazon FPGA Image (AFI).
    See also: AWS API Documentation
    
    
    :example: response = client.delete_fpga_image(
        DryRun=True|False,
        FpgaImageId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type FpgaImageId: string
    :param FpgaImageId: [REQUIRED]\nThe ID of the AFI.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Is true if the request succeeds, and an error otherwise.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def delete_internet_gateway(DryRun=None, InternetGatewayId=None):
    """
    Deletes the specified internet gateway. You must detach the internet gateway from the VPC before you can delete it.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified Internet gateway.
    Expected Output:
    
    :example: response = client.delete_internet_gateway(
        DryRun=True|False,
        InternetGatewayId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InternetGatewayId: string
    :param InternetGatewayId: [REQUIRED]\nThe ID of the internet gateway.\n

    :return: response = client.delete_internet_gateway(
        InternetGatewayId='igw-c0a643a9',
    )
    
    print(response)
    
    
    """
    pass

def delete_key_pair(KeyName=None, KeyPairId=None, DryRun=None):
    """
    Deletes the specified key pair, by removing the public key from Amazon EC2.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified key pair.
    Expected Output:
    
    :example: response = client.delete_key_pair(
        KeyName='string',
        KeyPairId='string',
        DryRun=True|False
    )
    
    
    :type KeyName: string
    :param KeyName: The name of the key pair.

    :type KeyPairId: string
    :param KeyPairId: The ID of the key pair.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.delete_key_pair(
        KeyName='my-key-pair',
    )
    
    print(response)
    
    
    """
    pass

def delete_launch_template(DryRun=None, LaunchTemplateId=None, LaunchTemplateName=None):
    """
    Deletes a launch template. Deleting a launch template deletes all of its versions.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified launch template.
    Expected Output:
    
    :example: response = client.delete_launch_template(
        DryRun=True|False,
        LaunchTemplateId='string',
        LaunchTemplateName='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type LaunchTemplateId: string
    :param LaunchTemplateId: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.

    :type LaunchTemplateName: string
    :param LaunchTemplateName: The name of the launch template. You must specify either the launch template ID or launch template name in the request.

    :rtype: dict

ReturnsResponse Syntax
{
    'LaunchTemplate': {
        'LaunchTemplateId': 'string',
        'LaunchTemplateName': 'string',
        'CreateTime': datetime(2015, 1, 1),
        'CreatedBy': 'string',
        'DefaultVersionNumber': 123,
        'LatestVersionNumber': 123,
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

LaunchTemplate (dict) --
Information about the launch template.

LaunchTemplateId (string) --
The ID of the launch template.

LaunchTemplateName (string) --
The name of the launch template.

CreateTime (datetime) --
The time launch template was created.

CreatedBy (string) --
The principal that created the launch template.

DefaultVersionNumber (integer) --
The version number of the default version of the launch template.

LatestVersionNumber (integer) --
The version number of the latest version of the launch template.

Tags (list) --
The tags for the launch template.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.













Examples
This example deletes the specified launch template.
response = client.delete_launch_template(
    LaunchTemplateId='lt-0abcd290751193123',
)

print(response)


Expected Output:
{
    'LaunchTemplate': {
        'CreateTime': datetime(2017, 11, 23, 16, 46, 25, 3, 327, 0),
        'CreatedBy': 'arn:aws:iam::123456789012:root',
        'DefaultVersionNumber': 2,
        'LatestVersionNumber': 2,
        'LaunchTemplateId': 'lt-0abcd290751193123',
        'LaunchTemplateName': 'my-template',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'LaunchTemplate': {
            'LaunchTemplateId': 'string',
            'LaunchTemplateName': 'string',
            'CreateTime': datetime(2015, 1, 1),
            'CreatedBy': 'string',
            'DefaultVersionNumber': 123,
            'LatestVersionNumber': 123,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def delete_launch_template_versions(DryRun=None, LaunchTemplateId=None, LaunchTemplateName=None, Versions=None):
    """
    Deletes one or more versions of a launch template. You cannot delete the default version of a launch template; you must first assign a different version as the default. If the default version is the only version for the launch template, you must delete the entire launch template using  DeleteLaunchTemplate .
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified launch template version.
    Expected Output:
    
    :example: response = client.delete_launch_template_versions(
        DryRun=True|False,
        LaunchTemplateId='string',
        LaunchTemplateName='string',
        Versions=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type LaunchTemplateId: string
    :param LaunchTemplateId: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.

    :type LaunchTemplateName: string
    :param LaunchTemplateName: The name of the launch template. You must specify either the launch template ID or launch template name in the request.

    :type Versions: list
    :param Versions: [REQUIRED]\nThe version numbers of one or more launch template versions to delete.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'SuccessfullyDeletedLaunchTemplateVersions': [
        {
            'LaunchTemplateId': 'string',
            'LaunchTemplateName': 'string',
            'VersionNumber': 123
        },
    ],
    'UnsuccessfullyDeletedLaunchTemplateVersions': [
        {
            'LaunchTemplateId': 'string',
            'LaunchTemplateName': 'string',
            'VersionNumber': 123,
            'ResponseError': {
                'Code': 'launchTemplateIdDoesNotExist'|'launchTemplateIdMalformed'|'launchTemplateNameDoesNotExist'|'launchTemplateNameMalformed'|'launchTemplateVersionDoesNotExist'|'unexpectedError',
                'Message': 'string'
            }
        },
    ]
}


Response Structure

(dict) --

SuccessfullyDeletedLaunchTemplateVersions (list) --
Information about the launch template versions that were successfully deleted.

(dict) --
Describes a launch template version that was successfully deleted.

LaunchTemplateId (string) --
The ID of the launch template.

LaunchTemplateName (string) --
The name of the launch template.

VersionNumber (integer) --
The version number of the launch template.





UnsuccessfullyDeletedLaunchTemplateVersions (list) --
Information about the launch template versions that could not be deleted.

(dict) --
Describes a launch template version that could not be deleted.

LaunchTemplateId (string) --
The ID of the launch template.

LaunchTemplateName (string) --
The name of the launch template.

VersionNumber (integer) --
The version number of the launch template.

ResponseError (dict) --
Information about the error.

Code (string) --
The error code.

Message (string) --
The error message, if applicable.













Examples
This example deletes the specified launch template version.
response = client.delete_launch_template_versions(
    LaunchTemplateId='lt-0abcd290751193123',
    Versions=[
        '1',
    ],
)

print(response)


Expected Output:
{
    'SuccessfullyDeletedLaunchTemplateVersions': [
        {
            'LaunchTemplateId': 'lt-0abcd290751193123',
            'LaunchTemplateName': 'my-template',
            'VersionNumber': 1,
        },
    ],
    'UnsuccessfullyDeletedLaunchTemplateVersions': [
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SuccessfullyDeletedLaunchTemplateVersions': [
            {
                'LaunchTemplateId': 'string',
                'LaunchTemplateName': 'string',
                'VersionNumber': 123
            },
        ],
        'UnsuccessfullyDeletedLaunchTemplateVersions': [
            {
                'LaunchTemplateId': 'string',
                'LaunchTemplateName': 'string',
                'VersionNumber': 123,
                'ResponseError': {
                    'Code': 'launchTemplateIdDoesNotExist'|'launchTemplateIdMalformed'|'launchTemplateNameDoesNotExist'|'launchTemplateNameMalformed'|'launchTemplateVersionDoesNotExist'|'unexpectedError',
                    'Message': 'string'
                }
            },
        ]
    }
    
    
    """
    pass

def delete_local_gateway_route(DestinationCidrBlock=None, LocalGatewayRouteTableId=None, DryRun=None):
    """
    Deletes the specified route from the specified local gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_local_gateway_route(
        DestinationCidrBlock='string',
        LocalGatewayRouteTableId='string',
        DryRun=True|False
    )
    
    
    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe CIDR range for the route. This must match the CIDR for the route exactly.\n

    :type LocalGatewayRouteTableId: string
    :param LocalGatewayRouteTableId: [REQUIRED]\nThe ID of the local gateway route table.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Route': {
        'DestinationCidrBlock': 'string',
        'LocalGatewayVirtualInterfaceGroupId': 'string',
        'Type': 'static'|'propagated',
        'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted',
        'LocalGatewayRouteTableId': 'string'
    }
}


Response Structure

(dict) --

Route (dict) --
Information about the route.

DestinationCidrBlock (string) --
The CIDR block used for destination matches.

LocalGatewayVirtualInterfaceGroupId (string) --
The ID of the virtual interface group.

Type (string) --
The route type.

State (string) --
The state of the route.

LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.










    :return: {
        'Route': {
            'DestinationCidrBlock': 'string',
            'LocalGatewayVirtualInterfaceGroupId': 'string',
            'Type': 'static'|'propagated',
            'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted',
            'LocalGatewayRouteTableId': 'string'
        }
    }
    
    
    """
    pass

def delete_local_gateway_route_table_vpc_association(LocalGatewayRouteTableVpcAssociationId=None, DryRun=None):
    """
    Deletes the specified association between a VPC and local gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_local_gateway_route_table_vpc_association(
        LocalGatewayRouteTableVpcAssociationId='string',
        DryRun=True|False
    )
    
    
    :type LocalGatewayRouteTableVpcAssociationId: string
    :param LocalGatewayRouteTableVpcAssociationId: [REQUIRED]\nThe ID of the association.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'LocalGatewayRouteTableVpcAssociation': {
        'LocalGatewayRouteTableVpcAssociationId': 'string',
        'LocalGatewayRouteTableId': 'string',
        'LocalGatewayId': 'string',
        'VpcId': 'string',
        'State': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

LocalGatewayRouteTableVpcAssociation (dict) --
Information about the association.

LocalGatewayRouteTableVpcAssociationId (string) --
The ID of the association.

LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.

LocalGatewayId (string) --
The ID of the local gateway.

VpcId (string) --
The ID of the VPC.

State (string) --
The state of the association.

Tags (list) --
The tags assigned to the association.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'LocalGatewayRouteTableVpcAssociation': {
            'LocalGatewayRouteTableVpcAssociationId': 'string',
            'LocalGatewayRouteTableId': 'string',
            'LocalGatewayId': 'string',
            'VpcId': 'string',
            'State': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def delete_nat_gateway(DryRun=None, NatGatewayId=None):
    """
    Deletes the specified NAT gateway. Deleting a NAT gateway disassociates its Elastic IP address, but does not release the address from your account. Deleting a NAT gateway does not delete any NAT gateway routes in your route tables.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified NAT gateway.
    Expected Output:
    
    :example: response = client.delete_nat_gateway(
        DryRun=True|False,
        NatGatewayId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NatGatewayId: string
    :param NatGatewayId: [REQUIRED]\nThe ID of the NAT gateway.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NatGatewayId': 'string'
}


Response Structure

(dict) --

NatGatewayId (string) --
The ID of the NAT gateway.







Examples
This example deletes the specified NAT gateway.
response = client.delete_nat_gateway(
    NatGatewayId='nat-04ae55e711cec5680',
)

print(response)


Expected Output:
{
    'NatGatewayId': 'nat-04ae55e711cec5680',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NatGatewayId': 'string'
    }
    
    
    """
    pass

def delete_network_acl(DryRun=None, NetworkAclId=None):
    """
    Deletes the specified network ACL. You can\'t delete the ACL if it\'s associated with any subnets. You can\'t delete the default network ACL.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified network ACL.
    Expected Output:
    
    :example: response = client.delete_network_acl(
        DryRun=True|False,
        NetworkAclId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NetworkAclId: string
    :param NetworkAclId: [REQUIRED]\nThe ID of the network ACL.\n

    :return: response = client.delete_network_acl(
        NetworkAclId='acl-5fb85d36',
    )
    
    print(response)
    
    
    """
    pass

def delete_network_acl_entry(DryRun=None, Egress=None, NetworkAclId=None, RuleNumber=None):
    """
    Deletes the specified ingress or egress entry (rule) from the specified network ACL.
    See also: AWS API Documentation
    
    Examples
    This example deletes ingress rule number 100 from the specified network ACL.
    Expected Output:
    
    :example: response = client.delete_network_acl_entry(
        DryRun=True|False,
        Egress=True|False,
        NetworkAclId='string',
        RuleNumber=123
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Egress: boolean
    :param Egress: [REQUIRED]\nIndicates whether the rule is an egress rule.\n

    :type NetworkAclId: string
    :param NetworkAclId: [REQUIRED]\nThe ID of the network ACL.\n

    :type RuleNumber: integer
    :param RuleNumber: [REQUIRED]\nThe rule number of the entry to delete.\n

    :return: response = client.delete_network_acl_entry(
        Egress=True,
        NetworkAclId='acl-5fb85d36',
        RuleNumber=100,
    )
    
    print(response)
    
    
    """
    pass

def delete_network_interface(DryRun=None, NetworkInterfaceId=None):
    """
    Deletes the specified network interface. You must detach the network interface before you can delete it.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified network interface.
    Expected Output:
    
    :example: response = client.delete_network_interface(
        DryRun=True|False,
        NetworkInterfaceId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :return: response = client.delete_network_interface(
        NetworkInterfaceId='eni-e5aa89a3',
    )
    
    print(response)
    
    
    """
    pass

def delete_network_interface_permission(NetworkInterfacePermissionId=None, Force=None, DryRun=None):
    """
    Deletes a permission for a network interface. By default, you cannot delete the permission if the account for which you\'re removing the permission has attached the network interface to an instance. However, you can force delete the permission, regardless of any attachment.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_network_interface_permission(
        NetworkInterfacePermissionId='string',
        Force=True|False,
        DryRun=True|False
    )
    
    
    :type NetworkInterfacePermissionId: string
    :param NetworkInterfacePermissionId: [REQUIRED]\nThe ID of the network interface permission.\n

    :type Force: boolean
    :param Force: Specify true to remove the permission even if the network interface is attached to an instance.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --
Contains the output for DeleteNetworkInterfacePermission.

Return (boolean) --
Returns true if the request succeeds, otherwise returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def delete_placement_group(DryRun=None, GroupName=None):
    """
    Deletes the specified placement group. You must terminate all instances in the placement group before you can delete the placement group. For more information, see Placement Groups in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified placement group.
    Expected Output:
    
    :example: response = client.delete_placement_group(
        DryRun=True|False,
        GroupName='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type GroupName: string
    :param GroupName: [REQUIRED]\nThe name of the placement group.\n

    :return: response = client.delete_placement_group(
        GroupName='my-cluster',
    )
    
    print(response)
    
    
    """
    pass

def delete_queued_reserved_instances(DryRun=None, ReservedInstancesIds=None):
    """
    Deletes the queued purchases for the specified Reserved Instances.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_queued_reserved_instances(
        DryRun=True|False,
        ReservedInstancesIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ReservedInstancesIds: list
    :param ReservedInstancesIds: [REQUIRED]\nThe IDs of the Reserved Instances.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'SuccessfulQueuedPurchaseDeletions': [
        {
            'ReservedInstancesId': 'string'
        },
    ],
    'FailedQueuedPurchaseDeletions': [
        {
            'Error': {
                'Code': 'reserved-instances-id-invalid'|'reserved-instances-not-in-queued-state'|'unexpected-error',
                'Message': 'string'
            },
            'ReservedInstancesId': 'string'
        },
    ]
}


Response Structure

(dict) --

SuccessfulQueuedPurchaseDeletions (list) --
Information about the queued purchases that were successfully deleted.

(dict) --
Describes a Reserved Instance whose queued purchase was successfully deleted.

ReservedInstancesId (string) --
The ID of the Reserved Instance.





FailedQueuedPurchaseDeletions (list) --
Information about the queued purchases that could not be deleted.

(dict) --
Describes a Reserved Instance whose queued purchase was not deleted.

Error (dict) --
The error.

Code (string) --
The error code.

Message (string) --
The error message.



ReservedInstancesId (string) --
The ID of the Reserved Instance.












    :return: {
        'SuccessfulQueuedPurchaseDeletions': [
            {
                'ReservedInstancesId': 'string'
            },
        ],
        'FailedQueuedPurchaseDeletions': [
            {
                'Error': {
                    'Code': 'reserved-instances-id-invalid'|'reserved-instances-not-in-queued-state'|'unexpected-error',
                    'Message': 'string'
                },
                'ReservedInstancesId': 'string'
            },
        ]
    }
    
    
    """
    pass

def delete_route(DestinationCidrBlock=None, DestinationIpv6CidrBlock=None, DryRun=None, RouteTableId=None):
    """
    Deletes the specified route from the specified route table.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified route from the specified route table.
    Expected Output:
    
    :example: response = client.delete_route(
        DestinationCidrBlock='string',
        DestinationIpv6CidrBlock='string',
        DryRun=True|False,
        RouteTableId='string'
    )
    
    
    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: The IPv4 CIDR range for the route. The value you specify must match the CIDR for the route exactly.

    :type DestinationIpv6CidrBlock: string
    :param DestinationIpv6CidrBlock: The IPv6 CIDR range for the route. The value you specify must match the CIDR for the route exactly.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type RouteTableId: string
    :param RouteTableId: [REQUIRED]\nThe ID of the route table.\n

    :return: response = client.delete_route(
        DestinationCidrBlock='0.0.0.0/0',
        RouteTableId='rtb-22574640',
    )
    
    print(response)
    
    
    """
    pass

def delete_route_table(DryRun=None, RouteTableId=None):
    """
    Deletes the specified route table. You must disassociate the route table from any subnets before you can delete it. You can\'t delete the main route table.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified route table.
    Expected Output:
    
    :example: response = client.delete_route_table(
        DryRun=True|False,
        RouteTableId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type RouteTableId: string
    :param RouteTableId: [REQUIRED]\nThe ID of the route table.\n

    :return: response = client.delete_route_table(
        RouteTableId='rtb-22574640',
    )
    
    print(response)
    
    
    """
    pass

def delete_security_group(GroupId=None, GroupName=None, DryRun=None):
    """
    Deletes a security group.
    If you attempt to delete a security group that is associated with an instance, or is referenced by another security group, the operation fails with InvalidGroup.InUse in EC2-Classic or DependencyViolation in EC2-VPC.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified security group.
    Expected Output:
    
    :example: response = client.delete_security_group(
        GroupId='string',
        GroupName='string',
        DryRun=True|False
    )
    
    
    :type GroupId: string
    :param GroupId: The ID of the security group. Required for a nondefault VPC.

    :type GroupName: string
    :param GroupName: [EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.delete_security_group(
        GroupId='sg-903004f8',
    )
    
    print(response)
    
    
    """
    pass

def delete_snapshot(SnapshotId=None, DryRun=None):
    """
    Deletes the specified snapshot.
    When you make periodic snapshots of a volume, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the volume.
    You cannot delete a snapshot of the root device of an EBS volume used by a registered AMI. You must first de-register the AMI before you can delete the snapshot.
    For more information, see Deleting an Amazon EBS Snapshot in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example deletes a snapshot with the snapshot ID of snap-1234567890abcdef0. If the command succeeds, no output is returned.
    Expected Output:
    
    :example: response = client.delete_snapshot(
        SnapshotId='string',
        DryRun=True|False
    )
    
    
    :type SnapshotId: string
    :param SnapshotId: [REQUIRED]\nThe ID of the EBS snapshot.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.delete_snapshot(
        SnapshotId='snap-1234567890abcdef0',
    )
    
    print(response)
    
    
    """
    pass

def delete_spot_datafeed_subscription(DryRun=None):
    """
    Deletes the data feed for Spot Instances.
    See also: AWS API Documentation
    
    Examples
    This example deletes a Spot data feed subscription for the account.
    Expected Output:
    
    :example: response = client.delete_spot_datafeed_subscription(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.delete_spot_datafeed_subscription(
    )
    
    print(response)
    
    
    """
    pass

def delete_subnet(SubnetId=None, DryRun=None):
    """
    Deletes the specified subnet. You must terminate all running instances in the subnet before you can delete the subnet.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified subnet.
    Expected Output:
    
    :example: response = client.delete_subnet(
        SubnetId='string',
        DryRun=True|False
    )
    
    
    :type SubnetId: string
    :param SubnetId: [REQUIRED]\nThe ID of the subnet.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.delete_subnet(
        SubnetId='subnet-9d4a7b6c',
    )
    
    print(response)
    
    
    """
    pass

def delete_tags(DryRun=None, Resources=None, Tags=None):
    """
    Deletes the specified set of tags from the specified set of resources.
    To list the current tags, use  DescribeTags . For more information about tags, see Tagging Your Resources in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example deletes the tag Stack=test from the specified image.
    Expected Output:
    
    :example: response = client.delete_tags(
        DryRun=True|False,
        Resources=[
            'string',
        ],
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Resources: list
    :param Resources: [REQUIRED]\nThe IDs of the resources, separated by spaces.\nConstraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.\n\n(string) --\n\n

    :type Tags: list
    :param Tags: The tags to delete. Specify a tag key and an optional tag value to delete specific tags. If you specify a tag key without a tag value, we delete any tag with this key regardless of its value. If you specify a tag key with an empty string as the tag value, we delete the tag only if its value is an empty string.\nIf you omit this parameter, we delete all user-defined tags for the specified resources. We do not delete AWS-generated tags (tags that have the aws: prefix).\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n

    :return: response = client.delete_tags(
        Resources=[
            'ami-78a54011',
        ],
        Tags=[
            {
                'Key': 'Stack',
                'Value': 'test',
            },
        ],
    )
    
    print(response)
    
    
    """
    pass

def delete_traffic_mirror_filter(TrafficMirrorFilterId=None, DryRun=None):
    """
    Deletes the specified Traffic Mirror filter.
    You cannot delete a Traffic Mirror filter that is in use by a Traffic Mirror session.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_traffic_mirror_filter(
        TrafficMirrorFilterId='string',
        DryRun=True|False
    )
    
    
    :type TrafficMirrorFilterId: string
    :param TrafficMirrorFilterId: [REQUIRED]\nThe ID of the Traffic Mirror filter.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorFilterId': 'string'
}


Response Structure

(dict) --

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter.








    :return: {
        'TrafficMirrorFilterId': 'string'
    }
    
    
    """
    pass

def delete_traffic_mirror_filter_rule(TrafficMirrorFilterRuleId=None, DryRun=None):
    """
    Deletes the specified Traffic Mirror rule.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_traffic_mirror_filter_rule(
        TrafficMirrorFilterRuleId='string',
        DryRun=True|False
    )
    
    
    :type TrafficMirrorFilterRuleId: string
    :param TrafficMirrorFilterRuleId: [REQUIRED]\nThe ID of the Traffic Mirror rule.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorFilterRuleId': 'string'
}


Response Structure

(dict) --

TrafficMirrorFilterRuleId (string) --
The ID of the deleted Traffic Mirror rule.








    :return: {
        'TrafficMirrorFilterRuleId': 'string'
    }
    
    
    """
    pass

def delete_traffic_mirror_session(TrafficMirrorSessionId=None, DryRun=None):
    """
    Deletes the specified Traffic Mirror session.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_traffic_mirror_session(
        TrafficMirrorSessionId='string',
        DryRun=True|False
    )
    
    
    :type TrafficMirrorSessionId: string
    :param TrafficMirrorSessionId: [REQUIRED]\nThe ID of the Traffic Mirror session.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorSessionId': 'string'
}


Response Structure

(dict) --

TrafficMirrorSessionId (string) --
The ID of the deleted Traffic Mirror session.








    :return: {
        'TrafficMirrorSessionId': 'string'
    }
    
    
    """
    pass

def delete_traffic_mirror_target(TrafficMirrorTargetId=None, DryRun=None):
    """
    Deletes the specified Traffic Mirror target.
    You cannot delete a Traffic Mirror target that is in use by a Traffic Mirror session.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_traffic_mirror_target(
        TrafficMirrorTargetId='string',
        DryRun=True|False
    )
    
    
    :type TrafficMirrorTargetId: string
    :param TrafficMirrorTargetId: [REQUIRED]\nThe ID of the Traffic Mirror target.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorTargetId': 'string'
}


Response Structure

(dict) --

TrafficMirrorTargetId (string) --
The ID of the deleted Traffic Mirror target.








    :return: {
        'TrafficMirrorTargetId': 'string'
    }
    
    
    """
    pass

def delete_transit_gateway(TransitGatewayId=None, DryRun=None):
    """
    Deletes the specified transit gateway.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_transit_gateway(
        TransitGatewayId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayId: string
    :param TransitGatewayId: [REQUIRED]\nThe ID of the transit gateway.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGateway': {
        'TransitGatewayId': 'string',
        'TransitGatewayArn': 'string',
        'State': 'pending'|'available'|'modifying'|'deleting'|'deleted',
        'OwnerId': 'string',
        'Description': 'string',
        'CreationTime': datetime(2015, 1, 1),
        'Options': {
            'AmazonSideAsn': 123,
            'AutoAcceptSharedAttachments': 'enable'|'disable',
            'DefaultRouteTableAssociation': 'enable'|'disable',
            'AssociationDefaultRouteTableId': 'string',
            'DefaultRouteTablePropagation': 'enable'|'disable',
            'PropagationDefaultRouteTableId': 'string',
            'VpnEcmpSupport': 'enable'|'disable',
            'DnsSupport': 'enable'|'disable',
            'MulticastSupport': 'enable'|'disable'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGateway (dict) --
Information about the deleted transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

TransitGatewayArn (string) --
The Amazon Resource Name (ARN) of the transit gateway.

State (string) --
The state of the transit gateway.

OwnerId (string) --
The ID of the AWS account ID that owns the transit gateway.

Description (string) --
The description of the transit gateway.

CreationTime (datetime) --
The creation time.

Options (dict) --
The transit gateway options.

AmazonSideAsn (integer) --
A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.

AutoAcceptSharedAttachments (string) --
Indicates whether attachment requests are automatically accepted.

DefaultRouteTableAssociation (string) --
Indicates whether resource attachments are automatically associated with the default association route table.

AssociationDefaultRouteTableId (string) --
The ID of the default association route table.

DefaultRouteTablePropagation (string) --
Indicates whether resource attachments automatically propagate routes to the default propagation route table.

PropagationDefaultRouteTableId (string) --
The ID of the default propagation route table.

VpnEcmpSupport (string) --
Indicates whether Equal Cost Multipath Protocol support is enabled.

DnsSupport (string) --
Indicates whether DNS support is enabled.

MulticastSupport (string) --
Indicates whether multicast is enabled on the transit gateway



Tags (list) --
The tags for the transit gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGateway': {
            'TransitGatewayId': 'string',
            'TransitGatewayArn': 'string',
            'State': 'pending'|'available'|'modifying'|'deleting'|'deleted',
            'OwnerId': 'string',
            'Description': 'string',
            'CreationTime': datetime(2015, 1, 1),
            'Options': {
                'AmazonSideAsn': 123,
                'AutoAcceptSharedAttachments': 'enable'|'disable',
                'DefaultRouteTableAssociation': 'enable'|'disable',
                'AssociationDefaultRouteTableId': 'string',
                'DefaultRouteTablePropagation': 'enable'|'disable',
                'PropagationDefaultRouteTableId': 'string',
                'VpnEcmpSupport': 'enable'|'disable',
                'DnsSupport': 'enable'|'disable',
                'MulticastSupport': 'enable'|'disable'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def delete_transit_gateway_multicast_domain(TransitGatewayMulticastDomainId=None, DryRun=None):
    """
    Deletes the specified transit gateway multicast domain.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_transit_gateway_multicast_domain(
        TransitGatewayMulticastDomainId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainId: string
    :param TransitGatewayMulticastDomainId: [REQUIRED]\nThe ID of the transit gateway multicast domain.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayMulticastDomain': {
        'TransitGatewayMulticastDomainId': 'string',
        'TransitGatewayId': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'CreationTime': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayMulticastDomain (dict) --
Information about the deleted transit gateway multicast domain.

TransitGatewayMulticastDomainId (string) --
The ID of the transit gateway multicast domain.

TransitGatewayId (string) --
The ID of the transit gateway.

State (string) --
The state of the transit gateway multicast domain.

CreationTime (datetime) --
The time the transit gateway multicast domain was created.

Tags (list) --
The tags for the transit gateway multicast domain.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayMulticastDomain': {
            'TransitGatewayMulticastDomainId': 'string',
            'TransitGatewayId': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def delete_transit_gateway_peering_attachment(TransitGatewayAttachmentId=None, DryRun=None):
    """
    Deletes a transit gateway peering attachment.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_transit_gateway_peering_attachment(
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the transit gateway peering attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayPeeringAttachment': {
        'TransitGatewayAttachmentId': 'string',
        'RequesterTgwInfo': {
            'TransitGatewayId': 'string',
            'OwnerId': 'string',
            'Region': 'string'
        },
        'AccepterTgwInfo': {
            'TransitGatewayId': 'string',
            'OwnerId': 'string',
            'Region': 'string'
        },
        'Status': {
            'Code': 'string',
            'Message': 'string'
        },
        'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
        'CreationTime': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayPeeringAttachment (dict) --
The transit gateway peering attachment.

TransitGatewayAttachmentId (string) --
The ID of the transit gateway peering attachment.

RequesterTgwInfo (dict) --
Information about the requester transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



AccepterTgwInfo (dict) --
Information about the accepter transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



Status (dict) --
The status of the transit gateway peering attachment.

Code (string) --
The status code.

Message (string) --
The status message, if applicable.



State (string) --
The state of the transit gateway peering attachment.

CreationTime (datetime) --
The time the transit gateway peering attachment was created.

Tags (list) --
The tags for the transit gateway peering attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayPeeringAttachment': {
            'TransitGatewayAttachmentId': 'string',
            'RequesterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'AccepterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'Status': {
                'Code': 'string',
                'Message': 'string'
            },
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def delete_transit_gateway_route(TransitGatewayRouteTableId=None, DestinationCidrBlock=None, DryRun=None):
    """
    Deletes the specified route from the specified transit gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_transit_gateway_route(
        TransitGatewayRouteTableId='string',
        DestinationCidrBlock='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the transit gateway route table.\n

    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe CIDR range for the route. This must match the CIDR for the route exactly.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Route': {
        'DestinationCidrBlock': 'string',
        'TransitGatewayAttachments': [
            {
                'ResourceId': 'string',
                'TransitGatewayAttachmentId': 'string',
                'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering'
            },
        ],
        'Type': 'static'|'propagated',
        'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted'
    }
}


Response Structure

(dict) --

Route (dict) --
Information about the route.

DestinationCidrBlock (string) --
The CIDR block used for destination matches.

TransitGatewayAttachments (list) --
The attachments.

(dict) --
Describes a route attachment.

ResourceId (string) --
The ID of the resource.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceType (string) --
The resource type.





Type (string) --
The route type.

State (string) --
The state of the route.










    :return: {
        'Route': {
            'DestinationCidrBlock': 'string',
            'TransitGatewayAttachments': [
                {
                    'ResourceId': 'string',
                    'TransitGatewayAttachmentId': 'string',
                    'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering'
                },
            ],
            'Type': 'static'|'propagated',
            'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted'
        }
    }
    
    
    """
    pass

def delete_transit_gateway_route_table(TransitGatewayRouteTableId=None, DryRun=None):
    """
    Deletes the specified transit gateway route table. You must disassociate the route table from any transit gateway route tables before you can delete it.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_transit_gateway_route_table(
        TransitGatewayRouteTableId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the transit gateway route table.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayRouteTable': {
        'TransitGatewayRouteTableId': 'string',
        'TransitGatewayId': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'DefaultAssociationRouteTable': True|False,
        'DefaultPropagationRouteTable': True|False,
        'CreationTime': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayRouteTable (dict) --
Information about the deleted transit gateway route table.

TransitGatewayRouteTableId (string) --
The ID of the transit gateway route table.

TransitGatewayId (string) --
The ID of the transit gateway.

State (string) --
The state of the transit gateway route table.

DefaultAssociationRouteTable (boolean) --
Indicates whether this is the default association route table for the transit gateway.

DefaultPropagationRouteTable (boolean) --
Indicates whether this is the default propagation route table for the transit gateway.

CreationTime (datetime) --
The creation time.

Tags (list) --
Any tags assigned to the route table.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayRouteTable': {
            'TransitGatewayRouteTableId': 'string',
            'TransitGatewayId': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'DefaultAssociationRouteTable': True|False,
            'DefaultPropagationRouteTable': True|False,
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def delete_transit_gateway_vpc_attachment(TransitGatewayAttachmentId=None, DryRun=None):
    """
    Deletes the specified VPC attachment.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_transit_gateway_vpc_attachment(
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayVpcAttachment': {
        'TransitGatewayAttachmentId': 'string',
        'TransitGatewayId': 'string',
        'VpcId': 'string',
        'VpcOwnerId': 'string',
        'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
        'SubnetIds': [
            'string',
        ],
        'CreationTime': datetime(2015, 1, 1),
        'Options': {
            'DnsSupport': 'enable'|'disable',
            'Ipv6Support': 'enable'|'disable'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayVpcAttachment (dict) --
Information about the deleted VPC attachment.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

TransitGatewayId (string) --
The ID of the transit gateway.

VpcId (string) --
The ID of the VPC.

VpcOwnerId (string) --
The ID of the AWS account that owns the VPC.

State (string) --
The state of the VPC attachment.

SubnetIds (list) --
The IDs of the subnets.

(string) --


CreationTime (datetime) --
The creation time.

Options (dict) --
The VPC attachment options.

DnsSupport (string) --
Indicates whether DNS support is enabled.

Ipv6Support (string) --
Indicates whether IPv6 support is disabled.



Tags (list) --
The tags for the VPC attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayVpcAttachment': {
            'TransitGatewayAttachmentId': 'string',
            'TransitGatewayId': 'string',
            'VpcId': 'string',
            'VpcOwnerId': 'string',
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'SubnetIds': [
                'string',
            ],
            'CreationTime': datetime(2015, 1, 1),
            'Options': {
                'DnsSupport': 'enable'|'disable',
                'Ipv6Support': 'enable'|'disable'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def delete_volume(VolumeId=None, DryRun=None):
    """
    Deletes the specified EBS volume. The volume must be in the available state (not attached to an instance).
    The volume can remain in the deleting state for several minutes.
    For more information, see Deleting an Amazon EBS Volume in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example deletes an available volume with the volume ID of vol-049df61146c4d7901. If the command succeeds, no output is returned.
    Expected Output:
    
    :example: response = client.delete_volume(
        VolumeId='string',
        DryRun=True|False
    )
    
    
    :type VolumeId: string
    :param VolumeId: [REQUIRED]\nThe ID of the volume.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.delete_volume(
        VolumeId='vol-049df61146c4d7901',
    )
    
    print(response)
    
    
    """
    pass

def delete_vpc(VpcId=None, DryRun=None):
    """
    Deletes the specified VPC. You must detach or delete all gateways and resources that are associated with the VPC before you can delete it. For example, you must terminate all instances running in the VPC, delete all security groups associated with the VPC (except the default one), delete all route tables associated with the VPC (except the default one), and so on.
    See also: AWS API Documentation
    
    Examples
    This example deletes the specified VPC.
    Expected Output:
    
    :example: response = client.delete_vpc(
        VpcId='string',
        DryRun=True|False
    )
    
    
    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.delete_vpc(
        VpcId='vpc-a01106c2',
    )
    
    print(response)
    
    
    """
    pass

def delete_vpc_endpoint_connection_notifications(DryRun=None, ConnectionNotificationIds=None):
    """
    Deletes one or more VPC endpoint connection notifications.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_vpc_endpoint_connection_notifications(
        DryRun=True|False,
        ConnectionNotificationIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ConnectionNotificationIds: list
    :param ConnectionNotificationIds: [REQUIRED]\nOne or more notification IDs.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Unsuccessful': [
        {
            'Error': {
                'Code': 'string',
                'Message': 'string'
            },
            'ResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --

Unsuccessful (list) --
Information about the notifications that could not be deleted successfully.

(dict) --
Information about items that were not successfully processed in a batch call.

Error (dict) --
Information about the error.

Code (string) --
The error code.

Message (string) --
The error message accompanying the error code.



ResourceId (string) --
The ID of the resource.












    :return: {
        'Unsuccessful': [
            {
                'Error': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'ResourceId': 'string'
            },
        ]
    }
    
    
    """
    pass

def delete_vpc_endpoint_service_configurations(DryRun=None, ServiceIds=None):
    """
    Deletes one or more VPC endpoint service configurations in your account. Before you delete the endpoint service configuration, you must reject any Available or PendingAcceptance interface endpoint connections that are attached to the service.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_vpc_endpoint_service_configurations(
        DryRun=True|False,
        ServiceIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceIds: list
    :param ServiceIds: [REQUIRED]\nThe IDs of one or more services.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Unsuccessful': [
        {
            'Error': {
                'Code': 'string',
                'Message': 'string'
            },
            'ResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --

Unsuccessful (list) --
Information about the service configurations that were not deleted, if applicable.

(dict) --
Information about items that were not successfully processed in a batch call.

Error (dict) --
Information about the error.

Code (string) --
The error code.

Message (string) --
The error message accompanying the error code.



ResourceId (string) --
The ID of the resource.












    :return: {
        'Unsuccessful': [
            {
                'Error': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'ResourceId': 'string'
            },
        ]
    }
    
    
    """
    pass

def delete_vpc_endpoints(DryRun=None, VpcEndpointIds=None):
    """
    Deletes one or more specified VPC endpoints. Deleting a gateway endpoint also deletes the endpoint routes in the route tables that were associated with the endpoint. Deleting an interface endpoint deletes the endpoint network interfaces.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_vpc_endpoints(
        DryRun=True|False,
        VpcEndpointIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcEndpointIds: list
    :param VpcEndpointIds: [REQUIRED]\nOne or more VPC endpoint IDs.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Unsuccessful': [
        {
            'Error': {
                'Code': 'string',
                'Message': 'string'
            },
            'ResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the output of DeleteVpcEndpoints.

Unsuccessful (list) --
Information about the VPC endpoints that were not successfully deleted.

(dict) --
Information about items that were not successfully processed in a batch call.

Error (dict) --
Information about the error.

Code (string) --
The error code.

Message (string) --
The error message accompanying the error code.



ResourceId (string) --
The ID of the resource.












    :return: {
        'Unsuccessful': [
            {
                'Error': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'ResourceId': 'string'
            },
        ]
    }
    
    
    """
    pass

def delete_vpc_peering_connection(DryRun=None, VpcPeeringConnectionId=None):
    """
    Deletes a VPC peering connection. Either the owner of the requester VPC or the owner of the accepter VPC can delete the VPC peering connection if it\'s in the active state. The owner of the requester VPC can delete a VPC peering connection in the pending-acceptance state. You cannot delete a VPC peering connection that\'s in the failed state.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_vpc_peering_connection(
        DryRun=True|False,
        VpcPeeringConnectionId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcPeeringConnectionId: string
    :param VpcPeeringConnectionId: [REQUIRED]\nThe ID of the VPC peering connection.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def delete_vpn_connection(VpnConnectionId=None, DryRun=None):
    """
    Deletes the specified VPN connection.
    If you\'re deleting the VPC and its associated components, we recommend that you detach the virtual private gateway from the VPC and delete the VPC before deleting the VPN connection. If you believe that the tunnel credentials for your VPN connection have been compromised, you can delete the VPN connection and create a new one that has new keys, without needing to delete the VPC or virtual private gateway. If you create a new VPN connection, you must reconfigure the customer gateway device using the new configuration information returned with the new VPN connection ID.
    For certificate-based authentication, delete all AWS Certificate Manager (ACM) private certificates used for the AWS-side tunnel endpoints for the VPN connection before deleting the VPN connection.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_vpn_connection(
        VpnConnectionId='string',
        DryRun=True|False
    )
    
    
    :type VpnConnectionId: string
    :param VpnConnectionId: [REQUIRED]\nThe ID of the VPN connection.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    """
    pass

def delete_vpn_connection_route(DestinationCidrBlock=None, VpnConnectionId=None):
    """
    Deletes the specified static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_vpn_connection_route(
        DestinationCidrBlock='string',
        VpnConnectionId='string'
    )
    
    
    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe CIDR block associated with the local subnet of the customer network.\n

    :type VpnConnectionId: string
    :param VpnConnectionId: [REQUIRED]\nThe ID of the VPN connection.\n

    """
    pass

def delete_vpn_gateway(VpnGatewayId=None, DryRun=None):
    """
    Deletes the specified virtual private gateway. You must first detach the virtual private gateway from the VPC. Note that you don\'t need to delete the virtual private gateway if you plan to delete and recreate the VPN connection between your VPC and your network.
    See also: AWS API Documentation
    
    
    :example: response = client.delete_vpn_gateway(
        VpnGatewayId='string',
        DryRun=True|False
    )
    
    
    :type VpnGatewayId: string
    :param VpnGatewayId: [REQUIRED]\nThe ID of the virtual private gateway.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    """
    pass

def deprovision_byoip_cidr(Cidr=None, DryRun=None):
    """
    Releases the specified address range that you provisioned for use with your AWS resources through bring your own IP addresses (BYOIP) and deletes the corresponding address pool.
    Before you can release an address range, you must stop advertising it using  WithdrawByoipCidr and you must not have any IP addresses allocated from its address range.
    See also: AWS API Documentation
    
    
    :example: response = client.deprovision_byoip_cidr(
        Cidr='string',
        DryRun=True|False
    )
    
    
    :type Cidr: string
    :param Cidr: [REQUIRED]\nThe address range, in CIDR notation. The prefix must be the same prefix that you specified when you provisioned the address range.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ByoipCidr': {
        'Cidr': 'string',
        'Description': 'string',
        'StatusMessage': 'string',
        'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
    }
}


Response Structure

(dict) --

ByoipCidr (dict) --
Information about the address range.

Cidr (string) --
The address range, in CIDR notation.

Description (string) --
The description of the address range.

StatusMessage (string) --
Upon success, contains the ID of the address pool. Otherwise, contains an error message.

State (string) --
The state of the address pool.










    :return: {
        'ByoipCidr': {
            'Cidr': 'string',
            'Description': 'string',
            'StatusMessage': 'string',
            'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
        }
    }
    
    
    """
    pass

def deregister_image(ImageId=None, DryRun=None):
    """
    Deregisters the specified AMI. After you deregister an AMI, it can\'t be used to launch new instances; however, it doesn\'t affect any instances that you\'ve already launched from the AMI. You\'ll continue to incur usage costs for those instances until you terminate them.
    When you deregister an Amazon EBS-backed AMI, it doesn\'t affect the snapshot that was created for the root volume of the instance during the AMI creation process. When you deregister an instance store-backed AMI, it doesn\'t affect the files that you uploaded to Amazon S3 when you created the AMI.
    See also: AWS API Documentation
    
    
    :example: response = client.deregister_image(
        ImageId='string',
        DryRun=True|False
    )
    
    
    :type ImageId: string
    :param ImageId: [REQUIRED]\nThe ID of the AMI.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    """
    pass

def deregister_instance_event_notification_attributes(DryRun=None, InstanceTagAttribute=None):
    """
    Deregisters tag keys to prevent tags that have the specified tag keys from being included in scheduled event notifications for resources in the Region.
    See also: AWS API Documentation
    
    
    :example: response = client.deregister_instance_event_notification_attributes(
        DryRun=True|False,
        InstanceTagAttribute={
            'IncludeAllTagsOfInstance': True|False,
            'InstanceTagKeys': [
                'string',
            ]
        }
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceTagAttribute: dict
    :param InstanceTagAttribute: Information about the tag keys to deregister.\n\nIncludeAllTagsOfInstance (boolean) --Indicates whether to deregister all tag keys in the current Region. Specify false to deregister all tag keys.\n\nInstanceTagKeys (list) --Information about the tag keys to deregister.\n\n(string) --\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceTagAttribute': {
        'InstanceTagKeys': [
            'string',
        ],
        'IncludeAllTagsOfInstance': True|False
    }
}


Response Structure

(dict) --

InstanceTagAttribute (dict) --
The resulting set of tag keys.

InstanceTagKeys (list) --
The registered tag keys.

(string) --


IncludeAllTagsOfInstance (boolean) --
Indicates wheter all tag keys in the current Region are registered to appear in scheduled event notifications. true indicates that all tag keys in the current Region are registered.










    :return: {
        'InstanceTagAttribute': {
            'InstanceTagKeys': [
                'string',
            ],
            'IncludeAllTagsOfInstance': True|False
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def deregister_transit_gateway_multicast_group_members(TransitGatewayMulticastDomainId=None, GroupIpAddress=None, NetworkInterfaceIds=None, DryRun=None):
    """
    Deregisters the specified members (network interfaces) from the transit gateway multicast group.
    See also: AWS API Documentation
    
    
    :example: response = client.deregister_transit_gateway_multicast_group_members(
        TransitGatewayMulticastDomainId='string',
        GroupIpAddress='string',
        NetworkInterfaceIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainId: string
    :param TransitGatewayMulticastDomainId: The ID of the transit gateway multicast domain.

    :type GroupIpAddress: string
    :param GroupIpAddress: The IP address assigned to the transit gateway multicast group.

    :type NetworkInterfaceIds: list
    :param NetworkInterfaceIds: The IDs of the group members\' network interfaces.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'DeregisteredMulticastGroupMembers': {
        'TransitGatewayMulticastDomainId': 'string',
        'DeregisteredNetworkInterfaceIds': [
            'string',
        ],
        'GroupIpAddress': 'string'
    }
}


Response Structure

(dict) --

DeregisteredMulticastGroupMembers (dict) --
Information about the deregistered members.

TransitGatewayMulticastDomainId (string) --
The ID of the transit gateway multicast domain.

DeregisteredNetworkInterfaceIds (list) --
The network interface IDs of the deregistered members.

(string) --


GroupIpAddress (string) --
The IP address assigned to the transit gateway multicast group.










    :return: {
        'DeregisteredMulticastGroupMembers': {
            'TransitGatewayMulticastDomainId': 'string',
            'DeregisteredNetworkInterfaceIds': [
                'string',
            ],
            'GroupIpAddress': 'string'
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def deregister_transit_gateway_multicast_group_sources(TransitGatewayMulticastDomainId=None, GroupIpAddress=None, NetworkInterfaceIds=None, DryRun=None):
    """
    Deregisters the specified sources (network interfaces) from the transit gateway multicast group.
    See also: AWS API Documentation
    
    
    :example: response = client.deregister_transit_gateway_multicast_group_sources(
        TransitGatewayMulticastDomainId='string',
        GroupIpAddress='string',
        NetworkInterfaceIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainId: string
    :param TransitGatewayMulticastDomainId: The ID of the transit gateway multicast domain.

    :type GroupIpAddress: string
    :param GroupIpAddress: The IP address assigned to the transit gateway multicast group.

    :type NetworkInterfaceIds: list
    :param NetworkInterfaceIds: The IDs of the group sources\' network interfaces.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'DeregisteredMulticastGroupSources': {
        'TransitGatewayMulticastDomainId': 'string',
        'DeregisteredNetworkInterfaceIds': [
            'string',
        ],
        'GroupIpAddress': 'string'
    }
}


Response Structure

(dict) --

DeregisteredMulticastGroupSources (dict) --
Information about the deregistered group sources.

TransitGatewayMulticastDomainId (string) --
The ID of the transit gateway multicast domain.

DeregisteredNetworkInterfaceIds (list) --
The network interface IDs of the non-registered members.

(string) --


GroupIpAddress (string) --
The IP address assigned to the transit gateway multicast group.










    :return: {
        'DeregisteredMulticastGroupSources': {
            'TransitGatewayMulticastDomainId': 'string',
            'DeregisteredNetworkInterfaceIds': [
                'string',
            ],
            'GroupIpAddress': 'string'
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_account_attributes(AttributeNames=None, DryRun=None):
    """
    Describes attributes of your AWS account. The following are the supported account attributes:
    See also: AWS API Documentation
    
    Examples
    This example describes the supported-platforms attribute for your AWS account.
    Expected Output:
    This example describes the attributes for your AWS account.
    Expected Output:
    
    :example: response = client.describe_account_attributes(
        AttributeNames=[
            'supported-platforms'|'default-vpc',
        ],
        DryRun=True|False
    )
    
    
    :type AttributeNames: list
    :param AttributeNames: The account attribute names.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'AccountAttributes': [
        {
            'AttributeName': 'string',
            'AttributeValues': [
                {
                    'AttributeValue': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --

AccountAttributes (list) --
Information about the account attributes.

(dict) --
Describes an account attribute.

AttributeName (string) --
The name of the account attribute.

AttributeValues (list) --
The values for the account attribute.

(dict) --
Describes a value of an account attribute.

AttributeValue (string) --
The value of the attribute.















Examples
This example describes the supported-platforms attribute for your AWS account.
response = client.describe_account_attributes(
    AttributeNames=[
        'supported-platforms',
    ],
)

print(response)


Expected Output:
{
    'AccountAttributes': [
        {
            'AttributeName': 'supported-platforms',
            'AttributeValues': [
                {
                    'AttributeValue': 'EC2',
                },
                {
                    'AttributeValue': 'VPC',
                },
            ],
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the attributes for your AWS account.
response = client.describe_account_attributes(
)

print(response)


Expected Output:
{
    'AccountAttributes': [
        {
            'AttributeName': 'supported-platforms',
            'AttributeValues': [
                {
                    'AttributeValue': 'EC2',
                },
                {
                    'AttributeValue': 'VPC',
                },
            ],
        },
        {
            'AttributeName': 'vpc-max-security-groups-per-interface',
            'AttributeValues': [
                {
                    'AttributeValue': '5',
                },
            ],
        },
        {
            'AttributeName': 'max-elastic-ips',
            'AttributeValues': [
                {
                    'AttributeValue': '5',
                },
            ],
        },
        {
            'AttributeName': 'max-instances',
            'AttributeValues': [
                {
                    'AttributeValue': '20',
                },
            ],
        },
        {
            'AttributeName': 'vpc-max-elastic-ips',
            'AttributeValues': [
                {
                    'AttributeValue': '5',
                },
            ],
        },
        {
            'AttributeName': 'default-vpc',
            'AttributeValues': [
                {
                    'AttributeValue': 'none',
                },
            ],
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AccountAttributes': [
            {
                'AttributeName': 'string',
                'AttributeValues': [
                    {
                        'AttributeValue': 'string'
                    },
                ]
            },
        ]
    }
    
    
    :returns: 
    AttributeNames (list) -- The account attribute names.
    
    (string) --
    
    
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    
    """
    pass

def describe_addresses(Filters=None, PublicIps=None, AllocationIds=None, DryRun=None):
    """
    Describes the specified Elastic IP addresses or all of your Elastic IP addresses.
    An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see Elastic IP Addresses in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes your Elastic IP addresses.
    Expected Output:
    This example describes your Elastic IP addresses for use with instances in a VPC.
    Expected Output:
    This example describes your Elastic IP addresses for use with instances in EC2-Classic.
    Expected Output:
    
    :example: response = client.describe_addresses(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        PublicIps=[
            'string',
        ],
        AllocationIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type Filters: list
    :param Filters: One or more filters. Filter names and values are case-sensitive.\n\nallocation-id - [EC2-VPC] The allocation ID for the address.\nassociation-id - [EC2-VPC] The association ID for the address.\ndomain - Indicates whether the address is for use in EC2-Classic (standard ) or in a VPC (vpc ).\ninstance-id - The ID of the instance the address is associated with, if any.\nnetwork-border-group - The location from where the IP address is advertised.\nnetwork-interface-id - [EC2-VPC] The ID of the network interface that the address is associated with, if any.\nnetwork-interface-owner-id - The AWS account ID of the owner.\nprivate-ip-address - [EC2-VPC] The private IP address associated with the Elastic IP address.\npublic-ip - The Elastic IP address.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type PublicIps: list
    :param PublicIps: One or more Elastic IP addresses.\nDefault: Describes all your Elastic IP addresses.\n\n(string) --\n\n

    :type AllocationIds: list
    :param AllocationIds: [EC2-VPC] Information about the allocation IDs.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Addresses': [
        {
            'InstanceId': 'string',
            'PublicIp': 'string',
            'AllocationId': 'string',
            'AssociationId': 'string',
            'Domain': 'vpc'|'standard',
            'NetworkInterfaceId': 'string',
            'NetworkInterfaceOwnerId': 'string',
            'PrivateIpAddress': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'PublicIpv4Pool': 'string',
            'NetworkBorderGroup': 'string',
            'CustomerOwnedIp': 'string',
            'CustomerOwnedIpv4Pool': 'string'
        },
    ]
}


Response Structure

(dict) --

Addresses (list) --
Information about the Elastic IP addresses.

(dict) --
Describes an Elastic IP address.

InstanceId (string) --
The ID of the instance that the address is associated with (if any).

PublicIp (string) --
The Elastic IP address.

AllocationId (string) --
The ID representing the allocation of the address for use with EC2-VPC.

AssociationId (string) --
The ID representing the association of the address with an instance in a VPC.

Domain (string) --
Indicates whether this Elastic IP address is for use with instances in EC2-Classic (standard ) or instances in a VPC (vpc ).

NetworkInterfaceId (string) --
The ID of the network interface.

NetworkInterfaceOwnerId (string) --
The ID of the AWS account that owns the network interface.

PrivateIpAddress (string) --
The private IP address associated with the Elastic IP address.

Tags (list) --
Any tags assigned to the Elastic IP address.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





PublicIpv4Pool (string) --
The ID of an address pool.

NetworkBorderGroup (string) --
The name of the location from which the IP address is advertised.

CustomerOwnedIp (string) --
The customer-owned IP address.

CustomerOwnedIpv4Pool (string) --
The ID of the customer-owned address pool.











Examples
This example describes your Elastic IP addresses.
response = client.describe_addresses(
)

print(response)


Expected Output:
{
    'Addresses': [
        {
            'Domain': 'standard',
            'InstanceId': 'i-1234567890abcdef0',
            'PublicIp': '198.51.100.0',
        },
        {
            'AllocationId': 'eipalloc-12345678',
            'AssociationId': 'eipassoc-12345678',
            'Domain': 'vpc',
            'InstanceId': 'i-1234567890abcdef0',
            'NetworkInterfaceId': 'eni-12345678',
            'NetworkInterfaceOwnerId': '123456789012',
            'PrivateIpAddress': '10.0.1.241',
            'PublicIp': '203.0.113.0',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes your Elastic IP addresses for use with instances in a VPC.
response = client.describe_addresses(
    Filters=[
        {
            'Name': 'domain',
            'Values': [
                'vpc',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'Addresses': [
        {
            'AllocationId': 'eipalloc-12345678',
            'AssociationId': 'eipassoc-12345678',
            'Domain': 'vpc',
            'InstanceId': 'i-1234567890abcdef0',
            'NetworkInterfaceId': 'eni-12345678',
            'NetworkInterfaceOwnerId': '123456789012',
            'PrivateIpAddress': '10.0.1.241',
            'PublicIp': '203.0.113.0',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes your Elastic IP addresses for use with instances in EC2-Classic.
response = client.describe_addresses(
    Filters=[
        {
            'Name': 'domain',
            'Values': [
                'standard',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'Addresses': [
        {
            'Domain': 'standard',
            'InstanceId': 'i-1234567890abcdef0',
            'PublicIp': '198.51.100.0',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Addresses': [
            {
                'InstanceId': 'string',
                'PublicIp': 'string',
                'AllocationId': 'string',
                'AssociationId': 'string',
                'Domain': 'vpc'|'standard',
                'NetworkInterfaceId': 'string',
                'NetworkInterfaceOwnerId': 'string',
                'PrivateIpAddress': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'PublicIpv4Pool': 'string',
                'NetworkBorderGroup': 'string',
                'CustomerOwnedIp': 'string',
                'CustomerOwnedIpv4Pool': 'string'
            },
        ]
    }
    
    
    """
    pass

def describe_aggregate_id_format(DryRun=None):
    """
    Describes the longer ID format settings for all resource types in a specific Region. This request is useful for performing a quick audit to determine whether a specific Region is fully opted in for longer IDs (17-character IDs).
    This request only returns information about resource types that support longer IDs.
    The following resource types support longer IDs: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_aggregate_id_format(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'UseLongIdsAggregated': True|False,
    'Statuses': [
        {
            'Deadline': datetime(2015, 1, 1),
            'Resource': 'string',
            'UseLongIds': True|False
        },
    ]
}


Response Structure

(dict) --
UseLongIdsAggregated (boolean) --Indicates whether all resource types in the Region are configured to use longer IDs. This value is only true if all users are configured to use longer IDs for all resources types in the Region.

Statuses (list) --Information about each resource\'s ID format.

(dict) --Describes the ID format for a resource.

Deadline (datetime) --The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.

Resource (string) --The type of resource.

UseLongIds (boolean) --Indicates whether longer IDs (17-character IDs) are enabled for the resource.











    :return: {
        'UseLongIdsAggregated': True|False,
        'Statuses': [
            {
                'Deadline': datetime(2015, 1, 1),
                'Resource': 'string',
                'UseLongIds': True|False
            },
        ]
    }
    
    
    """
    pass

def describe_availability_zones(Filters=None, ZoneNames=None, ZoneIds=None, AllAvailabilityZones=None, DryRun=None):
    """
    Describes the Availability Zones and Local Zones that are available to you. If there is an event impacting an Availability Zone or Local Zone, you can use this request to view the state and any provided messages for that Availability Zone or Local Zone.
    For more information about Availability Zones and Local Zones, see Regions and Availability Zones in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the Availability Zones that are available to you. The response includes Availability Zones only for the current region.
    Expected Output:
    
    :example: response = client.describe_availability_zones(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        ZoneNames=[
            'string',
        ],
        ZoneIds=[
            'string',
        ],
        AllAvailabilityZones=True|False,
        DryRun=True|False
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\ngroup-name - For Availability Zones, use the Region name. For Local Zones, use the name of the group associated with the Local Zone (for example, us-west-2-lax-1 ).\nmessage - The Availability Zone or Local Zone message.\nopt-in-status - The opt in status (opted-in , and not-opted-in | opt-in-not-required ).\nregion-name - The name of the Region for the Availability Zone or Local Zone (for example, us-east-1 ).\nstate - The state of the Availability Zone or Local Zone (available | information | impaired | unavailable ).\nzone-id - The ID of the Availability Zone (for example, use1-az1 ) or the Local Zone (for example, use usw2-lax1-az1 ).\nzone-name - The name of the Availability Zone (for example, us-east-1a ) or the Local Zone (for example, use us-west-2-lax-1a ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type ZoneNames: list
    :param ZoneNames: The names of the Availability Zones and Local Zones.\n\n(string) --\n\n

    :type ZoneIds: list
    :param ZoneIds: The IDs of the Availability Zones and Local Zones.\n\n(string) --\n\n

    :type AllAvailabilityZones: boolean
    :param AllAvailabilityZones: Include all Availability Zones and Local Zones regardless of your opt in status.\nIf you do not use this parameter, the results include only the zones for the Regions where you have chosen the option to opt in.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'AvailabilityZones': [
        {
            'State': 'available'|'information'|'impaired'|'unavailable',
            'OptInStatus': 'opt-in-not-required'|'opted-in'|'not-opted-in',
            'Messages': [
                {
                    'Message': 'string'
                },
            ],
            'RegionName': 'string',
            'ZoneName': 'string',
            'ZoneId': 'string',
            'GroupName': 'string',
            'NetworkBorderGroup': 'string'
        },
    ]
}


Response Structure

(dict) --

AvailabilityZones (list) --
Information about the Availability Zones and Local Zones.

(dict) --
Describes an Availability Zone or Local Zone.

State (string) --
The state of the Availability Zone or Local Zone.

OptInStatus (string) --
For Availability Zones, this parameter always has the value of opt-in-not-required .
For Local Zones, this parameter is the opt in status. The possible values are opted-in , and not-opted-in .

Messages (list) --
Any messages about the Availability Zone or Local Zone.

(dict) --
Describes a message about an Availability Zone or Local Zone.

Message (string) --
The message about the Availability Zone or Local Zone.





RegionName (string) --
The name of the Region.

ZoneName (string) --
The name of the Availability Zone or Local Zone.

ZoneId (string) --
The ID of the Availability Zone or Local Zone.

GroupName (string) --
For Availability Zones, this parameter has the same value as the Region name.
For Local Zones, the name of the associated group, for example us-west-2-lax-1 .

NetworkBorderGroup (string) --
The name of the location from which the address is advertised.











Examples
This example describes the Availability Zones that are available to you. The response includes Availability Zones only for the current region.
response = client.describe_availability_zones(
)

print(response)


Expected Output:
{
    'AvailabilityZones': [
        {
            'Messages': [
            ],
            'RegionName': 'us-east-1',
            'State': 'available',
            'ZoneName': 'us-east-1b',
        },
        {
            'Messages': [
            ],
            'RegionName': 'us-east-1',
            'State': 'available',
            'ZoneName': 'us-east-1c',
        },
        {
            'Messages': [
            ],
            'RegionName': 'us-east-1',
            'State': 'available',
            'ZoneName': 'us-east-1d',
        },
        {
            'Messages': [
            ],
            'RegionName': 'us-east-1',
            'State': 'available',
            'ZoneName': 'us-east-1e',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AvailabilityZones': [
            {
                'State': 'available'|'information'|'impaired'|'unavailable',
                'OptInStatus': 'opt-in-not-required'|'opted-in'|'not-opted-in',
                'Messages': [
                    {
                        'Message': 'string'
                    },
                ],
                'RegionName': 'string',
                'ZoneName': 'string',
                'ZoneId': 'string',
                'GroupName': 'string',
                'NetworkBorderGroup': 'string'
            },
        ]
    }
    
    
    """
    pass

def describe_bundle_tasks(BundleIds=None, Filters=None, DryRun=None):
    """
    Describes the specified bundle tasks or all of your bundle tasks.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_bundle_tasks(
        BundleIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type BundleIds: list
    :param BundleIds: The bundle task IDs.\nDefault: Describes all your bundle tasks.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: The filters.\n\nbundle-id - The ID of the bundle task.\nerror-code - If the task failed, the error code returned.\nerror-message - If the task failed, the error message returned.\ninstance-id - The ID of the instance.\nprogress - The level of task completion, as a percentage (for example, 20%).\ns3-bucket - The Amazon S3 bucket to store the AMI.\ns3-prefix - The beginning of the AMI name.\nstart-time - The time the task started (for example, 2013-09-15T17:15:20.000Z).\nstate - The state of the task (pending | waiting-for-shutdown | bundling | storing | cancelling | complete | failed ).\nupdate-time - The time of the most recent update for the task.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'BundleTasks': [
        {
            'BundleId': 'string',
            'BundleTaskError': {
                'Code': 'string',
                'Message': 'string'
            },
            'InstanceId': 'string',
            'Progress': 'string',
            'StartTime': datetime(2015, 1, 1),
            'State': 'pending'|'waiting-for-shutdown'|'bundling'|'storing'|'cancelling'|'complete'|'failed',
            'Storage': {
                'S3': {
                    'AWSAccessKeyId': 'string',
                    'Bucket': 'string',
                    'Prefix': 'string',
                    'UploadPolicy': b'bytes',
                    'UploadPolicySignature': 'string'
                }
            },
            'UpdateTime': datetime(2015, 1, 1)
        },
    ]
}


Response Structure

(dict) --

BundleTasks (list) --
Information about the bundle tasks.

(dict) --
Describes a bundle task.

BundleId (string) --
The ID of the bundle task.

BundleTaskError (dict) --
If the task fails, a description of the error.

Code (string) --
The error code.

Message (string) --
The error message.



InstanceId (string) --
The ID of the instance associated with this bundle task.

Progress (string) --
The level of task completion, as a percent (for example, 20%).

StartTime (datetime) --
The time this task started.

State (string) --
The state of the task.

Storage (dict) --
The Amazon S3 storage locations.

S3 (dict) --
An Amazon S3 storage location.

AWSAccessKeyId (string) --
The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in Best Practices for Managing AWS Access Keys .

Bucket (string) --
The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.

Prefix (string) --
The beginning of the file name of the AMI.

UploadPolicy (bytes) --
An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.

UploadPolicySignature (string) --
The signature of the JSON document.





UpdateTime (datetime) --
The time of the most recent update for the task.












    :return: {
        'BundleTasks': [
            {
                'BundleId': 'string',
                'BundleTaskError': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'InstanceId': 'string',
                'Progress': 'string',
                'StartTime': datetime(2015, 1, 1),
                'State': 'pending'|'waiting-for-shutdown'|'bundling'|'storing'|'cancelling'|'complete'|'failed',
                'Storage': {
                    'S3': {
                        'AWSAccessKeyId': 'string',
                        'Bucket': 'string',
                        'Prefix': 'string',
                        'UploadPolicy': b'bytes',
                        'UploadPolicySignature': 'string'
                    }
                },
                'UpdateTime': datetime(2015, 1, 1)
            },
        ]
    }
    
    
    """
    pass

def describe_byoip_cidrs(DryRun=None, MaxResults=None, NextToken=None):
    """
    Describes the IP address ranges that were specified in calls to  ProvisionByoipCidr .
    To describe the address pools that were created when you provisioned the address ranges, use  DescribePublicIpv4Pools or  DescribeIpv6Pools .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_byoip_cidrs(
        DryRun=True|False,
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type MaxResults: integer
    :param MaxResults: [REQUIRED]\nThe maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'ByoipCidrs': [
        {
            'Cidr': 'string',
            'Description': 'string',
            'StatusMessage': 'string',
            'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

ByoipCidrs (list) --
Information about your address ranges.

(dict) --
Information about an address range that is provisioned for use with your AWS resources through bring your own IP addresses (BYOIP).

Cidr (string) --
The address range, in CIDR notation.

Description (string) --
The description of the address range.

StatusMessage (string) --
Upon success, contains the ID of the address pool. Otherwise, contains an error message.

State (string) --
The state of the address pool.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'ByoipCidrs': [
            {
                'Cidr': 'string',
                'Description': 'string',
                'StatusMessage': 'string',
                'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_capacity_reservations(CapacityReservationIds=None, NextToken=None, MaxResults=None, Filters=None, DryRun=None):
    """
    Describes one or more of your Capacity Reservations. The results describe only the Capacity Reservations in the AWS Region that you\'re currently using.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_capacity_reservations(
        CapacityReservationIds=[
            'string',
        ],
        NextToken='string',
        MaxResults=123,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type CapacityReservationIds: list
    :param CapacityReservationIds: The ID of the Capacity Reservation.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value.

    :type Filters: list
    :param Filters: One or more filters.\n\ninstance-type - The type of instance for which the Capacity Reservation reserves capacity.\nowner-id - The ID of the AWS account that owns the Capacity Reservation.\navailability-zone-id - The Availability Zone ID of the Capacity Reservation.\ninstance-platform - The type of operating system for which the Capacity Reservation reserves capacity.\navailability-zone - The Availability Zone ID of the Capacity Reservation.\ntenancy - Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:\ndefault - The Capacity Reservation is created on hardware that is shared with other AWS accounts.\ndedicated - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account.\n\n\nstate - The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:\nactive - The Capacity Reservation is active and the capacity is available for your use.\nexpired - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.\ncancelled - The Capacity Reservation was manually cancelled. The reserved capacity is no longer available for your use.\npending - The Capacity Reservation request was successful but the capacity provisioning is still pending.\nfailed - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.\n\n\nend-date - The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation\'s state changes to expired when it reaches its end date and time.\nend-date-type - Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:\nunlimited - The Capacity Reservation remains active until you explicitly cancel it.\nlimited - The Capacity Reservation expires automatically at a specified date and time.\n\n\ninstance-match-criteria - Indicates the type of instance launches that the Capacity Reservation accepts. The options include:\nopen - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying any additional parameters.\ntargeted - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.\n\n\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'CapacityReservations': [
        {
            'CapacityReservationId': 'string',
            'OwnerId': 'string',
            'CapacityReservationArn': 'string',
            'AvailabilityZoneId': 'string',
            'InstanceType': 'string',
            'InstancePlatform': 'Linux/UNIX'|'Red Hat Enterprise Linux'|'SUSE Linux'|'Windows'|'Windows with SQL Server'|'Windows with SQL Server Enterprise'|'Windows with SQL Server Standard'|'Windows with SQL Server Web'|'Linux with SQL Server Standard'|'Linux with SQL Server Web'|'Linux with SQL Server Enterprise',
            'AvailabilityZone': 'string',
            'Tenancy': 'default'|'dedicated',
            'TotalInstanceCount': 123,
            'AvailableInstanceCount': 123,
            'EbsOptimized': True|False,
            'EphemeralStorage': True|False,
            'State': 'active'|'expired'|'cancelled'|'pending'|'failed',
            'EndDate': datetime(2015, 1, 1),
            'EndDateType': 'unlimited'|'limited',
            'InstanceMatchCriteria': 'open'|'targeted',
            'CreateDate': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --

NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.

CapacityReservations (list) --
Information about the Capacity Reservations.

(dict) --
Describes a Capacity Reservation.

CapacityReservationId (string) --
The ID of the Capacity Reservation.

OwnerId (string) --
The ID of the AWS account that owns the Capacity Reservation.

CapacityReservationArn (string) --
The Amazon Resource Name (ARN) of the Capacity Reservation.

AvailabilityZoneId (string) --
The Availability Zone ID of the Capacity Reservation.

InstanceType (string) --
The type of instance for which the Capacity Reservation reserves capacity.

InstancePlatform (string) --
The type of operating system for which the Capacity Reservation reserves capacity.

AvailabilityZone (string) --
The Availability Zone in which the capacity is reserved.

Tenancy (string) --
Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:

default - The Capacity Reservation is created on hardware that is shared with other AWS accounts.
dedicated - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account.


TotalInstanceCount (integer) --
The total number of instances for which the Capacity Reservation reserves capacity.

AvailableInstanceCount (integer) --
The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.

EbsOptimized (boolean) --
Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS- optimized instance.

EphemeralStorage (boolean) --
Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.

State (string) --
The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:

active - The Capacity Reservation is active and the capacity is available for your use.
expired - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.
cancelled - The Capacity Reservation was manually cancelled. The reserved capacity is no longer available for your use.
pending - The Capacity Reservation request was successful but the capacity provisioning is still pending.
failed - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.


EndDate (datetime) --
The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation\'s state changes to expired when it reaches its end date and time.

EndDateType (string) --
Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:

unlimited - The Capacity Reservation remains active until you explicitly cancel it.
limited - The Capacity Reservation expires automatically at a specified date and time.


InstanceMatchCriteria (string) --
Indicates the type of instance launches that the Capacity Reservation accepts. The options include:

open - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying any additional parameters.
targeted - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.


CreateDate (datetime) --
The date and time at which the Capacity Reservation was created.

Tags (list) --
Any tags assigned to the Capacity Reservation.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
















    :return: {
        'NextToken': 'string',
        'CapacityReservations': [
            {
                'CapacityReservationId': 'string',
                'OwnerId': 'string',
                'CapacityReservationArn': 'string',
                'AvailabilityZoneId': 'string',
                'InstanceType': 'string',
                'InstancePlatform': 'Linux/UNIX'|'Red Hat Enterprise Linux'|'SUSE Linux'|'Windows'|'Windows with SQL Server'|'Windows with SQL Server Enterprise'|'Windows with SQL Server Standard'|'Windows with SQL Server Web'|'Linux with SQL Server Standard'|'Linux with SQL Server Web'|'Linux with SQL Server Enterprise',
                'AvailabilityZone': 'string',
                'Tenancy': 'default'|'dedicated',
                'TotalInstanceCount': 123,
                'AvailableInstanceCount': 123,
                'EbsOptimized': True|False,
                'EphemeralStorage': True|False,
                'State': 'active'|'expired'|'cancelled'|'pending'|'failed',
                'EndDate': datetime(2015, 1, 1),
                'EndDateType': 'unlimited'|'limited',
                'InstanceMatchCriteria': 'open'|'targeted',
                'CreateDate': datetime(2015, 1, 1),
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    }
    
    
    :returns: 
    default - The Capacity Reservation is created on hardware that is shared with other AWS accounts.
    dedicated - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account.
    
    """
    pass

def describe_classic_link_instances(Filters=None, DryRun=None, InstanceIds=None, MaxResults=None, NextToken=None):
    """
    Describes one or more of your linked EC2-Classic instances. This request only returns information about EC2-Classic instances linked to a VPC through ClassicLink. You cannot use this request to return information about other instances.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_classic_link_instances(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        InstanceIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\ngroup-id - The ID of a VPC security group that\'s associated with the instance.\ninstance-id - The ID of the instance.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvpc-id - The ID of the VPC to which the instance is linked. vpc-id - The ID of the VPC that the instance is linked to.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceIds: list
    :param InstanceIds: One or more instance IDs. Must be instances linked to a VPC through ClassicLink.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.\nConstraint: If the value is greater than 1000, we return only 1000 items.\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'Instances': [
        {
            'Groups': [
                {
                    'GroupName': 'string',
                    'GroupId': 'string'
                },
            ],
            'InstanceId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcId': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Instances (list) --
Information about one or more linked EC2-Classic instances.

(dict) --
Describes a linked EC2-Classic instance.

Groups (list) --
A list of security groups.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





InstanceId (string) --
The ID of the instance.

Tags (list) --
Any tags assigned to the instance.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcId (string) --
The ID of the VPC.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'Instances': [
            {
                'Groups': [
                    {
                        'GroupName': 'string',
                        'GroupId': 'string'
                    },
                ],
                'InstanceId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VpcId': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_client_vpn_authorization_rules(ClientVpnEndpointId=None, DryRun=None, NextToken=None, Filters=None, MaxResults=None):
    """
    Describes the authorization rules for a specified Client VPN endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_client_vpn_authorization_rules(
        ClientVpnEndpointId='string',
        DryRun=True|False,
        NextToken='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type Filters: list
    :param Filters: One or more filters. Filter names and values are case-sensitive.\n\ndescription - The description of the authorization rule.\ndestination-cidr - The CIDR of the network to which the authorization rule applies.\ngroup-id - The ID of the Active Directory group to which the authorization rule grants access.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.

    :rtype: dict

ReturnsResponse Syntax
{
    'AuthorizationRules': [
        {
            'ClientVpnEndpointId': 'string',
            'Description': 'string',
            'GroupId': 'string',
            'AccessAll': True|False,
            'DestinationCidr': 'string',
            'Status': {
                'Code': 'authorizing'|'active'|'failed'|'revoking',
                'Message': 'string'
            }
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

AuthorizationRules (list) --
Information about the authorization rules.

(dict) --
Information about an authorization rule.

ClientVpnEndpointId (string) --
The ID of the Client VPN endpoint with which the authorization rule is associated.

Description (string) --
A brief description of the authorization rule.

GroupId (string) --
The ID of the Active Directory group to which the authorization rule grants access.

AccessAll (boolean) --
Indicates whether the authorization rule grants access to all clients.

DestinationCidr (string) --
The IPv4 address range, in CIDR notation, of the network to which the authorization rule applies.

Status (dict) --
The current state of the authorization rule.

Code (string) --
The state of the authorization rule.

Message (string) --
A message about the status of the authorization rule, if applicable.







NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'AuthorizationRules': [
            {
                'ClientVpnEndpointId': 'string',
                'Description': 'string',
                'GroupId': 'string',
                'AccessAll': True|False,
                'DestinationCidr': 'string',
                'Status': {
                    'Code': 'authorizing'|'active'|'failed'|'revoking',
                    'Message': 'string'
                }
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_client_vpn_connections(ClientVpnEndpointId=None, Filters=None, NextToken=None, MaxResults=None, DryRun=None):
    """
    Describes active client connections and connections that have been terminated within the last 60 minutes for the specified Client VPN endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_client_vpn_connections(
        ClientVpnEndpointId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        NextToken='string',
        MaxResults=123,
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint.\n

    :type Filters: list
    :param Filters: One or more filters. Filter names and values are case-sensitive.\n\nconnection-id - The ID of the connection.\nusername - For Active Directory client authentication, the user name of the client who established the client connection.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Connections': [
        {
            'ClientVpnEndpointId': 'string',
            'Timestamp': 'string',
            'ConnectionId': 'string',
            'Username': 'string',
            'ConnectionEstablishedTime': 'string',
            'IngressBytes': 'string',
            'EgressBytes': 'string',
            'IngressPackets': 'string',
            'EgressPackets': 'string',
            'ClientIp': 'string',
            'CommonName': 'string',
            'Status': {
                'Code': 'active'|'failed-to-terminate'|'terminating'|'terminated',
                'Message': 'string'
            },
            'ConnectionEndTime': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Connections (list) --
Information about the active and terminated client connections.

(dict) --
Describes a client connection.

ClientVpnEndpointId (string) --
The ID of the Client VPN endpoint to which the client is connected.

Timestamp (string) --
The current date and time.

ConnectionId (string) --
The ID of the client connection.

Username (string) --
The username of the client who established the client connection. This information is only provided if Active Directory client authentication is used.

ConnectionEstablishedTime (string) --
The date and time the client connection was established.

IngressBytes (string) --
The number of bytes sent by the client.

EgressBytes (string) --
The number of bytes received by the client.

IngressPackets (string) --
The number of packets sent by the client.

EgressPackets (string) --
The number of packets received by the client.

ClientIp (string) --
The IP address of the client.

CommonName (string) --
The common name associated with the client. This is either the name of the client certificate, or the Active Directory user name.

Status (dict) --
The current state of the client connection.

Code (string) --
The state of the client connection.

Message (string) --
A message about the status of the client connection, if applicable.



ConnectionEndTime (string) --
The date and time the client connection was terminated.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'Connections': [
            {
                'ClientVpnEndpointId': 'string',
                'Timestamp': 'string',
                'ConnectionId': 'string',
                'Username': 'string',
                'ConnectionEstablishedTime': 'string',
                'IngressBytes': 'string',
                'EgressBytes': 'string',
                'IngressPackets': 'string',
                'EgressPackets': 'string',
                'ClientIp': 'string',
                'CommonName': 'string',
                'Status': {
                    'Code': 'active'|'failed-to-terminate'|'terminating'|'terminated',
                    'Message': 'string'
                },
                'ConnectionEndTime': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_client_vpn_endpoints(ClientVpnEndpointIds=None, MaxResults=None, NextToken=None, Filters=None, DryRun=None):
    """
    Describes one or more Client VPN endpoints in the account.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_client_vpn_endpoints(
        ClientVpnEndpointIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointIds: list
    :param ClientVpnEndpointIds: The ID of the Client VPN endpoint.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type Filters: list
    :param Filters: One or more filters. Filter names and values are case-sensitive.\n\nendpoint-id - The ID of the Client VPN endpoint.\ntransport-protocol - The transport protocol (tcp | udp ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ClientVpnEndpoints': [
        {
            'ClientVpnEndpointId': 'string',
            'Description': 'string',
            'Status': {
                'Code': 'pending-associate'|'available'|'deleting'|'deleted',
                'Message': 'string'
            },
            'CreationTime': 'string',
            'DeletionTime': 'string',
            'DnsName': 'string',
            'ClientCidrBlock': 'string',
            'DnsServers': [
                'string',
            ],
            'SplitTunnel': True|False,
            'VpnProtocol': 'openvpn',
            'TransportProtocol': 'tcp'|'udp',
            'VpnPort': 123,
            'AssociatedTargetNetworks': [
                {
                    'NetworkId': 'string',
                    'NetworkType': 'vpc'
                },
            ],
            'ServerCertificateArn': 'string',
            'AuthenticationOptions': [
                {
                    'Type': 'certificate-authentication'|'directory-service-authentication'|'federated-authentication',
                    'ActiveDirectory': {
                        'DirectoryId': 'string'
                    },
                    'MutualAuthentication': {
                        'ClientRootCertificateChain': 'string'
                    },
                    'FederatedAuthentication': {
                        'SamlProviderArn': 'string'
                    }
                },
            ],
            'ConnectionLogOptions': {
                'Enabled': True|False,
                'CloudwatchLogGroup': 'string',
                'CloudwatchLogStream': 'string'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'SecurityGroupIds': [
                'string',
            ],
            'VpcId': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

ClientVpnEndpoints (list) --
Information about the Client VPN endpoints.

(dict) --
Describes a Client VPN endpoint.

ClientVpnEndpointId (string) --
The ID of the Client VPN endpoint.

Description (string) --
A brief description of the endpoint.

Status (dict) --
The current state of the Client VPN endpoint.

Code (string) --
The state of the Client VPN endpoint. Possible states include:

pending-associate - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.
available - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.
deleting - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.
deleted - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.


Message (string) --
A message about the status of the Client VPN endpoint.



CreationTime (string) --
The date and time the Client VPN endpoint was created.

DeletionTime (string) --
The date and time the Client VPN endpoint was deleted, if applicable.

DnsName (string) --
The DNS name to be used by clients when connecting to the Client VPN endpoint.

ClientCidrBlock (string) --
The IPv4 address range, in CIDR notation, from which client IP addresses are assigned.

DnsServers (list) --
Information about the DNS servers to be used for DNS resolution.

(string) --


SplitTunnel (boolean) --
Indicates whether split-tunnel is enabled in the AWS Client VPN endpoint.
For information about split-tunnel VPN endpoints, see Split-Tunnel AWS Client VPN Endpoint in the AWS Client VPN Administrator Guide .

VpnProtocol (string) --
The protocol used by the VPN session.

TransportProtocol (string) --
The transport protocol used by the Client VPN endpoint.

VpnPort (integer) --
The port number for the Client VPN endpoint.

AssociatedTargetNetworks (list) --
Information about the associated target networks. A target network is a subnet in a VPC.

(dict) --
Describes a target network that is associated with a Client VPN endpoint. A target network is a subnet in a VPC.

NetworkId (string) --
The ID of the subnet.

NetworkType (string) --
The target network type.





ServerCertificateArn (string) --
The ARN of the server certificate.

AuthenticationOptions (list) --
Information about the authentication method used by the Client VPN endpoint.

(dict) --
Describes the authentication methods used by a Client VPN endpoint. For more information, see Authentication in the AWS Client VPN Administrator Guide .

Type (string) --
The authentication type used.

ActiveDirectory (dict) --
Information about the Active Directory, if applicable.

DirectoryId (string) --
The ID of the Active Directory used for authentication.



MutualAuthentication (dict) --
Information about the authentication certificates, if applicable.

ClientRootCertificateChain (string) --
The ARN of the client certificate.



FederatedAuthentication (dict) --
Information about the IAM SAML identity provider, if applicable.

SamlProviderArn (string) --
The Amazon Resource Name (ARN) of the IAM SAML identity provider.







ConnectionLogOptions (dict) --
Information about the client connection logging options for the Client VPN endpoint.

Enabled (boolean) --
Indicates whether client connection logging is enabled for the Client VPN endpoint.

CloudwatchLogGroup (string) --
The name of the Amazon CloudWatch Logs log group to which connection logging data is published.

CloudwatchLogStream (string) --
The name of the Amazon CloudWatch Logs log stream to which connection logging data is published.



Tags (list) --
Any tags assigned to the Client VPN endpoint.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





SecurityGroupIds (list) --
The IDs of the security groups for the target network.

(string) --


VpcId (string) --
The ID of the VPC.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'ClientVpnEndpoints': [
            {
                'ClientVpnEndpointId': 'string',
                'Description': 'string',
                'Status': {
                    'Code': 'pending-associate'|'available'|'deleting'|'deleted',
                    'Message': 'string'
                },
                'CreationTime': 'string',
                'DeletionTime': 'string',
                'DnsName': 'string',
                'ClientCidrBlock': 'string',
                'DnsServers': [
                    'string',
                ],
                'SplitTunnel': True|False,
                'VpnProtocol': 'openvpn',
                'TransportProtocol': 'tcp'|'udp',
                'VpnPort': 123,
                'AssociatedTargetNetworks': [
                    {
                        'NetworkId': 'string',
                        'NetworkType': 'vpc'
                    },
                ],
                'ServerCertificateArn': 'string',
                'AuthenticationOptions': [
                    {
                        'Type': 'certificate-authentication'|'directory-service-authentication'|'federated-authentication',
                        'ActiveDirectory': {
                            'DirectoryId': 'string'
                        },
                        'MutualAuthentication': {
                            'ClientRootCertificateChain': 'string'
                        },
                        'FederatedAuthentication': {
                            'SamlProviderArn': 'string'
                        }
                    },
                ],
                'ConnectionLogOptions': {
                    'Enabled': True|False,
                    'CloudwatchLogGroup': 'string',
                    'CloudwatchLogStream': 'string'
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'SecurityGroupIds': [
                    'string',
                ],
                'VpcId': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    pending-associate - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.
    available - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.
    deleting - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.
    deleted - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.
    
    """
    pass

def describe_client_vpn_routes(ClientVpnEndpointId=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes the routes for the specified Client VPN endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_client_vpn_routes(
        ClientVpnEndpointId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint.\n

    :type Filters: list
    :param Filters: One or more filters. Filter names and values are case-sensitive.\n\ndestination-cidr - The CIDR of the route destination.\norigin - How the route was associated with the Client VPN endpoint (associate | add-route ).\ntarget-subnet - The ID of the subnet through which traffic is routed.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Routes': [
        {
            'ClientVpnEndpointId': 'string',
            'DestinationCidr': 'string',
            'TargetSubnet': 'string',
            'Type': 'string',
            'Origin': 'string',
            'Status': {
                'Code': 'creating'|'active'|'failed'|'deleting',
                'Message': 'string'
            },
            'Description': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Routes (list) --
Information about the Client VPN endpoint routes.

(dict) --
Information about a Client VPN endpoint route.

ClientVpnEndpointId (string) --
The ID of the Client VPN endpoint with which the route is associated.

DestinationCidr (string) --
The IPv4 address range, in CIDR notation, of the route destination.

TargetSubnet (string) --
The ID of the subnet through which traffic is routed.

Type (string) --
The route type.

Origin (string) --
Indicates how the route was associated with the Client VPN endpoint. associate indicates that the route was automatically added when the target network was associated with the Client VPN endpoint. add-route indicates that the route was manually added using the CreateClientVpnRoute action.

Status (dict) --
The current state of the route.

Code (string) --
The state of the Client VPN endpoint route.

Message (string) --
A message about the status of the Client VPN endpoint route, if applicable.



Description (string) --
A brief description of the route.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'Routes': [
            {
                'ClientVpnEndpointId': 'string',
                'DestinationCidr': 'string',
                'TargetSubnet': 'string',
                'Type': 'string',
                'Origin': 'string',
                'Status': {
                    'Code': 'creating'|'active'|'failed'|'deleting',
                    'Message': 'string'
                },
                'Description': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_client_vpn_target_networks(ClientVpnEndpointId=None, AssociationIds=None, MaxResults=None, NextToken=None, Filters=None, DryRun=None):
    """
    Describes the target networks associated with the specified Client VPN endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_client_vpn_target_networks(
        ClientVpnEndpointId='string',
        AssociationIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint.\n

    :type AssociationIds: list
    :param AssociationIds: The IDs of the target network associations.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type Filters: list
    :param Filters: One or more filters. Filter names and values are case-sensitive.\n\nassociation-id - The ID of the association.\ntarget-network-id - The ID of the subnet specified as the target network.\nvpc-id - The ID of the VPC in which the target network is located.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ClientVpnTargetNetworks': [
        {
            'AssociationId': 'string',
            'VpcId': 'string',
            'TargetNetworkId': 'string',
            'ClientVpnEndpointId': 'string',
            'Status': {
                'Code': 'associating'|'associated'|'association-failed'|'disassociating'|'disassociated',
                'Message': 'string'
            },
            'SecurityGroups': [
                'string',
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

ClientVpnTargetNetworks (list) --
Information about the associated target networks.

(dict) --
Describes a target network associated with a Client VPN endpoint.

AssociationId (string) --
The ID of the association.

VpcId (string) --
The ID of the VPC in which the target network (subnet) is located.

TargetNetworkId (string) --
The ID of the subnet specified as the target network.

ClientVpnEndpointId (string) --
The ID of the Client VPN endpoint with which the target network is associated.

Status (dict) --
The current state of the target network association.

Code (string) --
The state of the target network association.

Message (string) --
A message about the status of the target network association, if applicable.



SecurityGroups (list) --
The IDs of the security groups applied to the target network association.

(string) --






NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'ClientVpnTargetNetworks': [
            {
                'AssociationId': 'string',
                'VpcId': 'string',
                'TargetNetworkId': 'string',
                'ClientVpnEndpointId': 'string',
                'Status': {
                    'Code': 'associating'|'associated'|'association-failed'|'disassociating'|'disassociated',
                    'Message': 'string'
                },
                'SecurityGroups': [
                    'string',
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_coip_pools(PoolIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes the specified customer-owned address pools or all of your customer-owned address pools.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_coip_pools(
        PoolIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type PoolIds: list
    :param PoolIds: The IDs of the address pools.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: The filters. The following are the possible values:\n\ncoip-pool.pool-id\ncoip-pool.local-gateway-route-table-id\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'CoipPools': [
        {
            'PoolId': 'string',
            'PoolCidrs': [
                'string',
            ],
            'LocalGatewayRouteTableId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

CoipPools (list) --
Information about the address pools.

(dict) --
Describes a customer-owned address pool.

PoolId (string) --
The ID of the address pool.

PoolCidrs (list) --
The address ranges of the address pool.

(string) --


LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.

Tags (list) --
The tags.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'CoipPools': [
            {
                'PoolId': 'string',
                'PoolCidrs': [
                    'string',
                ],
                'LocalGatewayRouteTableId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_conversion_tasks(ConversionTaskIds=None, DryRun=None):
    """
    Describes the specified conversion tasks or all your conversion tasks. For more information, see the VM Import/Export User Guide .
    For information about the import manifest referenced by this API action, see VM Import Manifest .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_conversion_tasks(
        ConversionTaskIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type ConversionTaskIds: list
    :param ConversionTaskIds: The conversion task IDs.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ConversionTasks': [
        {
            'ConversionTaskId': 'string',
            'ExpirationTime': 'string',
            'ImportInstance': {
                'Description': 'string',
                'InstanceId': 'string',
                'Platform': 'Windows',
                'Volumes': [
                    {
                        'AvailabilityZone': 'string',
                        'BytesConverted': 123,
                        'Description': 'string',
                        'Image': {
                            'Checksum': 'string',
                            'Format': 'VMDK'|'RAW'|'VHD',
                            'ImportManifestUrl': 'string',
                            'Size': 123
                        },
                        'Status': 'string',
                        'StatusMessage': 'string',
                        'Volume': {
                            'Id': 'string',
                            'Size': 123
                        }
                    },
                ]
            },
            'ImportVolume': {
                'AvailabilityZone': 'string',
                'BytesConverted': 123,
                'Description': 'string',
                'Image': {
                    'Checksum': 'string',
                    'Format': 'VMDK'|'RAW'|'VHD',
                    'ImportManifestUrl': 'string',
                    'Size': 123
                },
                'Volume': {
                    'Id': 'string',
                    'Size': 123
                }
            },
            'State': 'active'|'cancelling'|'cancelled'|'completed',
            'StatusMessage': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --

ConversionTasks (list) --
Information about the conversion tasks.

(dict) --
Describes a conversion task.

ConversionTaskId (string) --
The ID of the conversion task.

ExpirationTime (string) --
The time when the task expires. If the upload isn\'t complete before the expiration time, we automatically cancel the task.

ImportInstance (dict) --
If the task is for importing an instance, this contains information about the import instance task.

Description (string) --
A description of the task.

InstanceId (string) --
The ID of the instance.

Platform (string) --
The instance operating system.

Volumes (list) --
The volumes.

(dict) --
Describes an import volume task.

AvailabilityZone (string) --
The Availability Zone where the resulting instance will reside.

BytesConverted (integer) --
The number of bytes converted so far.

Description (string) --
A description of the task.

Image (dict) --
The image.

Checksum (string) --
The checksum computed for the disk image.

Format (string) --
The disk image format.

ImportManifestUrl (string) --
A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide .
For information about the import manifest referenced by this API action, see VM Import Manifest .

Size (integer) --
The size of the disk image, in GiB.



Status (string) --
The status of the import of this particular disk image.

StatusMessage (string) --
The status information or errors related to the disk image.

Volume (dict) --
The volume.

Id (string) --
The volume identifier.

Size (integer) --
The size of the volume, in GiB.









ImportVolume (dict) --
If the task is for importing a volume, this contains information about the import volume task.

AvailabilityZone (string) --
The Availability Zone where the resulting volume will reside.

BytesConverted (integer) --
The number of bytes converted so far.

Description (string) --
The description you provided when starting the import volume task.

Image (dict) --
The image.

Checksum (string) --
The checksum computed for the disk image.

Format (string) --
The disk image format.

ImportManifestUrl (string) --
A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide .
For information about the import manifest referenced by this API action, see VM Import Manifest .

Size (integer) --
The size of the disk image, in GiB.



Volume (dict) --
The volume.

Id (string) --
The volume identifier.

Size (integer) --
The size of the volume, in GiB.





State (string) --
The state of the conversion task.

StatusMessage (string) --
The status message related to the conversion task.

Tags (list) --
Any tags assigned to the task.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
















    :return: {
        'ConversionTasks': [
            {
                'ConversionTaskId': 'string',
                'ExpirationTime': 'string',
                'ImportInstance': {
                    'Description': 'string',
                    'InstanceId': 'string',
                    'Platform': 'Windows',
                    'Volumes': [
                        {
                            'AvailabilityZone': 'string',
                            'BytesConverted': 123,
                            'Description': 'string',
                            'Image': {
                                'Checksum': 'string',
                                'Format': 'VMDK'|'RAW'|'VHD',
                                'ImportManifestUrl': 'string',
                                'Size': 123
                            },
                            'Status': 'string',
                            'StatusMessage': 'string',
                            'Volume': {
                                'Id': 'string',
                                'Size': 123
                            }
                        },
                    ]
                },
                'ImportVolume': {
                    'AvailabilityZone': 'string',
                    'BytesConverted': 123,
                    'Description': 'string',
                    'Image': {
                        'Checksum': 'string',
                        'Format': 'VMDK'|'RAW'|'VHD',
                        'ImportManifestUrl': 'string',
                        'Size': 123
                    },
                    'Volume': {
                        'Id': 'string',
                        'Size': 123
                    }
                },
                'State': 'active'|'cancelling'|'cancelled'|'completed',
                'StatusMessage': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    }
    
    
    """
    pass

def describe_customer_gateways(CustomerGatewayIds=None, Filters=None, DryRun=None):
    """
    Describes one or more of your VPN customer gateways.
    For more information, see AWS Site-to-Site VPN in the AWS Site-to-Site VPN User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the specified customer gateway.
    Expected Output:
    
    :example: response = client.describe_customer_gateways(
        CustomerGatewayIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False
    )
    
    
    :type CustomerGatewayIds: list
    :param CustomerGatewayIds: One or more customer gateway IDs.\nDefault: Describes all your customer gateways.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\nbgp-asn - The customer gateway\'s Border Gateway Protocol (BGP) Autonomous System Number (ASN).\ncustomer-gateway-id - The ID of the customer gateway.\nip-address - The IP address of the customer gateway\'s Internet-routable external interface.\nstate - The state of the customer gateway (pending | available | deleting | deleted ).\ntype - The type of customer gateway. Currently, the only supported type is ipsec.1 .\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'CustomerGateways': [
        {
            'BgpAsn': 'string',
            'CustomerGatewayId': 'string',
            'IpAddress': 'string',
            'CertificateArn': 'string',
            'State': 'string',
            'Type': 'string',
            'DeviceName': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --
Contains the output of DescribeCustomerGateways.

CustomerGateways (list) --
Information about one or more customer gateways.

(dict) --
Describes a customer gateway.

BgpAsn (string) --
The customer gateway\'s Border Gateway Protocol (BGP) Autonomous System Number (ASN).

CustomerGatewayId (string) --
The ID of the customer gateway.

IpAddress (string) --
The Internet-routable IP address of the customer gateway\'s outside interface.

CertificateArn (string) --
The Amazon Resource Name (ARN) for the customer gateway certificate.

State (string) --
The current state of the customer gateway (pending | available | deleting | deleted ).

Type (string) --
The type of VPN connection the customer gateway supports (ipsec.1 ).

DeviceName (string) --
The name of customer gateway device.

Tags (list) --
Any tags assigned to the customer gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.















Examples
This example describes the specified customer gateway.
response = client.describe_customer_gateways(
    CustomerGatewayIds=[
        'cgw-0e11f167',
    ],
)

print(response)


Expected Output:
{
    'CustomerGateways': [
        {
            'BgpAsn': '65534',
            'CustomerGatewayId': 'cgw-0e11f167',
            'IpAddress': '12.1.2.3',
            'State': 'available',
            'Type': 'ipsec.1',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'CustomerGateways': [
            {
                'BgpAsn': 'string',
                'CustomerGatewayId': 'string',
                'IpAddress': 'string',
                'CertificateArn': 'string',
                'State': 'string',
                'Type': 'string',
                'DeviceName': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    }
    
    
    """
    pass

def describe_dhcp_options(DhcpOptionsIds=None, Filters=None, DryRun=None, NextToken=None, MaxResults=None):
    """
    Describes one or more of your DHCP options sets.
    For more information, see DHCP Options Sets in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the specified DHCP options set.
    Expected Output:
    
    :example: response = client.describe_dhcp_options(
        DhcpOptionsIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        NextToken='string',
        MaxResults=123
    )
    
    
    :type DhcpOptionsIds: list
    :param DhcpOptionsIds: The IDs of one or more DHCP options sets.\nDefault: Describes all your DHCP options sets.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\ndhcp-options-id - The ID of a DHCP options set.\nkey - The key for one of the options (for example, domain-name ).\nvalue - The value for one of the options.\nowner-id - The ID of the AWS account that owns the DHCP options set.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :rtype: dict

ReturnsResponse Syntax
{
    'DhcpOptions': [
        {
            'DhcpConfigurations': [
                {
                    'Key': 'string',
                    'Values': [
                        {
                            'Value': 'string'
                        },
                    ]
                },
            ],
            'DhcpOptionsId': 'string',
            'OwnerId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

DhcpOptions (list) --
Information about one or more DHCP options sets.

(dict) --
Describes a set of DHCP options.

DhcpConfigurations (list) --
One or more DHCP options in the set.

(dict) --
Describes a DHCP configuration option.

Key (string) --
The name of a DHCP option.

Values (list) --
One or more values for the DHCP option.

(dict) --
Describes a value for a resource attribute that is a String.

Value (string) --
The attribute value. The value is case-sensitive.









DhcpOptionsId (string) --
The ID of the set of DHCP options.

OwnerId (string) --
The ID of the AWS account that owns the DHCP options set.

Tags (list) --
Any tags assigned to the DHCP options set.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the specified DHCP options set.
response = client.describe_dhcp_options(
    DhcpOptionsIds=[
        'dopt-d9070ebb',
    ],
)

print(response)


Expected Output:
{
    'DhcpOptions': [
        {
            'DhcpConfigurations': [
                {
                    'Key': 'domain-name-servers',
                    'Values': [
                        {
                            'Value': '10.2.5.2',
                        },
                        {
                            'Value': '10.2.5.1',
                        },
                    ],
                },
            ],
            'DhcpOptionsId': 'dopt-d9070ebb',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DhcpOptions': [
            {
                'DhcpConfigurations': [
                    {
                        'Key': 'string',
                        'Values': [
                            {
                                'Value': 'string'
                            },
                        ]
                    },
                ],
                'DhcpOptionsId': 'string',
                'OwnerId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_egress_only_internet_gateways(DryRun=None, EgressOnlyInternetGatewayIds=None, MaxResults=None, NextToken=None, Filters=None):
    """
    Describes one or more of your egress-only internet gateways.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_egress_only_internet_gateways(
        DryRun=True|False,
        EgressOnlyInternetGatewayIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EgressOnlyInternetGatewayIds: list
    :param EgressOnlyInternetGatewayIds: One or more egress-only internet gateway IDs.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type Filters: list
    :param Filters: One or more filters.\n\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'EgressOnlyInternetGateways': [
        {
            'Attachments': [
                {
                    'State': 'attaching'|'attached'|'detaching'|'detached',
                    'VpcId': 'string'
                },
            ],
            'EgressOnlyInternetGatewayId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

EgressOnlyInternetGateways (list) --
Information about the egress-only internet gateways.

(dict) --
Describes an egress-only internet gateway.

Attachments (list) --
Information about the attachment of the egress-only internet gateway.

(dict) --
Describes the attachment of a VPC to an internet gateway or an egress-only internet gateway.

State (string) --
The current state of the attachment. For an internet gateway, the state is available when attached to a VPC; otherwise, this value is not returned.

VpcId (string) --
The ID of the VPC.





EgressOnlyInternetGatewayId (string) --
The ID of the egress-only internet gateway.

Tags (list) --
The tags assigned to the egress-only internet gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'EgressOnlyInternetGateways': [
            {
                'Attachments': [
                    {
                        'State': 'attaching'|'attached'|'detaching'|'detached',
                        'VpcId': 'string'
                    },
                ],
                'EgressOnlyInternetGatewayId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_elastic_gpus(ElasticGpuIds=None, DryRun=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes the Elastic Graphics accelerator associated with your instances. For more information about Elastic Graphics, see Amazon Elastic Graphics .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_elastic_gpus(
        ElasticGpuIds=[
            'string',
        ],
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type ElasticGpuIds: list
    :param ElasticGpuIds: The Elastic Graphics accelerator IDs.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: The filters.\n\navailability-zone - The Availability Zone in which the Elastic Graphics accelerator resides.\nelastic-gpu-health - The status of the Elastic Graphics accelerator (OK | IMPAIRED ).\nelastic-gpu-state - The state of the Elastic Graphics accelerator (ATTACHED ).\nelastic-gpu-type - The type of Elastic Graphics accelerator; for example, eg1.medium .\ninstance-id - The ID of the instance to which the Elastic Graphics accelerator is associated.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000.

    :type NextToken: string
    :param NextToken: The token to request the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'ElasticGpuSet': [
        {
            'ElasticGpuId': 'string',
            'AvailabilityZone': 'string',
            'ElasticGpuType': 'string',
            'ElasticGpuHealth': {
                'Status': 'OK'|'IMPAIRED'
            },
            'ElasticGpuState': 'ATTACHED',
            'InstanceId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'MaxResults': 123,
    'NextToken': 'string'
}


Response Structure

(dict) --

ElasticGpuSet (list) --
Information about the Elastic Graphics accelerators.

(dict) --
Describes an Elastic Graphics accelerator.

ElasticGpuId (string) --
The ID of the Elastic Graphics accelerator.

AvailabilityZone (string) --
The Availability Zone in the which the Elastic Graphics accelerator resides.

ElasticGpuType (string) --
The type of Elastic Graphics accelerator.

ElasticGpuHealth (dict) --
The status of the Elastic Graphics accelerator.

Status (string) --
The health status.



ElasticGpuState (string) --
The state of the Elastic Graphics accelerator.

InstanceId (string) --
The ID of the instance to which the Elastic Graphics accelerator is attached.

Tags (list) --
The tags assigned to the Elastic Graphics accelerator.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









MaxResults (integer) --
The total number of items to return. If the total number of items available is more than the value specified in max-items then a Next-Token will be provided in the output that you can use to resume pagination.

NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'ElasticGpuSet': [
            {
                'ElasticGpuId': 'string',
                'AvailabilityZone': 'string',
                'ElasticGpuType': 'string',
                'ElasticGpuHealth': {
                    'Status': 'OK'|'IMPAIRED'
                },
                'ElasticGpuState': 'ATTACHED',
                'InstanceId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'MaxResults': 123,
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_export_image_tasks(DryRun=None, Filters=None, ExportImageTaskIds=None, MaxResults=None, NextToken=None):
    """
    Describes the specified export image tasks or all your export image tasks.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_export_image_tasks(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        ExportImageTaskIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: Filter tasks using the task-state filter and one of the following values: active , completed , deleting , or deleted .\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type ExportImageTaskIds: list
    :param ExportImageTaskIds: The IDs of the export image tasks.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call.

    :type NextToken: string
    :param NextToken: A token that indicates the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'ExportImageTasks': [
        {
            'Description': 'string',
            'ExportImageTaskId': 'string',
            'ImageId': 'string',
            'Progress': 'string',
            'S3ExportLocation': {
                'S3Bucket': 'string',
                'S3Prefix': 'string'
            },
            'Status': 'string',
            'StatusMessage': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

ExportImageTasks (list) --
Information about the export image tasks.

(dict) --
Describes an export image task.

Description (string) --
A description of the image being exported.

ExportImageTaskId (string) --
The ID of the export image task.

ImageId (string) --
The ID of the image.

Progress (string) --
The percent complete of the export image task.

S3ExportLocation (dict) --
Information about the destination S3 bucket.

S3Bucket (string) --
The destination S3 bucket.

S3Prefix (string) --
The prefix (logical hierarchy) in the bucket.



Status (string) --
The status of the export image task. The possible values are active , completed , deleting , and deleted .

StatusMessage (string) --
The status message for the export image task.





NextToken (string) --
The token to use to get the next page of results. This value is null when there are no more results to return.








    :return: {
        'ExportImageTasks': [
            {
                'Description': 'string',
                'ExportImageTaskId': 'string',
                'ImageId': 'string',
                'Progress': 'string',
                'S3ExportLocation': {
                    'S3Bucket': 'string',
                    'S3Prefix': 'string'
                },
                'Status': 'string',
                'StatusMessage': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_export_tasks(ExportTaskIds=None, Filters=None):
    """
    Describes the specified export instance tasks or all your export instance tasks.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_export_tasks(
        ExportTaskIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type ExportTaskIds: list
    :param ExportTaskIds: The export task IDs.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: the filters for the export tasks.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ExportTasks': [
        {
            'Description': 'string',
            'ExportTaskId': 'string',
            'ExportToS3Task': {
                'ContainerFormat': 'ova',
                'DiskImageFormat': 'VMDK'|'RAW'|'VHD',
                'S3Bucket': 'string',
                'S3Key': 'string'
            },
            'InstanceExportDetails': {
                'InstanceId': 'string',
                'TargetEnvironment': 'citrix'|'vmware'|'microsoft'
            },
            'State': 'active'|'cancelling'|'cancelled'|'completed',
            'StatusMessage': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --

ExportTasks (list) --
Information about the export tasks.

(dict) --
Describes an instance export task.

Description (string) --
A description of the resource being exported.

ExportTaskId (string) --
The ID of the export task.

ExportToS3Task (dict) --
Information about the export task.

ContainerFormat (string) --
The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.

DiskImageFormat (string) --
The format for the exported image.

S3Bucket (string) --
The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account vm-import-export@amazon.com .

S3Key (string) --
The encryption key for your S3 bucket.



InstanceExportDetails (dict) --
Information about the instance to export.

InstanceId (string) --
The ID of the resource being exported.

TargetEnvironment (string) --
The target virtualization environment.



State (string) --
The state of the export task.

StatusMessage (string) --
The status message related to the export task.

Tags (list) --
The tags for the export task.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
















    :return: {
        'ExportTasks': [
            {
                'Description': 'string',
                'ExportTaskId': 'string',
                'ExportToS3Task': {
                    'ContainerFormat': 'ova',
                    'DiskImageFormat': 'VMDK'|'RAW'|'VHD',
                    'S3Bucket': 'string',
                    'S3Key': 'string'
                },
                'InstanceExportDetails': {
                    'InstanceId': 'string',
                    'TargetEnvironment': 'citrix'|'vmware'|'microsoft'
                },
                'State': 'active'|'cancelling'|'cancelled'|'completed',
                'StatusMessage': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    }
    
    
    """
    pass

def describe_fast_snapshot_restores(Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes the state of fast snapshot restores for your snapshots.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_fast_snapshot_restores(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type Filters: list
    :param Filters: The filters. The possible values are:\n\navailability-zone : The Availability Zone of the snapshot.\nowner-id : The ID of the AWS account that owns the snapshot.\nsnapshot-id : The ID of the snapshot.\nstate : The state of fast snapshot restores for the snapshot (enabling | optimizing | enabled | disabling | disabled ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'FastSnapshotRestores': [
        {
            'SnapshotId': 'string',
            'AvailabilityZone': 'string',
            'State': 'enabling'|'optimizing'|'enabled'|'disabling'|'disabled',
            'StateTransitionReason': 'string',
            'OwnerId': 'string',
            'OwnerAlias': 'string',
            'EnablingTime': datetime(2015, 1, 1),
            'OptimizingTime': datetime(2015, 1, 1),
            'EnabledTime': datetime(2015, 1, 1),
            'DisablingTime': datetime(2015, 1, 1),
            'DisabledTime': datetime(2015, 1, 1)
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

FastSnapshotRestores (list) --
Information about the state of fast snapshot restores.

(dict) --
Describes fast snapshot restores for a snapshot.

SnapshotId (string) --
The ID of the snapshot.

AvailabilityZone (string) --
The Availability Zone.

State (string) --
The state of fast snapshot restores.

StateTransitionReason (string) --
The reason for the state transition. The possible values are as follows:

Client.UserInitiated - The state successfully transitioned to enabling or disabling .
Client.UserInitiated - Lifecycle state transition - The state successfully transitioned to optimizing , enabled , or disabled .


OwnerId (string) --
The ID of the AWS account that owns the snapshot.

OwnerAlias (string) --
The alias of the snapshot owner.

EnablingTime (datetime) --
The time at which fast snapshot restores entered the enabling state.

OptimizingTime (datetime) --
The time at which fast snapshot restores entered the optimizing state.

EnabledTime (datetime) --
The time at which fast snapshot restores entered the enabled state.

DisablingTime (datetime) --
The time at which fast snapshot restores entered the disabling state.

DisabledTime (datetime) --
The time at which fast snapshot restores entered the disabled state.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'FastSnapshotRestores': [
            {
                'SnapshotId': 'string',
                'AvailabilityZone': 'string',
                'State': 'enabling'|'optimizing'|'enabled'|'disabling'|'disabled',
                'StateTransitionReason': 'string',
                'OwnerId': 'string',
                'OwnerAlias': 'string',
                'EnablingTime': datetime(2015, 1, 1),
                'OptimizingTime': datetime(2015, 1, 1),
                'EnabledTime': datetime(2015, 1, 1),
                'DisablingTime': datetime(2015, 1, 1),
                'DisabledTime': datetime(2015, 1, 1)
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    Client.UserInitiated - The state successfully transitioned to enabling or disabling .
    Client.UserInitiated - Lifecycle state transition - The state successfully transitioned to optimizing , enabled , or disabled .
    
    """
    pass

def describe_fleet_history(DryRun=None, EventType=None, MaxResults=None, NextToken=None, FleetId=None, StartTime=None):
    """
    Describes the events for the specified EC2 Fleet during the specified time.
    EC2 Fleet events are delayed by up to 30 seconds before they can be described. This ensures that you can query by the last evaluated time and not miss a recorded event. EC2 Fleet events are available for 48 hours.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_fleet_history(
        DryRun=True|False,
        EventType='instance-change'|'fleet-change'|'service-error',
        MaxResults=123,
        NextToken='string',
        FleetId='string',
        StartTime=datetime(2015, 1, 1)
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EventType: string
    :param EventType: The type of events to describe. By default, all events are described.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token for the next set of results.

    :type FleetId: string
    :param FleetId: [REQUIRED]\nThe ID of the EC2 Fleet.\n

    :type StartTime: datetime
    :param StartTime: [REQUIRED]\nThe start date and time for the events, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).\n

    :rtype: dict

ReturnsResponse Syntax
{
    'HistoryRecords': [
        {
            'EventInformation': {
                'EventDescription': 'string',
                'EventSubType': 'string',
                'InstanceId': 'string'
            },
            'EventType': 'instance-change'|'fleet-change'|'service-error',
            'Timestamp': datetime(2015, 1, 1)
        },
    ],
    'LastEvaluatedTime': datetime(2015, 1, 1),
    'NextToken': 'string',
    'FleetId': 'string',
    'StartTime': datetime(2015, 1, 1)
}


Response Structure

(dict) --

HistoryRecords (list) --
Information about the events in the history of the EC2 Fleet.

(dict) --
Describes an event in the history of an EC2 Fleet.

EventInformation (dict) --
Information about the event.

EventDescription (string) --
The description of the event.

EventSubType (string) --
The event.
The following are the error events:

iamFleetRoleInvalid - The EC2 Fleet or Spot Fleet did not have the required permissions either to launch or terminate an instance.
spotFleetRequestConfigurationInvalid - The configuration is not valid. For more information, see the description of the event.
spotInstanceCountLimitExceeded - You\'ve reached the limit on the number of Spot Instances that you can launch.

The following are the fleetRequestChange events:

active - The EC2 Fleet or Spot Fleet request has been validated and Amazon EC2 is attempting to maintain the target number of running Spot Instances.
cancelled - The EC2 Fleet or Spot Fleet request is canceled and has no running Spot Instances. The EC2 Fleet or Spot Fleet will be deleted two days after its instances were terminated.
cancelled_running - The EC2 Fleet or Spot Fleet request is canceled and does not launch additional Spot Instances. Existing Spot Instances continue to run until they are interrupted or terminated.
cancelled_terminating - The EC2 Fleet or Spot Fleet request is canceled and its Spot Instances are terminating.
expired - The EC2 Fleet or Spot Fleet request has expired. A subsequent event indicates that the instances were terminated, if the request was created with TerminateInstancesWithExpiration set.
modify_in_progress - A request to modify the EC2 Fleet or Spot Fleet request was accepted and is in progress.
modify_successful - The EC2 Fleet or Spot Fleet request was modified.
price_update - The price for a launch configuration was adjusted because it was too high. This change is permanent.
submitted - The EC2 Fleet or Spot Fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of Spot Instances.

The following are the instanceChange events:

launched - A request was fulfilled and a new instance was launched.
terminated - An instance was terminated by the user.

The following are the Information events:

launchSpecTemporarilyBlacklisted - The configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.
launchSpecUnusable - The price in a launch specification is not valid because it is below the Spot price or the Spot price is above the On-Demand price.
fleetProgressHalted - The price in every launch specification is not valid. A launch specification might become valid if the Spot price changes.


InstanceId (string) --
The ID of the instance. This information is available only for instanceChange events.



EventType (string) --
The event type.

Timestamp (datetime) --
The date and time of the event, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).





LastEvaluatedTime (datetime) --
The last date and time for the events, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). All records up to this time were retrieved.
If nextToken indicates that there are more results, this value is not present.

NextToken (string) --
The token for the next set of results.

FleetId (string) --
The ID of the EC Fleet.

StartTime (datetime) --
The start date and time for the events, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).








    :return: {
        'HistoryRecords': [
            {
                'EventInformation': {
                    'EventDescription': 'string',
                    'EventSubType': 'string',
                    'InstanceId': 'string'
                },
                'EventType': 'instance-change'|'fleet-change'|'service-error',
                'Timestamp': datetime(2015, 1, 1)
            },
        ],
        'LastEvaluatedTime': datetime(2015, 1, 1),
        'NextToken': 'string',
        'FleetId': 'string',
        'StartTime': datetime(2015, 1, 1)
    }
    
    
    :returns: 
    iamFleetRoleInvalid - The EC2 Fleet or Spot Fleet did not have the required permissions either to launch or terminate an instance.
    spotFleetRequestConfigurationInvalid - The configuration is not valid. For more information, see the description of the event.
    spotInstanceCountLimitExceeded - You\'ve reached the limit on the number of Spot Instances that you can launch.
    
    """
    pass

def describe_fleet_instances(DryRun=None, MaxResults=None, NextToken=None, FleetId=None, Filters=None):
    """
    Describes the running instances for the specified EC2 Fleet.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_fleet_instances(
        DryRun=True|False,
        MaxResults=123,
        NextToken='string',
        FleetId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token for the next set of results.

    :type FleetId: string
    :param FleetId: [REQUIRED]\nThe ID of the EC2 Fleet.\n

    :type Filters: list
    :param Filters: The filters.\n\ninstance-type - The instance type.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ActiveInstances': [
        {
            'InstanceId': 'string',
            'InstanceType': 'string',
            'SpotInstanceRequestId': 'string',
            'InstanceHealth': 'healthy'|'unhealthy'
        },
    ],
    'NextToken': 'string',
    'FleetId': 'string'
}


Response Structure

(dict) --

ActiveInstances (list) --
The running instances. This list is refreshed periodically and might be out of date.

(dict) --
Describes a running instance in a Spot Fleet.

InstanceId (string) --
The ID of the instance.

InstanceType (string) --
The instance type.

SpotInstanceRequestId (string) --
The ID of the Spot Instance request.

InstanceHealth (string) --
The health status of the instance. If the status of either the instance status check or the system status check is impaired , the health status of the instance is unhealthy . Otherwise, the health status is healthy .





NextToken (string) --
The token for the next set of results.

FleetId (string) --
The ID of the EC2 Fleet.








    :return: {
        'ActiveInstances': [
            {
                'InstanceId': 'string',
                'InstanceType': 'string',
                'SpotInstanceRequestId': 'string',
                'InstanceHealth': 'healthy'|'unhealthy'
            },
        ],
        'NextToken': 'string',
        'FleetId': 'string'
    }
    
    
    """
    pass

def describe_fleets(DryRun=None, MaxResults=None, NextToken=None, FleetIds=None, Filters=None):
    """
    Describes the specified EC2 Fleets or all of your EC2 Fleets.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_fleets(
        DryRun=True|False,
        MaxResults=123,
        NextToken='string',
        FleetIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token for the next set of results.

    :type FleetIds: list
    :param FleetIds: The ID of the EC2 Fleets.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: The filters.\n\nactivity-status - The progress of the EC2 Fleet ( error | pending-fulfillment | pending-termination | fulfilled ).\nexcess-capacity-termination-policy - Indicates whether to terminate running instances if the target capacity is decreased below the current EC2 Fleet size (true | false ).\nfleet-state - The state of the EC2 Fleet (submitted | active | deleted | failed | deleted-running | deleted-terminating | modifying ).\nreplace-unhealthy-instances - Indicates whether EC2 Fleet should replace unhealthy instances (true | false ).\ntype - The type of request (instant | request | maintain ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'Fleets': [
        {
            'ActivityStatus': 'error'|'pending_fulfillment'|'pending_termination'|'fulfilled',
            'CreateTime': datetime(2015, 1, 1),
            'FleetId': 'string',
            'FleetState': 'submitted'|'active'|'deleted'|'failed'|'deleted_running'|'deleted_terminating'|'modifying',
            'ClientToken': 'string',
            'ExcessCapacityTerminationPolicy': 'no-termination'|'termination',
            'FulfilledCapacity': 123.0,
            'FulfilledOnDemandCapacity': 123.0,
            'LaunchTemplateConfigs': [
                {
                    'LaunchTemplateSpecification': {
                        'LaunchTemplateId': 'string',
                        'LaunchTemplateName': 'string',
                        'Version': 'string'
                    },
                    'Overrides': [
                        {
                            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                            'MaxPrice': 'string',
                            'SubnetId': 'string',
                            'AvailabilityZone': 'string',
                            'WeightedCapacity': 123.0,
                            'Priority': 123.0,
                            'Placement': {
                                'GroupName': 'string'
                            }
                        },
                    ]
                },
            ],
            'TargetCapacitySpecification': {
                'TotalTargetCapacity': 123,
                'OnDemandTargetCapacity': 123,
                'SpotTargetCapacity': 123,
                'DefaultTargetCapacityType': 'spot'|'on-demand'
            },
            'TerminateInstancesWithExpiration': True|False,
            'Type': 'request'|'maintain'|'instant',
            'ValidFrom': datetime(2015, 1, 1),
            'ValidUntil': datetime(2015, 1, 1),
            'ReplaceUnhealthyInstances': True|False,
            'SpotOptions': {
                'AllocationStrategy': 'lowest-price'|'diversified'|'capacity-optimized',
                'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate',
                'InstancePoolsToUseCount': 123,
                'SingleInstanceType': True|False,
                'SingleAvailabilityZone': True|False,
                'MinTargetCapacity': 123,
                'MaxTotalPrice': 'string'
            },
            'OnDemandOptions': {
                'AllocationStrategy': 'lowest-price'|'prioritized',
                'CapacityReservationOptions': {
                    'UsageStrategy': 'use-capacity-reservations-first'
                },
                'SingleInstanceType': True|False,
                'SingleAvailabilityZone': True|False,
                'MinTargetCapacity': 123,
                'MaxTotalPrice': 'string'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'Errors': [
                {
                    'LaunchTemplateAndOverrides': {
                        'LaunchTemplateSpecification': {
                            'LaunchTemplateId': 'string',
                            'LaunchTemplateName': 'string',
                            'Version': 'string'
                        },
                        'Overrides': {
                            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                            'MaxPrice': 'string',
                            'SubnetId': 'string',
                            'AvailabilityZone': 'string',
                            'WeightedCapacity': 123.0,
                            'Priority': 123.0,
                            'Placement': {
                                'GroupName': 'string'
                            }
                        }
                    },
                    'Lifecycle': 'spot'|'on-demand',
                    'ErrorCode': 'string',
                    'ErrorMessage': 'string'
                },
            ],
            'Instances': [
                {
                    'LaunchTemplateAndOverrides': {
                        'LaunchTemplateSpecification': {
                            'LaunchTemplateId': 'string',
                            'LaunchTemplateName': 'string',
                            'Version': 'string'
                        },
                        'Overrides': {
                            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                            'MaxPrice': 'string',
                            'SubnetId': 'string',
                            'AvailabilityZone': 'string',
                            'WeightedCapacity': 123.0,
                            'Priority': 123.0,
                            'Placement': {
                                'GroupName': 'string'
                            }
                        }
                    },
                    'Lifecycle': 'spot'|'on-demand',
                    'InstanceIds': [
                        'string',
                    ],
                    'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                    'Platform': 'Windows'
                },
            ]
        },
    ]
}


Response Structure

(dict) --

NextToken (string) --
The token for the next set of results.

Fleets (list) --
Information about the EC2 Fleets.

(dict) --
Describes an EC2 Fleet.

ActivityStatus (string) --
The progress of the EC2 Fleet. If there is an error, the status is error . After all requests are placed, the status is pending_fulfillment . If the size of the EC2 Fleet is equal to or greater than its target capacity, the status is fulfilled . If the size of the EC2 Fleet is decreased, the status is pending_termination while instances are terminating.

CreateTime (datetime) --
The creation date and time of the EC2 Fleet.

FleetId (string) --
The ID of the EC2 Fleet.

FleetState (string) --
The state of the EC2 Fleet.

ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .
Constraints: Maximum 64 ASCII characters

ExcessCapacityTerminationPolicy (string) --
Indicates whether running instances should be terminated if the target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.

FulfilledCapacity (float) --
The number of units fulfilled by this request compared to the set target capacity.

FulfilledOnDemandCapacity (float) --
The number of units fulfilled by this request compared to the set target On-Demand capacity.

LaunchTemplateConfigs (list) --
The launch template and overrides.

(dict) --
Describes a launch template and overrides.

LaunchTemplateSpecification (dict) --
The launch template.

LaunchTemplateId (string) --
The ID of the launch template. If you specify the template ID, you can\'t specify the template name.

LaunchTemplateName (string) --
The name of the launch template. If you specify the template name, you can\'t specify the template ID.

Version (string) --
The launch template version number, $Latest , or $Default . You must specify a value, otherwise the request fails.
If the value is $Latest , Amazon EC2 uses the latest version of the launch template.
If the value is $Default , Amazon EC2 uses the default version of the launch template.



Overrides (list) --
Any parameters that you specify override the same parameters in the launch template.

(dict) --
Describes overrides for a launch template.

InstanceType (string) --
The instance type.

MaxPrice (string) --
The maximum price per unit hour that you are willing to pay for a Spot Instance.

SubnetId (string) --
The ID of the subnet in which to launch the instances.

AvailabilityZone (string) --
The Availability Zone in which to launch the instances.

WeightedCapacity (float) --
The number of units provided by the specified instance type.

Priority (float) --
The priority for the launch template override. If AllocationStrategy is set to prioritized , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0 . The lower the number, the higher the priority. If no number is set, the override has the lowest priority.

Placement (dict) --
The location where the instance launched, if applicable.

GroupName (string) --
The name of the placement group that the instance is in.











TargetCapacitySpecification (dict) --
The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is maintain , you can specify a target capacity of 0 and add capacity later.

TotalTargetCapacity (integer) --
The number of units to request, filled using DefaultTargetCapacityType .

OnDemandTargetCapacity (integer) --
The number of On-Demand units to request. If you specify a target capacity for Spot units, you cannot specify a target capacity for On-Demand units.

SpotTargetCapacity (integer) --
The maximum number of Spot units to launch. If you specify a target capacity for On-Demand units, you cannot specify a target capacity for Spot units.

DefaultTargetCapacityType (string) --
The default TotalTargetCapacity , which is either Spot or On-Demand .



TerminateInstancesWithExpiration (boolean) --
Indicates whether running instances should be terminated when the EC2 Fleet expires.

Type (string) --
The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. If you request a certain target capacity, EC2 Fleet only places the required requests; it does not attempt to replenish instances if capacity is diminished, and it does not submit requests in alternative capacity pools if capacity is unavailable. To maintain a certain target capacity, EC2 Fleet places the required requests to meet this target capacity. It also automatically replenishes any interrupted Spot Instances. Default: maintain .

ValidFrom (datetime) --
The start date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). The default is to start fulfilling the request immediately.

ValidUntil (datetime) --
The end date and time of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). At this point, no new instance requests are placed or able to fulfill the request. The default end date is 7 days from the current date.

ReplaceUnhealthyInstances (boolean) --
Indicates whether EC2 Fleet should replace unhealthy instances.

SpotOptions (dict) --
The configuration of Spot Instances in an EC2 Fleet.

AllocationStrategy (string) --
Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet.
If the allocation strategy is lowest-price , EC2 Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.
If the allocation strategy is diversified , EC2 Fleet launches instances from all of the Spot Instance pools that you specify.
If the allocation strategy is capacity-optimized , EC2 Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.

InstanceInterruptionBehavior (string) --
The behavior when a Spot Instance is interrupted. The default is terminate .

InstancePoolsToUseCount (integer) --
The number of Spot pools across which to allocate your target Spot capacity. Valid only when AllocationStrategy is set to lowest-price . EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.

SingleInstanceType (boolean) --
Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type instant .

SingleAvailabilityZone (boolean) --
Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type instant .

MinTargetCapacity (integer) --
The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.

MaxTotalPrice (string) --
The maximum amount per hour for Spot Instances that you\'re willing to pay.



OnDemandOptions (dict) --
The allocation strategy of On-Demand Instances in an EC2 Fleet.

AllocationStrategy (string) --
The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify lowest-price , EC2 Fleet uses price to determine the order, launching the lowest price first. If you specify prioritized , EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first. If you do not specify a value, EC2 Fleet defaults to lowest-price .

CapacityReservationOptions (dict) --
The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity. Supported only for fleets of type instant .

UsageStrategy (string) --
Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.
If you specify use-capacity-reservations-first , the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy (lowest-price or prioritized ) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy (lowest-price or prioritized ).
If you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.



SingleInstanceType (boolean) --
Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant .

SingleAvailabilityZone (boolean) --
Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant .

MinTargetCapacity (integer) --
The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.

MaxTotalPrice (string) --
The maximum amount per hour for On-Demand Instances that you\'re willing to pay.



Tags (list) --
The tags for an EC2 Fleet resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





Errors (list) --
Information about the instances that could not be launched by the fleet. Valid only when Type is set to instant .

(dict) --
Describes the instances that could not be launched by the fleet.

LaunchTemplateAndOverrides (dict) --
The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.

LaunchTemplateSpecification (dict) --
The launch template.

LaunchTemplateId (string) --
The ID of the launch template. If you specify the template ID, you can\'t specify the template name.

LaunchTemplateName (string) --
The name of the launch template. If you specify the template name, you can\'t specify the template ID.

Version (string) --
The launch template version number, $Latest , or $Default . You must specify a value, otherwise the request fails.
If the value is $Latest , Amazon EC2 uses the latest version of the launch template.
If the value is $Default , Amazon EC2 uses the default version of the launch template.



Overrides (dict) --
Any parameters that you specify override the same parameters in the launch template.

InstanceType (string) --
The instance type.

MaxPrice (string) --
The maximum price per unit hour that you are willing to pay for a Spot Instance.

SubnetId (string) --
The ID of the subnet in which to launch the instances.

AvailabilityZone (string) --
The Availability Zone in which to launch the instances.

WeightedCapacity (float) --
The number of units provided by the specified instance type.

Priority (float) --
The priority for the launch template override. If AllocationStrategy is set to prioritized , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0 . The lower the number, the higher the priority. If no number is set, the override has the lowest priority.

Placement (dict) --
The location where the instance launched, if applicable.

GroupName (string) --
The name of the placement group that the instance is in.







Lifecycle (string) --
Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.

ErrorCode (string) --
The error code that indicates why the instance could not be launched. For more information about error codes, see Error Codes .

ErrorMessage (string) --
The error message that describes why the instance could not be launched. For more information about error messages, see Error Codes .





Instances (list) --
Information about the instances that were launched by the fleet. Valid only when Type is set to instant .

(dict) --
Describes the instances that were launched by the fleet.

LaunchTemplateAndOverrides (dict) --
The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.

LaunchTemplateSpecification (dict) --
The launch template.

LaunchTemplateId (string) --
The ID of the launch template. If you specify the template ID, you can\'t specify the template name.

LaunchTemplateName (string) --
The name of the launch template. If you specify the template name, you can\'t specify the template ID.

Version (string) --
The launch template version number, $Latest , or $Default . You must specify a value, otherwise the request fails.
If the value is $Latest , Amazon EC2 uses the latest version of the launch template.
If the value is $Default , Amazon EC2 uses the default version of the launch template.



Overrides (dict) --
Any parameters that you specify override the same parameters in the launch template.

InstanceType (string) --
The instance type.

MaxPrice (string) --
The maximum price per unit hour that you are willing to pay for a Spot Instance.

SubnetId (string) --
The ID of the subnet in which to launch the instances.

AvailabilityZone (string) --
The Availability Zone in which to launch the instances.

WeightedCapacity (float) --
The number of units provided by the specified instance type.

Priority (float) --
The priority for the launch template override. If AllocationStrategy is set to prioritized , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0 . The lower the number, the higher the priority. If no number is set, the override has the lowest priority.

Placement (dict) --
The location where the instance launched, if applicable.

GroupName (string) --
The name of the placement group that the instance is in.







Lifecycle (string) --
Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.

InstanceIds (list) --
The IDs of the instances.

(string) --


InstanceType (string) --
The instance type.

Platform (string) --
The value is Windows for Windows instances. Otherwise, the value is blank.
















    :return: {
        'NextToken': 'string',
        'Fleets': [
            {
                'ActivityStatus': 'error'|'pending_fulfillment'|'pending_termination'|'fulfilled',
                'CreateTime': datetime(2015, 1, 1),
                'FleetId': 'string',
                'FleetState': 'submitted'|'active'|'deleted'|'failed'|'deleted_running'|'deleted_terminating'|'modifying',
                'ClientToken': 'string',
                'ExcessCapacityTerminationPolicy': 'no-termination'|'termination',
                'FulfilledCapacity': 123.0,
                'FulfilledOnDemandCapacity': 123.0,
                'LaunchTemplateConfigs': [
                    {
                        'LaunchTemplateSpecification': {
                            'LaunchTemplateId': 'string',
                            'LaunchTemplateName': 'string',
                            'Version': 'string'
                        },
                        'Overrides': [
                            {
                                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                                'MaxPrice': 'string',
                                'SubnetId': 'string',
                                'AvailabilityZone': 'string',
                                'WeightedCapacity': 123.0,
                                'Priority': 123.0,
                                'Placement': {
                                    'GroupName': 'string'
                                }
                            },
                        ]
                    },
                ],
                'TargetCapacitySpecification': {
                    'TotalTargetCapacity': 123,
                    'OnDemandTargetCapacity': 123,
                    'SpotTargetCapacity': 123,
                    'DefaultTargetCapacityType': 'spot'|'on-demand'
                },
                'TerminateInstancesWithExpiration': True|False,
                'Type': 'request'|'maintain'|'instant',
                'ValidFrom': datetime(2015, 1, 1),
                'ValidUntil': datetime(2015, 1, 1),
                'ReplaceUnhealthyInstances': True|False,
                'SpotOptions': {
                    'AllocationStrategy': 'lowest-price'|'diversified'|'capacity-optimized',
                    'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate',
                    'InstancePoolsToUseCount': 123,
                    'SingleInstanceType': True|False,
                    'SingleAvailabilityZone': True|False,
                    'MinTargetCapacity': 123,
                    'MaxTotalPrice': 'string'
                },
                'OnDemandOptions': {
                    'AllocationStrategy': 'lowest-price'|'prioritized',
                    'CapacityReservationOptions': {
                        'UsageStrategy': 'use-capacity-reservations-first'
                    },
                    'SingleInstanceType': True|False,
                    'SingleAvailabilityZone': True|False,
                    'MinTargetCapacity': 123,
                    'MaxTotalPrice': 'string'
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'Errors': [
                    {
                        'LaunchTemplateAndOverrides': {
                            'LaunchTemplateSpecification': {
                                'LaunchTemplateId': 'string',
                                'LaunchTemplateName': 'string',
                                'Version': 'string'
                            },
                            'Overrides': {
                                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                                'MaxPrice': 'string',
                                'SubnetId': 'string',
                                'AvailabilityZone': 'string',
                                'WeightedCapacity': 123.0,
                                'Priority': 123.0,
                                'Placement': {
                                    'GroupName': 'string'
                                }
                            }
                        },
                        'Lifecycle': 'spot'|'on-demand',
                        'ErrorCode': 'string',
                        'ErrorMessage': 'string'
                    },
                ],
                'Instances': [
                    {
                        'LaunchTemplateAndOverrides': {
                            'LaunchTemplateSpecification': {
                                'LaunchTemplateId': 'string',
                                'LaunchTemplateName': 'string',
                                'Version': 'string'
                            },
                            'Overrides': {
                                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                                'MaxPrice': 'string',
                                'SubnetId': 'string',
                                'AvailabilityZone': 'string',
                                'WeightedCapacity': 123.0,
                                'Priority': 123.0,
                                'Placement': {
                                    'GroupName': 'string'
                                }
                            }
                        },
                        'Lifecycle': 'spot'|'on-demand',
                        'InstanceIds': [
                            'string',
                        ],
                        'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                        'Platform': 'Windows'
                    },
                ]
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_flow_logs(DryRun=None, Filters=None, FlowLogIds=None, MaxResults=None, NextToken=None):
    """
    Describes one or more flow logs. To view the information in your flow logs (the log streams for the network interfaces), you must use the CloudWatch Logs console or the CloudWatch Logs API.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_flow_logs(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        FlowLogIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: One or more filters.\n\ndeliver-log-status - The status of the logs delivery (SUCCESS | FAILED ).\nlog-destination-type - The type of destination to which the flow log publishes data. Possible destination types include cloud-watch-logs and S3 .\nflow-log-id - The ID of the flow log.\nlog-group-name - The name of the log group.\nresource-id - The ID of the VPC, subnet, or network interface.\ntraffic-type - The type of traffic (ACCEPT | REJECT | ALL ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type FlowLogIds: list
    :param FlowLogIds: One or more flow log IDs.\nConstraint: Maximum of 1000 flow log IDs.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'FlowLogs': [
        {
            'CreationTime': datetime(2015, 1, 1),
            'DeliverLogsErrorMessage': 'string',
            'DeliverLogsPermissionArn': 'string',
            'DeliverLogsStatus': 'string',
            'FlowLogId': 'string',
            'FlowLogStatus': 'string',
            'LogGroupName': 'string',
            'ResourceId': 'string',
            'TrafficType': 'ACCEPT'|'REJECT'|'ALL',
            'LogDestinationType': 'cloud-watch-logs'|'s3',
            'LogDestination': 'string',
            'LogFormat': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'MaxAggregationInterval': 123
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

FlowLogs (list) --
Information about the flow logs.

(dict) --
Describes a flow log.

CreationTime (datetime) --
The date and time the flow log was created.

DeliverLogsErrorMessage (string) --
Information about the error that occurred. Rate limited indicates that CloudWatch Logs throttling has been applied for one or more network interfaces, or that you\'ve reached the limit on the number of log groups that you can create. Access error indicates that the IAM role associated with the flow log does not have sufficient permissions to publish to CloudWatch Logs. Unknown error indicates an internal error.

DeliverLogsPermissionArn (string) --
The ARN of the IAM role that posts logs to CloudWatch Logs.

DeliverLogsStatus (string) --
The status of the logs delivery (SUCCESS | FAILED ).

FlowLogId (string) --
The flow log ID.

FlowLogStatus (string) --
The status of the flow log (ACTIVE ).

LogGroupName (string) --
The name of the flow log group.

ResourceId (string) --
The ID of the resource on which the flow log was created.

TrafficType (string) --
The type of traffic captured for the flow log.

LogDestinationType (string) --
Specifies the type of destination to which the flow log data is published. Flow log data can be published to CloudWatch Logs or Amazon S3.

LogDestination (string) --
Specifies the destination to which the flow log data is published. Flow log data can be published to an CloudWatch Logs log group or an Amazon S3 bucket. If the flow log publishes to CloudWatch Logs, this element indicates the Amazon Resource Name (ARN) of the CloudWatch Logs log group to which the data is published. If the flow log publishes to Amazon S3, this element indicates the ARN of the Amazon S3 bucket to which the data is published.

LogFormat (string) --
The format of the flow log record.

Tags (list) --
The tags for the flow log.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





MaxAggregationInterval (integer) --
The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record.
When a network interface is attached to a Nitro-based instance , the aggregation interval is always 60 seconds (1 minute) or less, regardless of the specified value.
Valid Values: 60 | 600





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'FlowLogs': [
            {
                'CreationTime': datetime(2015, 1, 1),
                'DeliverLogsErrorMessage': 'string',
                'DeliverLogsPermissionArn': 'string',
                'DeliverLogsStatus': 'string',
                'FlowLogId': 'string',
                'FlowLogStatus': 'string',
                'LogGroupName': 'string',
                'ResourceId': 'string',
                'TrafficType': 'ACCEPT'|'REJECT'|'ALL',
                'LogDestinationType': 'cloud-watch-logs'|'s3',
                'LogDestination': 'string',
                'LogFormat': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'MaxAggregationInterval': 123
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_fpga_image_attribute(DryRun=None, FpgaImageId=None, Attribute=None):
    """
    Describes the specified attribute of the specified Amazon FPGA Image (AFI).
    See also: AWS API Documentation
    
    
    :example: response = client.describe_fpga_image_attribute(
        DryRun=True|False,
        FpgaImageId='string',
        Attribute='description'|'name'|'loadPermission'|'productCodes'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type FpgaImageId: string
    :param FpgaImageId: [REQUIRED]\nThe ID of the AFI.\n

    :type Attribute: string
    :param Attribute: [REQUIRED]\nThe AFI attribute.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'FpgaImageAttribute': {
        'FpgaImageId': 'string',
        'Name': 'string',
        'Description': 'string',
        'LoadPermissions': [
            {
                'UserId': 'string',
                'Group': 'all'
            },
        ],
        'ProductCodes': [
            {
                'ProductCodeId': 'string',
                'ProductCodeType': 'devpay'|'marketplace'
            },
        ]
    }
}


Response Structure

(dict) --

FpgaImageAttribute (dict) --
Information about the attribute.

FpgaImageId (string) --
The ID of the AFI.

Name (string) --
The name of the AFI.

Description (string) --
The description of the AFI.

LoadPermissions (list) --
The load permissions.

(dict) --
Describes a load permission.

UserId (string) --
The AWS account ID.

Group (string) --
The name of the group.





ProductCodes (list) --
The product codes.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.














    :return: {
        'FpgaImageAttribute': {
            'FpgaImageId': 'string',
            'Name': 'string',
            'Description': 'string',
            'LoadPermissions': [
                {
                    'UserId': 'string',
                    'Group': 'all'
                },
            ],
            'ProductCodes': [
                {
                    'ProductCodeId': 'string',
                    'ProductCodeType': 'devpay'|'marketplace'
                },
            ]
        }
    }
    
    
    """
    pass

def describe_fpga_images(DryRun=None, FpgaImageIds=None, Owners=None, Filters=None, NextToken=None, MaxResults=None):
    """
    Describes the Amazon FPGA Images (AFIs) available to you. These include public AFIs, private AFIs that you own, and AFIs owned by other AWS accounts for which you have load permissions.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_fpga_images(
        DryRun=True|False,
        FpgaImageIds=[
            'string',
        ],
        Owners=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type FpgaImageIds: list
    :param FpgaImageIds: The AFI IDs.\n\n(string) --\n\n

    :type Owners: list
    :param Owners: Filters the AFI by owner. Specify an AWS account ID, self (owner is the sender of the request), or an AWS owner alias (valid values are amazon | aws-marketplace ).\n\n(string) --\n\n

    :type Filters: list
    :param Filters: The filters.\n\ncreate-time - The creation time of the AFI.\nfpga-image-id - The FPGA image identifier (AFI ID).\nfpga-image-global-id - The global FPGA image identifier (AGFI ID).\nname - The name of the AFI.\nowner-id - The AWS account ID of the AFI owner.\nproduct-code - The product code.\nshell-version - The version of the AWS Shell that was used to create the bitstream.\nstate - The state of the AFI (pending | failed | available | unavailable ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nupdate-time - The time of the most recent update.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call.

    :rtype: dict

ReturnsResponse Syntax
{
    'FpgaImages': [
        {
            'FpgaImageId': 'string',
            'FpgaImageGlobalId': 'string',
            'Name': 'string',
            'Description': 'string',
            'ShellVersion': 'string',
            'PciId': {
                'DeviceId': 'string',
                'VendorId': 'string',
                'SubsystemId': 'string',
                'SubsystemVendorId': 'string'
            },
            'State': {
                'Code': 'pending'|'failed'|'available'|'unavailable',
                'Message': 'string'
            },
            'CreateTime': datetime(2015, 1, 1),
            'UpdateTime': datetime(2015, 1, 1),
            'OwnerId': 'string',
            'OwnerAlias': 'string',
            'ProductCodes': [
                {
                    'ProductCodeId': 'string',
                    'ProductCodeType': 'devpay'|'marketplace'
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'Public': True|False,
            'DataRetentionSupport': True|False
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

FpgaImages (list) --
Information about the FPGA images.

(dict) --
Describes an Amazon FPGA image (AFI).

FpgaImageId (string) --
The FPGA image identifier (AFI ID).

FpgaImageGlobalId (string) --
The global FPGA image identifier (AGFI ID).

Name (string) --
The name of the AFI.

Description (string) --
The description of the AFI.

ShellVersion (string) --
The version of the AWS Shell that was used to create the bitstream.

PciId (dict) --
Information about the PCI bus.

DeviceId (string) --
The ID of the device.

VendorId (string) --
The ID of the vendor.

SubsystemId (string) --
The ID of the subsystem.

SubsystemVendorId (string) --
The ID of the vendor for the subsystem.



State (dict) --
Information about the state of the AFI.

Code (string) --
The state. The following are the possible values:

pending - AFI bitstream generation is in progress.
available - The AFI is available for use.
failed - AFI bitstream generation failed.
unavailable - The AFI is no longer available for use.


Message (string) --
If the state is failed , this is the error message.



CreateTime (datetime) --
The date and time the AFI was created.

UpdateTime (datetime) --
The time of the most recent update to the AFI.

OwnerId (string) --
The AWS account ID of the AFI owner.

OwnerAlias (string) --
The alias of the AFI owner. Possible values include self , amazon , and aws-marketplace .

ProductCodes (list) --
The product codes for the AFI.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.





Tags (list) --
Any tags assigned to the AFI.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





Public (boolean) --
Indicates whether the AFI is public.

DataRetentionSupport (boolean) --
Indicates whether data retention support is enabled for the AFI.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'FpgaImages': [
            {
                'FpgaImageId': 'string',
                'FpgaImageGlobalId': 'string',
                'Name': 'string',
                'Description': 'string',
                'ShellVersion': 'string',
                'PciId': {
                    'DeviceId': 'string',
                    'VendorId': 'string',
                    'SubsystemId': 'string',
                    'SubsystemVendorId': 'string'
                },
                'State': {
                    'Code': 'pending'|'failed'|'available'|'unavailable',
                    'Message': 'string'
                },
                'CreateTime': datetime(2015, 1, 1),
                'UpdateTime': datetime(2015, 1, 1),
                'OwnerId': 'string',
                'OwnerAlias': 'string',
                'ProductCodes': [
                    {
                        'ProductCodeId': 'string',
                        'ProductCodeType': 'devpay'|'marketplace'
                    },
                ],
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'Public': True|False,
                'DataRetentionSupport': True|False
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    pending - AFI bitstream generation is in progress.
    available - The AFI is available for use.
    failed - AFI bitstream generation failed.
    unavailable - The AFI is no longer available for use.
    
    """
    pass

def describe_host_reservation_offerings(Filters=None, MaxDuration=None, MaxResults=None, MinDuration=None, NextToken=None, OfferingId=None):
    """
    Describes the Dedicated Host reservations that are available to purchase.
    The results describe all of the Dedicated Host reservation offerings, including offerings that might not match the instance family and Region of your Dedicated Hosts. When purchasing an offering, ensure that the instance family and Region of the offering matches that of the Dedicated Hosts with which it is to be associated. For more information about supported instance types, see Dedicated Hosts Overview in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_host_reservation_offerings(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxDuration=123,
        MaxResults=123,
        MinDuration=123,
        NextToken='string',
        OfferingId='string'
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\ninstance-family - The instance family of the offering (for example, m4 ).\npayment-option - The payment option (NoUpfront | PartialUpfront | AllUpfront ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxDuration: integer
    :param MaxDuration: This is the maximum duration of the reservation to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 94608000 for three years.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.

    :type MinDuration: integer
    :param MinDuration: This is the minimum duration of the reservation you\'d like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 31536000 for one year.

    :type NextToken: string
    :param NextToken: The token to use to retrieve the next page of results.

    :type OfferingId: string
    :param OfferingId: The ID of the reservation offering.

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'OfferingSet': [
        {
            'CurrencyCode': 'USD',
            'Duration': 123,
            'HourlyPrice': 'string',
            'InstanceFamily': 'string',
            'OfferingId': 'string',
            'PaymentOption': 'AllUpfront'|'PartialUpfront'|'NoUpfront',
            'UpfrontPrice': 'string'
        },
    ]
}


Response Structure

(dict) --

NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.

OfferingSet (list) --
Information about the offerings.

(dict) --
Details about the Dedicated Host Reservation offering.

CurrencyCode (string) --
The currency of the offering.

Duration (integer) --
The duration of the offering (in seconds).

HourlyPrice (string) --
The hourly price of the offering.

InstanceFamily (string) --
The instance family of the offering.

OfferingId (string) --
The ID of the offering.

PaymentOption (string) --
The available payment option.

UpfrontPrice (string) --
The upfront price of the offering. Does not apply to No Upfront offerings.












    :return: {
        'NextToken': 'string',
        'OfferingSet': [
            {
                'CurrencyCode': 'USD',
                'Duration': 123,
                'HourlyPrice': 'string',
                'InstanceFamily': 'string',
                'OfferingId': 'string',
                'PaymentOption': 'AllUpfront'|'PartialUpfront'|'NoUpfront',
                'UpfrontPrice': 'string'
            },
        ]
    }
    
    
    """
    pass

def describe_host_reservations(Filters=None, HostReservationIdSet=None, MaxResults=None, NextToken=None):
    """
    Describes reservations that are associated with Dedicated Hosts in your account.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_host_reservations(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        HostReservationIdSet=[
            'string',
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\ninstance-family - The instance family (for example, m4 ).\npayment-option - The payment option (NoUpfront | PartialUpfront | AllUpfront ).\nstate - The state of the reservation (payment-pending | payment-failed | active | retired ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type HostReservationIdSet: list
    :param HostReservationIdSet: The host reservation IDs.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.

    :type NextToken: string
    :param NextToken: The token to use to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'HostReservationSet': [
        {
            'Count': 123,
            'CurrencyCode': 'USD',
            'Duration': 123,
            'End': datetime(2015, 1, 1),
            'HostIdSet': [
                'string',
            ],
            'HostReservationId': 'string',
            'HourlyPrice': 'string',
            'InstanceFamily': 'string',
            'OfferingId': 'string',
            'PaymentOption': 'AllUpfront'|'PartialUpfront'|'NoUpfront',
            'Start': datetime(2015, 1, 1),
            'State': 'payment-pending'|'payment-failed'|'active'|'retired',
            'UpfrontPrice': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

HostReservationSet (list) --
Details about the reservation\'s configuration.

(dict) --
Details about the Dedicated Host Reservation and associated Dedicated Hosts.

Count (integer) --
The number of Dedicated Hosts the reservation is associated with.

CurrencyCode (string) --
The currency in which the upfrontPrice and hourlyPrice amounts are specified. At this time, the only supported currency is USD .

Duration (integer) --
The length of the reservation\'s term, specified in seconds. Can be 31536000 (1 year) | 94608000 (3 years) .

End (datetime) --
The date and time that the reservation ends.

HostIdSet (list) --
The IDs of the Dedicated Hosts associated with the reservation.

(string) --


HostReservationId (string) --
The ID of the reservation that specifies the associated Dedicated Hosts.

HourlyPrice (string) --
The hourly price of the reservation.

InstanceFamily (string) --
The instance family of the Dedicated Host Reservation. The instance family on the Dedicated Host must be the same in order for it to benefit from the reservation.

OfferingId (string) --
The ID of the reservation. This remains the same regardless of which Dedicated Hosts are associated with it.

PaymentOption (string) --
The payment option selected for this reservation.

Start (datetime) --
The date and time that the reservation started.

State (string) --
The state of the reservation.

UpfrontPrice (string) --
The upfront price of the reservation.

Tags (list) --
Any tags assigned to the Dedicated Host Reservation.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'HostReservationSet': [
            {
                'Count': 123,
                'CurrencyCode': 'USD',
                'Duration': 123,
                'End': datetime(2015, 1, 1),
                'HostIdSet': [
                    'string',
                ],
                'HostReservationId': 'string',
                'HourlyPrice': 'string',
                'InstanceFamily': 'string',
                'OfferingId': 'string',
                'PaymentOption': 'AllUpfront'|'PartialUpfront'|'NoUpfront',
                'Start': datetime(2015, 1, 1),
                'State': 'payment-pending'|'payment-failed'|'active'|'retired',
                'UpfrontPrice': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_hosts(Filters=None, HostIds=None, MaxResults=None, NextToken=None):
    """
    Describes the specified Dedicated Hosts or all your Dedicated Hosts.
    The results describe only the Dedicated Hosts in the Region you\'re currently using. All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that have recently been released are listed with the state released .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_hosts(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        HostIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\nauto-placement - Whether auto-placement is enabled or disabled (on | off ).\navailability-zone - The Availability Zone of the host.\nclient-token - The idempotency token that you provided when you allocated the host.\nhost-reservation-id - The ID of the reservation assigned to this host.\ninstance-type - The instance type size that the Dedicated Host is configured to support.\nstate - The allocation state of the Dedicated Host (available | under-assessment | permanent-failure | released | released-permanent-failure ).\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type HostIds: list
    :param HostIds: The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value. This value can be between 5 and 500. If maxResults is given a larger value than 500, you receive an error.\nYou cannot specify this parameter and the host IDs parameter in the same request.\n

    :type NextToken: string
    :param NextToken: The token to use to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'Hosts': [
        {
            'AutoPlacement': 'on'|'off',
            'AvailabilityZone': 'string',
            'AvailableCapacity': {
                'AvailableInstanceCapacity': [
                    {
                        'AvailableCapacity': 123,
                        'InstanceType': 'string',
                        'TotalCapacity': 123
                    },
                ],
                'AvailableVCpus': 123
            },
            'ClientToken': 'string',
            'HostId': 'string',
            'HostProperties': {
                'Cores': 123,
                'InstanceType': 'string',
                'InstanceFamily': 'string',
                'Sockets': 123,
                'TotalVCpus': 123
            },
            'HostReservationId': 'string',
            'Instances': [
                {
                    'InstanceId': 'string',
                    'InstanceType': 'string',
                    'OwnerId': 'string'
                },
            ],
            'State': 'available'|'under-assessment'|'permanent-failure'|'released'|'released-permanent-failure'|'pending',
            'AllocationTime': datetime(2015, 1, 1),
            'ReleaseTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'HostRecovery': 'on'|'off',
            'AllowsMultipleInstanceTypes': 'on'|'off',
            'OwnerId': 'string',
            'AvailabilityZoneId': 'string',
            'MemberOfServiceLinkedResourceGroup': True|False
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Hosts (list) --
Information about the Dedicated Hosts.

(dict) --
Describes the properties of the Dedicated Host.

AutoPlacement (string) --
Whether auto-placement is on or off.

AvailabilityZone (string) --
The Availability Zone of the Dedicated Host.

AvailableCapacity (dict) --
Information about the instances running on the Dedicated Host.

AvailableInstanceCapacity (list) --
The number of instances that can be launched onto the Dedicated Host depending on the host\'s available capacity. For Dedicated Hosts that support multiple instance types, this parameter represents the number of instances for each instance size that is supported on the host.

(dict) --
Information about the number of instances that can be launched onto the Dedicated Host.

AvailableCapacity (integer) --
The number of instances that can be launched onto the Dedicated Host based on the host\'s available capacity.

InstanceType (string) --
The instance type supported by the Dedicated Host.

TotalCapacity (integer) --
The total number of instances that can be launched onto the Dedicated Host if there are no instances running on it.





AvailableVCpus (integer) --
The number of vCPUs available for launching instances onto the Dedicated Host.



ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .

HostId (string) --
The ID of the Dedicated Host.

HostProperties (dict) --
The hardware specifications of the Dedicated Host.

Cores (integer) --
The number of cores on the Dedicated Host.

InstanceType (string) --
The instance type supported by the Dedicated Host. For example, m5.large . If the host supports multiple instance types, no instanceType is returned.

InstanceFamily (string) --
The instance family supported by the Dedicated Host. For example, m5 .

Sockets (integer) --
The number of sockets on the Dedicated Host.

TotalVCpus (integer) --
The total number of vCPUs on the Dedicated Host.



HostReservationId (string) --
The reservation ID of the Dedicated Host. This returns a null response if the Dedicated Host doesn\'t have an associated reservation.

Instances (list) --
The IDs and instance type that are currently running on the Dedicated Host.

(dict) --
Describes an instance running on a Dedicated Host.

InstanceId (string) --
The ID of instance that is running on the Dedicated Host.

InstanceType (string) --
The instance type (for example, m3.medium ) of the running instance.

OwnerId (string) --
The ID of the AWS account that owns the instance.





State (string) --
The Dedicated Host\'s state.

AllocationTime (datetime) --
The time that the Dedicated Host was allocated.

ReleaseTime (datetime) --
The time that the Dedicated Host was released.

Tags (list) --
Any tags assigned to the Dedicated Host.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





HostRecovery (string) --
Indicates whether host recovery is enabled or disabled for the Dedicated Host.

AllowsMultipleInstanceTypes (string) --
Indicates whether the Dedicated Host supports multiple instance types of the same instance family, or a specific instance type only. one indicates that the Dedicated Host supports multiple instance types in the instance family. off indicates that the Dedicated Host supports a single instance type only.

OwnerId (string) --
The ID of the AWS account that owns the Dedicated Host.

AvailabilityZoneId (string) --
The ID of the Availability Zone in which the Dedicated Host is allocated.

MemberOfServiceLinkedResourceGroup (boolean) --
Indicates whether the Dedicated Host is in a host resource group. If memberOfServiceLinkedResourceGroup is true , the host is in a host resource group; otherwise, it is not.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'Hosts': [
            {
                'AutoPlacement': 'on'|'off',
                'AvailabilityZone': 'string',
                'AvailableCapacity': {
                    'AvailableInstanceCapacity': [
                        {
                            'AvailableCapacity': 123,
                            'InstanceType': 'string',
                            'TotalCapacity': 123
                        },
                    ],
                    'AvailableVCpus': 123
                },
                'ClientToken': 'string',
                'HostId': 'string',
                'HostProperties': {
                    'Cores': 123,
                    'InstanceType': 'string',
                    'InstanceFamily': 'string',
                    'Sockets': 123,
                    'TotalVCpus': 123
                },
                'HostReservationId': 'string',
                'Instances': [
                    {
                        'InstanceId': 'string',
                        'InstanceType': 'string',
                        'OwnerId': 'string'
                    },
                ],
                'State': 'available'|'under-assessment'|'permanent-failure'|'released'|'released-permanent-failure'|'pending',
                'AllocationTime': datetime(2015, 1, 1),
                'ReleaseTime': datetime(2015, 1, 1),
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'HostRecovery': 'on'|'off',
                'AllowsMultipleInstanceTypes': 'on'|'off',
                'OwnerId': 'string',
                'AvailabilityZoneId': 'string',
                'MemberOfServiceLinkedResourceGroup': True|False
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_iam_instance_profile_associations(AssociationIds=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes your IAM instance profile associations.
    See also: AWS API Documentation
    
    Examples
    This example describes the specified IAM instance profile association.
    Expected Output:
    
    :example: response = client.describe_iam_instance_profile_associations(
        AssociationIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type AssociationIds: list
    :param AssociationIds: The IAM instance profile associations.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: The filters.\n\ninstance-id - The ID of the instance.\nstate - The state of the association (associating | associated | disassociating ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token to request the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'IamInstanceProfileAssociations': [
        {
            'AssociationId': 'string',
            'InstanceId': 'string',
            'IamInstanceProfile': {
                'Arn': 'string',
                'Id': 'string'
            },
            'State': 'associating'|'associated'|'disassociating'|'disassociated',
            'Timestamp': datetime(2015, 1, 1)
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

IamInstanceProfileAssociations (list) --
Information about the IAM instance profile associations.

(dict) --
Describes an association between an IAM instance profile and an instance.

AssociationId (string) --
The ID of the association.

InstanceId (string) --
The ID of the instance.

IamInstanceProfile (dict) --
The IAM instance profile.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Id (string) --
The ID of the instance profile.



State (string) --
The state of the association.

Timestamp (datetime) --
The time the IAM instance profile was associated with the instance.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the specified IAM instance profile association.
response = client.describe_iam_instance_profile_associations(
    AssociationIds=[
        'iip-assoc-0db249b1f25fa24b8',
    ],
)

print(response)


Expected Output:
{
    'IamInstanceProfileAssociations': [
        {
            'AssociationId': 'iip-assoc-0db249b1f25fa24b8',
            'IamInstanceProfile': {
                'Arn': 'arn:aws:iam::123456789012:instance-profile/admin-role',
                'Id': 'AIPAJVQN4F5WVLGCJDRGM',
            },
            'InstanceId': 'i-09eb09efa73ec1dee',
            'State': 'associated',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'IamInstanceProfileAssociations': [
            {
                'AssociationId': 'string',
                'InstanceId': 'string',
                'IamInstanceProfile': {
                    'Arn': 'string',
                    'Id': 'string'
                },
                'State': 'associating'|'associated'|'disassociating'|'disassociated',
                'Timestamp': datetime(2015, 1, 1)
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_id_format(Resource=None):
    """
    Describes the ID format settings for your resources on a per-Region basis, for example, to view which resource types are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types.
    The following resource types support longer IDs: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .
    These settings apply to the IAM user who makes the request; they do not apply to the entire AWS account. By default, an IAM user defaults to the same settings as the root user, unless they explicitly override the settings by running the  ModifyIdFormat command. Resources created with longer IDs are visible to all IAM users, regardless of these settings and provided that they have permission to use the relevant Describe command for the resource type.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_id_format(
        Resource='string'
    )
    
    
    :type Resource: string
    :param Resource: The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway

    :rtype: dict
ReturnsResponse Syntax{
    'Statuses': [
        {
            'Deadline': datetime(2015, 1, 1),
            'Resource': 'string',
            'UseLongIds': True|False
        },
    ]
}


Response Structure

(dict) --
Statuses (list) --Information about the ID format for the resource.

(dict) --Describes the ID format for a resource.

Deadline (datetime) --The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.

Resource (string) --The type of resource.

UseLongIds (boolean) --Indicates whether longer IDs (17-character IDs) are enabled for the resource.











    :return: {
        'Statuses': [
            {
                'Deadline': datetime(2015, 1, 1),
                'Resource': 'string',
                'UseLongIds': True|False
            },
        ]
    }
    
    
    """
    pass

def describe_identity_id_format(PrincipalArn=None, Resource=None):
    """
    Describes the ID format settings for resources for the specified IAM user, IAM role, or root user. For example, you can view the resource types that are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types. For more information, see Resource IDs in the Amazon Elastic Compute Cloud User Guide .
    The following resource types support longer IDs: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .
    These settings apply to the principal specified in the request. They do not apply to the principal that makes the request.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_identity_id_format(
        PrincipalArn='string',
        Resource='string'
    )
    
    
    :type PrincipalArn: string
    :param PrincipalArn: [REQUIRED]\nThe ARN of the principal, which can be an IAM role, IAM user, or the root user.\n

    :type Resource: string
    :param Resource: The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway

    :rtype: dict

ReturnsResponse Syntax
{
    'Statuses': [
        {
            'Deadline': datetime(2015, 1, 1),
            'Resource': 'string',
            'UseLongIds': True|False
        },
    ]
}


Response Structure

(dict) --

Statuses (list) --
Information about the ID format for the resources.

(dict) --
Describes the ID format for a resource.

Deadline (datetime) --
The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.

Resource (string) --
The type of resource.

UseLongIds (boolean) --
Indicates whether longer IDs (17-character IDs) are enabled for the resource.












    :return: {
        'Statuses': [
            {
                'Deadline': datetime(2015, 1, 1),
                'Resource': 'string',
                'UseLongIds': True|False
            },
        ]
    }
    
    
    """
    pass

def describe_image_attribute(Attribute=None, ImageId=None, DryRun=None):
    """
    Describes the specified attribute of the specified AMI. You can specify only one attribute at a time.
    See also: AWS API Documentation
    
    Examples
    This example describes the launch permissions for the specified AMI.
    Expected Output:
    
    :example: response = client.describe_image_attribute(
        Attribute='description'|'kernel'|'ramdisk'|'launchPermission'|'productCodes'|'blockDeviceMapping'|'sriovNetSupport',
        ImageId='string',
        DryRun=True|False
    )
    
    
    :type Attribute: string
    :param Attribute: [REQUIRED]\nThe AMI attribute.\n\nNote : Depending on your account privileges, the blockDeviceMapping attribute may return a Client.AuthFailure error. If this happens, use DescribeImages to get information about the block device mapping for the AMI.\n

    :type ImageId: string
    :param ImageId: [REQUIRED]\nThe ID of the AMI.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'BlockDeviceMappings': [
        {
            'DeviceName': 'string',
            'VirtualName': 'string',
            'Ebs': {
                'DeleteOnTermination': True|False,
                'Iops': 123,
                'SnapshotId': 'string',
                'VolumeSize': 123,
                'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                'KmsKeyId': 'string',
                'Encrypted': True|False
            },
            'NoDevice': 'string'
        },
    ],
    'ImageId': 'string',
    'LaunchPermissions': [
        {
            'Group': 'all',
            'UserId': 'string'
        },
    ],
    'ProductCodes': [
        {
            'ProductCodeId': 'string',
            'ProductCodeType': 'devpay'|'marketplace'
        },
    ],
    'Description': {
        'Value': 'string'
    },
    'KernelId': {
        'Value': 'string'
    },
    'RamdiskId': {
        'Value': 'string'
    },
    'SriovNetSupport': {
        'Value': 'string'
    }
}


Response Structure

(dict) --
Describes an image attribute.

BlockDeviceMappings (list) --
The block device mapping entries.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name (for example, /dev/sdh or xvdh ).

VirtualName (string) --
The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.
NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.
Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.

Ebs (dict) --
Parameters used to automatically set up EBS volumes when the instance is launched.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.

SnapshotId (string) --
The ID of the snapshot.

VolumeSize (integer) --
The size of the volume, in GiB.
Default: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.
Constraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.

VolumeType (string) --
The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.
Default: gp2

KmsKeyId (string) --
Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.
This parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .

Encrypted (boolean) --
Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
In no case can you remove encryption from an encrypted volume.
Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .
This parameter is not returned by .



NoDevice (string) --
Suppresses the specified device included in the block device mapping of the AMI.





ImageId (string) --
The ID of the AMI.

LaunchPermissions (list) --
The launch permissions.

(dict) --
Describes a launch permission.

Group (string) --
The name of the group.

UserId (string) --
The AWS account ID.





ProductCodes (list) --
The product codes.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.





Description (dict) --
A description for the AMI.

Value (string) --
The attribute value. The value is case-sensitive.



KernelId (dict) --
The kernel ID.

Value (string) --
The attribute value. The value is case-sensitive.



RamdiskId (dict) --
The RAM disk ID.

Value (string) --
The attribute value. The value is case-sensitive.



SriovNetSupport (dict) --
Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.

Value (string) --
The attribute value. The value is case-sensitive.









Examples
This example describes the launch permissions for the specified AMI.
response = client.describe_image_attribute(
    Attribute='launchPermission',
    ImageId='ami-5731123e',
)

print(response)


Expected Output:
{
    'ImageId': 'ami-5731123e',
    'LaunchPermissions': [
        {
            'UserId': '123456789012',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'BlockDeviceMappings': [
            {
                'DeviceName': 'string',
                'VirtualName': 'string',
                'Ebs': {
                    'DeleteOnTermination': True|False,
                    'Iops': 123,
                    'SnapshotId': 'string',
                    'VolumeSize': 123,
                    'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                    'KmsKeyId': 'string',
                    'Encrypted': True|False
                },
                'NoDevice': 'string'
            },
        ],
        'ImageId': 'string',
        'LaunchPermissions': [
            {
                'Group': 'all',
                'UserId': 'string'
            },
        ],
        'ProductCodes': [
            {
                'ProductCodeId': 'string',
                'ProductCodeType': 'devpay'|'marketplace'
            },
        ],
        'Description': {
            'Value': 'string'
        },
        'KernelId': {
            'Value': 'string'
        },
        'RamdiskId': {
            'Value': 'string'
        },
        'SriovNetSupport': {
            'Value': 'string'
        }
    }
    
    
    """
    pass

def describe_images(ExecutableUsers=None, Filters=None, ImageIds=None, Owners=None, DryRun=None):
    """
    Describes the specified images (AMIs, AKIs, and ARIs) available to you or all of the images available to you.
    The images available to you include public images, private images that you own, and private images owned by other AWS accounts for which you have explicit launch permissions.
    Recently deregistered images appear in the returned results for a short interval and then return empty results. After all instances that reference a deregistered AMI are terminated, specifying the ID of the image results in an error indicating that the AMI ID cannot be found.
    See also: AWS API Documentation
    
    Examples
    This example describes the specified AMI.
    Expected Output:
    
    :example: response = client.describe_images(
        ExecutableUsers=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        ImageIds=[
            'string',
        ],
        Owners=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type ExecutableUsers: list
    :param ExecutableUsers: Scopes the images by users with explicit launch permissions. Specify an AWS account ID, self (the sender of the request), or all (public AMIs).\n\n(string) --\n\n

    :type Filters: list
    :param Filters: The filters.\n\narchitecture - The image architecture (i386 | x86_64 | arm64 ).\nblock-device-mapping.delete-on-termination - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.\nblock-device-mapping.device-name - The device name specified in the block device mapping (for example, /dev/sdh or xvdh ).\nblock-device-mapping.snapshot-id - The ID of the snapshot used for the EBS volume.\nblock-device-mapping.volume-size - The volume size of the EBS volume, in GiB.\nblock-device-mapping.volume-type - The volume type of the EBS volume (gp2 | io1 | st1 | sc1 | standard ).\nblock-device-mapping.encrypted - A Boolean that indicates whether the EBS volume is encrypted.\ndescription - The description of the image (provided during image creation).\nena-support - A Boolean that indicates whether enhanced networking with ENA is enabled.\nhypervisor - The hypervisor type (ovm | xen ).\nimage-id - The ID of the image.\nimage-type - The image type (machine | kernel | ramdisk ).\nis-public - A Boolean that indicates whether the image is public.\nkernel-id - The kernel ID.\nmanifest-location - The location of the image manifest.\nname - The name of the AMI (provided during image creation).\nowner-alias - String value from an Amazon-maintained list (amazon | aws-marketplace | microsoft ) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.\nowner-id - The AWS account ID of the image owner.\nplatform - The platform. To only list Windows-based AMIs, use windows .\nproduct-code - The product code.\nproduct-code.type - The type of the product code (devpay | marketplace ).\nramdisk-id - The RAM disk ID.\nroot-device-name - The device name of the root device volume (for example, /dev/sda1 ).\nroot-device-type - The type of the root device volume (ebs | instance-store ).\nstate - The state of the image (available | pending | failed ).\nstate-reason-code - The reason code for the state change.\nstate-reason-message - The message for the state change.\nsriov-net-support - A value of simple indicates that enhanced networking with the Intel 82599 VF interface is enabled.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvirtualization-type - The virtualization type (paravirtual | hvm ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type ImageIds: list
    :param ImageIds: The image IDs.\nDefault: Describes all images available to you.\n\n(string) --\n\n

    :type Owners: list
    :param Owners: Filters the images by the owner. Specify an AWS account ID, self (owner is the sender of the request), or an AWS owner alias (valid values are amazon | aws-marketplace | microsoft ). Omitting this option returns all images for which you have launch permissions, regardless of ownership.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Images': [
        {
            'Architecture': 'i386'|'x86_64'|'arm64',
            'CreationDate': 'string',
            'ImageId': 'string',
            'ImageLocation': 'string',
            'ImageType': 'machine'|'kernel'|'ramdisk',
            'Public': True|False,
            'KernelId': 'string',
            'OwnerId': 'string',
            'Platform': 'Windows',
            'PlatformDetails': 'string',
            'UsageOperation': 'string',
            'ProductCodes': [
                {
                    'ProductCodeId': 'string',
                    'ProductCodeType': 'devpay'|'marketplace'
                },
            ],
            'RamdiskId': 'string',
            'State': 'pending'|'available'|'invalid'|'deregistered'|'transient'|'failed'|'error',
            'BlockDeviceMappings': [
                {
                    'DeviceName': 'string',
                    'VirtualName': 'string',
                    'Ebs': {
                        'DeleteOnTermination': True|False,
                        'Iops': 123,
                        'SnapshotId': 'string',
                        'VolumeSize': 123,
                        'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                        'KmsKeyId': 'string',
                        'Encrypted': True|False
                    },
                    'NoDevice': 'string'
                },
            ],
            'Description': 'string',
            'EnaSupport': True|False,
            'Hypervisor': 'ovm'|'xen',
            'ImageOwnerAlias': 'string',
            'Name': 'string',
            'RootDeviceName': 'string',
            'RootDeviceType': 'ebs'|'instance-store',
            'SriovNetSupport': 'string',
            'StateReason': {
                'Code': 'string',
                'Message': 'string'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VirtualizationType': 'hvm'|'paravirtual'
        },
    ]
}


Response Structure

(dict) --

Images (list) --
Information about the images.

(dict) --
Describes an image.

Architecture (string) --
The architecture of the image.

CreationDate (string) --
The date and time the image was created.

ImageId (string) --
The ID of the AMI.

ImageLocation (string) --
The location of the AMI.

ImageType (string) --
The type of image.

Public (boolean) --
Indicates whether the image has public launch permissions. The value is true if this image has public launch permissions or false if it has only implicit and explicit launch permissions.

KernelId (string) --
The kernel associated with the image, if any. Only applicable for machine images.

OwnerId (string) --
The AWS account ID of the image owner.

Platform (string) --
This value is set to windows for Windows AMIs; otherwise, it is blank.

PlatformDetails (string) --
The platform details associated with the billing code of the AMI. For more information, see Obtaining Billing Information in the Amazon Elastic Compute Cloud User Guide .

UsageOperation (string) --
The operation of the Amazon EC2 instance and the billing code that is associated with the AMI. usageOperation corresponds to the lineitem/Operation column on your AWS Cost and Usage Report and in the AWS Price List API . For the list of UsageOperation codes, see Platform Details and Usage Operation Billing Codes in the Amazon Elastic Compute Cloud User Guide .

ProductCodes (list) --
Any product codes associated with the AMI.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.





RamdiskId (string) --
The RAM disk associated with the image, if any. Only applicable for machine images.

State (string) --
The current state of the AMI. If the state is available , the image is successfully registered and can be used to launch an instance.

BlockDeviceMappings (list) --
Any block device mapping entries.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name (for example, /dev/sdh or xvdh ).

VirtualName (string) --
The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.
NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.
Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.

Ebs (dict) --
Parameters used to automatically set up EBS volumes when the instance is launched.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.

SnapshotId (string) --
The ID of the snapshot.

VolumeSize (integer) --
The size of the volume, in GiB.
Default: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.
Constraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.

VolumeType (string) --
The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.
Default: gp2

KmsKeyId (string) --
Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.
This parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .

Encrypted (boolean) --
Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
In no case can you remove encryption from an encrypted volume.
Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .
This parameter is not returned by .



NoDevice (string) --
Suppresses the specified device included in the block device mapping of the AMI.





Description (string) --
The description of the AMI that was provided during image creation.

EnaSupport (boolean) --
Specifies whether enhanced networking with ENA is enabled.

Hypervisor (string) --
The hypervisor type of the image.

ImageOwnerAlias (string) --
The AWS account alias (for example, amazon , self ) or the AWS account ID of the AMI owner.

Name (string) --
The name of the AMI that was provided during image creation.

RootDeviceName (string) --
The device name of the root device volume (for example, /dev/sda1 ).

RootDeviceType (string) --
The type of root device used by the AMI. The AMI can use an EBS volume or an instance store volume.

SriovNetSupport (string) --
Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.

StateReason (dict) --
The reason for the state change.

Code (string) --
The reason code for the state change.

Message (string) --
The message for the state change.

Server.InsufficientInstanceCapacity : There was insufficient capacity available to satisfy the launch request.
Server.InternalError : An internal error caused the instance to terminate during launch.
Server.ScheduledStop : The instance was stopped due to a scheduled retirement.
Server.SpotInstanceShutdown : The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.
Server.SpotInstanceTermination : The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.
Client.InstanceInitiatedShutdown : The instance was shut down using the shutdown -h command from the instance.
Client.InstanceTerminated : The instance was terminated or rebooted during AMI creation.
Client.InternalError : A client error caused the instance to terminate during launch.
Client.InvalidSnapshot.NotFound : The specified snapshot was not found.
Client.UserInitiatedHibernate : Hibernation was initiated on the instance.
Client.UserInitiatedShutdown : The instance was shut down using the Amazon EC2 API.
Client.VolumeLimitExceeded : The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.




Tags (list) --
Any tags assigned to the image.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VirtualizationType (string) --
The type of virtualization of the AMI.











Examples
This example describes the specified AMI.
response = client.describe_images(
    ImageIds=[
        'ami-5731123e',
    ],
)

print(response)


Expected Output:
{
    'Images': [
        {
            'Architecture': 'x86_64',
            'BlockDeviceMappings': [
                {
                    'DeviceName': '/dev/sda1',
                    'Ebs': {
                        'DeleteOnTermination': True,
                        'SnapshotId': 'snap-1234567890abcdef0',
                        'VolumeSize': 8,
                        'VolumeType': 'standard',
                    },
                },
            ],
            'Description': 'An AMI for my server',
            'Hypervisor': 'xen',
            'ImageId': 'ami-5731123e',
            'ImageLocation': '123456789012/My server',
            'ImageType': 'machine',
            'KernelId': 'aki-88aa75e1',
            'Name': 'My server',
            'OwnerId': '123456789012',
            'Public': False,
            'RootDeviceName': '/dev/sda1',
            'RootDeviceType': 'ebs',
            'State': 'available',
            'VirtualizationType': 'paravirtual',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Images': [
            {
                'Architecture': 'i386'|'x86_64'|'arm64',
                'CreationDate': 'string',
                'ImageId': 'string',
                'ImageLocation': 'string',
                'ImageType': 'machine'|'kernel'|'ramdisk',
                'Public': True|False,
                'KernelId': 'string',
                'OwnerId': 'string',
                'Platform': 'Windows',
                'PlatformDetails': 'string',
                'UsageOperation': 'string',
                'ProductCodes': [
                    {
                        'ProductCodeId': 'string',
                        'ProductCodeType': 'devpay'|'marketplace'
                    },
                ],
                'RamdiskId': 'string',
                'State': 'pending'|'available'|'invalid'|'deregistered'|'transient'|'failed'|'error',
                'BlockDeviceMappings': [
                    {
                        'DeviceName': 'string',
                        'VirtualName': 'string',
                        'Ebs': {
                            'DeleteOnTermination': True|False,
                            'Iops': 123,
                            'SnapshotId': 'string',
                            'VolumeSize': 123,
                            'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                            'KmsKeyId': 'string',
                            'Encrypted': True|False
                        },
                        'NoDevice': 'string'
                    },
                ],
                'Description': 'string',
                'EnaSupport': True|False,
                'Hypervisor': 'ovm'|'xen',
                'ImageOwnerAlias': 'string',
                'Name': 'string',
                'RootDeviceName': 'string',
                'RootDeviceType': 'ebs'|'instance-store',
                'SriovNetSupport': 'string',
                'StateReason': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VirtualizationType': 'hvm'|'paravirtual'
            },
        ]
    }
    
    
    :returns: 
    Server.InsufficientInstanceCapacity : There was insufficient capacity available to satisfy the launch request.
    Server.InternalError : An internal error caused the instance to terminate during launch.
    Server.ScheduledStop : The instance was stopped due to a scheduled retirement.
    Server.SpotInstanceShutdown : The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.
    Server.SpotInstanceTermination : The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.
    Client.InstanceInitiatedShutdown : The instance was shut down using the shutdown -h command from the instance.
    Client.InstanceTerminated : The instance was terminated or rebooted during AMI creation.
    Client.InternalError : A client error caused the instance to terminate during launch.
    Client.InvalidSnapshot.NotFound : The specified snapshot was not found.
    Client.UserInitiatedHibernate : Hibernation was initiated on the instance.
    Client.UserInitiatedShutdown : The instance was shut down using the Amazon EC2 API.
    Client.VolumeLimitExceeded : The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.
    
    """
    pass

def describe_import_image_tasks(DryRun=None, Filters=None, ImportTaskIds=None, MaxResults=None, NextToken=None):
    """
    Displays details about an import virtual machine or import snapshot tasks that are already created.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_import_image_tasks(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        ImportTaskIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: Filter tasks using the task-state filter and one of the following values: active , completed , deleting , or deleted .\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type ImportTaskIds: list
    :param ImportTaskIds: The IDs of the import image tasks.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call.

    :type NextToken: string
    :param NextToken: A token that indicates the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'ImportImageTasks': [
        {
            'Architecture': 'string',
            'Description': 'string',
            'Encrypted': True|False,
            'Hypervisor': 'string',
            'ImageId': 'string',
            'ImportTaskId': 'string',
            'KmsKeyId': 'string',
            'LicenseType': 'string',
            'Platform': 'string',
            'Progress': 'string',
            'SnapshotDetails': [
                {
                    'Description': 'string',
                    'DeviceName': 'string',
                    'DiskImageSize': 123.0,
                    'Format': 'string',
                    'Progress': 'string',
                    'SnapshotId': 'string',
                    'Status': 'string',
                    'StatusMessage': 'string',
                    'Url': 'string',
                    'UserBucket': {
                        'S3Bucket': 'string',
                        'S3Key': 'string'
                    }
                },
            ],
            'Status': 'string',
            'StatusMessage': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'LicenseSpecifications': [
                {
                    'LicenseConfigurationArn': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

ImportImageTasks (list) --
A list of zero or more import image tasks that are currently active or were completed or canceled in the previous 7 days.

(dict) --
Describes an import image task.

Architecture (string) --
The architecture of the virtual machine.
Valid values: i386 | x86_64 | arm64

Description (string) --
A description of the import task.

Encrypted (boolean) --
Indicates whether the image is encrypted.

Hypervisor (string) --
The target hypervisor for the import task.
Valid values: xen

ImageId (string) --
The ID of the Amazon Machine Image (AMI) of the imported virtual machine.

ImportTaskId (string) --
The ID of the import image task.

KmsKeyId (string) --
The identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to create the encrypted image.

LicenseType (string) --
The license type of the virtual machine.

Platform (string) --
The description string for the import image task.

Progress (string) --
The percentage of progress of the import image task.

SnapshotDetails (list) --
Information about the snapshots.

(dict) --
Describes the snapshot created from the imported disk.

Description (string) --
A description for the snapshot.

DeviceName (string) --
The block device mapping for the snapshot.

DiskImageSize (float) --
The size of the disk in the snapshot, in GiB.

Format (string) --
The format of the disk image from which the snapshot is created.

Progress (string) --
The percentage of progress for the task.

SnapshotId (string) --
The snapshot ID of the disk being imported.

Status (string) --
A brief status of the snapshot creation.

StatusMessage (string) --
A detailed status message for the snapshot creation.

Url (string) --
The URL used to access the disk image.

UserBucket (dict) --
The S3 bucket for the disk image.

S3Bucket (string) --
The S3 bucket from which the disk image was created.

S3Key (string) --
The file name of the disk image.







Status (string) --
A brief status for the import image task.

StatusMessage (string) --
A descriptive status message for the import image task.

Tags (list) --
The tags for the import image task.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





LicenseSpecifications (list) --
The ARNs of the license configurations that are associated with the import image task.

(dict) --
The response information for license configurations.

LicenseConfigurationArn (string) --
The ARN of a license configuration.









NextToken (string) --
The token to use to get the next page of results. This value is null when there are no more results to return.








    :return: {
        'ImportImageTasks': [
            {
                'Architecture': 'string',
                'Description': 'string',
                'Encrypted': True|False,
                'Hypervisor': 'string',
                'ImageId': 'string',
                'ImportTaskId': 'string',
                'KmsKeyId': 'string',
                'LicenseType': 'string',
                'Platform': 'string',
                'Progress': 'string',
                'SnapshotDetails': [
                    {
                        'Description': 'string',
                        'DeviceName': 'string',
                        'DiskImageSize': 123.0,
                        'Format': 'string',
                        'Progress': 'string',
                        'SnapshotId': 'string',
                        'Status': 'string',
                        'StatusMessage': 'string',
                        'Url': 'string',
                        'UserBucket': {
                            'S3Bucket': 'string',
                            'S3Key': 'string'
                        }
                    },
                ],
                'Status': 'string',
                'StatusMessage': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'LicenseSpecifications': [
                    {
                        'LicenseConfigurationArn': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_import_snapshot_tasks(DryRun=None, Filters=None, ImportTaskIds=None, MaxResults=None, NextToken=None):
    """
    Describes your import snapshot tasks.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_import_snapshot_tasks(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        ImportTaskIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: The filters.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type ImportTaskIds: list
    :param ImportTaskIds: A list of import snapshot task IDs.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: A token that indicates the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'ImportSnapshotTasks': [
        {
            'Description': 'string',
            'ImportTaskId': 'string',
            'SnapshotTaskDetail': {
                'Description': 'string',
                'DiskImageSize': 123.0,
                'Encrypted': True|False,
                'Format': 'string',
                'KmsKeyId': 'string',
                'Progress': 'string',
                'SnapshotId': 'string',
                'Status': 'string',
                'StatusMessage': 'string',
                'Url': 'string',
                'UserBucket': {
                    'S3Bucket': 'string',
                    'S3Key': 'string'
                }
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

ImportSnapshotTasks (list) --
A list of zero or more import snapshot tasks that are currently active or were completed or canceled in the previous 7 days.

(dict) --
Describes an import snapshot task.

Description (string) --
A description of the import snapshot task.

ImportTaskId (string) --
The ID of the import snapshot task.

SnapshotTaskDetail (dict) --
Describes an import snapshot task.

Description (string) --
The description of the snapshot.

DiskImageSize (float) --
The size of the disk in the snapshot, in GiB.

Encrypted (boolean) --
Indicates whether the snapshot is encrypted.

Format (string) --
The format of the disk image from which the snapshot is created.

KmsKeyId (string) --
The identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to create the encrypted snapshot.

Progress (string) --
The percentage of completion for the import snapshot task.

SnapshotId (string) --
The snapshot ID of the disk being imported.

Status (string) --
A brief status for the import snapshot task.

StatusMessage (string) --
A detailed status message for the import snapshot task.

Url (string) --
The URL of the disk image from which the snapshot is created.

UserBucket (dict) --
The S3 bucket for the disk image.

S3Bucket (string) --
The S3 bucket from which the disk image was created.

S3Key (string) --
The file name of the disk image.





Tags (list) --
The tags for the import snapshot task.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to get the next page of results. This value is null when there are no more results to return.








    :return: {
        'ImportSnapshotTasks': [
            {
                'Description': 'string',
                'ImportTaskId': 'string',
                'SnapshotTaskDetail': {
                    'Description': 'string',
                    'DiskImageSize': 123.0,
                    'Encrypted': True|False,
                    'Format': 'string',
                    'KmsKeyId': 'string',
                    'Progress': 'string',
                    'SnapshotId': 'string',
                    'Status': 'string',
                    'StatusMessage': 'string',
                    'Url': 'string',
                    'UserBucket': {
                        'S3Bucket': 'string',
                        'S3Key': 'string'
                    }
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_instance_attribute(Attribute=None, DryRun=None, InstanceId=None):
    """
    Describes the specified attribute of the specified instance. You can specify only one attribute at a time. Valid attribute values are: instanceType | kernel | ramdisk | userData | disableApiTermination | instanceInitiatedShutdownBehavior | rootDeviceName | blockDeviceMapping | productCodes | sourceDestCheck | groupSet | ebsOptimized | sriovNetSupport
    See also: AWS API Documentation
    
    Examples
    This example describes the instance type of the specified instance.
    Expected Output:
    This example describes the disableApiTermination attribute of the specified instance.
    Expected Output:
    This example describes the blockDeviceMapping attribute of the specified instance.
    Expected Output:
    
    :example: response = client.describe_instance_attribute(
        Attribute='instanceType'|'kernel'|'ramdisk'|'userData'|'disableApiTermination'|'instanceInitiatedShutdownBehavior'|'rootDeviceName'|'blockDeviceMapping'|'productCodes'|'sourceDestCheck'|'groupSet'|'ebsOptimized'|'sriovNetSupport'|'enaSupport',
        DryRun=True|False,
        InstanceId='string'
    )
    
    
    :type Attribute: string
    :param Attribute: [REQUIRED]\nThe instance attribute.\nNote: The enaSupport attribute is not supported at this time.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Groups': [
        {
            'GroupName': 'string',
            'GroupId': 'string'
        },
    ],
    'BlockDeviceMappings': [
        {
            'DeviceName': 'string',
            'Ebs': {
                'AttachTime': datetime(2015, 1, 1),
                'DeleteOnTermination': True|False,
                'Status': 'attaching'|'attached'|'detaching'|'detached',
                'VolumeId': 'string'
            }
        },
    ],
    'DisableApiTermination': {
        'Value': True|False
    },
    'EnaSupport': {
        'Value': True|False
    },
    'EbsOptimized': {
        'Value': True|False
    },
    'InstanceId': 'string',
    'InstanceInitiatedShutdownBehavior': {
        'Value': 'string'
    },
    'InstanceType': {
        'Value': 'string'
    },
    'KernelId': {
        'Value': 'string'
    },
    'ProductCodes': [
        {
            'ProductCodeId': 'string',
            'ProductCodeType': 'devpay'|'marketplace'
        },
    ],
    'RamdiskId': {
        'Value': 'string'
    },
    'RootDeviceName': {
        'Value': 'string'
    },
    'SourceDestCheck': {
        'Value': True|False
    },
    'SriovNetSupport': {
        'Value': 'string'
    },
    'UserData': {
        'Value': 'string'
    }
}


Response Structure

(dict) --
Describes an instance attribute.

Groups (list) --
The security groups associated with the instance.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





BlockDeviceMappings (list) --
The block device mapping of the instance.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name (for example, /dev/sdh or xvdh ).

Ebs (dict) --
Parameters used to automatically set up EBS volumes when the instance is launched.

AttachTime (datetime) --
The time stamp when the attachment initiated.

DeleteOnTermination (boolean) --
Indicates whether the volume is deleted on instance termination.

Status (string) --
The attachment state.

VolumeId (string) --
The ID of the EBS volume.







DisableApiTermination (dict) --
If the value is true , you can\'t terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.

Value (boolean) --
The attribute value. The valid values are true or false .



EnaSupport (dict) --
Indicates whether enhanced networking with ENA is enabled.

Value (boolean) --
The attribute value. The valid values are true or false .



EbsOptimized (dict) --
Indicates whether the instance is optimized for Amazon EBS I/O.

Value (boolean) --
The attribute value. The valid values are true or false .



InstanceId (string) --
The ID of the instance.

InstanceInitiatedShutdownBehavior (dict) --
Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).

Value (string) --
The attribute value. The value is case-sensitive.



InstanceType (dict) --
The instance type.

Value (string) --
The attribute value. The value is case-sensitive.



KernelId (dict) --
The kernel ID.

Value (string) --
The attribute value. The value is case-sensitive.



ProductCodes (list) --
A list of product codes.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.





RamdiskId (dict) --
The RAM disk ID.

Value (string) --
The attribute value. The value is case-sensitive.



RootDeviceName (dict) --
The device name of the root device volume (for example, /dev/sda1 ).

Value (string) --
The attribute value. The value is case-sensitive.



SourceDestCheck (dict) --
Indicates whether source/destination checking is enabled. A value of true means that checking is enabled, and false means that checking is disabled. This value must be false for a NAT instance to perform NAT.

Value (boolean) --
The attribute value. The valid values are true or false .



SriovNetSupport (dict) --
Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.

Value (string) --
The attribute value. The value is case-sensitive.



UserData (dict) --
The user data.

Value (string) --
The attribute value. The value is case-sensitive.









Examples
This example describes the instance type of the specified instance.
response = client.describe_instance_attribute(
    Attribute='instanceType',
    InstanceId='i-1234567890abcdef0',
)

print(response)


Expected Output:
{
    'InstanceId': 'i-1234567890abcdef0',
    'InstanceType': {
        'Value': 't1.micro',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the disableApiTermination attribute of the specified instance.
response = client.describe_instance_attribute(
    Attribute='disableApiTermination',
    InstanceId='i-1234567890abcdef0',
)

print(response)


Expected Output:
{
    'DisableApiTermination': {
        'Value': 'false',
    },
    'InstanceId': 'i-1234567890abcdef0',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the blockDeviceMapping attribute of the specified instance.
response = client.describe_instance_attribute(
    Attribute='blockDeviceMapping',
    InstanceId='i-1234567890abcdef0',
)

print(response)


Expected Output:
{
    'BlockDeviceMappings': [
        {
            'DeviceName': '/dev/sda1',
            'Ebs': {
                'AttachTime': datetime(2013, 5, 17, 22, 42, 34, 4, 137, 0),
                'DeleteOnTermination': True,
                'Status': 'attached',
                'VolumeId': 'vol-049df61146c4d7901',
            },
        },
        {
            'DeviceName': '/dev/sdf',
            'Ebs': {
                'AttachTime': datetime(2013, 9, 10, 23, 7, 0, 1, 253, 0),
                'DeleteOnTermination': False,
                'Status': 'attached',
                'VolumeId': 'vol-049df61146c4d7901',
            },
        },
    ],
    'InstanceId': 'i-1234567890abcdef0',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Groups': [
            {
                'GroupName': 'string',
                'GroupId': 'string'
            },
        ],
        'BlockDeviceMappings': [
            {
                'DeviceName': 'string',
                'Ebs': {
                    'AttachTime': datetime(2015, 1, 1),
                    'DeleteOnTermination': True|False,
                    'Status': 'attaching'|'attached'|'detaching'|'detached',
                    'VolumeId': 'string'
                }
            },
        ],
        'DisableApiTermination': {
            'Value': True|False
        },
        'EnaSupport': {
            'Value': True|False
        },
        'EbsOptimized': {
            'Value': True|False
        },
        'InstanceId': 'string',
        'InstanceInitiatedShutdownBehavior': {
            'Value': 'string'
        },
        'InstanceType': {
            'Value': 'string'
        },
        'KernelId': {
            'Value': 'string'
        },
        'ProductCodes': [
            {
                'ProductCodeId': 'string',
                'ProductCodeType': 'devpay'|'marketplace'
            },
        ],
        'RamdiskId': {
            'Value': 'string'
        },
        'RootDeviceName': {
            'Value': 'string'
        },
        'SourceDestCheck': {
            'Value': True|False
        },
        'SriovNetSupport': {
            'Value': 'string'
        },
        'UserData': {
            'Value': 'string'
        }
    }
    
    
    """
    pass

def describe_instance_credit_specifications(DryRun=None, Filters=None, InstanceIds=None, MaxResults=None, NextToken=None):
    """
    Describes the credit option for CPU usage of the specified burstable performance instances. The credit options are standard and unlimited .
    If you do not specify an instance ID, Amazon EC2 returns burstable performance instances with the unlimited credit option, as well as instances that were previously configured as T2, T3, and T3a with the unlimited credit option. For example, if you resize a T2 instance, while it is configured as unlimited , to an M4 instance, Amazon EC2 returns the M4 instance.
    If you specify one or more instance IDs, Amazon EC2 returns the credit option (standard or unlimited ) of those instances. If you specify an instance ID that is not valid, such as an instance that is not a burstable performance instance, an error is returned.
    Recently terminated instances might appear in the returned results. This interval is usually less than one hour.
    If an Availability Zone is experiencing a service disruption and you specify instance IDs in the affected zone, or do not specify any instance IDs at all, the call fails. If you specify only instance IDs in an unaffected zone, the call works normally.
    For more information, see Burstable Performance Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_instance_credit_specifications(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        InstanceIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: The filters.\n\ninstance-id - The ID of the instance.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type InstanceIds: list
    :param InstanceIds: The instance IDs.\nDefault: Describes all your instances.\nConstraints: Maximum 1000 explicitly specified instance IDs.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceCreditSpecifications': [
        {
            'InstanceId': 'string',
            'CpuCredits': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

InstanceCreditSpecifications (list) --
Information about the credit option for CPU usage of an instance.

(dict) --
Describes the credit option for CPU usage of a burstable performance instance.

InstanceId (string) --
The ID of the instance.

CpuCredits (string) --
The credit option for CPU usage of the instance. Valid values are standard and unlimited .





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'InstanceCreditSpecifications': [
            {
                'InstanceId': 'string',
                'CpuCredits': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_instance_event_notification_attributes(DryRun=None):
    """
    Describes the tag keys that are registered to appear in scheduled event notifications for resources in the current Region.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_instance_event_notification_attributes(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'InstanceTagAttribute': {
        'InstanceTagKeys': [
            'string',
        ],
        'IncludeAllTagsOfInstance': True|False
    }
}


Response Structure

(dict) --
InstanceTagAttribute (dict) --Information about the registered tag keys.

InstanceTagKeys (list) --The registered tag keys.

(string) --


IncludeAllTagsOfInstance (boolean) --Indicates wheter all tag keys in the current Region are registered to appear in scheduled event notifications. true indicates that all tag keys in the current Region are registered.









    :return: {
        'InstanceTagAttribute': {
            'InstanceTagKeys': [
                'string',
            ],
            'IncludeAllTagsOfInstance': True|False
        }
    }
    
    
    """
    pass

def describe_instance_status(Filters=None, InstanceIds=None, MaxResults=None, NextToken=None, DryRun=None, IncludeAllInstances=None):
    """
    Describes the status of the specified instances or all of your instances. By default, only running instances are described, unless you specifically indicate to return the status of all instances.
    Instance status includes the following components:
    See also: AWS API Documentation
    
    Examples
    This example describes the current status of the specified instance.
    Expected Output:
    
    :example: response = client.describe_instance_status(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        InstanceIds=[
            'string',
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False,
        IncludeAllInstances=True|False
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\navailability-zone - The Availability Zone of the instance.\nevent.code - The code for the scheduled event (instance-reboot | system-reboot | system-maintenance | instance-retirement | instance-stop ).\nevent.description - A description of the event.\nevent.instance-event-id - The ID of the event whose date and time you are modifying.\nevent.not-after - The latest end time for the scheduled event (for example, 2014-09-15T17:15:20.000Z ).\nevent.not-before - The earliest start time for the scheduled event (for example, 2014-09-15T17:15:20.000Z ).\nevent.not-before-deadline - The deadline for starting the event (for example, 2014-09-15T17:15:20.000Z ).\ninstance-state-code - The code for the instance state, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).\ninstance-state-name - The state of the instance (pending | running | shutting-down | terminated | stopping | stopped ).\ninstance-status.reachability - Filters on instance status where the name is reachability (passed | failed | initializing | insufficient-data ).\ninstance-status.status - The status of the instance (ok | impaired | initializing | insufficient-data | not-applicable ).\nsystem-status.reachability - Filters on system status where the name is reachability (passed | failed | initializing | insufficient-data ).\nsystem-status.status - The system status of the instance (ok | impaired | initializing | insufficient-data | not-applicable ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type InstanceIds: list
    :param InstanceIds: The instance IDs.\nDefault: Describes all your instances.\nConstraints: Maximum 100 explicitly specified instance IDs.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type IncludeAllInstances: boolean
    :param IncludeAllInstances: When true , includes the health status for all instances. When false , includes the health status for running instances only.\nDefault: false\n

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceStatuses': [
        {
            'AvailabilityZone': 'string',
            'OutpostArn': 'string',
            'Events': [
                {
                    'InstanceEventId': 'string',
                    'Code': 'instance-reboot'|'system-reboot'|'system-maintenance'|'instance-retirement'|'instance-stop',
                    'Description': 'string',
                    'NotAfter': datetime(2015, 1, 1),
                    'NotBefore': datetime(2015, 1, 1),
                    'NotBeforeDeadline': datetime(2015, 1, 1)
                },
            ],
            'InstanceId': 'string',
            'InstanceState': {
                'Code': 123,
                'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
            },
            'InstanceStatus': {
                'Details': [
                    {
                        'ImpairedSince': datetime(2015, 1, 1),
                        'Name': 'reachability',
                        'Status': 'passed'|'failed'|'insufficient-data'|'initializing'
                    },
                ],
                'Status': 'ok'|'impaired'|'insufficient-data'|'not-applicable'|'initializing'
            },
            'SystemStatus': {
                'Details': [
                    {
                        'ImpairedSince': datetime(2015, 1, 1),
                        'Name': 'reachability',
                        'Status': 'passed'|'failed'|'insufficient-data'|'initializing'
                    },
                ],
                'Status': 'ok'|'impaired'|'insufficient-data'|'not-applicable'|'initializing'
            }
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

InstanceStatuses (list) --
Information about the status of the instances.

(dict) --
Describes the status of an instance.

AvailabilityZone (string) --
The Availability Zone of the instance.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

Events (list) --
Any scheduled events associated with the instance.

(dict) --
Describes a scheduled event for an instance.

InstanceEventId (string) --
The ID of the event.

Code (string) --
The event code.

Description (string) --
A description of the event.
After a scheduled event is completed, it can still be described for up to a week. If the event has been completed, this description starts with the following text: [Completed].

NotAfter (datetime) --
The latest scheduled end time for the event.

NotBefore (datetime) --
The earliest scheduled start time for the event.

NotBeforeDeadline (datetime) --
The deadline for starting the event.





InstanceId (string) --
The ID of the instance.

InstanceState (dict) --
The intended state of the instance.  DescribeInstanceStatus requires that an instance be in the running state.

Code (integer) --
The state of the instance as a 16-bit unsigned integer.
The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.
The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
The valid values for instance-state-code will all be in the range of the low byte and they are:

0 : pending
16 : running
32 : shutting-down
48 : terminated
64 : stopping
80 : stopped

You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.

Name (string) --
The current state of the instance.



InstanceStatus (dict) --
Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.

Details (list) --
The system instance health or application instance health.

(dict) --
Describes the instance status.

ImpairedSince (datetime) --
The time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.

Name (string) --
The type of instance status.

Status (string) --
The status.





Status (string) --
The status.



SystemStatus (dict) --
Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.

Details (list) --
The system instance health or application instance health.

(dict) --
Describes the instance status.

ImpairedSince (datetime) --
The time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.

Name (string) --
The type of instance status.

Status (string) --
The status.





Status (string) --
The status.







NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the current status of the specified instance.
response = client.describe_instance_status(
    InstanceIds=[
        'i-1234567890abcdef0',
    ],
)

print(response)


Expected Output:
{
    'InstanceStatuses': [
        {
            'AvailabilityZone': 'us-east-1d',
            'InstanceId': 'i-1234567890abcdef0',
            'InstanceState': {
                'Code': 16,
                'Name': 'running',
            },
            'InstanceStatus': {
                'Details': [
                    {
                        'Name': 'reachability',
                        'Status': 'passed',
                    },
                ],
                'Status': 'ok',
            },
            'SystemStatus': {
                'Details': [
                    {
                        'Name': 'reachability',
                        'Status': 'passed',
                    },
                ],
                'Status': 'ok',
            },
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'InstanceStatuses': [
            {
                'AvailabilityZone': 'string',
                'OutpostArn': 'string',
                'Events': [
                    {
                        'InstanceEventId': 'string',
                        'Code': 'instance-reboot'|'system-reboot'|'system-maintenance'|'instance-retirement'|'instance-stop',
                        'Description': 'string',
                        'NotAfter': datetime(2015, 1, 1),
                        'NotBefore': datetime(2015, 1, 1),
                        'NotBeforeDeadline': datetime(2015, 1, 1)
                    },
                ],
                'InstanceId': 'string',
                'InstanceState': {
                    'Code': 123,
                    'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                },
                'InstanceStatus': {
                    'Details': [
                        {
                            'ImpairedSince': datetime(2015, 1, 1),
                            'Name': 'reachability',
                            'Status': 'passed'|'failed'|'insufficient-data'|'initializing'
                        },
                    ],
                    'Status': 'ok'|'impaired'|'insufficient-data'|'not-applicable'|'initializing'
                },
                'SystemStatus': {
                    'Details': [
                        {
                            'ImpairedSince': datetime(2015, 1, 1),
                            'Name': 'reachability',
                            'Status': 'passed'|'failed'|'insufficient-data'|'initializing'
                        },
                    ],
                    'Status': 'ok'|'impaired'|'insufficient-data'|'not-applicable'|'initializing'
                }
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    Filters (list) -- The filters.
    
    availability-zone - The Availability Zone of the instance.
    event.code - The code for the scheduled event (instance-reboot | system-reboot | system-maintenance | instance-retirement | instance-stop ).
    event.description - A description of the event.
    event.instance-event-id - The ID of the event whose date and time you are modifying.
    event.not-after - The latest end time for the scheduled event (for example, 2014-09-15T17:15:20.000Z ).
    event.not-before - The earliest start time for the scheduled event (for example, 2014-09-15T17:15:20.000Z ).
    event.not-before-deadline - The deadline for starting the event (for example, 2014-09-15T17:15:20.000Z ).
    instance-state-code - The code for the instance state, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).
    instance-state-name - The state of the instance (pending | running | shutting-down | terminated | stopping | stopped ).
    instance-status.reachability - Filters on instance status where the name is reachability (passed | failed | initializing | insufficient-data ).
    instance-status.status - The status of the instance (ok | impaired | initializing | insufficient-data | not-applicable ).
    system-status.reachability - Filters on system status where the name is reachability (passed | failed | initializing | insufficient-data ).
    system-status.status - The system status of the instance (ok | impaired | initializing | insufficient-data | not-applicable ).
    
    
    (dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:
    
    DescribeAvailabilityZones
    DescribeImages
    DescribeInstances
    DescribeKeyPairs
    DescribeSecurityGroups
    DescribeSnapshots
    DescribeSubnets
    DescribeTags
    DescribeVolumes
    DescribeVpcs
    
    
    Name (string) --The name of the filter. Filter names are case-sensitive.
    
    Values (list) --The filter values. Filter values are case-sensitive.
    
    (string) --
    
    
    
    
    
    
    InstanceIds (list) -- The instance IDs.
    Default: Describes all your instances.
    Constraints: Maximum 100 explicitly specified instance IDs.
    
    (string) --
    
    
    MaxResults (integer) -- The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.
    NextToken (string) -- The token to retrieve the next page of results.
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    IncludeAllInstances (boolean) -- When true , includes the health status for all instances. When false , includes the health status for running instances only.
    Default: false
    
    
    """
    pass

def describe_instance_type_offerings(DryRun=None, LocationType=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Returns a list of all instance types offered. The results can be filtered by location (Region or Availability Zone). If no location is specified, the instance types offered in the current Region are returned.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_instance_type_offerings(
        DryRun=True|False,
        LocationType='region'|'availability-zone'|'availability-zone-id',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type LocationType: string
    :param LocationType: The location type.

    :type Filters: list
    :param Filters: One or more filters. Filter names and values are case-sensitive.\n\nlocation - This depends on the location type. For example, if the location type is region (default), the location is the Region code (for example, us-east-2 .)\ninstance-type - The instance type.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceTypeOfferings': [
        {
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'LocationType': 'region'|'availability-zone'|'availability-zone-id',
            'Location': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

InstanceTypeOfferings (list) --
The instance types offered.

(dict) --
The instance types offered.

InstanceType (string) --
The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .

LocationType (string) --
The location type.

Location (string) --
The identifier for the location. This depends on the location type. For example, if the location type is region , the location is the Region code (for example, us-east-2 .)





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'InstanceTypeOfferings': [
            {
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'LocationType': 'region'|'availability-zone'|'availability-zone-id',
                'Location': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_instance_types(DryRun=None, InstanceTypes=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes the details of the instance types that are offered in a location. The results can be filtered by the attributes of the instance types.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_instance_types(
        DryRun=True|False,
        InstanceTypes=[
            't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceTypes: list
    :param InstanceTypes: The instance types. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters. Filter names and values are case-sensitive.\n\nauto-recovery-supported - Indicates whether auto recovery is supported. (true | false )\nbare-metal - Indicates whether it is a bare metal instance type. (true | false )\nburstable-performance-supported - Indicates whether it is a burstable performance instance type. (true | false )\ncurrent-generation - Indicates whether this instance type is the latest generation instance type of an instance family. (true | false )\nebs-info.ebs-optimized-info.baseline-bandwidth-in-mbps - The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.\nebs-info.ebs-optimized-info.baseline-throughput-in-mbps - The baseline throughput performance for an EBS-optimized instance type, in MBps.\nebs-info.ebs-optimized-info.baseline-iops - The baseline input/output storage operations per second for an EBS-optimized instance type.\nebs-info.ebs-optimized-info.maximum-bandwidth-in-mbps - The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.\nebs-info.ebs-optimized-info.maximum-throughput-in-mbps - The maximum throughput performance for an EBS-optimized instance type, in MBps.\nebs-info.ebs-optimized-info.maximum-iops - The maximum input/output storage operations per second for an EBS-optimized instance type.\nebs-info.ebs-optimized-support - Indicates whether the instance type is EBS-optimized. (supported | unsupported | default )\nebs-info.encryption-support - Indicates whether EBS encryption is supported. (supported | unsupported )\nfree-tier-eligible - Indicates whether the instance type is eligible to use in the free tier. (true | false )\nhibernation-supported - Indicates whether On-Demand hibernation is supported. (true | false )\nhypervisor - The hypervisor used. (nitro | xen )\ninstance-storage-info.disk.count - The number of local disks.\ninstance-storage-info.disk.size-in-gb - The storage size of each instance storage disk, in GB.\ninstance-storage-info.disk.type - The storage technology for the local instance storage disks. (hdd | ssd )\ninstance-storage-info.total-size-in-gb - The total amount of storage available from all local instance storage, in GB.\ninstance-storage-supported - Indicates whether the instance type has local instance storage. (true | false )\nmemory-info.size-in-mib - The memory size.\nnetwork-info.ena-support - Indicates whether Elastic Network Adapter (ENA) is supported or required. (required | supported | unsupported )\nnetwork-info.efa-supported - Indicates whether the instance type supports Elastic Fabric Adapter (EFA). (true | false )\nnetwork-info.ipv4-addresses-per-interface - The maximum number of private IPv4 addresses per network interface.\nnetwork-info.ipv6-addresses-per-interface - The maximum number of private IPv6 addresses per network interface.\nnetwork-info.ipv6-supported - Indicates whether the instance type supports IPv6. (true | false )\nnetwork-info.maximum-network-interfaces - The maximum number of network interfaces per instance.\nnetwork-info.network-performance - Describes the network performance.\nprocessor-info.sustained-clock-speed-in-ghz - The CPU clock speed, in GHz.\nvcpu-info.default-cores - The default number of cores for the instance type.\nvcpu-info.default-threads-per-core - The default number of threads per core for the instance type.\nvcpu-info.default-vcpus - The default number of vCPUs for the instance type.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceTypes': [
        {
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'CurrentGeneration': True|False,
            'FreeTierEligible': True|False,
            'SupportedUsageClasses': [
                'spot'|'on-demand',
            ],
            'SupportedRootDeviceTypes': [
                'ebs'|'instance-store',
            ],
            'SupportedVirtualizationTypes': [
                'hvm'|'paravirtual',
            ],
            'BareMetal': True|False,
            'Hypervisor': 'nitro'|'xen',
            'ProcessorInfo': {
                'SupportedArchitectures': [
                    'i386'|'x86_64'|'arm64',
                ],
                'SustainedClockSpeedInGhz': 123.0
            },
            'VCpuInfo': {
                'DefaultVCpus': 123,
                'DefaultCores': 123,
                'DefaultThreadsPerCore': 123,
                'ValidCores': [
                    123,
                ],
                'ValidThreadsPerCore': [
                    123,
                ]
            },
            'MemoryInfo': {
                'SizeInMiB': 123
            },
            'InstanceStorageSupported': True|False,
            'InstanceStorageInfo': {
                'TotalSizeInGB': 123,
                'Disks': [
                    {
                        'SizeInGB': 123,
                        'Count': 123,
                        'Type': 'hdd'|'ssd'
                    },
                ]
            },
            'EbsInfo': {
                'EbsOptimizedSupport': 'unsupported'|'supported'|'default',
                'EncryptionSupport': 'unsupported'|'supported',
                'EbsOptimizedInfo': {
                    'BaselineBandwidthInMbps': 123,
                    'BaselineThroughputInMBps': 123.0,
                    'BaselineIops': 123,
                    'MaximumBandwidthInMbps': 123,
                    'MaximumThroughputInMBps': 123.0,
                    'MaximumIops': 123
                }
            },
            'NetworkInfo': {
                'NetworkPerformance': 'string',
                'MaximumNetworkInterfaces': 123,
                'Ipv4AddressesPerInterface': 123,
                'Ipv6AddressesPerInterface': 123,
                'Ipv6Supported': True|False,
                'EnaSupport': 'unsupported'|'supported'|'required',
                'EfaSupported': True|False
            },
            'GpuInfo': {
                'Gpus': [
                    {
                        'Name': 'string',
                        'Manufacturer': 'string',
                        'Count': 123,
                        'MemoryInfo': {
                            'SizeInMiB': 123
                        }
                    },
                ],
                'TotalGpuMemoryInMiB': 123
            },
            'FpgaInfo': {
                'Fpgas': [
                    {
                        'Name': 'string',
                        'Manufacturer': 'string',
                        'Count': 123,
                        'MemoryInfo': {
                            'SizeInMiB': 123
                        }
                    },
                ],
                'TotalFpgaMemoryInMiB': 123
            },
            'PlacementGroupInfo': {
                'SupportedStrategies': [
                    'cluster'|'partition'|'spread',
                ]
            },
            'InferenceAcceleratorInfo': {
                'Accelerators': [
                    {
                        'Count': 123,
                        'Name': 'string',
                        'Manufacturer': 'string'
                    },
                ]
            },
            'HibernationSupported': True|False,
            'BurstablePerformanceSupported': True|False,
            'DedicatedHostsSupported': True|False,
            'AutoRecoverySupported': True|False
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

InstanceTypes (list) --
The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .

(dict) --
Describes the instance type.

InstanceType (string) --
The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .

CurrentGeneration (boolean) --
Indicates whether the instance type is a current generation.

FreeTierEligible (boolean) --
Indicates whether the instance type is eligible for the free tier.

SupportedUsageClasses (list) --
Indicates whether the instance type is offered for spot or On-Demand.

(string) --


SupportedRootDeviceTypes (list) --
Indicates the supported root device types.

(string) --


SupportedVirtualizationTypes (list) --
The supported virtualization types.

(string) --


BareMetal (boolean) --
Indicates whether the instance is bare metal.

Hypervisor (string) --
Indicates the hypervisor used for the instance type.

ProcessorInfo (dict) --
Describes the processor.

SupportedArchitectures (list) --
A list of architectures supported by the instance type.

(string) --


SustainedClockSpeedInGhz (float) --
The speed of the processor, in GHz.



VCpuInfo (dict) --
Describes the vCPU configurations for the instance type.

DefaultVCpus (integer) --
The default number of vCPUs for the instance type.

DefaultCores (integer) --
The default number of cores for the instance type.

DefaultThreadsPerCore (integer) --
The default number of threads per core for the instance type.

ValidCores (list) --
List of the valid number of cores that can be configured for the instance type.

(integer) --


ValidThreadsPerCore (list) --
List of the valid number of threads per core that can be configured for the instance type.

(integer) --




MemoryInfo (dict) --
Describes the memory for the instance type.

SizeInMiB (integer) --
Size of the memory, in MiB.



InstanceStorageSupported (boolean) --
Indicates whether instance storage is supported.

InstanceStorageInfo (dict) --
Describes the disks for the instance type.

TotalSizeInGB (integer) --
The total size of the disks, in GB.

Disks (list) --
Array describing the disks that are available for the instance type.

(dict) --
Describes the disk.

SizeInGB (integer) --
The size of the disk in GB.

Count (integer) --
The number of disks with this configuration.

Type (string) --
The type of disk.







EbsInfo (dict) --
Describes the Amazon EBS settings for the instance type.

EbsOptimizedSupport (string) --
Indicates that the instance type is Amazon EBS-optimized. For more information, see Amazon EBS-Optimized Instances in Amazon EC2 User Guide for Linux Instances .

EncryptionSupport (string) --
Indicates whether Amazon EBS encryption is supported.

EbsOptimizedInfo (dict) --
Describes the optimized EBS performance for the instance type.

BaselineBandwidthInMbps (integer) --
The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.

BaselineThroughputInMBps (float) --
The baseline throughput performance for an EBS-optimized instance type, in MBps.

BaselineIops (integer) --
The baseline input/output storage operations per seconds for an EBS-optimized instance type.

MaximumBandwidthInMbps (integer) --
The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.

MaximumThroughputInMBps (float) --
The maximum throughput performance for an EBS-optimized instance type, in MBps.

MaximumIops (integer) --
The maximum input/output storage operations per second for an EBS-optimized instance type.





NetworkInfo (dict) --
Describes the network settings for the instance type.

NetworkPerformance (string) --
Describes the network performance.

MaximumNetworkInterfaces (integer) --
The maximum number of network interfaces for the instance type.

Ipv4AddressesPerInterface (integer) --
The maximum number of IPv4 addresses per network interface.

Ipv6AddressesPerInterface (integer) --
The maximum number of IPv6 addresses per network interface.

Ipv6Supported (boolean) --
Indicates whether IPv6 is supported.

EnaSupport (string) --
Indicates whether Elastic Network Adapter (ENA) is supported.

EfaSupported (boolean) --
Indicates whether Elastic Fabric Adapter (EFA) is supported.



GpuInfo (dict) --
Describes the GPU accelerator settings for the instance type.

Gpus (list) --
Describes the GPU accelerators for the instance type.

(dict) --
Describes the GPU accelerators for the instance type.

Name (string) --
The name of the GPU accelerator.

Manufacturer (string) --
The manufacturer of the GPU accelerator.

Count (integer) --
The number of GPUs for the instance type.

MemoryInfo (dict) --
Describes the memory available to the GPU accelerator.

SizeInMiB (integer) --
The size (in MiB) for the memory available to the GPU accelerator.







TotalGpuMemoryInMiB (integer) --
The total size of the memory for the GPU accelerators for the instance type.



FpgaInfo (dict) --
Describes the FPGA accelerator settings for the instance type.

Fpgas (list) --
Describes the FPGAs for the instance type.

(dict) --
Describes the FPGA accelerator for the instance type.

Name (string) --
The name of the FPGA accelerator.

Manufacturer (string) --
The manufacturer of the FPGA accelerator.

Count (integer) --
The count of FPGA accelerators for the instance type.

MemoryInfo (dict) --
Describes the memory for the FPGA accelerator for the instance type.

SizeInMiB (integer) --
The size (in MiB) for the memory available to the FPGA accelerator.







TotalFpgaMemoryInMiB (integer) --
The total memory of all FPGA accelerators for the instance type.



PlacementGroupInfo (dict) --
Describes the placement group settings for the instance type.

SupportedStrategies (list) --
A list of supported placement groups types.

(string) --




InferenceAcceleratorInfo (dict) --
Describes the Inference accelerator settings for the instance type.

Accelerators (list) --
Describes the Inference accelerators for the instance type.

(dict) --
Describes the Inference accelerators for the instance type.

Count (integer) --
The number of Inference accelerators for the instance type.

Name (string) --
The name of the Inference accelerator.

Manufacturer (string) --
The manufacturer of the Inference accelerator.







HibernationSupported (boolean) --
Indicates whether On-Demand hibernation is supported.

BurstablePerformanceSupported (boolean) --
Indicates whether the instance type is a burstable performance instance type.

DedicatedHostsSupported (boolean) --
Indicates whether Dedicated Hosts are supported on the instance type.

AutoRecoverySupported (boolean) --
Indicates whether auto recovery is supported.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'InstanceTypes': [
            {
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'CurrentGeneration': True|False,
                'FreeTierEligible': True|False,
                'SupportedUsageClasses': [
                    'spot'|'on-demand',
                ],
                'SupportedRootDeviceTypes': [
                    'ebs'|'instance-store',
                ],
                'SupportedVirtualizationTypes': [
                    'hvm'|'paravirtual',
                ],
                'BareMetal': True|False,
                'Hypervisor': 'nitro'|'xen',
                'ProcessorInfo': {
                    'SupportedArchitectures': [
                        'i386'|'x86_64'|'arm64',
                    ],
                    'SustainedClockSpeedInGhz': 123.0
                },
                'VCpuInfo': {
                    'DefaultVCpus': 123,
                    'DefaultCores': 123,
                    'DefaultThreadsPerCore': 123,
                    'ValidCores': [
                        123,
                    ],
                    'ValidThreadsPerCore': [
                        123,
                    ]
                },
                'MemoryInfo': {
                    'SizeInMiB': 123
                },
                'InstanceStorageSupported': True|False,
                'InstanceStorageInfo': {
                    'TotalSizeInGB': 123,
                    'Disks': [
                        {
                            'SizeInGB': 123,
                            'Count': 123,
                            'Type': 'hdd'|'ssd'
                        },
                    ]
                },
                'EbsInfo': {
                    'EbsOptimizedSupport': 'unsupported'|'supported'|'default',
                    'EncryptionSupport': 'unsupported'|'supported',
                    'EbsOptimizedInfo': {
                        'BaselineBandwidthInMbps': 123,
                        'BaselineThroughputInMBps': 123.0,
                        'BaselineIops': 123,
                        'MaximumBandwidthInMbps': 123,
                        'MaximumThroughputInMBps': 123.0,
                        'MaximumIops': 123
                    }
                },
                'NetworkInfo': {
                    'NetworkPerformance': 'string',
                    'MaximumNetworkInterfaces': 123,
                    'Ipv4AddressesPerInterface': 123,
                    'Ipv6AddressesPerInterface': 123,
                    'Ipv6Supported': True|False,
                    'EnaSupport': 'unsupported'|'supported'|'required',
                    'EfaSupported': True|False
                },
                'GpuInfo': {
                    'Gpus': [
                        {
                            'Name': 'string',
                            'Manufacturer': 'string',
                            'Count': 123,
                            'MemoryInfo': {
                                'SizeInMiB': 123
                            }
                        },
                    ],
                    'TotalGpuMemoryInMiB': 123
                },
                'FpgaInfo': {
                    'Fpgas': [
                        {
                            'Name': 'string',
                            'Manufacturer': 'string',
                            'Count': 123,
                            'MemoryInfo': {
                                'SizeInMiB': 123
                            }
                        },
                    ],
                    'TotalFpgaMemoryInMiB': 123
                },
                'PlacementGroupInfo': {
                    'SupportedStrategies': [
                        'cluster'|'partition'|'spread',
                    ]
                },
                'InferenceAcceleratorInfo': {
                    'Accelerators': [
                        {
                            'Count': 123,
                            'Name': 'string',
                            'Manufacturer': 'string'
                        },
                    ]
                },
                'HibernationSupported': True|False,
                'BurstablePerformanceSupported': True|False,
                'DedicatedHostsSupported': True|False,
                'AutoRecoverySupported': True|False
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_instances(Filters=None, InstanceIds=None, DryRun=None, MaxResults=None, NextToken=None):
    """
    Describes the specified instances or all instances.
    If you specify instance IDs, the output includes information for only the specified instances. If you specify filters, the output includes information for only those instances that meet the filter criteria. If you do not specify instance IDs or filters, the output includes information for all instances, which can affect performance. We recommend that you use pagination to ensure that the operation returns quickly and successfully.
    If you specify an instance ID that is not valid, an error is returned. If you specify an instance that you do not own, it is not included in the output.
    Recently terminated instances might appear in the returned results. This interval is usually less than one hour.
    If you describe instances in the rare case where an Availability Zone is experiencing a service disruption and you specify instance IDs that are in the affected zone, or do not specify any instance IDs at all, the call fails. If you describe instances and specify only instance IDs that are in an unaffected zone, the call works normally.
    See also: AWS API Documentation
    
    Examples
    This example describes the specified instance.
    Expected Output:
    This example describes the instances with the t2.micro instance type.
    Expected Output:
    This example describes the instances with the Purpose=test tag.
    Expected Output:
    
    :example: response = client.describe_instances(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        InstanceIds=[
            'string',
        ],
        DryRun=True|False,
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\naffinity - The affinity setting for an instance running on a Dedicated Host (default | host ).\narchitecture - The instance architecture (i386 | x86_64 | arm64 ).\navailability-zone - The Availability Zone of the instance.\nblock-device-mapping.attach-time - The attach time for an EBS volume mapped to the instance, for example, 2010-09-15T17:15:20.000Z .\nblock-device-mapping.delete-on-termination - A Boolean that indicates whether the EBS volume is deleted on instance termination.\nblock-device-mapping.device-name - The device name specified in the block device mapping (for example, /dev/sdh or xvdh ).\nblock-device-mapping.status - The status for the EBS volume (attaching | attached | detaching | detached ).\nblock-device-mapping.volume-id - The volume ID of the EBS volume.\nclient-token - The idempotency token you provided when you launched the instance.\ndns-name - The public DNS name of the instance.\ngroup-id - The ID of the security group for the instance. EC2-Classic only.\ngroup-name - The name of the security group for the instance. EC2-Classic only.\nhibernation-options.configured - A Boolean that indicates whether the instance is enabled for hibernation. A value of true means that the instance is enabled for hibernation.\nhost-id - The ID of the Dedicated Host on which the instance is running, if applicable.\nhypervisor - The hypervisor type of the instance (ovm | xen ). The value xen is used for both Xen and Nitro hypervisors.\niam-instance-profile.arn - The instance profile associated with the instance. Specified as an ARN.\nimage-id - The ID of the image used to launch the instance.\ninstance-id - The ID of the instance.\ninstance-lifecycle - Indicates whether this is a Spot Instance or a Scheduled Instance (spot | scheduled ).\ninstance-state-code - The state of the instance, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).\ninstance-state-name - The state of the instance (pending | running | shutting-down | terminated | stopping | stopped ).\ninstance-type - The type of instance (for example, t2.micro ).\ninstance.group-id - The ID of the security group for the instance.\ninstance.group-name - The name of the security group for the instance.\nip-address - The public IPv4 address of the instance.\nkernel-id - The kernel ID.\nkey-name - The name of the key pair used when the instance was launched.\nlaunch-index - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on).\nlaunch-time - The time when the instance was launched.\nmetadata-options.http-tokens - The metadata request authorization state (optional | required )\nmetadata-options.http-put-response-hop-limit - The http metadata request put response hop limit (integer, possible values 1 to 64 )\nmetadata-options.http-endpoint - Enable or disable metadata access on http endpoint (enabled | disabled )\nmonitoring-state - Indicates whether detailed monitoring is enabled (disabled | enabled ).\nnetwork-interface.addresses.private-ip-address - The private IPv4 address associated with the network interface.\nnetwork-interface.addresses.primary - Specifies whether the IPv4 address of the network interface is the primary private IPv4 address.\nnetwork-interface.addresses.association.public-ip - The ID of the association of an Elastic IP address (IPv4) with a network interface.\nnetwork-interface.addresses.association.ip-owner-id - The owner ID of the private IPv4 address associated with the network interface.\nnetwork-interface.association.public-ip - The address of the Elastic IP address (IPv4) bound to the network interface.\nnetwork-interface.association.ip-owner-id - The owner of the Elastic IP address (IPv4) associated with the network interface.\nnetwork-interface.association.allocation-id - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.\nnetwork-interface.association.association-id - The association ID returned when the network interface was associated with an IPv4 address.\nnetwork-interface.attachment.attachment-id - The ID of the interface attachment.\nnetwork-interface.attachment.instance-id - The ID of the instance to which the network interface is attached.\nnetwork-interface.attachment.instance-owner-id - The owner ID of the instance to which the network interface is attached.\nnetwork-interface.attachment.device-index - The device index to which the network interface is attached.\nnetwork-interface.attachment.status - The status of the attachment (attaching | attached | detaching | detached ).\nnetwork-interface.attachment.attach-time - The time that the network interface was attached to an instance.\nnetwork-interface.attachment.delete-on-termination - Specifies whether the attachment is deleted when an instance is terminated.\nnetwork-interface.availability-zone - The Availability Zone for the network interface.\nnetwork-interface.description - The description of the network interface.\nnetwork-interface.group-id - The ID of a security group associated with the network interface.\nnetwork-interface.group-name - The name of a security group associated with the network interface.\nnetwork-interface.ipv6-addresses.ipv6-address - The IPv6 address associated with the network interface.\nnetwork-interface.mac-address - The MAC address of the network interface.\nnetwork-interface.network-interface-id - The ID of the network interface.\nnetwork-interface.owner-id - The ID of the owner of the network interface.\nnetwork-interface.private-dns-name - The private DNS name of the network interface.\nnetwork-interface.requester-id - The requester ID for the network interface.\nnetwork-interface.requester-managed - Indicates whether the network interface is being managed by AWS.\nnetwork-interface.status - The status of the network interface (available ) | in-use ).\nnetwork-interface.source-dest-check - Whether the network interface performs source/destination checking. A value of true means that checking is enabled, and false means that checking is disabled. The value must be false for the network interface to perform network address translation (NAT) in your VPC.\nnetwork-interface.subnet-id - The ID of the subnet for the network interface.\nnetwork-interface.vpc-id - The ID of the VPC for the network interface.\nowner-id - The AWS account ID of the instance owner.\nplacement-group-name - The name of the placement group for the instance.\nplacement-partition-number - The partition in which the instance is located.\nplatform - The platform. To list only Windows instances, use windows .\nprivate-dns-name - The private IPv4 DNS name of the instance.\nprivate-ip-address - The private IPv4 address of the instance.\nproduct-code - The product code associated with the AMI used to launch the instance.\nproduct-code.type - The type of product code (devpay | marketplace ).\nramdisk-id - The RAM disk ID.\nreason - The reason for the current state of the instance (for example, shows 'User Initiated [date]' when you stop or terminate the instance). Similar to the state-reason-code filter.\nrequester-id - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).\nreservation-id - The ID of the instance\'s reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you get one reservation ID. If you launch ten instances using the same launch request, you also get one reservation ID.\nroot-device-name - The device name of the root device volume (for example, /dev/sda1 ).\nroot-device-type - The type of the root device volume (ebs | instance-store ).\nsource-dest-check - Indicates whether the instance performs source/destination checking. A value of true means that checking is enabled, and false means that checking is disabled. The value must be false for the instance to perform network address translation (NAT) in your VPC.\nspot-instance-request-id - The ID of the Spot Instance request.\nstate-reason-code - The reason code for the state change.\nstate-reason-message - A message that describes the state change.\nsubnet-id - The ID of the subnet for the instance.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.\ntenancy - The tenancy of an instance (dedicated | default | host ).\nvirtualization-type - The virtualization type of the instance (paravirtual | hvm ).\nvpc-id - The ID of the VPC that the instance is running in.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type InstanceIds: list
    :param InstanceIds: The instance IDs.\nDefault: Describes all your instances.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.

    :type NextToken: string
    :param NextToken: The token to request the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'Reservations': [
        {
            'Groups': [
                {
                    'GroupName': 'string',
                    'GroupId': 'string'
                },
            ],
            'Instances': [
                {
                    'AmiLaunchIndex': 123,
                    'ImageId': 'string',
                    'InstanceId': 'string',
                    'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                    'KernelId': 'string',
                    'KeyName': 'string',
                    'LaunchTime': datetime(2015, 1, 1),
                    'Monitoring': {
                        'State': 'disabled'|'disabling'|'enabled'|'pending'
                    },
                    'Placement': {
                        'AvailabilityZone': 'string',
                        'Affinity': 'string',
                        'GroupName': 'string',
                        'PartitionNumber': 123,
                        'HostId': 'string',
                        'Tenancy': 'default'|'dedicated'|'host',
                        'SpreadDomain': 'string',
                        'HostResourceGroupArn': 'string'
                    },
                    'Platform': 'Windows',
                    'PrivateDnsName': 'string',
                    'PrivateIpAddress': 'string',
                    'ProductCodes': [
                        {
                            'ProductCodeId': 'string',
                            'ProductCodeType': 'devpay'|'marketplace'
                        },
                    ],
                    'PublicDnsName': 'string',
                    'PublicIpAddress': 'string',
                    'RamdiskId': 'string',
                    'State': {
                        'Code': 123,
                        'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                    },
                    'StateTransitionReason': 'string',
                    'SubnetId': 'string',
                    'VpcId': 'string',
                    'Architecture': 'i386'|'x86_64'|'arm64',
                    'BlockDeviceMappings': [
                        {
                            'DeviceName': 'string',
                            'Ebs': {
                                'AttachTime': datetime(2015, 1, 1),
                                'DeleteOnTermination': True|False,
                                'Status': 'attaching'|'attached'|'detaching'|'detached',
                                'VolumeId': 'string'
                            }
                        },
                    ],
                    'ClientToken': 'string',
                    'EbsOptimized': True|False,
                    'EnaSupport': True|False,
                    'Hypervisor': 'ovm'|'xen',
                    'IamInstanceProfile': {
                        'Arn': 'string',
                        'Id': 'string'
                    },
                    'InstanceLifecycle': 'spot'|'scheduled',
                    'ElasticGpuAssociations': [
                        {
                            'ElasticGpuId': 'string',
                            'ElasticGpuAssociationId': 'string',
                            'ElasticGpuAssociationState': 'string',
                            'ElasticGpuAssociationTime': 'string'
                        },
                    ],
                    'ElasticInferenceAcceleratorAssociations': [
                        {
                            'ElasticInferenceAcceleratorArn': 'string',
                            'ElasticInferenceAcceleratorAssociationId': 'string',
                            'ElasticInferenceAcceleratorAssociationState': 'string',
                            'ElasticInferenceAcceleratorAssociationTime': datetime(2015, 1, 1)
                        },
                    ],
                    'NetworkInterfaces': [
                        {
                            'Association': {
                                'IpOwnerId': 'string',
                                'PublicDnsName': 'string',
                                'PublicIp': 'string'
                            },
                            'Attachment': {
                                'AttachTime': datetime(2015, 1, 1),
                                'AttachmentId': 'string',
                                'DeleteOnTermination': True|False,
                                'DeviceIndex': 123,
                                'Status': 'attaching'|'attached'|'detaching'|'detached'
                            },
                            'Description': 'string',
                            'Groups': [
                                {
                                    'GroupName': 'string',
                                    'GroupId': 'string'
                                },
                            ],
                            'Ipv6Addresses': [
                                {
                                    'Ipv6Address': 'string'
                                },
                            ],
                            'MacAddress': 'string',
                            'NetworkInterfaceId': 'string',
                            'OwnerId': 'string',
                            'PrivateDnsName': 'string',
                            'PrivateIpAddress': 'string',
                            'PrivateIpAddresses': [
                                {
                                    'Association': {
                                        'IpOwnerId': 'string',
                                        'PublicDnsName': 'string',
                                        'PublicIp': 'string'
                                    },
                                    'Primary': True|False,
                                    'PrivateDnsName': 'string',
                                    'PrivateIpAddress': 'string'
                                },
                            ],
                            'SourceDestCheck': True|False,
                            'Status': 'available'|'associated'|'attaching'|'in-use'|'detaching',
                            'SubnetId': 'string',
                            'VpcId': 'string',
                            'InterfaceType': 'string'
                        },
                    ],
                    'OutpostArn': 'string',
                    'RootDeviceName': 'string',
                    'RootDeviceType': 'ebs'|'instance-store',
                    'SecurityGroups': [
                        {
                            'GroupName': 'string',
                            'GroupId': 'string'
                        },
                    ],
                    'SourceDestCheck': True|False,
                    'SpotInstanceRequestId': 'string',
                    'SriovNetSupport': 'string',
                    'StateReason': {
                        'Code': 'string',
                        'Message': 'string'
                    },
                    'Tags': [
                        {
                            'Key': 'string',
                            'Value': 'string'
                        },
                    ],
                    'VirtualizationType': 'hvm'|'paravirtual',
                    'CpuOptions': {
                        'CoreCount': 123,
                        'ThreadsPerCore': 123
                    },
                    'CapacityReservationId': 'string',
                    'CapacityReservationSpecification': {
                        'CapacityReservationPreference': 'open'|'none',
                        'CapacityReservationTarget': {
                            'CapacityReservationId': 'string'
                        }
                    },
                    'HibernationOptions': {
                        'Configured': True|False
                    },
                    'Licenses': [
                        {
                            'LicenseConfigurationArn': 'string'
                        },
                    ],
                    'MetadataOptions': {
                        'State': 'pending'|'applied',
                        'HttpTokens': 'optional'|'required',
                        'HttpPutResponseHopLimit': 123,
                        'HttpEndpoint': 'disabled'|'enabled'
                    }
                },
            ],
            'OwnerId': 'string',
            'RequesterId': 'string',
            'ReservationId': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Reservations (list) --
Information about the reservations.

(dict) --
Describes a reservation.

Groups (list) --
[EC2-Classic only] The security groups.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





Instances (list) --
The instances.

(dict) --
Describes an instance.

AmiLaunchIndex (integer) --
The AMI launch index, which can be used to find this instance in the launch group.

ImageId (string) --
The ID of the AMI used to launch the instance.

InstanceId (string) --
The ID of the instance.

InstanceType (string) --
The instance type.

KernelId (string) --
The kernel associated with this instance, if applicable.

KeyName (string) --
The name of the key pair, if this instance was launched with an associated key pair.

LaunchTime (datetime) --
The time the instance was launched.

Monitoring (dict) --
The monitoring for the instance.

State (string) --
Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.



Placement (dict) --
The location where the instance launched, if applicable.

AvailabilityZone (string) --
The Availability Zone of the instance.
If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.
This parameter is not supported by CreateFleet .

Affinity (string) --
The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance command.
This parameter is not supported by CreateFleet .

GroupName (string) --
The name of the placement group the instance is in.

PartitionNumber (integer) --
The number of the partition the instance is in. Valid only if the placement group strategy is set to partition .
This parameter is not supported by CreateFleet .

HostId (string) --
The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance command.
This parameter is not supported by CreateFleet .

Tenancy (string) --
The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance command.
This parameter is not supported by CreateFleet .

SpreadDomain (string) --
Reserved for future use.
This parameter is not supported by CreateFleet .

HostResourceGroupArn (string) --
The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host .
This parameter is not supported by CreateFleet .



Platform (string) --
The value is Windows for Windows instances; otherwise blank.

PrivateDnsName (string) --
(IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the running state.
[EC2-VPC] The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames if you\'ve enabled DNS resolution and DNS hostnames in your VPC. If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname as appropriate.

PrivateIpAddress (string) --
The private IPv4 address assigned to the instance.

ProductCodes (list) --
The product codes attached to this instance, if applicable.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.





PublicDnsName (string) --
(IPv4 only) The public DNS name assigned to the instance. This name is not available until the instance enters the running state. For EC2-VPC, this name is only available if you\'ve enabled DNS hostnames for your VPC.

PublicIpAddress (string) --
The public IPv4 address assigned to the instance, if applicable.

RamdiskId (string) --
The RAM disk associated with this instance, if applicable.

State (dict) --
The current state of the instance.

Code (integer) --
The state of the instance as a 16-bit unsigned integer.
The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.
The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
The valid values for instance-state-code will all be in the range of the low byte and they are:

0 : pending
16 : running
32 : shutting-down
48 : terminated
64 : stopping
80 : stopped

You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.

Name (string) --
The current state of the instance.



StateTransitionReason (string) --
The reason for the most recent state transition. This might be an empty string.

SubnetId (string) --
[EC2-VPC] The ID of the subnet in which the instance is running.

VpcId (string) --
[EC2-VPC] The ID of the VPC in which the instance is running.

Architecture (string) --
The architecture of the image.

BlockDeviceMappings (list) --
Any block device mapping entries for the instance.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name (for example, /dev/sdh or xvdh ).

Ebs (dict) --
Parameters used to automatically set up EBS volumes when the instance is launched.

AttachTime (datetime) --
The time stamp when the attachment initiated.

DeleteOnTermination (boolean) --
Indicates whether the volume is deleted on instance termination.

Status (string) --
The attachment state.

VolumeId (string) --
The ID of the EBS volume.







ClientToken (string) --
The idempotency token you provided when you launched the instance, if applicable.

EbsOptimized (boolean) --
Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.

EnaSupport (boolean) --
Specifies whether enhanced networking with ENA is enabled.

Hypervisor (string) --
The hypervisor type of the instance. The value xen is used for both Xen and Nitro hypervisors.

IamInstanceProfile (dict) --
The IAM instance profile associated with the instance, if applicable.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Id (string) --
The ID of the instance profile.



InstanceLifecycle (string) --
Indicates whether this is a Spot Instance or a Scheduled Instance.

ElasticGpuAssociations (list) --
The Elastic GPU associated with the instance.

(dict) --
Describes the association between an instance and an Elastic Graphics accelerator.

ElasticGpuId (string) --
The ID of the Elastic Graphics accelerator.

ElasticGpuAssociationId (string) --
The ID of the association.

ElasticGpuAssociationState (string) --
The state of the association between the instance and the Elastic Graphics accelerator.

ElasticGpuAssociationTime (string) --
The time the Elastic Graphics accelerator was associated with the instance.





ElasticInferenceAcceleratorAssociations (list) --
The elastic inference accelerator associated with the instance.

(dict) --
Describes the association between an instance and an elastic inference accelerator.

ElasticInferenceAcceleratorArn (string) --
The Amazon Resource Name (ARN) of the elastic inference accelerator.

ElasticInferenceAcceleratorAssociationId (string) --
The ID of the association.

ElasticInferenceAcceleratorAssociationState (string) --
The state of the elastic inference accelerator.

ElasticInferenceAcceleratorAssociationTime (datetime) --
The time at which the elastic inference accelerator is associated with an instance.





NetworkInterfaces (list) --
[EC2-VPC] The network interfaces for the instance.

(dict) --
Describes a network interface.

Association (dict) --
The association information for an Elastic IPv4 associated with the network interface.

IpOwnerId (string) --
The ID of the owner of the Elastic IP address.

PublicDnsName (string) --
The public DNS name.

PublicIp (string) --
The public IP address or Elastic IP address bound to the network interface.



Attachment (dict) --
The network interface attachment.

AttachTime (datetime) --
The time stamp when the attachment initiated.

AttachmentId (string) --
The ID of the network interface attachment.

DeleteOnTermination (boolean) --
Indicates whether the network interface is deleted when the instance is terminated.

DeviceIndex (integer) --
The index of the device on the instance for the network interface attachment.

Status (string) --
The attachment state.



Description (string) --
The description.

Groups (list) --
One or more security groups.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





Ipv6Addresses (list) --
One or more IPv6 addresses associated with the network interface.

(dict) --
Describes an IPv6 address.

Ipv6Address (string) --
The IPv6 address.





MacAddress (string) --
The MAC address.

NetworkInterfaceId (string) --
The ID of the network interface.

OwnerId (string) --
The ID of the AWS account that created the network interface.

PrivateDnsName (string) --
The private DNS name.

PrivateIpAddress (string) --
The IPv4 address of the network interface within the subnet.

PrivateIpAddresses (list) --
One or more private IPv4 addresses associated with the network interface.

(dict) --
Describes a private IPv4 address.

Association (dict) --
The association information for an Elastic IP address for the network interface.

IpOwnerId (string) --
The ID of the owner of the Elastic IP address.

PublicDnsName (string) --
The public DNS name.

PublicIp (string) --
The public IP address or Elastic IP address bound to the network interface.



Primary (boolean) --
Indicates whether this IPv4 address is the primary private IP address of the network interface.

PrivateDnsName (string) --
The private IPv4 DNS name.

PrivateIpAddress (string) --
The private IPv4 address of the network interface.





SourceDestCheck (boolean) --
Indicates whether to validate network traffic to or from this network interface.

Status (string) --
The status of the network interface.

SubnetId (string) --
The ID of the subnet.

VpcId (string) --
The ID of the VPC.

InterfaceType (string) --
Describes the type of network interface.
Valid values: interface | efa





OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

RootDeviceName (string) --
The device name of the root device volume (for example, /dev/sda1 ).

RootDeviceType (string) --
The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.

SecurityGroups (list) --
The security groups for the instance.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





SourceDestCheck (boolean) --
Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of true means that checking is enabled, and false means that checking is disabled. The value must be false for the instance to perform NAT. For more information, see NAT Instances in the Amazon Virtual Private Cloud User Guide .

SpotInstanceRequestId (string) --
If the request is a Spot Instance request, the ID of the request.

SriovNetSupport (string) --
Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.

StateReason (dict) --
The reason for the most recent state transition.

Code (string) --
The reason code for the state change.

Message (string) --
The message for the state change.

Server.InsufficientInstanceCapacity : There was insufficient capacity available to satisfy the launch request.
Server.InternalError : An internal error caused the instance to terminate during launch.
Server.ScheduledStop : The instance was stopped due to a scheduled retirement.
Server.SpotInstanceShutdown : The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.
Server.SpotInstanceTermination : The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.
Client.InstanceInitiatedShutdown : The instance was shut down using the shutdown -h command from the instance.
Client.InstanceTerminated : The instance was terminated or rebooted during AMI creation.
Client.InternalError : A client error caused the instance to terminate during launch.
Client.InvalidSnapshot.NotFound : The specified snapshot was not found.
Client.UserInitiatedHibernate : Hibernation was initiated on the instance.
Client.UserInitiatedShutdown : The instance was shut down using the Amazon EC2 API.
Client.VolumeLimitExceeded : The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.




Tags (list) --
Any tags assigned to the instance.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VirtualizationType (string) --
The virtualization type of the instance.

CpuOptions (dict) --
The CPU options for the instance.

CoreCount (integer) --
The number of CPU cores for the instance.

ThreadsPerCore (integer) --
The number of threads per CPU core.



CapacityReservationId (string) --
The ID of the Capacity Reservation.

CapacityReservationSpecification (dict) --
Information about the Capacity Reservation targeting option.

CapacityReservationPreference (string) --
Describes the instance\'s Capacity Reservation preferences. Possible preferences include:

open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.


CapacityReservationTarget (dict) --
Information about the targeted Capacity Reservation.

CapacityReservationId (string) --
The ID of the Capacity Reservation.





HibernationOptions (dict) --
Indicates whether the instance is enabled for hibernation.

Configured (boolean) --
If this parameter is set to true , your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.



Licenses (list) --
The license configurations.

(dict) --
Describes a license configuration.

LicenseConfigurationArn (string) --
The Amazon Resource Name (ARN) of the license configuration.





MetadataOptions (dict) --
The metadata options for the instance.

State (string) --
The state of the metadata option changes.

pending - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.
applied - The metadata options have been successfully applied on the instance.


HttpTokens (string) --
The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .
If the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.
If the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.

HttpPutResponseHopLimit (integer) --
The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
Default: 1
Possible values: Integers from 1 to 64

HttpEndpoint (string) --
This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .

Note
If you specify a value of disabled , you will not be able to access your instance metadata.








OwnerId (string) --
The ID of the AWS account that owns the reservation.

RequesterId (string) --
The ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling).

ReservationId (string) --
The ID of the reservation.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the specified instance.
response = client.describe_instances(
    InstanceIds=[
        'i-1234567890abcdef0',
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the instances with the t2.micro instance type.
response = client.describe_instances(
    Filters=[
        {
            'Name': 'instance-type',
            'Values': [
                't2.micro',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the instances with the Purpose=test tag.
response = client.describe_instances(
    Filters=[
        {
            'Name': 'tag:Purpose',
            'Values': [
                'test',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Reservations': [
            {
                'Groups': [
                    {
                        'GroupName': 'string',
                        'GroupId': 'string'
                    },
                ],
                'Instances': [
                    {
                        'AmiLaunchIndex': 123,
                        'ImageId': 'string',
                        'InstanceId': 'string',
                        'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                        'KernelId': 'string',
                        'KeyName': 'string',
                        'LaunchTime': datetime(2015, 1, 1),
                        'Monitoring': {
                            'State': 'disabled'|'disabling'|'enabled'|'pending'
                        },
                        'Placement': {
                            'AvailabilityZone': 'string',
                            'Affinity': 'string',
                            'GroupName': 'string',
                            'PartitionNumber': 123,
                            'HostId': 'string',
                            'Tenancy': 'default'|'dedicated'|'host',
                            'SpreadDomain': 'string',
                            'HostResourceGroupArn': 'string'
                        },
                        'Platform': 'Windows',
                        'PrivateDnsName': 'string',
                        'PrivateIpAddress': 'string',
                        'ProductCodes': [
                            {
                                'ProductCodeId': 'string',
                                'ProductCodeType': 'devpay'|'marketplace'
                            },
                        ],
                        'PublicDnsName': 'string',
                        'PublicIpAddress': 'string',
                        'RamdiskId': 'string',
                        'State': {
                            'Code': 123,
                            'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                        },
                        'StateTransitionReason': 'string',
                        'SubnetId': 'string',
                        'VpcId': 'string',
                        'Architecture': 'i386'|'x86_64'|'arm64',
                        'BlockDeviceMappings': [
                            {
                                'DeviceName': 'string',
                                'Ebs': {
                                    'AttachTime': datetime(2015, 1, 1),
                                    'DeleteOnTermination': True|False,
                                    'Status': 'attaching'|'attached'|'detaching'|'detached',
                                    'VolumeId': 'string'
                                }
                            },
                        ],
                        'ClientToken': 'string',
                        'EbsOptimized': True|False,
                        'EnaSupport': True|False,
                        'Hypervisor': 'ovm'|'xen',
                        'IamInstanceProfile': {
                            'Arn': 'string',
                            'Id': 'string'
                        },
                        'InstanceLifecycle': 'spot'|'scheduled',
                        'ElasticGpuAssociations': [
                            {
                                'ElasticGpuId': 'string',
                                'ElasticGpuAssociationId': 'string',
                                'ElasticGpuAssociationState': 'string',
                                'ElasticGpuAssociationTime': 'string'
                            },
                        ],
                        'ElasticInferenceAcceleratorAssociations': [
                            {
                                'ElasticInferenceAcceleratorArn': 'string',
                                'ElasticInferenceAcceleratorAssociationId': 'string',
                                'ElasticInferenceAcceleratorAssociationState': 'string',
                                'ElasticInferenceAcceleratorAssociationTime': datetime(2015, 1, 1)
                            },
                        ],
                        'NetworkInterfaces': [
                            {
                                'Association': {
                                    'IpOwnerId': 'string',
                                    'PublicDnsName': 'string',
                                    'PublicIp': 'string'
                                },
                                'Attachment': {
                                    'AttachTime': datetime(2015, 1, 1),
                                    'AttachmentId': 'string',
                                    'DeleteOnTermination': True|False,
                                    'DeviceIndex': 123,
                                    'Status': 'attaching'|'attached'|'detaching'|'detached'
                                },
                                'Description': 'string',
                                'Groups': [
                                    {
                                        'GroupName': 'string',
                                        'GroupId': 'string'
                                    },
                                ],
                                'Ipv6Addresses': [
                                    {
                                        'Ipv6Address': 'string'
                                    },
                                ],
                                'MacAddress': 'string',
                                'NetworkInterfaceId': 'string',
                                'OwnerId': 'string',
                                'PrivateDnsName': 'string',
                                'PrivateIpAddress': 'string',
                                'PrivateIpAddresses': [
                                    {
                                        'Association': {
                                            'IpOwnerId': 'string',
                                            'PublicDnsName': 'string',
                                            'PublicIp': 'string'
                                        },
                                        'Primary': True|False,
                                        'PrivateDnsName': 'string',
                                        'PrivateIpAddress': 'string'
                                    },
                                ],
                                'SourceDestCheck': True|False,
                                'Status': 'available'|'associated'|'attaching'|'in-use'|'detaching',
                                'SubnetId': 'string',
                                'VpcId': 'string',
                                'InterfaceType': 'string'
                            },
                        ],
                        'OutpostArn': 'string',
                        'RootDeviceName': 'string',
                        'RootDeviceType': 'ebs'|'instance-store',
                        'SecurityGroups': [
                            {
                                'GroupName': 'string',
                                'GroupId': 'string'
                            },
                        ],
                        'SourceDestCheck': True|False,
                        'SpotInstanceRequestId': 'string',
                        'SriovNetSupport': 'string',
                        'StateReason': {
                            'Code': 'string',
                            'Message': 'string'
                        },
                        'Tags': [
                            {
                                'Key': 'string',
                                'Value': 'string'
                            },
                        ],
                        'VirtualizationType': 'hvm'|'paravirtual',
                        'CpuOptions': {
                            'CoreCount': 123,
                            'ThreadsPerCore': 123
                        },
                        'CapacityReservationId': 'string',
                        'CapacityReservationSpecification': {
                            'CapacityReservationPreference': 'open'|'none',
                            'CapacityReservationTarget': {
                                'CapacityReservationId': 'string'
                            }
                        },
                        'HibernationOptions': {
                            'Configured': True|False
                        },
                        'Licenses': [
                            {
                                'LicenseConfigurationArn': 'string'
                            },
                        ],
                        'MetadataOptions': {
                            'State': 'pending'|'applied',
                            'HttpTokens': 'optional'|'required',
                            'HttpPutResponseHopLimit': 123,
                            'HttpEndpoint': 'disabled'|'enabled'
                        }
                    },
                ],
                'OwnerId': 'string',
                'RequesterId': 'string',
                'ReservationId': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    0 : pending
    16 : running
    32 : shutting-down
    48 : terminated
    64 : stopping
    80 : stopped
    
    """
    pass

def describe_internet_gateways(Filters=None, DryRun=None, InternetGatewayIds=None, NextToken=None, MaxResults=None):
    """
    Describes one or more of your internet gateways.
    See also: AWS API Documentation
    
    Examples
    This example describes the Internet gateway for the specified VPC.
    Expected Output:
    
    :example: response = client.describe_internet_gateways(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        InternetGatewayIds=[
            'string',
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\nattachment.state - The current state of the attachment between the gateway and the VPC (available ). Present only if a VPC is attached.\nattachment.vpc-id - The ID of an attached VPC.\ninternet-gateway-id - The ID of the Internet gateway.\nowner-id - The ID of the AWS account that owns the internet gateway.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InternetGatewayIds: list
    :param InternetGatewayIds: One or more internet gateway IDs.\nDefault: Describes all your internet gateways.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :rtype: dict

ReturnsResponse Syntax
{
    'InternetGateways': [
        {
            'Attachments': [
                {
                    'State': 'attaching'|'attached'|'detaching'|'detached',
                    'VpcId': 'string'
                },
            ],
            'InternetGatewayId': 'string',
            'OwnerId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

InternetGateways (list) --
Information about one or more internet gateways.

(dict) --
Describes an internet gateway.

Attachments (list) --
Any VPCs attached to the internet gateway.

(dict) --
Describes the attachment of a VPC to an internet gateway or an egress-only internet gateway.

State (string) --
The current state of the attachment. For an internet gateway, the state is available when attached to a VPC; otherwise, this value is not returned.

VpcId (string) --
The ID of the VPC.





InternetGatewayId (string) --
The ID of the internet gateway.

OwnerId (string) --
The ID of the AWS account that owns the internet gateway.

Tags (list) --
Any tags assigned to the internet gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the Internet gateway for the specified VPC.
response = client.describe_internet_gateways(
    Filters=[
        {
            'Name': 'attachment.vpc-id',
            'Values': [
                'vpc-a01106c2',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'InternetGateways': [
        {
            'Attachments': [
                {
                    'State': 'available',
                    'VpcId': 'vpc-a01106c2',
                },
            ],
            'InternetGatewayId': 'igw-c0a643a9',
            'Tags': [
            ],
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'InternetGateways': [
            {
                'Attachments': [
                    {
                        'State': 'attaching'|'attached'|'detaching'|'detached',
                        'VpcId': 'string'
                    },
                ],
                'InternetGatewayId': 'string',
                'OwnerId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_ipv6_pools(PoolIds=None, NextToken=None, MaxResults=None, DryRun=None, Filters=None):
    """
    Describes your IPv6 address pools.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_ipv6_pools(
        PoolIds=[
            'string',
        ],
        NextToken='string',
        MaxResults=123,
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type PoolIds: list
    :param PoolIds: The IDs of the IPv6 address pools.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: One or more filters.\n\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Ipv6Pools': [
        {
            'PoolId': 'string',
            'Description': 'string',
            'PoolCidrBlocks': [
                {
                    'Cidr': 'string'
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Ipv6Pools (list) --
Information about the IPv6 address pools.

(dict) --
Describes an IPv6 address pool.

PoolId (string) --
The ID of the address pool.

Description (string) --
The description for the address pool.

PoolCidrBlocks (list) --
The CIDR blocks for the address pool.

(dict) --
Describes a CIDR block for an address pool.

Cidr (string) --
The CIDR block.





Tags (list) --
Any tags for the address pool.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'Ipv6Pools': [
            {
                'PoolId': 'string',
                'Description': 'string',
                'PoolCidrBlocks': [
                    {
                        'Cidr': 'string'
                    },
                ],
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_key_pairs(Filters=None, KeyNames=None, KeyPairIds=None, DryRun=None):
    """
    Describes the specified key pairs or all of your key pairs.
    For more information about key pairs, see Key Pairs in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example displays the fingerprint for the specified key.
    Expected Output:
    
    :example: response = client.describe_key_pairs(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        KeyNames=[
            'string',
        ],
        KeyPairIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\nkey-pair-id - The ID of the key pair.\nfingerprint - The fingerprint of the key pair.\nkey-name - The name of the key pair.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type KeyNames: list
    :param KeyNames: The key pair names.\nDefault: Describes all your key pairs.\n\n(string) --\n\n

    :type KeyPairIds: list
    :param KeyPairIds: The IDs of the key pairs.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'KeyPairs': [
        {
            'KeyPairId': 'string',
            'KeyFingerprint': 'string',
            'KeyName': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --

KeyPairs (list) --
Information about the key pairs.

(dict) --
Describes a key pair.

KeyPairId (string) --
The ID of the key pair.

KeyFingerprint (string) --
If you used  CreateKeyPair to create the key pair, this is the SHA-1 digest of the DER encoded private key. If you used  ImportKeyPair to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.

KeyName (string) --
The name of the key pair.

Tags (list) --
Any tags applied to the key pair.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.















Examples
This example displays the fingerprint for the specified key.
response = client.describe_key_pairs(
    KeyNames=[
        'my-key-pair',
    ],
)

print(response)


Expected Output:
{
    'KeyPairs': [
        {
            'KeyFingerprint': '1f:51:ae:28:bf:89:e9:d8:1f:25:5d:37:2d:7d:b8:ca:9f:f5:f1:6f',
            'KeyName': 'my-key-pair',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'KeyPairs': [
            {
                'KeyPairId': 'string',
                'KeyFingerprint': 'string',
                'KeyName': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    }
    
    
    """
    pass

def describe_launch_template_versions(DryRun=None, LaunchTemplateId=None, LaunchTemplateName=None, Versions=None, MinVersion=None, MaxVersion=None, NextToken=None, MaxResults=None, Filters=None):
    """
    Describes one or more versions of a specified launch template. You can describe all versions, individual versions, or a range of versions.
    See also: AWS API Documentation
    
    Examples
    This example describes the versions for the specified launch template.
    Expected Output:
    
    :example: response = client.describe_launch_template_versions(
        DryRun=True|False,
        LaunchTemplateId='string',
        LaunchTemplateName='string',
        Versions=[
            'string',
        ],
        MinVersion='string',
        MaxVersion='string',
        NextToken='string',
        MaxResults=123,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type LaunchTemplateId: string
    :param LaunchTemplateId: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.

    :type LaunchTemplateName: string
    :param LaunchTemplateName: The name of the launch template. You must specify either the launch template ID or launch template name in the request.

    :type Versions: list
    :param Versions: One or more versions of the launch template.\n\n(string) --\n\n

    :type MinVersion: string
    :param MinVersion: The version number after which to describe launch template versions.

    :type MaxVersion: string
    :param MaxVersion: The version number up to which to describe launch template versions.

    :type NextToken: string
    :param NextToken: The token to request the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 1 and 200.

    :type Filters: list
    :param Filters: One or more filters.\n\ncreate-time - The time the launch template version was created.\nebs-optimized - A boolean that indicates whether the instance is optimized for Amazon EBS I/O.\niam-instance-profile - The ARN of the IAM instance profile.\nimage-id - The ID of the AMI.\ninstance-type - The instance type.\nis-default-version - A boolean that indicates whether the launch template version is the default version.\nkernel-id - The kernel ID.\nram-disk-id - The RAM disk ID.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'LaunchTemplateVersions': [
        {
            'LaunchTemplateId': 'string',
            'LaunchTemplateName': 'string',
            'VersionNumber': 123,
            'VersionDescription': 'string',
            'CreateTime': datetime(2015, 1, 1),
            'CreatedBy': 'string',
            'DefaultVersion': True|False,
            'LaunchTemplateData': {
                'KernelId': 'string',
                'EbsOptimized': True|False,
                'IamInstanceProfile': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'BlockDeviceMappings': [
                    {
                        'DeviceName': 'string',
                        'VirtualName': 'string',
                        'Ebs': {
                            'Encrypted': True|False,
                            'DeleteOnTermination': True|False,
                            'Iops': 123,
                            'KmsKeyId': 'string',
                            'SnapshotId': 'string',
                            'VolumeSize': 123,
                            'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1'
                        },
                        'NoDevice': 'string'
                    },
                ],
                'NetworkInterfaces': [
                    {
                        'AssociatePublicIpAddress': True|False,
                        'DeleteOnTermination': True|False,
                        'Description': 'string',
                        'DeviceIndex': 123,
                        'Groups': [
                            'string',
                        ],
                        'InterfaceType': 'string',
                        'Ipv6AddressCount': 123,
                        'Ipv6Addresses': [
                            {
                                'Ipv6Address': 'string'
                            },
                        ],
                        'NetworkInterfaceId': 'string',
                        'PrivateIpAddress': 'string',
                        'PrivateIpAddresses': [
                            {
                                'Primary': True|False,
                                'PrivateIpAddress': 'string'
                            },
                        ],
                        'SecondaryPrivateIpAddressCount': 123,
                        'SubnetId': 'string'
                    },
                ],
                'ImageId': 'string',
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'KeyName': 'string',
                'Monitoring': {
                    'Enabled': True|False
                },
                'Placement': {
                    'AvailabilityZone': 'string',
                    'Affinity': 'string',
                    'GroupName': 'string',
                    'HostId': 'string',
                    'Tenancy': 'default'|'dedicated'|'host',
                    'SpreadDomain': 'string',
                    'HostResourceGroupArn': 'string',
                    'PartitionNumber': 123
                },
                'RamDiskId': 'string',
                'DisableApiTermination': True|False,
                'InstanceInitiatedShutdownBehavior': 'stop'|'terminate',
                'UserData': 'string',
                'TagSpecifications': [
                    {
                        'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                        'Tags': [
                            {
                                'Key': 'string',
                                'Value': 'string'
                            },
                        ]
                    },
                ],
                'ElasticGpuSpecifications': [
                    {
                        'Type': 'string'
                    },
                ],
                'ElasticInferenceAccelerators': [
                    {
                        'Type': 'string',
                        'Count': 123
                    },
                ],
                'SecurityGroupIds': [
                    'string',
                ],
                'SecurityGroups': [
                    'string',
                ],
                'InstanceMarketOptions': {
                    'MarketType': 'spot',
                    'SpotOptions': {
                        'MaxPrice': 'string',
                        'SpotInstanceType': 'one-time'|'persistent',
                        'BlockDurationMinutes': 123,
                        'ValidUntil': datetime(2015, 1, 1),
                        'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
                    }
                },
                'CreditSpecification': {
                    'CpuCredits': 'string'
                },
                'CpuOptions': {
                    'CoreCount': 123,
                    'ThreadsPerCore': 123
                },
                'CapacityReservationSpecification': {
                    'CapacityReservationPreference': 'open'|'none',
                    'CapacityReservationTarget': {
                        'CapacityReservationId': 'string'
                    }
                },
                'LicenseSpecifications': [
                    {
                        'LicenseConfigurationArn': 'string'
                    },
                ],
                'HibernationOptions': {
                    'Configured': True|False
                },
                'MetadataOptions': {
                    'State': 'pending'|'applied',
                    'HttpTokens': 'optional'|'required',
                    'HttpPutResponseHopLimit': 123,
                    'HttpEndpoint': 'disabled'|'enabled'
                }
            }
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

LaunchTemplateVersions (list) --
Information about the launch template versions.

(dict) --
Describes a launch template version.

LaunchTemplateId (string) --
The ID of the launch template.

LaunchTemplateName (string) --
The name of the launch template.

VersionNumber (integer) --
The version number.

VersionDescription (string) --
The description for the version.

CreateTime (datetime) --
The time the version was created.

CreatedBy (string) --
The principal that created the version.

DefaultVersion (boolean) --
Indicates whether the version is the default version.

LaunchTemplateData (dict) --
Information about the launch template.

KernelId (string) --
The ID of the kernel, if applicable.

EbsOptimized (boolean) --
Indicates whether the instance is optimized for Amazon EBS I/O.

IamInstanceProfile (dict) --
The IAM instance profile.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Name (string) --
The name of the instance profile.



BlockDeviceMappings (list) --
The block device mappings.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name.

VirtualName (string) --
The virtual device name (ephemeralN).

Ebs (dict) --
Information about the block device for an EBS volume.

Encrypted (boolean) --
Indicates whether the EBS volume is encrypted.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports.

KmsKeyId (string) --
The ARN of the AWS Key Management Service (AWS KMS) CMK used for encryption.

SnapshotId (string) --
The ID of the snapshot.

VolumeSize (integer) --
The size of the volume, in GiB.

VolumeType (string) --
The volume type.



NoDevice (string) --
Suppresses the specified device included in the block device mapping of the AMI.





NetworkInterfaces (list) --
The network interfaces.

(dict) --
Describes a network interface.

AssociatePublicIpAddress (boolean) --
Indicates whether to associate a public IPv4 address with eth0 for a new network interface.

DeleteOnTermination (boolean) --
Indicates whether the network interface is deleted when the instance is terminated.

Description (string) --
A description for the network interface.

DeviceIndex (integer) --
The device index for the network interface attachment.

Groups (list) --
The IDs of one or more security groups.

(string) --


InterfaceType (string) --
The type of network interface.

Ipv6AddressCount (integer) --
The number of IPv6 addresses for the network interface.

Ipv6Addresses (list) --
The IPv6 addresses for the network interface.

(dict) --
Describes an IPv6 address.

Ipv6Address (string) --
The IPv6 address.





NetworkInterfaceId (string) --
The ID of the network interface.

PrivateIpAddress (string) --
The primary private IPv4 address of the network interface.

PrivateIpAddresses (list) --
One or more private IPv4 addresses.

(dict) --
Describes a secondary private IPv4 address for a network interface.

Primary (boolean) --
Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.

PrivateIpAddress (string) --
The private IPv4 addresses.





SecondaryPrivateIpAddressCount (integer) --
The number of secondary private IPv4 addresses for the network interface.

SubnetId (string) --
The ID of the subnet for the network interface.





ImageId (string) --
The ID of the AMI that was used to launch the instance.

InstanceType (string) --
The instance type.

KeyName (string) --
The name of the key pair.

Monitoring (dict) --
The monitoring for the instance.

Enabled (boolean) --
Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.



Placement (dict) --
The placement of the instance.

AvailabilityZone (string) --
The Availability Zone of the instance.

Affinity (string) --
The affinity setting for the instance on the Dedicated Host.

GroupName (string) --
The name of the placement group for the instance.

HostId (string) --
The ID of the Dedicated Host for the instance.

Tenancy (string) --
The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.

SpreadDomain (string) --
Reserved for future use.

HostResourceGroupArn (string) --
The ARN of the host resource group in which to launch the instances.

PartitionNumber (integer) --
The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition .



RamDiskId (string) --
The ID of the RAM disk, if applicable.

DisableApiTermination (boolean) --
If set to true , indicates that the instance cannot be terminated using the Amazon EC2 console, command line tool, or API.

InstanceInitiatedShutdownBehavior (string) --
Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).

UserData (string) --
The user data for the instance.

TagSpecifications (list) --
The tags.

(dict) --
The tag specification for the launch template.

ResourceType (string) --
The type of resource.

Tags (list) --
The tags for the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









ElasticGpuSpecifications (list) --
The elastic GPU specification.

(dict) --
Describes an elastic GPU.

Type (string) --
The elastic GPU type.





ElasticInferenceAccelerators (list) --
The elastic inference accelerator for the instance.

(dict) --
Describes an elastic inference accelerator.

Type (string) --
The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.

Count (integer) --
The number of elastic inference accelerators to attach to the instance.
Default: 1





SecurityGroupIds (list) --
The security group IDs.

(string) --


SecurityGroups (list) --
The security group names.

(string) --


InstanceMarketOptions (dict) --
The market (purchasing) option for the instances.

MarketType (string) --
The market type.

SpotOptions (dict) --
The options for Spot Instances.

MaxPrice (string) --
The maximum hourly price you\'re willing to pay for the Spot Instances.

SpotInstanceType (string) --
The Spot Instance request type.

BlockDurationMinutes (integer) --
The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).

ValidUntil (datetime) --
The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.

InstanceInterruptionBehavior (string) --
The behavior when a Spot Instance is interrupted.





CreditSpecification (dict) --
The credit option for CPU usage of the instance.

CpuCredits (string) --
The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited .



CpuOptions (dict) --
The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide .

CoreCount (integer) --
The number of CPU cores for the instance.

ThreadsPerCore (integer) --
The number of threads per CPU core.



CapacityReservationSpecification (dict) --
Information about the Capacity Reservation targeting option.

CapacityReservationPreference (string) --
Indicates the instance\'s Capacity Reservation preferences. Possible preferences include:

open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.


CapacityReservationTarget (dict) --
Information about the target Capacity Reservation.

CapacityReservationId (string) --
The ID of the Capacity Reservation.





LicenseSpecifications (list) --
The license configurations.

(dict) --
Describes a license configuration.

LicenseConfigurationArn (string) --
The Amazon Resource Name (ARN) of the license configuration.





HibernationOptions (dict) --
Indicates whether an instance is configured for hibernation. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide .

Configured (boolean) --
If this parameter is set to true , the instance is enabled for hibernation; otherwise, it is not enabled for hibernation.



MetadataOptions (dict) --
The metadata options for the instance. For more information, see Instance Metadata and User Data in the Amazon Elastic Compute Cloud User Guide .

State (string) --
The state of the metadata option changes.

pending - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.
applied - The metadata options have been successfully applied on the instance.


HttpTokens (string) --
The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .
If the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.
If the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.

HttpPutResponseHopLimit (integer) --
The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
Default: 1
Possible values: Integers from 1 to 64

HttpEndpoint (string) --
This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .

Note
If you specify a value of disabled , you will not be able to access your instance metadata.










NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the versions for the specified launch template.
response = client.describe_launch_template_versions(
    LaunchTemplateId='068f72b72934aff71',
)

print(response)


Expected Output:
{
    'LaunchTemplateVersions': [
        {
            'CreateTime': datetime(2017, 11, 20, 13, 12, 32, 0, 324, 0),
            'CreatedBy': 'arn:aws:iam::123456789102:root',
            'DefaultVersion': False,
            'LaunchTemplateData': {
                'ImageId': 'ami-6057e21a',
                'InstanceType': 't2.medium',
                'KeyName': 'kp-us-east',
                'NetworkInterfaces': [
                    {
                        'DeviceIndex': 0,
                        'Groups': [
                            'sg-7c227019',
                        ],
                        'SubnetId': 'subnet-1a2b3c4d',
                    },
                ],
            },
            'LaunchTemplateId': 'lt-068f72b72934aff71',
            'LaunchTemplateName': 'Webservers',
            'VersionNumber': 2,
        },
        {
            'CreateTime': datetime(2017, 11, 20, 12, 52, 33, 0, 324, 0),
            'CreatedBy': 'arn:aws:iam::123456789102:root',
            'DefaultVersion': True,
            'LaunchTemplateData': {
                'ImageId': 'ami-aabbcc11',
                'InstanceType': 't2.medium',
                'KeyName': 'kp-us-east',
                'NetworkInterfaces': [
                    {
                        'AssociatePublicIpAddress': True,
                        'DeleteOnTermination': False,
                        'DeviceIndex': 0,
                        'Groups': [
                            'sg-7c227019',
                        ],
                        'SubnetId': 'subnet-7b16de0c',
                    },
                ],
                'UserData': '',
            },
            'LaunchTemplateId': 'lt-068f72b72934aff71',
            'LaunchTemplateName': 'Webservers',
            'VersionNumber': 1,
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'LaunchTemplateVersions': [
            {
                'LaunchTemplateId': 'string',
                'LaunchTemplateName': 'string',
                'VersionNumber': 123,
                'VersionDescription': 'string',
                'CreateTime': datetime(2015, 1, 1),
                'CreatedBy': 'string',
                'DefaultVersion': True|False,
                'LaunchTemplateData': {
                    'KernelId': 'string',
                    'EbsOptimized': True|False,
                    'IamInstanceProfile': {
                        'Arn': 'string',
                        'Name': 'string'
                    },
                    'BlockDeviceMappings': [
                        {
                            'DeviceName': 'string',
                            'VirtualName': 'string',
                            'Ebs': {
                                'Encrypted': True|False,
                                'DeleteOnTermination': True|False,
                                'Iops': 123,
                                'KmsKeyId': 'string',
                                'SnapshotId': 'string',
                                'VolumeSize': 123,
                                'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1'
                            },
                            'NoDevice': 'string'
                        },
                    ],
                    'NetworkInterfaces': [
                        {
                            'AssociatePublicIpAddress': True|False,
                            'DeleteOnTermination': True|False,
                            'Description': 'string',
                            'DeviceIndex': 123,
                            'Groups': [
                                'string',
                            ],
                            'InterfaceType': 'string',
                            'Ipv6AddressCount': 123,
                            'Ipv6Addresses': [
                                {
                                    'Ipv6Address': 'string'
                                },
                            ],
                            'NetworkInterfaceId': 'string',
                            'PrivateIpAddress': 'string',
                            'PrivateIpAddresses': [
                                {
                                    'Primary': True|False,
                                    'PrivateIpAddress': 'string'
                                },
                            ],
                            'SecondaryPrivateIpAddressCount': 123,
                            'SubnetId': 'string'
                        },
                    ],
                    'ImageId': 'string',
                    'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                    'KeyName': 'string',
                    'Monitoring': {
                        'Enabled': True|False
                    },
                    'Placement': {
                        'AvailabilityZone': 'string',
                        'Affinity': 'string',
                        'GroupName': 'string',
                        'HostId': 'string',
                        'Tenancy': 'default'|'dedicated'|'host',
                        'SpreadDomain': 'string',
                        'HostResourceGroupArn': 'string',
                        'PartitionNumber': 123
                    },
                    'RamDiskId': 'string',
                    'DisableApiTermination': True|False,
                    'InstanceInitiatedShutdownBehavior': 'stop'|'terminate',
                    'UserData': 'string',
                    'TagSpecifications': [
                        {
                            'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                            'Tags': [
                                {
                                    'Key': 'string',
                                    'Value': 'string'
                                },
                            ]
                        },
                    ],
                    'ElasticGpuSpecifications': [
                        {
                            'Type': 'string'
                        },
                    ],
                    'ElasticInferenceAccelerators': [
                        {
                            'Type': 'string',
                            'Count': 123
                        },
                    ],
                    'SecurityGroupIds': [
                        'string',
                    ],
                    'SecurityGroups': [
                        'string',
                    ],
                    'InstanceMarketOptions': {
                        'MarketType': 'spot',
                        'SpotOptions': {
                            'MaxPrice': 'string',
                            'SpotInstanceType': 'one-time'|'persistent',
                            'BlockDurationMinutes': 123,
                            'ValidUntil': datetime(2015, 1, 1),
                            'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
                        }
                    },
                    'CreditSpecification': {
                        'CpuCredits': 'string'
                    },
                    'CpuOptions': {
                        'CoreCount': 123,
                        'ThreadsPerCore': 123
                    },
                    'CapacityReservationSpecification': {
                        'CapacityReservationPreference': 'open'|'none',
                        'CapacityReservationTarget': {
                            'CapacityReservationId': 'string'
                        }
                    },
                    'LicenseSpecifications': [
                        {
                            'LicenseConfigurationArn': 'string'
                        },
                    ],
                    'HibernationOptions': {
                        'Configured': True|False
                    },
                    'MetadataOptions': {
                        'State': 'pending'|'applied',
                        'HttpTokens': 'optional'|'required',
                        'HttpPutResponseHopLimit': 123,
                        'HttpEndpoint': 'disabled'|'enabled'
                    }
                }
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_launch_templates(DryRun=None, LaunchTemplateIds=None, LaunchTemplateNames=None, Filters=None, NextToken=None, MaxResults=None):
    """
    Describes one or more launch templates.
    See also: AWS API Documentation
    
    Examples
    This example describes the specified launch template.
    Expected Output:
    
    :example: response = client.describe_launch_templates(
        DryRun=True|False,
        LaunchTemplateIds=[
            'string',
        ],
        LaunchTemplateNames=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type LaunchTemplateIds: list
    :param LaunchTemplateIds: One or more launch template IDs.\n\n(string) --\n\n

    :type LaunchTemplateNames: list
    :param LaunchTemplateNames: One or more launch template names.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\ncreate-time - The time the launch template was created.\nlaunch-template-name - The name of the launch template.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type NextToken: string
    :param NextToken: The token to request the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 1 and 200.

    :rtype: dict

ReturnsResponse Syntax
{
    'LaunchTemplates': [
        {
            'LaunchTemplateId': 'string',
            'LaunchTemplateName': 'string',
            'CreateTime': datetime(2015, 1, 1),
            'CreatedBy': 'string',
            'DefaultVersionNumber': 123,
            'LatestVersionNumber': 123,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

LaunchTemplates (list) --
Information about the launch templates.

(dict) --
Describes a launch template.

LaunchTemplateId (string) --
The ID of the launch template.

LaunchTemplateName (string) --
The name of the launch template.

CreateTime (datetime) --
The time launch template was created.

CreatedBy (string) --
The principal that created the launch template.

DefaultVersionNumber (integer) --
The version number of the default version of the launch template.

LatestVersionNumber (integer) --
The version number of the latest version of the launch template.

Tags (list) --
The tags for the launch template.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the specified launch template.
response = client.describe_launch_templates(
    LaunchTemplateIds=[
        'lt-01238c059e3466abc',
    ],
)

print(response)


Expected Output:
{
    'LaunchTemplates': [
        {
            'CreateTime': datetime(2018, 1, 16, 4, 32, 57, 1, 16, 0),
            'CreatedBy': 'arn:aws:iam::123456789012:root',
            'DefaultVersionNumber': 1,
            'LatestVersionNumber': 1,
            'LaunchTemplateId': 'lt-01238c059e3466abc',
            'LaunchTemplateName': 'my-template',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'LaunchTemplates': [
            {
                'LaunchTemplateId': 'string',
                'LaunchTemplateName': 'string',
                'CreateTime': datetime(2015, 1, 1),
                'CreatedBy': 'string',
                'DefaultVersionNumber': 123,
                'LatestVersionNumber': 123,
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_local_gateway_route_table_virtual_interface_group_associations(LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes the associations between virtual interface groups and local gateway route tables.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_local_gateway_route_table_virtual_interface_group_associations(
        LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds: list
    :param LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds: The IDs of the associations.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\nlocal-gateway-id - The ID of a local gateway.\nlocal-gateway-route-table-id - The ID of the local gateway route table.\nlocal-gateway-route-table-virtual-interface-group-association-id - The ID of the association.\nlocal-gateway-route-table-virtual-interface-group-id - The ID of the virtual interface group.\nstate - The state of the association.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'LocalGatewayRouteTableVirtualInterfaceGroupAssociations': [
        {
            'LocalGatewayRouteTableVirtualInterfaceGroupAssociationId': 'string',
            'LocalGatewayVirtualInterfaceGroupId': 'string',
            'LocalGatewayId': 'string',
            'LocalGatewayRouteTableId': 'string',
            'State': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

LocalGatewayRouteTableVirtualInterfaceGroupAssociations (list) --
Information about the associations.

(dict) --
Describes an association between a local gateway route table and a virtual interface group.

LocalGatewayRouteTableVirtualInterfaceGroupAssociationId (string) --
The ID of the association.

LocalGatewayVirtualInterfaceGroupId (string) --
The ID of the virtual interface group.

LocalGatewayId (string) --
The ID of the local gateway.

LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.

State (string) --
The state of the association.

Tags (list) --
The tags assigned to the association.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'LocalGatewayRouteTableVirtualInterfaceGroupAssociations': [
            {
                'LocalGatewayRouteTableVirtualInterfaceGroupAssociationId': 'string',
                'LocalGatewayVirtualInterfaceGroupId': 'string',
                'LocalGatewayId': 'string',
                'LocalGatewayRouteTableId': 'string',
                'State': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_local_gateway_route_table_vpc_associations(LocalGatewayRouteTableVpcAssociationIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes the specified associations between VPCs and local gateway route tables.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_local_gateway_route_table_vpc_associations(
        LocalGatewayRouteTableVpcAssociationIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type LocalGatewayRouteTableVpcAssociationIds: list
    :param LocalGatewayRouteTableVpcAssociationIds: The IDs of the associations.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\nlocal-gateway-id - The ID of a local gateway.\nlocal-gateway-route-table-id - The ID of the local gateway route table.\nlocal-gateway-route-table-vpc-association-id - The ID of the association.\nstate - The state of the association.\nvpc-id - The ID of the VPC.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'LocalGatewayRouteTableVpcAssociations': [
        {
            'LocalGatewayRouteTableVpcAssociationId': 'string',
            'LocalGatewayRouteTableId': 'string',
            'LocalGatewayId': 'string',
            'VpcId': 'string',
            'State': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

LocalGatewayRouteTableVpcAssociations (list) --
Information about the associations.

(dict) --
Describes an association between a local gateway route table and a VPC.

LocalGatewayRouteTableVpcAssociationId (string) --
The ID of the association.

LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.

LocalGatewayId (string) --
The ID of the local gateway.

VpcId (string) --
The ID of the VPC.

State (string) --
The state of the association.

Tags (list) --
The tags assigned to the association.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'LocalGatewayRouteTableVpcAssociations': [
            {
                'LocalGatewayRouteTableVpcAssociationId': 'string',
                'LocalGatewayRouteTableId': 'string',
                'LocalGatewayId': 'string',
                'VpcId': 'string',
                'State': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_local_gateway_route_tables(LocalGatewayRouteTableIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes one or more local gateway route tables. By default, all local gateway route tables are described. Alternatively, you can filter the results.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_local_gateway_route_tables(
        LocalGatewayRouteTableIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type LocalGatewayRouteTableIds: list
    :param LocalGatewayRouteTableIds: The IDs of the local gateway route tables.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\nlocal-gateway-id - The ID of a local gateway.\nlocal-gateway-route-table-id - The ID of a local gateway route table.\noutpost-arn - The Amazon Resource Name (ARN) of the Outpost.\nstate - The state of the local gateway route table.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'LocalGatewayRouteTables': [
        {
            'LocalGatewayRouteTableId': 'string',
            'LocalGatewayId': 'string',
            'OutpostArn': 'string',
            'State': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

LocalGatewayRouteTables (list) --
Information about the local gateway route tables.

(dict) --
Describes a local gateway route table.

LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.

LocalGatewayId (string) --
The ID of the local gateway.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

State (string) --
The state of the local gateway route table.

Tags (list) --
The tags assigned to the local gateway route table.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'LocalGatewayRouteTables': [
            {
                'LocalGatewayRouteTableId': 'string',
                'LocalGatewayId': 'string',
                'OutpostArn': 'string',
                'State': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_local_gateway_virtual_interface_groups(LocalGatewayVirtualInterfaceGroupIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes the specified local gateway virtual interface groups.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_local_gateway_virtual_interface_groups(
        LocalGatewayVirtualInterfaceGroupIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type LocalGatewayVirtualInterfaceGroupIds: list
    :param LocalGatewayVirtualInterfaceGroupIds: The IDs of the virtual interface groups.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\nlocal-gateway-id - The ID of a local gateway.\nlocal-gateway-virtual-interface-id - The ID of the virtual interface.\nlocal-gateway-virtual-interface-group-id - The ID of the virtual interface group.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'LocalGatewayVirtualInterfaceGroups': [
        {
            'LocalGatewayVirtualInterfaceGroupId': 'string',
            'LocalGatewayVirtualInterfaceIds': [
                'string',
            ],
            'LocalGatewayId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

LocalGatewayVirtualInterfaceGroups (list) --
The virtual interface groups.

(dict) --
Describes a local gateway virtual interface group.

LocalGatewayVirtualInterfaceGroupId (string) --
The ID of the virtual interface group.

LocalGatewayVirtualInterfaceIds (list) --
The IDs of the virtual interfaces.

(string) --


LocalGatewayId (string) --
The ID of the local gateway.

Tags (list) --
The tags assigned to the virtual interface group.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'LocalGatewayVirtualInterfaceGroups': [
            {
                'LocalGatewayVirtualInterfaceGroupId': 'string',
                'LocalGatewayVirtualInterfaceIds': [
                    'string',
                ],
                'LocalGatewayId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_local_gateway_virtual_interfaces(LocalGatewayVirtualInterfaceIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes the specified local gateway virtual interfaces.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_local_gateway_virtual_interfaces(
        LocalGatewayVirtualInterfaceIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type LocalGatewayVirtualInterfaceIds: list
    :param LocalGatewayVirtualInterfaceIds: The IDs of the virtual interfaces.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'LocalGatewayVirtualInterfaces': [
        {
            'LocalGatewayVirtualInterfaceId': 'string',
            'LocalGatewayId': 'string',
            'Vlan': 123,
            'LocalAddress': 'string',
            'PeerAddress': 'string',
            'LocalBgpAsn': 123,
            'PeerBgpAsn': 123,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

LocalGatewayVirtualInterfaces (list) --
Information about the virtual interfaces.

(dict) --
Describes a local gateway virtual interface.

LocalGatewayVirtualInterfaceId (string) --
The ID of the virtual interface.

LocalGatewayId (string) --
The ID of the local gateway.

Vlan (integer) --
The ID of the VLAN.

LocalAddress (string) --
The local address.

PeerAddress (string) --
The peer address.

LocalBgpAsn (integer) --
The Border Gateway Protocol (BGP) Autonomous System Number (ASN) of the local gateway.

PeerBgpAsn (integer) --
The peer BGP ASN.

Tags (list) --
The tags assigned to the virtual interface.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'LocalGatewayVirtualInterfaces': [
            {
                'LocalGatewayVirtualInterfaceId': 'string',
                'LocalGatewayId': 'string',
                'Vlan': 123,
                'LocalAddress': 'string',
                'PeerAddress': 'string',
                'LocalBgpAsn': 123,
                'PeerBgpAsn': 123,
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_local_gateways(LocalGatewayIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes one or more local gateways. By default, all local gateways are described. Alternatively, you can filter the results.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_local_gateways(
        LocalGatewayIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type LocalGatewayIds: list
    :param LocalGatewayIds: One or more filters.\n\nlocal-gateway-id - The ID of a local gateway.\nlocal-gateway-route-table-id - The ID of the local gateway route table.\nlocal-gateway-route-table-virtual-interface-group-association-id - The ID of the association.\nlocal-gateway-route-table-virtual-interface-group-id - The ID of the virtual interface group.\noutpost-arn - The Amazon Resource Name (ARN) of the Outpost.\nstate - The state of the association.\n\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'LocalGateways': [
        {
            'LocalGatewayId': 'string',
            'OutpostArn': 'string',
            'OwnerId': 'string',
            'State': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

LocalGateways (list) --
Information about the local gateways.

(dict) --
Describes a local gateway.

LocalGatewayId (string) --
The ID of the local gateway.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

OwnerId (string) --
The ID of the AWS account ID that owns the local gateway.

State (string) --
The state of the local gateway.

Tags (list) --
The tags assigned to the local gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'LocalGateways': [
            {
                'LocalGatewayId': 'string',
                'OutpostArn': 'string',
                'OwnerId': 'string',
                'State': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_moving_addresses(Filters=None, DryRun=None, MaxResults=None, NextToken=None, PublicIps=None):
    """
    Describes your Elastic IP addresses that are being moved to the EC2-VPC platform, or that are being restored to the EC2-Classic platform. This request does not return information about any other Elastic IP addresses in your account.
    See also: AWS API Documentation
    
    Examples
    This example describes all of your moving Elastic IP addresses.
    Expected Output:
    
    :example: response = client.describe_moving_addresses(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        MaxResults=123,
        NextToken='string',
        PublicIps=[
            'string',
        ]
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\nmoving-status - The status of the Elastic IP address (MovingToVpc | RestoringToClassic ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1000; if MaxResults is given a value outside of this range, an error is returned.\nDefault: If no value is provided, the default is 1000.\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type PublicIps: list
    :param PublicIps: One or more Elastic IP addresses.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'MovingAddressStatuses': [
        {
            'MoveStatus': 'movingToVpc'|'restoringToClassic',
            'PublicIp': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

MovingAddressStatuses (list) --
The status for each Elastic IP address.

(dict) --
Describes the status of a moving Elastic IP address.

MoveStatus (string) --
The status of the Elastic IP address that\'s being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.

PublicIp (string) --
The Elastic IP address.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes all of your moving Elastic IP addresses.
response = client.describe_moving_addresses(
)

print(response)


Expected Output:
{
    'MovingAddressStatuses': [
        {
            'MoveStatus': 'MovingToVpc',
            'PublicIp': '198.51.100.0',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'MovingAddressStatuses': [
            {
                'MoveStatus': 'movingToVpc'|'restoringToClassic',
                'PublicIp': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_nat_gateways(DryRun=None, Filters=None, MaxResults=None, NatGatewayIds=None, NextToken=None):
    """
    Describes one or more of your NAT gateways.
    See also: AWS API Documentation
    
    Examples
    This example describes the NAT gateway for the specified VPC.
    Expected Output:
    
    :example: response = client.describe_nat_gateways(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NatGatewayIds=[
            'string',
        ],
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: One or more filters.\n\nnat-gateway-id - The ID of the NAT gateway.\nstate - The state of the NAT gateway (pending | failed | available | deleting | deleted ).\nsubnet-id - The ID of the subnet in which the NAT gateway resides.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvpc-id - The ID of the VPC in which the NAT gateway resides.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NatGatewayIds: list
    :param NatGatewayIds: One or more NAT gateway IDs.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'NatGateways': [
        {
            'CreateTime': datetime(2015, 1, 1),
            'DeleteTime': datetime(2015, 1, 1),
            'FailureCode': 'string',
            'FailureMessage': 'string',
            'NatGatewayAddresses': [
                {
                    'AllocationId': 'string',
                    'NetworkInterfaceId': 'string',
                    'PrivateIp': 'string',
                    'PublicIp': 'string'
                },
            ],
            'NatGatewayId': 'string',
            'ProvisionedBandwidth': {
                'ProvisionTime': datetime(2015, 1, 1),
                'Provisioned': 'string',
                'RequestTime': datetime(2015, 1, 1),
                'Requested': 'string',
                'Status': 'string'
            },
            'State': 'pending'|'failed'|'available'|'deleting'|'deleted',
            'SubnetId': 'string',
            'VpcId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

NatGateways (list) --
Information about the NAT gateways.

(dict) --
Describes a NAT gateway.

CreateTime (datetime) --
The date and time the NAT gateway was created.

DeleteTime (datetime) --
The date and time the NAT gateway was deleted, if applicable.

FailureCode (string) --
If the NAT gateway could not be created, specifies the error code for the failure. (InsufficientFreeAddressesInSubnet | Gateway.NotAttached | InvalidAllocationID.NotFound | Resource.AlreadyAssociated | InternalError | InvalidSubnetID.NotFound )

FailureMessage (string) --
If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code.

For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to create this NAT gateway"
For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached"
For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway"
For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated"
For InternalError: "Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again."
For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist or could not be found."


NatGatewayAddresses (list) --
Information about the IP addresses and network interface associated with the NAT gateway.

(dict) --
Describes the IP addresses and network interface associated with a NAT gateway.

AllocationId (string) --
The allocation ID of the Elastic IP address that\'s associated with the NAT gateway.

NetworkInterfaceId (string) --
The ID of the network interface associated with the NAT gateway.

PrivateIp (string) --
The private IP address associated with the Elastic IP address.

PublicIp (string) --
The Elastic IP address associated with the NAT gateway.





NatGatewayId (string) --
The ID of the NAT gateway.

ProvisionedBandwidth (dict) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

ProvisionTime (datetime) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

Provisioned (string) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

RequestTime (datetime) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

Requested (string) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .

Status (string) --
Reserved. If you need to sustain traffic greater than the documented limits , contact us through the Support Center .



State (string) --
The state of the NAT gateway.

pending : The NAT gateway is being created and is not ready to process traffic.
failed : The NAT gateway could not be created. Check the failureCode and failureMessage fields for the reason.
available : The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.
deleting : The NAT gateway is in the process of being terminated and may still be processing traffic.
deleted : The NAT gateway has been terminated and is no longer processing traffic.


SubnetId (string) --
The ID of the subnet in which the NAT gateway is located.

VpcId (string) --
The ID of the VPC in which the NAT gateway is located.

Tags (list) --
The tags for the NAT gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the NAT gateway for the specified VPC.
response = client.describe_nat_gateways(
    Filter=[
        {
            'Name': 'vpc-id',
            'Values': [
                'vpc-1a2b3c4d',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'NatGateways': [
        {
            'CreateTime': datetime(2015, 12, 1, 12, 26, 55, 1, 335, 0),
            'NatGatewayAddresses': [
                {
                    'AllocationId': 'eipalloc-89c620ec',
                    'NetworkInterfaceId': 'eni-9dec76cd',
                    'PrivateIp': '10.0.0.149',
                    'PublicIp': '198.11.222.333',
                },
            ],
            'NatGatewayId': 'nat-05dba92075d71c408',
            'State': 'available',
            'SubnetId': 'subnet-847e4dc2',
            'VpcId': 'vpc-1a2b3c4d',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NatGateways': [
            {
                'CreateTime': datetime(2015, 1, 1),
                'DeleteTime': datetime(2015, 1, 1),
                'FailureCode': 'string',
                'FailureMessage': 'string',
                'NatGatewayAddresses': [
                    {
                        'AllocationId': 'string',
                        'NetworkInterfaceId': 'string',
                        'PrivateIp': 'string',
                        'PublicIp': 'string'
                    },
                ],
                'NatGatewayId': 'string',
                'ProvisionedBandwidth': {
                    'ProvisionTime': datetime(2015, 1, 1),
                    'Provisioned': 'string',
                    'RequestTime': datetime(2015, 1, 1),
                    'Requested': 'string',
                    'Status': 'string'
                },
                'State': 'pending'|'failed'|'available'|'deleting'|'deleted',
                'SubnetId': 'string',
                'VpcId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to create this NAT gateway"
    For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached"
    For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway"
    For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated"
    For InternalError: "Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again."
    For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist or could not be found."
    
    """
    pass

def describe_network_acls(Filters=None, DryRun=None, NetworkAclIds=None, NextToken=None, MaxResults=None):
    """
    Describes one or more of your network ACLs.
    For more information, see Network ACLs in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the specified network ACL.
    Expected Output:
    
    :example: response = client.describe_network_acls(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        NetworkAclIds=[
            'string',
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\nassociation.association-id - The ID of an association ID for the ACL.\nassociation.network-acl-id - The ID of the network ACL involved in the association.\nassociation.subnet-id - The ID of the subnet involved in the association.\ndefault - Indicates whether the ACL is the default network ACL for the VPC.\nentry.cidr - The IPv4 CIDR range specified in the entry.\nentry.icmp.code - The ICMP code specified in the entry, if any.\nentry.icmp.type - The ICMP type specified in the entry, if any.\nentry.ipv6-cidr - The IPv6 CIDR range specified in the entry.\nentry.port-range.from - The start of the port range specified in the entry.\nentry.port-range.to - The end of the port range specified in the entry.\nentry.protocol - The protocol specified in the entry (tcp | udp | icmp or a protocol number).\nentry.rule-action - Allows or denies the matching traffic (allow | deny ).\nentry.rule-number - The number of an entry (in other words, rule) in the set of ACL entries.\nnetwork-acl-id - The ID of the network ACL.\nowner-id - The ID of the AWS account that owns the network ACL.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvpc-id - The ID of the VPC for the network ACL.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NetworkAclIds: list
    :param NetworkAclIds: One or more network ACL IDs.\nDefault: Describes all your network ACLs.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :rtype: dict

ReturnsResponse Syntax
{
    'NetworkAcls': [
        {
            'Associations': [
                {
                    'NetworkAclAssociationId': 'string',
                    'NetworkAclId': 'string',
                    'SubnetId': 'string'
                },
            ],
            'Entries': [
                {
                    'CidrBlock': 'string',
                    'Egress': True|False,
                    'IcmpTypeCode': {
                        'Code': 123,
                        'Type': 123
                    },
                    'Ipv6CidrBlock': 'string',
                    'PortRange': {
                        'From': 123,
                        'To': 123
                    },
                    'Protocol': 'string',
                    'RuleAction': 'allow'|'deny',
                    'RuleNumber': 123
                },
            ],
            'IsDefault': True|False,
            'NetworkAclId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcId': 'string',
            'OwnerId': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

NetworkAcls (list) --
Information about one or more network ACLs.

(dict) --
Describes a network ACL.

Associations (list) --
Any associations between the network ACL and one or more subnets

(dict) --
Describes an association between a network ACL and a subnet.

NetworkAclAssociationId (string) --
The ID of the association between a network ACL and a subnet.

NetworkAclId (string) --
The ID of the network ACL.

SubnetId (string) --
The ID of the subnet.





Entries (list) --
One or more entries (rules) in the network ACL.

(dict) --
Describes an entry in a network ACL.

CidrBlock (string) --
The IPv4 network range to allow or deny, in CIDR notation.

Egress (boolean) --
Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).

IcmpTypeCode (dict) --
ICMP protocol: The ICMP type and code.

Code (integer) --
The ICMP code. A value of -1 means all codes for the specified ICMP type.

Type (integer) --
The ICMP type. A value of -1 means all types.



Ipv6CidrBlock (string) --
The IPv6 network range to allow or deny, in CIDR notation.

PortRange (dict) --
TCP or UDP protocols: The range of ports the rule applies to.

From (integer) --
The first port in the range.

To (integer) --
The last port in the range.



Protocol (string) --
The protocol number. A value of "-1" means all protocols.

RuleAction (string) --
Indicates whether to allow or deny the traffic that matches the rule.

RuleNumber (integer) --
The rule number for the entry. ACL entries are processed in ascending order by rule number.





IsDefault (boolean) --
Indicates whether this is the default network ACL for the VPC.

NetworkAclId (string) --
The ID of the network ACL.

Tags (list) --
Any tags assigned to the network ACL.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcId (string) --
The ID of the VPC for the network ACL.

OwnerId (string) --
The ID of the AWS account that owns the network ACL.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the specified network ACL.
response = client.describe_network_acls(
    NetworkAclIds=[
        'acl-5fb85d36',
    ],
)

print(response)


Expected Output:
{
    'NetworkAcls': [
        {
            'Associations': [
                {
                    'NetworkAclAssociationId': 'aclassoc-66ea5f0b',
                    'NetworkAclId': 'acl-9aeb5ef7',
                    'SubnetId': 'subnet-65ea5f08',
                },
            ],
            'Entries': [
                {
                    'CidrBlock': '0.0.0.0/0',
                    'Egress': True,
                    'Protocol': '-1',
                    'RuleAction': 'deny',
                    'RuleNumber': 32767,
                },
                {
                    'CidrBlock': '0.0.0.0/0',
                    'Egress': False,
                    'Protocol': '-1',
                    'RuleAction': 'deny',
                    'RuleNumber': 32767,
                },
            ],
            'IsDefault': False,
            'NetworkAclId': 'acl-5fb85d36',
            'Tags': [
            ],
            'VpcId': 'vpc-a01106c2',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NetworkAcls': [
            {
                'Associations': [
                    {
                        'NetworkAclAssociationId': 'string',
                        'NetworkAclId': 'string',
                        'SubnetId': 'string'
                    },
                ],
                'Entries': [
                    {
                        'CidrBlock': 'string',
                        'Egress': True|False,
                        'IcmpTypeCode': {
                            'Code': 123,
                            'Type': 123
                        },
                        'Ipv6CidrBlock': 'string',
                        'PortRange': {
                            'From': 123,
                            'To': 123
                        },
                        'Protocol': 'string',
                        'RuleAction': 'allow'|'deny',
                        'RuleNumber': 123
                    },
                ],
                'IsDefault': True|False,
                'NetworkAclId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VpcId': 'string',
                'OwnerId': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_network_interface_attribute(Attribute=None, DryRun=None, NetworkInterfaceId=None):
    """
    Describes a network interface attribute. You can specify only one attribute at a time.
    See also: AWS API Documentation
    
    Examples
    This example describes the attachment attribute of the specified network interface.
    Expected Output:
    This example describes the description attribute of the specified network interface.
    Expected Output:
    This example describes the groupSet attribute of the specified network interface.
    Expected Output:
    This example describes the sourceDestCheck attribute of the specified network interface.
    Expected Output:
    
    :example: response = client.describe_network_interface_attribute(
        Attribute='description'|'groupSet'|'sourceDestCheck'|'attachment',
        DryRun=True|False,
        NetworkInterfaceId='string'
    )
    
    
    :type Attribute: string
    :param Attribute: The attribute of the network interface. This parameter is required.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Attachment': {
        'AttachTime': datetime(2015, 1, 1),
        'AttachmentId': 'string',
        'DeleteOnTermination': True|False,
        'DeviceIndex': 123,
        'InstanceId': 'string',
        'InstanceOwnerId': 'string',
        'Status': 'attaching'|'attached'|'detaching'|'detached'
    },
    'Description': {
        'Value': 'string'
    },
    'Groups': [
        {
            'GroupName': 'string',
            'GroupId': 'string'
        },
    ],
    'NetworkInterfaceId': 'string',
    'SourceDestCheck': {
        'Value': True|False
    }
}


Response Structure

(dict) --
Contains the output of DescribeNetworkInterfaceAttribute.

Attachment (dict) --
The attachment (if any) of the network interface.

AttachTime (datetime) --
The timestamp indicating when the attachment initiated.

AttachmentId (string) --
The ID of the network interface attachment.

DeleteOnTermination (boolean) --
Indicates whether the network interface is deleted when the instance is terminated.

DeviceIndex (integer) --
The device index of the network interface attachment on the instance.

InstanceId (string) --
The ID of the instance.

InstanceOwnerId (string) --
The AWS account ID of the owner of the instance.

Status (string) --
The attachment state.



Description (dict) --
The description of the network interface.

Value (string) --
The attribute value. The value is case-sensitive.



Groups (list) --
The security groups associated with the network interface.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





NetworkInterfaceId (string) --
The ID of the network interface.

SourceDestCheck (dict) --
Indicates whether source/destination checking is enabled.

Value (boolean) --
The attribute value. The valid values are true or false .









Examples
This example describes the attachment attribute of the specified network interface.
response = client.describe_network_interface_attribute(
    Attribute='attachment',
    NetworkInterfaceId='eni-686ea200',
)

print(response)


Expected Output:
{
    'Attachment': {
        'AttachTime': datetime(2015, 5, 21, 20, 2, 20, 3, 141, 0),
        'AttachmentId': 'eni-attach-43348162',
        'DeleteOnTermination': True,
        'DeviceIndex': 0,
        'InstanceId': 'i-1234567890abcdef0',
        'InstanceOwnerId': '123456789012',
        'Status': 'attached',
    },
    'NetworkInterfaceId': 'eni-686ea200',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the description attribute of the specified network interface.
response = client.describe_network_interface_attribute(
    Attribute='description',
    NetworkInterfaceId='eni-686ea200',
)

print(response)


Expected Output:
{
    'Description': {
        'Value': 'My description',
    },
    'NetworkInterfaceId': 'eni-686ea200',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the groupSet attribute of the specified network interface.
response = client.describe_network_interface_attribute(
    Attribute='groupSet',
    NetworkInterfaceId='eni-686ea200',
)

print(response)


Expected Output:
{
    'Groups': [
        {
            'GroupId': 'sg-903004f8',
            'GroupName': 'my-security-group',
        },
    ],
    'NetworkInterfaceId': 'eni-686ea200',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the sourceDestCheck attribute of the specified network interface.
response = client.describe_network_interface_attribute(
    Attribute='sourceDestCheck',
    NetworkInterfaceId='eni-686ea200',
)

print(response)


Expected Output:
{
    'NetworkInterfaceId': 'eni-686ea200',
    'SourceDestCheck': {
        'Value': True,
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Attachment': {
            'AttachTime': datetime(2015, 1, 1),
            'AttachmentId': 'string',
            'DeleteOnTermination': True|False,
            'DeviceIndex': 123,
            'InstanceId': 'string',
            'InstanceOwnerId': 'string',
            'Status': 'attaching'|'attached'|'detaching'|'detached'
        },
        'Description': {
            'Value': 'string'
        },
        'Groups': [
            {
                'GroupName': 'string',
                'GroupId': 'string'
            },
        ],
        'NetworkInterfaceId': 'string',
        'SourceDestCheck': {
            'Value': True|False
        }
    }
    
    
    """
    pass

def describe_network_interface_permissions(NetworkInterfacePermissionIds=None, Filters=None, NextToken=None, MaxResults=None):
    """
    Describes the permissions for your network interfaces.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_network_interface_permissions(
        NetworkInterfacePermissionIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type NetworkInterfacePermissionIds: list
    :param NetworkInterfacePermissionIds: One or more network interface permission IDs.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\nnetwork-interface-permission.network-interface-permission-id - The ID of the permission.\nnetwork-interface-permission.network-interface-id - The ID of the network interface.\nnetwork-interface-permission.aws-account-id - The AWS account ID.\nnetwork-interface-permission.aws-service - The AWS service.\nnetwork-interface-permission.permission - The type of permission (INSTANCE-ATTACH | EIP-ASSOCIATE ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type NextToken: string
    :param NextToken: The token to request the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. If this parameter is not specified, up to 50 results are returned by default.

    :rtype: dict

ReturnsResponse Syntax
{
    'NetworkInterfacePermissions': [
        {
            'NetworkInterfacePermissionId': 'string',
            'NetworkInterfaceId': 'string',
            'AwsAccountId': 'string',
            'AwsService': 'string',
            'Permission': 'INSTANCE-ATTACH'|'EIP-ASSOCIATE',
            'PermissionState': {
                'State': 'pending'|'granted'|'revoking'|'revoked',
                'StatusMessage': 'string'
            }
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --
Contains the output for DescribeNetworkInterfacePermissions.

NetworkInterfacePermissions (list) --
The network interface permissions.

(dict) --
Describes a permission for a network interface.

NetworkInterfacePermissionId (string) --
The ID of the network interface permission.

NetworkInterfaceId (string) --
The ID of the network interface.

AwsAccountId (string) --
The AWS account ID.

AwsService (string) --
The AWS service.

Permission (string) --
The type of permission.

PermissionState (dict) --
Information about the state of the permission.

State (string) --
The state of the permission.

StatusMessage (string) --
A status message, if applicable.







NextToken (string) --
The token to use to retrieve the next page of results.








    :return: {
        'NetworkInterfacePermissions': [
            {
                'NetworkInterfacePermissionId': 'string',
                'NetworkInterfaceId': 'string',
                'AwsAccountId': 'string',
                'AwsService': 'string',
                'Permission': 'INSTANCE-ATTACH'|'EIP-ASSOCIATE',
                'PermissionState': {
                    'State': 'pending'|'granted'|'revoking'|'revoked',
                    'StatusMessage': 'string'
                }
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_network_interfaces(Filters=None, DryRun=None, NetworkInterfaceIds=None, NextToken=None, MaxResults=None):
    """
    Describes one or more of your network interfaces.
    See also: AWS API Documentation
    
    Examples
    Expected Output:
    
    :example: response = client.describe_network_interfaces(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        NetworkInterfaceIds=[
            'string',
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\naddresses.private-ip-address - The private IPv4 addresses associated with the network interface.\naddresses.primary - Whether the private IPv4 address is the primary IP address associated with the network interface.\naddresses.association.public-ip - The association ID returned when the network interface was associated with the Elastic IP address (IPv4).\naddresses.association.owner-id - The owner ID of the addresses associated with the network interface.\nassociation.association-id - The association ID returned when the network interface was associated with an IPv4 address.\nassociation.allocation-id - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.\nassociation.ip-owner-id - The owner of the Elastic IP address (IPv4) associated with the network interface.\nassociation.public-ip - The address of the Elastic IP address (IPv4) bound to the network interface.\nassociation.public-dns-name - The public DNS name for the network interface (IPv4).\nattachment.attachment-id - The ID of the interface attachment.\nattachment.attach-time - The time that the network interface was attached to an instance.\nattachment.delete-on-termination - Indicates whether the attachment is deleted when an instance is terminated.\nattachment.device-index - The device index to which the network interface is attached.\nattachment.instance-id - The ID of the instance to which the network interface is attached.\nattachment.instance-owner-id - The owner ID of the instance to which the network interface is attached.\nattachment.nat-gateway-id - The ID of the NAT gateway to which the network interface is attached.\nattachment.status - The status of the attachment (attaching | attached | detaching | detached ).\navailability-zone - The Availability Zone of the network interface.\ndescription - The description of the network interface.\ngroup-id - The ID of a security group associated with the network interface.\ngroup-name - The name of a security group associated with the network interface.\nipv6-addresses.ipv6-address - An IPv6 address associated with the network interface.\nmac-address - The MAC address of the network interface.\nnetwork-interface-id - The ID of the network interface.\nowner-id - The AWS account ID of the network interface owner.\nprivate-ip-address - The private IPv4 address or addresses of the network interface.\nprivate-dns-name - The private DNS name of the network interface (IPv4).\nrequester-id - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).\nrequester-managed - Indicates whether the network interface is being managed by an AWS service (for example, AWS Management Console, Auto Scaling, and so on).\nsource-dest-check - Indicates whether the network interface performs source/destination checking. A value of true means checking is enabled, and false means checking is disabled. The value must be false for the network interface to perform network address translation (NAT) in your VPC.\nstatus - The status of the network interface. If the network interface is not attached to an instance, the status is available ; if a network interface is attached to an instance the status is in-use .\nsubnet-id - The ID of the subnet for the network interface.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvpc-id - The ID of the VPC for the network interface.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NetworkInterfaceIds: list
    :param NetworkInterfaceIds: One or more network interface IDs.\nDefault: Describes all your network interfaces.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results. You cannot specify this parameter and the network interface IDs parameter in the same request.

    :rtype: dict

ReturnsResponse Syntax
{
    'NetworkInterfaces': [
        {
            'Association': {
                'AllocationId': 'string',
                'AssociationId': 'string',
                'IpOwnerId': 'string',
                'PublicDnsName': 'string',
                'PublicIp': 'string'
            },
            'Attachment': {
                'AttachTime': datetime(2015, 1, 1),
                'AttachmentId': 'string',
                'DeleteOnTermination': True|False,
                'DeviceIndex': 123,
                'InstanceId': 'string',
                'InstanceOwnerId': 'string',
                'Status': 'attaching'|'attached'|'detaching'|'detached'
            },
            'AvailabilityZone': 'string',
            'Description': 'string',
            'Groups': [
                {
                    'GroupName': 'string',
                    'GroupId': 'string'
                },
            ],
            'InterfaceType': 'interface'|'natGateway'|'efa',
            'Ipv6Addresses': [
                {
                    'Ipv6Address': 'string'
                },
            ],
            'MacAddress': 'string',
            'NetworkInterfaceId': 'string',
            'OutpostArn': 'string',
            'OwnerId': 'string',
            'PrivateDnsName': 'string',
            'PrivateIpAddress': 'string',
            'PrivateIpAddresses': [
                {
                    'Association': {
                        'AllocationId': 'string',
                        'AssociationId': 'string',
                        'IpOwnerId': 'string',
                        'PublicDnsName': 'string',
                        'PublicIp': 'string'
                    },
                    'Primary': True|False,
                    'PrivateDnsName': 'string',
                    'PrivateIpAddress': 'string'
                },
            ],
            'RequesterId': 'string',
            'RequesterManaged': True|False,
            'SourceDestCheck': True|False,
            'Status': 'available'|'associated'|'attaching'|'in-use'|'detaching',
            'SubnetId': 'string',
            'TagSet': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcId': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --
Contains the output of DescribeNetworkInterfaces.

NetworkInterfaces (list) --
Information about one or more network interfaces.

(dict) --
Describes a network interface.

Association (dict) --
The association information for an Elastic IP address (IPv4) associated with the network interface.

AllocationId (string) --
The allocation ID.

AssociationId (string) --
The association ID.

IpOwnerId (string) --
The ID of the Elastic IP address owner.

PublicDnsName (string) --
The public DNS name.

PublicIp (string) --
The address of the Elastic IP address bound to the network interface.



Attachment (dict) --
The network interface attachment.

AttachTime (datetime) --
The timestamp indicating when the attachment initiated.

AttachmentId (string) --
The ID of the network interface attachment.

DeleteOnTermination (boolean) --
Indicates whether the network interface is deleted when the instance is terminated.

DeviceIndex (integer) --
The device index of the network interface attachment on the instance.

InstanceId (string) --
The ID of the instance.

InstanceOwnerId (string) --
The AWS account ID of the owner of the instance.

Status (string) --
The attachment state.



AvailabilityZone (string) --
The Availability Zone.

Description (string) --
A description.

Groups (list) --
Any security groups for the network interface.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





InterfaceType (string) --
The type of network interface.

Ipv6Addresses (list) --
The IPv6 addresses associated with the network interface.

(dict) --
Describes an IPv6 address associated with a network interface.

Ipv6Address (string) --
The IPv6 address.





MacAddress (string) --
The MAC address.

NetworkInterfaceId (string) --
The ID of the network interface.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

OwnerId (string) --
The AWS account ID of the owner of the network interface.

PrivateDnsName (string) --
The private DNS name.

PrivateIpAddress (string) --
The IPv4 address of the network interface within the subnet.

PrivateIpAddresses (list) --
The private IPv4 addresses associated with the network interface.

(dict) --
Describes the private IPv4 address of a network interface.

Association (dict) --
The association information for an Elastic IP address (IPv4) associated with the network interface.

AllocationId (string) --
The allocation ID.

AssociationId (string) --
The association ID.

IpOwnerId (string) --
The ID of the Elastic IP address owner.

PublicDnsName (string) --
The public DNS name.

PublicIp (string) --
The address of the Elastic IP address bound to the network interface.



Primary (boolean) --
Indicates whether this IPv4 address is the primary private IPv4 address of the network interface.

PrivateDnsName (string) --
The private DNS name.

PrivateIpAddress (string) --
The private IPv4 address.





RequesterId (string) --
The ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling).

RequesterManaged (boolean) --
Indicates whether the network interface is being managed by AWS.

SourceDestCheck (boolean) --
Indicates whether traffic to or from the instance is validated.

Status (string) --
The status of the network interface.

SubnetId (string) --
The ID of the subnet.

TagSet (list) --
Any tags assigned to the network interface.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcId (string) --
The ID of the VPC.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
response = client.describe_network_interfaces(
    NetworkInterfaceIds=[
        'eni-e5aa89a3',
    ],
)

print(response)


Expected Output:
{
    'NetworkInterfaces': [
        {
            'Association': {
                'AssociationId': 'eipassoc-0fbb766a',
                'IpOwnerId': '123456789012',
                'PublicDnsName': 'ec2-203-0-113-12.compute-1.amazonaws.com',
                'PublicIp': '203.0.113.12',
            },
            'Attachment': {
                'AttachTime': datetime(2013, 11, 30, 23, 36, 42, 5, 334, 0),
                'AttachmentId': 'eni-attach-66c4350a',
                'DeleteOnTermination': False,
                'DeviceIndex': 1,
                'InstanceId': 'i-1234567890abcdef0',
                'InstanceOwnerId': '123456789012',
                'Status': 'attached',
            },
            'AvailabilityZone': 'us-east-1d',
            'Description': 'my network interface',
            'Groups': [
                {
                    'GroupId': 'sg-8637d3e3',
                    'GroupName': 'default',
                },
            ],
            'MacAddress': '02:2f:8f:b0:cf:75',
            'NetworkInterfaceId': 'eni-e5aa89a3',
            'OwnerId': '123456789012',
            'PrivateDnsName': 'ip-10-0-1-17.ec2.internal',
            'PrivateIpAddress': '10.0.1.17',
            'PrivateIpAddresses': [
                {
                    'Association': {
                        'AssociationId': 'eipassoc-0fbb766a',
                        'IpOwnerId': '123456789012',
                        'PublicDnsName': 'ec2-203-0-113-12.compute-1.amazonaws.com',
                        'PublicIp': '203.0.113.12',
                    },
                    'Primary': True,
                    'PrivateDnsName': 'ip-10-0-1-17.ec2.internal',
                    'PrivateIpAddress': '10.0.1.17',
                },
            ],
            'RequesterManaged': False,
            'SourceDestCheck': True,
            'Status': 'in-use',
            'SubnetId': 'subnet-b61f49f0',
            'TagSet': [
            ],
            'VpcId': 'vpc-a01106c2',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NetworkInterfaces': [
            {
                'Association': {
                    'AllocationId': 'string',
                    'AssociationId': 'string',
                    'IpOwnerId': 'string',
                    'PublicDnsName': 'string',
                    'PublicIp': 'string'
                },
                'Attachment': {
                    'AttachTime': datetime(2015, 1, 1),
                    'AttachmentId': 'string',
                    'DeleteOnTermination': True|False,
                    'DeviceIndex': 123,
                    'InstanceId': 'string',
                    'InstanceOwnerId': 'string',
                    'Status': 'attaching'|'attached'|'detaching'|'detached'
                },
                'AvailabilityZone': 'string',
                'Description': 'string',
                'Groups': [
                    {
                        'GroupName': 'string',
                        'GroupId': 'string'
                    },
                ],
                'InterfaceType': 'interface'|'natGateway'|'efa',
                'Ipv6Addresses': [
                    {
                        'Ipv6Address': 'string'
                    },
                ],
                'MacAddress': 'string',
                'NetworkInterfaceId': 'string',
                'OutpostArn': 'string',
                'OwnerId': 'string',
                'PrivateDnsName': 'string',
                'PrivateIpAddress': 'string',
                'PrivateIpAddresses': [
                    {
                        'Association': {
                            'AllocationId': 'string',
                            'AssociationId': 'string',
                            'IpOwnerId': 'string',
                            'PublicDnsName': 'string',
                            'PublicIp': 'string'
                        },
                        'Primary': True|False,
                        'PrivateDnsName': 'string',
                        'PrivateIpAddress': 'string'
                    },
                ],
                'RequesterId': 'string',
                'RequesterManaged': True|False,
                'SourceDestCheck': True|False,
                'Status': 'available'|'associated'|'attaching'|'in-use'|'detaching',
                'SubnetId': 'string',
                'TagSet': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VpcId': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_placement_groups(Filters=None, DryRun=None, GroupNames=None, GroupIds=None):
    """
    Describes the specified placement groups or all of your placement groups. For more information, see Placement Groups in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_placement_groups(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        GroupNames=[
            'string',
        ],
        GroupIds=[
            'string',
        ]
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\ngroup-name - The name of the placement group.\nstate - The state of the placement group (pending | available | deleting | deleted ).\nstrategy - The strategy of the placement group (cluster | spread | partition ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type GroupNames: list
    :param GroupNames: The names of the placement groups.\nDefault: Describes all your placement groups, or only those otherwise specified.\n\n(string) --\n\n

    :type GroupIds: list
    :param GroupIds: The IDs of the placement groups.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'PlacementGroups': [
        {
            'GroupName': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'Strategy': 'cluster'|'spread'|'partition',
            'PartitionCount': 123,
            'GroupId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --

PlacementGroups (list) --
Information about the placement groups.

(dict) --
Describes a placement group.

GroupName (string) --
The name of the placement group.

State (string) --
The state of the placement group.

Strategy (string) --
The placement strategy.

PartitionCount (integer) --
The number of partitions. Valid only if strategy is set to partition .

GroupId (string) --
The ID of the placement group.

Tags (list) --
Any tags applied to the placement group.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
















    :return: {
        'PlacementGroups': [
            {
                'GroupName': 'string',
                'State': 'pending'|'available'|'deleting'|'deleted',
                'Strategy': 'cluster'|'spread'|'partition',
                'PartitionCount': 123,
                'GroupId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    }
    
    
    """
    pass

def describe_prefix_lists(DryRun=None, Filters=None, MaxResults=None, NextToken=None, PrefixListIds=None):
    """
    Describes available AWS services in a prefix list format, which includes the prefix list name and prefix list ID of the service and the IP address range for the service. A prefix list ID is required for creating an outbound security group rule that allows traffic from a VPC to access an AWS service through a gateway VPC endpoint. Currently, the services that support this action are Amazon S3 and Amazon DynamoDB.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_prefix_lists(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        PrefixListIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: One or more filters.\n\nprefix-list-id : The ID of a prefix list.\nprefix-list-name : The name of a prefix list.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type PrefixListIds: list
    :param PrefixListIds: One or more prefix list IDs.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'PrefixLists': [
        {
            'Cidrs': [
                'string',
            ],
            'PrefixListId': 'string',
            'PrefixListName': 'string'
        },
    ]
}


Response Structure

(dict) --

NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.

PrefixLists (list) --
All available prefix lists.

(dict) --
Describes prefixes for AWS services.

Cidrs (list) --
The IP address range of the AWS service.

(string) --


PrefixListId (string) --
The ID of the prefix.

PrefixListName (string) --
The name of the prefix.












    :return: {
        'NextToken': 'string',
        'PrefixLists': [
            {
                'Cidrs': [
                    'string',
                ],
                'PrefixListId': 'string',
                'PrefixListName': 'string'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_principal_id_format(DryRun=None, Resources=None, MaxResults=None, NextToken=None):
    """
    Describes the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference.
    By default, all IAM roles and IAM users default to the same ID settings as the root user, unless they explicitly override the settings. This request is useful for identifying those IAM users and IAM roles that have overridden the default ID settings.
    The following resource types support longer IDs: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_principal_id_format(
        DryRun=True|False,
        Resources=[
            'string',
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Resources: list
    :param Resources: The type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | instance | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | reservation | route-table | route-table-association | security-group | snapshot | subnet | subnet-cidr-block-association | volume | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token to request the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'Principals': [
        {
            'Arn': 'string',
            'Statuses': [
                {
                    'Deadline': datetime(2015, 1, 1),
                    'Resource': 'string',
                    'UseLongIds': True|False
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Principals (list) --
Information about the ID format settings for the ARN.

(dict) --
PrincipalIdFormat description

Arn (string) --
PrincipalIdFormatARN description

Statuses (list) --
PrincipalIdFormatStatuses description

(dict) --
Describes the ID format for a resource.

Deadline (datetime) --
The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.

Resource (string) --
The type of resource.

UseLongIds (boolean) --
Indicates whether longer IDs (17-character IDs) are enabled for the resource.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'Principals': [
            {
                'Arn': 'string',
                'Statuses': [
                    {
                        'Deadline': datetime(2015, 1, 1),
                        'Resource': 'string',
                        'UseLongIds': True|False
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_public_ipv4_pools(PoolIds=None, NextToken=None, MaxResults=None, Filters=None):
    """
    Describes the specified IPv4 address pools.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_public_ipv4_pools(
        PoolIds=[
            'string',
        ],
        NextToken='string',
        MaxResults=123,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type PoolIds: list
    :param PoolIds: The IDs of the address pools.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type Filters: list
    :param Filters: One or more filters.\n\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'PublicIpv4Pools': [
        {
            'PoolId': 'string',
            'Description': 'string',
            'PoolAddressRanges': [
                {
                    'FirstAddress': 'string',
                    'LastAddress': 'string',
                    'AddressCount': 123,
                    'AvailableAddressCount': 123
                },
            ],
            'TotalAddressCount': 123,
            'TotalAvailableAddressCount': 123,
            'NetworkBorderGroup': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

PublicIpv4Pools (list) --
Information about the address pools.

(dict) --
Describes an IPv4 address pool.

PoolId (string) --
The ID of the address pool.

Description (string) --
A description of the address pool.

PoolAddressRanges (list) --
The address ranges.

(dict) --
Describes an address range of an IPv4 address pool.

FirstAddress (string) --
The first IP address in the range.

LastAddress (string) --
The last IP address in the range.

AddressCount (integer) --
The number of addresses in the range.

AvailableAddressCount (integer) --
The number of available addresses in the range.





TotalAddressCount (integer) --
The total number of addresses.

TotalAvailableAddressCount (integer) --
The total number of available addresses.

NetworkBorderGroup (string) --
The name of the location from which the address pool is advertised. A network border group is a unique set of Availability Zones or Local Zones from where AWS advertises public IP addresses.

Tags (list) --
Any tags for the address pool.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'PublicIpv4Pools': [
            {
                'PoolId': 'string',
                'Description': 'string',
                'PoolAddressRanges': [
                    {
                        'FirstAddress': 'string',
                        'LastAddress': 'string',
                        'AddressCount': 123,
                        'AvailableAddressCount': 123
                    },
                ],
                'TotalAddressCount': 123,
                'TotalAvailableAddressCount': 123,
                'NetworkBorderGroup': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_regions(Filters=None, RegionNames=None, DryRun=None, AllRegions=None):
    """
    Describes the Regions that are enabled for your account, or all Regions.
    For a list of the Regions supported by Amazon EC2, see Regions and Endpoints .
    For information about enabling and disabling Regions for your account, see Managing AWS Regions in the AWS General Reference .
    See also: AWS API Documentation
    
    Examples
    This example describes all the regions that are available to you.
    Expected Output:
    
    :example: response = client.describe_regions(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        RegionNames=[
            'string',
        ],
        DryRun=True|False,
        AllRegions=True|False
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\nendpoint - The endpoint of the Region (for example, ec2.us-east-1.amazonaws.com ).\nopt-in-status - The opt-in status of the Region (opt-in-not-required | opted-in | not-opted-in ).\nregion-name - The name of the Region (for example, us-east-1 ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type RegionNames: list
    :param RegionNames: The names of the Regions. You can specify any Regions, whether they are enabled and disabled for your account.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type AllRegions: boolean
    :param AllRegions: Indicates whether to display all Regions, including Regions that are disabled for your account.

    :rtype: dict

ReturnsResponse Syntax
{
    'Regions': [
        {
            'Endpoint': 'string',
            'RegionName': 'string',
            'OptInStatus': 'string'
        },
    ]
}


Response Structure

(dict) --

Regions (list) --
Information about the Regions.

(dict) --
Describes a Region.

Endpoint (string) --
The Region service endpoint.

RegionName (string) --
The name of the Region.

OptInStatus (string) --
The Region opt-in status. The possible values are opt-in-not-required , opted-in , and not-opted-in .











Examples
This example describes all the regions that are available to you.
response = client.describe_regions(
)

print(response)


Expected Output:
{
    'Regions': [
        {
            'Endpoint': 'ec2.ap-south-1.amazonaws.com',
            'RegionName': 'ap-south-1',
        },
        {
            'Endpoint': 'ec2.eu-west-1.amazonaws.com',
            'RegionName': 'eu-west-1',
        },
        {
            'Endpoint': 'ec2.ap-southeast-1.amazonaws.com',
            'RegionName': 'ap-southeast-1',
        },
        {
            'Endpoint': 'ec2.ap-southeast-2.amazonaws.com',
            'RegionName': 'ap-southeast-2',
        },
        {
            'Endpoint': 'ec2.eu-central-1.amazonaws.com',
            'RegionName': 'eu-central-1',
        },
        {
            'Endpoint': 'ec2.ap-northeast-2.amazonaws.com',
            'RegionName': 'ap-northeast-2',
        },
        {
            'Endpoint': 'ec2.ap-northeast-1.amazonaws.com',
            'RegionName': 'ap-northeast-1',
        },
        {
            'Endpoint': 'ec2.us-east-1.amazonaws.com',
            'RegionName': 'us-east-1',
        },
        {
            'Endpoint': 'ec2.sa-east-1.amazonaws.com',
            'RegionName': 'sa-east-1',
        },
        {
            'Endpoint': 'ec2.us-west-1.amazonaws.com',
            'RegionName': 'us-west-1',
        },
        {
            'Endpoint': 'ec2.us-west-2.amazonaws.com',
            'RegionName': 'us-west-2',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Regions': [
            {
                'Endpoint': 'string',
                'RegionName': 'string',
                'OptInStatus': 'string'
            },
        ]
    }
    
    
    """
    pass

def describe_reserved_instances(Filters=None, OfferingClass=None, ReservedInstancesIds=None, DryRun=None, OfferingType=None):
    """
    Describes one or more of the Reserved Instances that you purchased.
    For more information about Reserved Instances, see Reserved Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_reserved_instances(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        OfferingClass='standard'|'convertible',
        ReservedInstancesIds=[
            'string',
        ],
        DryRun=True|False,
        OfferingType='Heavy Utilization'|'Medium Utilization'|'Light Utilization'|'No Upfront'|'Partial Upfront'|'All Upfront'
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\navailability-zone - The Availability Zone where the Reserved Instance can be used.\nduration - The duration of the Reserved Instance (one year or three years), in seconds (31536000 | 94608000 ).\nend - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).\nfixed-price - The purchase price of the Reserved Instance (for example, 9800.0).\ninstance-type - The instance type that is covered by the reservation.\nscope - The scope of the Reserved Instance (Region or Availability Zone ).\nproduct-description - The Reserved Instance product platform description. Instances that include (Amazon VPC) in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC (Linux/UNIX | Linux/UNIX (Amazon VPC) | SUSE Linux | SUSE Linux (Amazon VPC) | Red Hat Enterprise Linux | Red Hat Enterprise Linux (Amazon VPC) | Windows | Windows (Amazon VPC) | Windows with SQL Server Standard | Windows with SQL Server Standard (Amazon VPC) | Windows with SQL Server Web | Windows with SQL Server Web (Amazon VPC) | Windows with SQL Server Enterprise | Windows with SQL Server Enterprise (Amazon VPC) ).\nreserved-instances-id - The ID of the Reserved Instance.\nstart - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).\nstate - The state of the Reserved Instance (payment-pending | active | payment-failed | retired ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nusage-price - The usage price of the Reserved Instance, per hour (for example, 0.84).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type OfferingClass: string
    :param OfferingClass: Describes whether the Reserved Instance is Standard or Convertible.

    :type ReservedInstancesIds: list
    :param ReservedInstancesIds: One or more Reserved Instance IDs.\nDefault: Describes all your Reserved Instances, or only those otherwise specified.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type OfferingType: string
    :param OfferingType: The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the Medium Utilization Reserved Instance offering type.

    :rtype: dict

ReturnsResponse Syntax
{
    'ReservedInstances': [
        {
            'AvailabilityZone': 'string',
            'Duration': 123,
            'End': datetime(2015, 1, 1),
            'FixedPrice': ...,
            'InstanceCount': 123,
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
            'ReservedInstancesId': 'string',
            'Start': datetime(2015, 1, 1),
            'State': 'payment-pending'|'active'|'payment-failed'|'retired'|'queued'|'queued-deleted',
            'UsagePrice': ...,
            'CurrencyCode': 'USD',
            'InstanceTenancy': 'default'|'dedicated'|'host',
            'OfferingClass': 'standard'|'convertible',
            'OfferingType': 'Heavy Utilization'|'Medium Utilization'|'Light Utilization'|'No Upfront'|'Partial Upfront'|'All Upfront',
            'RecurringCharges': [
                {
                    'Amount': 123.0,
                    'Frequency': 'Hourly'
                },
            ],
            'Scope': 'Availability Zone'|'Region',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --
Contains the output for DescribeReservedInstances.

ReservedInstances (list) --
A list of Reserved Instances.

(dict) --
Describes a Reserved Instance.

AvailabilityZone (string) --
The Availability Zone in which the Reserved Instance can be used.

Duration (integer) --
The duration of the Reserved Instance, in seconds.

End (datetime) --
The time when the Reserved Instance expires.

FixedPrice (float) --
The purchase price of the Reserved Instance.

InstanceCount (integer) --
The number of reservations purchased.

InstanceType (string) --
The instance type on which the Reserved Instance can be used.

ProductDescription (string) --
The Reserved Instance product platform description.

ReservedInstancesId (string) --
The ID of the Reserved Instance.

Start (datetime) --
The date and time the Reserved Instance started.

State (string) --
The state of the Reserved Instance purchase.

UsagePrice (float) --
The usage price of the Reserved Instance, per hour.

CurrencyCode (string) --
The currency of the Reserved Instance. It\'s specified using ISO 4217 standard currency codes. At this time, the only supported currency is USD .

InstanceTenancy (string) --
The tenancy of the instance.

OfferingClass (string) --
The offering class of the Reserved Instance.

OfferingType (string) --
The Reserved Instance offering type.

RecurringCharges (list) --
The recurring charge tag assigned to the resource.

(dict) --
Describes a recurring charge.

Amount (float) --
The amount of the recurring charge.

Frequency (string) --
The frequency of the recurring charge.





Scope (string) --
The scope of the Reserved Instance.

Tags (list) --
Any tags assigned to the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
















    :return: {
        'ReservedInstances': [
            {
                'AvailabilityZone': 'string',
                'Duration': 123,
                'End': datetime(2015, 1, 1),
                'FixedPrice': ...,
                'InstanceCount': 123,
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
                'ReservedInstancesId': 'string',
                'Start': datetime(2015, 1, 1),
                'State': 'payment-pending'|'active'|'payment-failed'|'retired'|'queued'|'queued-deleted',
                'UsagePrice': ...,
                'CurrencyCode': 'USD',
                'InstanceTenancy': 'default'|'dedicated'|'host',
                'OfferingClass': 'standard'|'convertible',
                'OfferingType': 'Heavy Utilization'|'Medium Utilization'|'Light Utilization'|'No Upfront'|'Partial Upfront'|'All Upfront',
                'RecurringCharges': [
                    {
                        'Amount': 123.0,
                        'Frequency': 'Hourly'
                    },
                ],
                'Scope': 'Availability Zone'|'Region',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    }
    
    
    """
    pass

def describe_reserved_instances_listings(Filters=None, ReservedInstancesId=None, ReservedInstancesListingId=None):
    """
    Describes your account\'s Reserved Instance listings in the Reserved Instance Marketplace.
    The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.
    As a seller, you choose to list some or all of your Reserved Instances, and you specify the upfront price to receive for them. Your Reserved Instances are then listed in the Reserved Instance Marketplace and are available for purchase.
    As a buyer, you specify the configuration of the Reserved Instance to purchase, and the Marketplace matches what you\'re searching for with what\'s available. The Marketplace first sells the lowest priced Reserved Instances to you, and continues to sell available Reserved Instance listings to you until your demand is met. You are charged based on the total price of all of the listings that you purchase.
    For more information, see Reserved Instance Marketplace in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_reserved_instances_listings(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        ReservedInstancesId='string',
        ReservedInstancesListingId='string'
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\nreserved-instances-id - The ID of the Reserved Instances.\nreserved-instances-listing-id - The ID of the Reserved Instances listing.\nstatus - The status of the Reserved Instance listing (pending | active | cancelled | closed ).\nstatus-message - The reason for the status.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type ReservedInstancesId: string
    :param ReservedInstancesId: One or more Reserved Instance IDs.

    :type ReservedInstancesListingId: string
    :param ReservedInstancesListingId: One or more Reserved Instance listing IDs.

    :rtype: dict

ReturnsResponse Syntax
{
    'ReservedInstancesListings': [
        {
            'ClientToken': 'string',
            'CreateDate': datetime(2015, 1, 1),
            'InstanceCounts': [
                {
                    'InstanceCount': 123,
                    'State': 'available'|'sold'|'cancelled'|'pending'
                },
            ],
            'PriceSchedules': [
                {
                    'Active': True|False,
                    'CurrencyCode': 'USD',
                    'Price': 123.0,
                    'Term': 123
                },
            ],
            'ReservedInstancesId': 'string',
            'ReservedInstancesListingId': 'string',
            'Status': 'active'|'pending'|'cancelled'|'closed',
            'StatusMessage': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'UpdateDate': datetime(2015, 1, 1)
        },
    ]
}


Response Structure

(dict) --
Contains the output of DescribeReservedInstancesListings.

ReservedInstancesListings (list) --
Information about the Reserved Instance listing.

(dict) --
Describes a Reserved Instance listing.

ClientToken (string) --
A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see Ensuring Idempotency .

CreateDate (datetime) --
The time the listing was created.

InstanceCounts (list) --
The number of instances in this state.

(dict) --
Describes a Reserved Instance listing state.

InstanceCount (integer) --
The number of listed Reserved Instances in the state specified by the state .

State (string) --
The states of the listed Reserved Instances.





PriceSchedules (list) --
The price of the Reserved Instance listing.

(dict) --
Describes the price for a Reserved Instance.

Active (boolean) --
The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.
A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.

CurrencyCode (string) --
The currency for transacting the Reserved Instance resale. At this time, the only supported currency is USD .

Price (float) --
The fixed price for the term.

Term (integer) --
The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.





ReservedInstancesId (string) --
The ID of the Reserved Instance.

ReservedInstancesListingId (string) --
The ID of the Reserved Instance listing.

Status (string) --
The status of the Reserved Instance listing.

StatusMessage (string) --
The reason for the current status of the Reserved Instance listing. The response can be blank.

Tags (list) --
Any tags assigned to the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





UpdateDate (datetime) --
The last modified timestamp of the listing.












    :return: {
        'ReservedInstancesListings': [
            {
                'ClientToken': 'string',
                'CreateDate': datetime(2015, 1, 1),
                'InstanceCounts': [
                    {
                        'InstanceCount': 123,
                        'State': 'available'|'sold'|'cancelled'|'pending'
                    },
                ],
                'PriceSchedules': [
                    {
                        'Active': True|False,
                        'CurrencyCode': 'USD',
                        'Price': 123.0,
                        'Term': 123
                    },
                ],
                'ReservedInstancesId': 'string',
                'ReservedInstancesListingId': 'string',
                'Status': 'active'|'pending'|'cancelled'|'closed',
                'StatusMessage': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'UpdateDate': datetime(2015, 1, 1)
            },
        ]
    }
    
    
    """
    pass

def describe_reserved_instances_modifications(Filters=None, ReservedInstancesModificationIds=None, NextToken=None):
    """
    Describes the modifications made to your Reserved Instances. If no parameter is specified, information about all your Reserved Instances modification requests is returned. If a modification ID is specified, only information about the specific modification is returned.
    For more information, see Modifying Reserved Instances in the Amazon Elastic Compute Cloud User Guide.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_reserved_instances_modifications(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        ReservedInstancesModificationIds=[
            'string',
        ],
        NextToken='string'
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\nclient-token - The idempotency token for the modification request.\ncreate-date - The time when the modification request was created.\neffective-date - The time when the modification becomes effective.\nmodification-result.reserved-instances-id - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is fulfilled .\nmodification-result.target-configuration.availability-zone - The Availability Zone for the new Reserved Instances.\nmodification-result.target-configuration.instance-count - The number of new Reserved Instances.\nmodification-result.target-configuration.instance-type - The instance type of the new Reserved Instances.\nmodification-result.target-configuration.platform - The network platform of the new Reserved Instances (EC2-Classic | EC2-VPC ).\nreserved-instances-id - The ID of the Reserved Instances modified.\nreserved-instances-modification-id - The ID of the modification request.\nstatus - The status of the Reserved Instances modification request (processing | fulfilled | failed ).\nstatus-message - The reason for the status.\nupdate-date - The time when the modification request was last updated.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type ReservedInstancesModificationIds: list
    :param ReservedInstancesModificationIds: IDs for the submitted modification request.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'ReservedInstancesModifications': [
        {
            'ClientToken': 'string',
            'CreateDate': datetime(2015, 1, 1),
            'EffectiveDate': datetime(2015, 1, 1),
            'ModificationResults': [
                {
                    'ReservedInstancesId': 'string',
                    'TargetConfiguration': {
                        'AvailabilityZone': 'string',
                        'InstanceCount': 123,
                        'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                        'Platform': 'string',
                        'Scope': 'Availability Zone'|'Region'
                    }
                },
            ],
            'ReservedInstancesIds': [
                {
                    'ReservedInstancesId': 'string'
                },
            ],
            'ReservedInstancesModificationId': 'string',
            'Status': 'string',
            'StatusMessage': 'string',
            'UpdateDate': datetime(2015, 1, 1)
        },
    ]
}


Response Structure

(dict) --
Contains the output of DescribeReservedInstancesModifications.

NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.

ReservedInstancesModifications (list) --
The Reserved Instance modification information.

(dict) --
Describes a Reserved Instance modification.

ClientToken (string) --
A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see Ensuring Idempotency .

CreateDate (datetime) --
The time when the modification request was created.

EffectiveDate (datetime) --
The time for the modification to become effective.

ModificationResults (list) --
Contains target configurations along with their corresponding new Reserved Instance IDs.

(dict) --
Describes the modification request/s.

ReservedInstancesId (string) --
The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.

TargetConfiguration (dict) --
The target Reserved Instances configurations supplied as part of the modification request.

AvailabilityZone (string) --
The Availability Zone for the modified Reserved Instances.

InstanceCount (integer) --
The number of modified Reserved Instances.

Note
This is a required field for a request.


InstanceType (string) --
The instance type for the modified Reserved Instances.

Platform (string) --
The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.

Scope (string) --
Whether the Reserved Instance is applied to instances in a Region or instances in a specific Availability Zone.







ReservedInstancesIds (list) --
The IDs of one or more Reserved Instances.

(dict) --
Describes the ID of a Reserved Instance.

ReservedInstancesId (string) --
The ID of the Reserved Instance.





ReservedInstancesModificationId (string) --
A unique ID for the Reserved Instance modification.

Status (string) --
The status of the Reserved Instances modification request.

StatusMessage (string) --
The reason for the status.

UpdateDate (datetime) --
The time when the modification request was last updated.












    :return: {
        'NextToken': 'string',
        'ReservedInstancesModifications': [
            {
                'ClientToken': 'string',
                'CreateDate': datetime(2015, 1, 1),
                'EffectiveDate': datetime(2015, 1, 1),
                'ModificationResults': [
                    {
                        'ReservedInstancesId': 'string',
                        'TargetConfiguration': {
                            'AvailabilityZone': 'string',
                            'InstanceCount': 123,
                            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                            'Platform': 'string',
                            'Scope': 'Availability Zone'|'Region'
                        }
                    },
                ],
                'ReservedInstancesIds': [
                    {
                        'ReservedInstancesId': 'string'
                    },
                ],
                'ReservedInstancesModificationId': 'string',
                'Status': 'string',
                'StatusMessage': 'string',
                'UpdateDate': datetime(2015, 1, 1)
            },
        ]
    }
    
    
    """
    pass

def describe_reserved_instances_offerings(AvailabilityZone=None, Filters=None, IncludeMarketplace=None, InstanceType=None, MaxDuration=None, MaxInstanceCount=None, MinDuration=None, OfferingClass=None, ProductDescription=None, ReservedInstancesOfferingIds=None, DryRun=None, InstanceTenancy=None, MaxResults=None, NextToken=None, OfferingType=None):
    """
    Describes Reserved Instance offerings that are available for purchase. With Reserved Instances, you purchase the right to launch instances for a period of time. During that time period, you do not receive insufficient capacity errors, and you pay a lower usage rate than the rate charged for On-Demand instances for the actual time used.
    If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace, they will be excluded from these results. This is to ensure that you do not purchase your own Reserved Instances.
    For more information, see Reserved Instance Marketplace in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_reserved_instances_offerings(
        AvailabilityZone='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        IncludeMarketplace=True|False,
        InstanceType='t1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
        MaxDuration=123,
        MaxInstanceCount=123,
        MinDuration=123,
        OfferingClass='standard'|'convertible',
        ProductDescription='Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
        ReservedInstancesOfferingIds=[
            'string',
        ],
        DryRun=True|False,
        InstanceTenancy='default'|'dedicated'|'host',
        MaxResults=123,
        NextToken='string',
        OfferingType='Heavy Utilization'|'Medium Utilization'|'Light Utilization'|'No Upfront'|'Partial Upfront'|'All Upfront'
    )
    
    
    :type AvailabilityZone: string
    :param AvailabilityZone: The Availability Zone in which the Reserved Instance can be used.

    :type Filters: list
    :param Filters: One or more filters.\n\navailability-zone - The Availability Zone where the Reserved Instance can be used.\nduration - The duration of the Reserved Instance (for example, one year or three years), in seconds (31536000 | 94608000 ).\nfixed-price - The purchase price of the Reserved Instance (for example, 9800.0).\ninstance-type - The instance type that is covered by the reservation.\nmarketplace - Set to true to show only Reserved Instance Marketplace offerings. When this filter is not used, which is the default behavior, all offerings from both AWS and the Reserved Instance Marketplace are listed.\nproduct-description - The Reserved Instance product platform description. Instances that include (Amazon VPC) in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC. (Linux/UNIX | Linux/UNIX (Amazon VPC) | SUSE Linux | SUSE Linux (Amazon VPC) | Red Hat Enterprise Linux | Red Hat Enterprise Linux (Amazon VPC) | Windows | Windows (Amazon VPC) | Windows with SQL Server Standard | Windows with SQL Server Standard (Amazon VPC) | Windows with SQL Server Web | Windows with SQL Server Web (Amazon VPC) | Windows with SQL Server Enterprise | Windows with SQL Server Enterprise (Amazon VPC) )\nreserved-instances-offering-id - The Reserved Instances offering ID.\nscope - The scope of the Reserved Instance (Availability Zone or Region ).\nusage-price - The usage price of the Reserved Instance, per hour (for example, 0.84).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type IncludeMarketplace: boolean
    :param IncludeMarketplace: Include Reserved Instance Marketplace offerings in the response.

    :type InstanceType: string
    :param InstanceType: The instance type that the reservation will cover (for example, m1.small ). For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .

    :type MaxDuration: integer
    :param MaxDuration: The maximum duration (in seconds) to filter when searching for offerings.\nDefault: 94608000 (3 years)\n

    :type MaxInstanceCount: integer
    :param MaxInstanceCount: The maximum number of instances to filter when searching for offerings.\nDefault: 20\n

    :type MinDuration: integer
    :param MinDuration: The minimum duration (in seconds) to filter when searching for offerings.\nDefault: 2592000 (1 month)\n

    :type OfferingClass: string
    :param OfferingClass: The offering class of the Reserved Instance. Can be standard or convertible .

    :type ProductDescription: string
    :param ProductDescription: The Reserved Instance product platform description. Instances that include (Amazon VPC) in the description are for use with Amazon VPC.

    :type ReservedInstancesOfferingIds: list
    :param ReservedInstancesOfferingIds: One or more Reserved Instances offering IDs.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceTenancy: string
    :param InstanceTenancy: The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of dedicated is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).\n\nImportant: The host value cannot be used with this parameter. Use the default or dedicated values only.\nDefault: default\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. The maximum is 100.\nDefault: 100\n

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type OfferingType: string
    :param OfferingType: The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the Medium Utilization Reserved Instance offering type.

    :rtype: dict

ReturnsResponse Syntax
{
    'ReservedInstancesOfferings': [
        {
            'AvailabilityZone': 'string',
            'Duration': 123,
            'FixedPrice': ...,
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
            'ReservedInstancesOfferingId': 'string',
            'UsagePrice': ...,
            'CurrencyCode': 'USD',
            'InstanceTenancy': 'default'|'dedicated'|'host',
            'Marketplace': True|False,
            'OfferingClass': 'standard'|'convertible',
            'OfferingType': 'Heavy Utilization'|'Medium Utilization'|'Light Utilization'|'No Upfront'|'Partial Upfront'|'All Upfront',
            'PricingDetails': [
                {
                    'Count': 123,
                    'Price': 123.0
                },
            ],
            'RecurringCharges': [
                {
                    'Amount': 123.0,
                    'Frequency': 'Hourly'
                },
            ],
            'Scope': 'Availability Zone'|'Region'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --
Contains the output of DescribeReservedInstancesOfferings.

ReservedInstancesOfferings (list) --
A list of Reserved Instances offerings.

(dict) --
Describes a Reserved Instance offering.

AvailabilityZone (string) --
The Availability Zone in which the Reserved Instance can be used.

Duration (integer) --
The duration of the Reserved Instance, in seconds.

FixedPrice (float) --
The purchase price of the Reserved Instance.

InstanceType (string) --
The instance type on which the Reserved Instance can be used.

ProductDescription (string) --
The Reserved Instance product platform description.

ReservedInstancesOfferingId (string) --
The ID of the Reserved Instance offering. This is the offering ID used in  GetReservedInstancesExchangeQuote to confirm that an exchange can be made.

UsagePrice (float) --
The usage price of the Reserved Instance, per hour.

CurrencyCode (string) --
The currency of the Reserved Instance offering you are purchasing. It\'s specified using ISO 4217 standard currency codes. At this time, the only supported currency is USD .

InstanceTenancy (string) --
The tenancy of the instance.

Marketplace (boolean) --
Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS. If it\'s a Reserved Instance Marketplace offering, this is true .

OfferingClass (string) --
If convertible it can be exchanged for Reserved Instances of the same or higher monetary value, with different configurations. If standard , it is not possible to perform an exchange.

OfferingType (string) --
The Reserved Instance offering type.

PricingDetails (list) --
The pricing details of the Reserved Instance offering.

(dict) --
Describes a Reserved Instance offering.

Count (integer) --
The number of reservations available for the price.

Price (float) --
The price per instance.





RecurringCharges (list) --
The recurring charge tag assigned to the resource.

(dict) --
Describes a recurring charge.

Amount (float) --
The amount of the recurring charge.

Frequency (string) --
The frequency of the recurring charge.





Scope (string) --
Whether the Reserved Instance is applied to instances in a Region or an Availability Zone.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'ReservedInstancesOfferings': [
            {
                'AvailabilityZone': 'string',
                'Duration': 123,
                'FixedPrice': ...,
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
                'ReservedInstancesOfferingId': 'string',
                'UsagePrice': ...,
                'CurrencyCode': 'USD',
                'InstanceTenancy': 'default'|'dedicated'|'host',
                'Marketplace': True|False,
                'OfferingClass': 'standard'|'convertible',
                'OfferingType': 'Heavy Utilization'|'Medium Utilization'|'Light Utilization'|'No Upfront'|'Partial Upfront'|'All Upfront',
                'PricingDetails': [
                    {
                        'Count': 123,
                        'Price': 123.0
                    },
                ],
                'RecurringCharges': [
                    {
                        'Amount': 123.0,
                        'Frequency': 'Hourly'
                    },
                ],
                'Scope': 'Availability Zone'|'Region'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_route_tables(Filters=None, DryRun=None, RouteTableIds=None, NextToken=None, MaxResults=None):
    """
    Describes one or more of your route tables.
    Each subnet in your VPC must be associated with a route table. If a subnet is not explicitly associated with any route table, it is implicitly associated with the main route table. This command does not return the subnet ID for implicit associations.
    For more information, see Route Tables in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the specified route table.
    Expected Output:
    
    :example: response = client.describe_route_tables(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        RouteTableIds=[
            'string',
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\nassociation.route-table-association-id - The ID of an association ID for the route table.\nassociation.route-table-id - The ID of the route table involved in the association.\nassociation.subnet-id - The ID of the subnet involved in the association.\nassociation.main - Indicates whether the route table is the main route table for the VPC (true | false ). Route tables that do not have an association ID are not returned in the response.\nowner-id - The ID of the AWS account that owns the route table.\nroute-table-id - The ID of the route table.\nroute.destination-cidr-block - The IPv4 CIDR range specified in a route in the table.\nroute.destination-ipv6-cidr-block - The IPv6 CIDR range specified in a route in the route table.\nroute.destination-prefix-list-id - The ID (prefix) of the AWS service specified in a route in the table.\nroute.egress-only-internet-gateway-id - The ID of an egress-only Internet gateway specified in a route in the route table.\nroute.gateway-id - The ID of a gateway specified in a route in the table.\nroute.instance-id - The ID of an instance specified in a route in the table.\nroute.nat-gateway-id - The ID of a NAT gateway.\nroute.transit-gateway-id - The ID of a transit gateway.\nroute.origin - Describes how the route was created. CreateRouteTable indicates that the route was automatically created when the route table was created; CreateRoute indicates that the route was manually added to the route table; EnableVgwRoutePropagation indicates that the route was propagated by route propagation.\nroute.state - The state of a route in the route table (active | blackhole ). The blackhole state indicates that the route\'s target isn\'t available (for example, the specified gateway isn\'t attached to the VPC, the specified NAT instance has been terminated, and so on).\nroute.vpc-peering-connection-id - The ID of a VPC peering connection specified in a route in the table.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\ntransit-gateway-id - The ID of a transit gateway.\nvpc-id - The ID of the VPC for the route table.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type RouteTableIds: list
    :param RouteTableIds: One or more route table IDs.\nDefault: Describes all your route tables.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :rtype: dict

ReturnsResponse Syntax
{
    'RouteTables': [
        {
            'Associations': [
                {
                    'Main': True|False,
                    'RouteTableAssociationId': 'string',
                    'RouteTableId': 'string',
                    'SubnetId': 'string',
                    'GatewayId': 'string',
                    'AssociationState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failed',
                        'StatusMessage': 'string'
                    }
                },
            ],
            'PropagatingVgws': [
                {
                    'GatewayId': 'string'
                },
            ],
            'RouteTableId': 'string',
            'Routes': [
                {
                    'DestinationCidrBlock': 'string',
                    'DestinationIpv6CidrBlock': 'string',
                    'DestinationPrefixListId': 'string',
                    'EgressOnlyInternetGatewayId': 'string',
                    'GatewayId': 'string',
                    'InstanceId': 'string',
                    'InstanceOwnerId': 'string',
                    'NatGatewayId': 'string',
                    'TransitGatewayId': 'string',
                    'LocalGatewayId': 'string',
                    'NetworkInterfaceId': 'string',
                    'Origin': 'CreateRouteTable'|'CreateRoute'|'EnableVgwRoutePropagation',
                    'State': 'active'|'blackhole',
                    'VpcPeeringConnectionId': 'string'
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcId': 'string',
            'OwnerId': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --
Contains the output of DescribeRouteTables.

RouteTables (list) --
Information about one or more route tables.

(dict) --
Describes a route table.

Associations (list) --
The associations between the route table and one or more subnets or a gateway.

(dict) --
Describes an association between a route table and a subnet or gateway.

Main (boolean) --
Indicates whether this is the main route table.

RouteTableAssociationId (string) --
The ID of the association.

RouteTableId (string) --
The ID of the route table.

SubnetId (string) --
The ID of the subnet. A subnet ID is not returned for an implicit association.

GatewayId (string) --
The ID of the internet gateway or virtual private gateway.

AssociationState (dict) --
The state of the association.

State (string) --
The state of the association.

StatusMessage (string) --
The status message, if applicable.







PropagatingVgws (list) --
Any virtual private gateway (VGW) propagating routes.

(dict) --
Describes a virtual private gateway propagating route.

GatewayId (string) --
The ID of the virtual private gateway.





RouteTableId (string) --
The ID of the route table.

Routes (list) --
The routes in the route table.

(dict) --
Describes a route in a route table.

DestinationCidrBlock (string) --
The IPv4 CIDR block used for the destination match.

DestinationIpv6CidrBlock (string) --
The IPv6 CIDR block used for the destination match.

DestinationPrefixListId (string) --
The prefix of the AWS service.

EgressOnlyInternetGatewayId (string) --
The ID of the egress-only internet gateway.

GatewayId (string) --
The ID of a gateway attached to your VPC.

InstanceId (string) --
The ID of a NAT instance in your VPC.

InstanceOwnerId (string) --
The AWS account ID of the owner of the instance.

NatGatewayId (string) --
The ID of a NAT gateway.

TransitGatewayId (string) --
The ID of a transit gateway.

LocalGatewayId (string) --
The ID of the local gateway.

NetworkInterfaceId (string) --
The ID of the network interface.

Origin (string) --
Describes how the route was created.

CreateRouteTable - The route was automatically created when the route table was created.
CreateRoute - The route was manually added to the route table.
EnableVgwRoutePropagation - The route was propagated by route propagation.


State (string) --
The state of the route. The blackhole state indicates that the route\'s target isn\'t available (for example, the specified gateway isn\'t attached to the VPC, or the specified NAT instance has been terminated).

VpcPeeringConnectionId (string) --
The ID of a VPC peering connection.





Tags (list) --
Any tags assigned to the route table.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcId (string) --
The ID of the VPC.

OwnerId (string) --
The ID of the AWS account that owns the route table.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the specified route table.
response = client.describe_route_tables(
    RouteTableIds=[
        'rtb-1f382e7d',
    ],
)

print(response)


Expected Output:
{
    'RouteTables': [
        {
            'Associations': [
                {
                    'Main': True,
                    'RouteTableAssociationId': 'rtbassoc-d8ccddba',
                    'RouteTableId': 'rtb-1f382e7d',
                },
            ],
            'PropagatingVgws': [
            ],
            'RouteTableId': 'rtb-1f382e7d',
            'Routes': [
                {
                    'DestinationCidrBlock': '10.0.0.0/16',
                    'GatewayId': 'local',
                    'State': 'active',
                },
            ],
            'Tags': [
            ],
            'VpcId': 'vpc-a01106c2',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'RouteTables': [
            {
                'Associations': [
                    {
                        'Main': True|False,
                        'RouteTableAssociationId': 'string',
                        'RouteTableId': 'string',
                        'SubnetId': 'string',
                        'GatewayId': 'string',
                        'AssociationState': {
                            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failed',
                            'StatusMessage': 'string'
                        }
                    },
                ],
                'PropagatingVgws': [
                    {
                        'GatewayId': 'string'
                    },
                ],
                'RouteTableId': 'string',
                'Routes': [
                    {
                        'DestinationCidrBlock': 'string',
                        'DestinationIpv6CidrBlock': 'string',
                        'DestinationPrefixListId': 'string',
                        'EgressOnlyInternetGatewayId': 'string',
                        'GatewayId': 'string',
                        'InstanceId': 'string',
                        'InstanceOwnerId': 'string',
                        'NatGatewayId': 'string',
                        'TransitGatewayId': 'string',
                        'LocalGatewayId': 'string',
                        'NetworkInterfaceId': 'string',
                        'Origin': 'CreateRouteTable'|'CreateRoute'|'EnableVgwRoutePropagation',
                        'State': 'active'|'blackhole',
                        'VpcPeeringConnectionId': 'string'
                    },
                ],
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VpcId': 'string',
                'OwnerId': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    CreateRouteTable - The route was automatically created when the route table was created.
    CreateRoute - The route was manually added to the route table.
    EnableVgwRoutePropagation - The route was propagated by route propagation.
    
    """
    pass

def describe_scheduled_instance_availability(DryRun=None, Filters=None, FirstSlotStartTimeRange=None, MaxResults=None, MaxSlotDurationInHours=None, MinSlotDurationInHours=None, NextToken=None, Recurrence=None):
    """
    Finds available schedules that meet the specified criteria.
    You can search for an available schedule no more than 3 months in advance. You must meet the minimum required duration of 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.
    After you find a schedule that meets your needs, call  PurchaseScheduledInstances to purchase Scheduled Instances with that schedule.
    See also: AWS API Documentation
    
    Examples
    This example describes a schedule that occurs every week on Sunday, starting on the specified date. Note that the output contains a single schedule as an example.
    Expected Output:
    
    :example: response = client.describe_scheduled_instance_availability(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        FirstSlotStartTimeRange={
            'EarliestTime': datetime(2015, 1, 1),
            'LatestTime': datetime(2015, 1, 1)
        },
        MaxResults=123,
        MaxSlotDurationInHours=123,
        MinSlotDurationInHours=123,
        NextToken='string',
        Recurrence={
            'Frequency': 'string',
            'Interval': 123,
            'OccurrenceDays': [
                123,
            ],
            'OccurrenceRelativeToEnd': True|False,
            'OccurrenceUnit': 'string'
        }
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: The filters.\n\navailability-zone - The Availability Zone (for example, us-west-2a ).\ninstance-type - The instance type (for example, c4.large ).\nnetwork-platform - The network platform (EC2-Classic or EC2-VPC ).\nplatform - The platform (Linux/UNIX or Windows ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type FirstSlotStartTimeRange: dict
    :param FirstSlotStartTimeRange: [REQUIRED]\nThe time period for the first schedule to start.\n\nEarliestTime (datetime) -- [REQUIRED]The earliest date and time, in UTC, for the Scheduled Instance to start.\n\nLatestTime (datetime) -- [REQUIRED]The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future.\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned NextToken value.

    :type MaxSlotDurationInHours: integer
    :param MaxSlotDurationInHours: The maximum available duration, in hours. This value must be greater than MinSlotDurationInHours and less than 1,720.

    :type MinSlotDurationInHours: integer
    :param MinSlotDurationInHours: The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.

    :type NextToken: string
    :param NextToken: The token for the next set of results.

    :type Recurrence: dict
    :param Recurrence: [REQUIRED]\nThe schedule recurrence.\n\nFrequency (string) --The frequency (Daily , Weekly , or Monthly ).\n\nInterval (integer) --The interval quantity. The interval unit depends on the value of Frequency . For example, every 2 weeks or every 2 months.\n\nOccurrenceDays (list) --The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can\'t specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day.\n\n(integer) --\n\n\nOccurrenceRelativeToEnd (boolean) --Indicates whether the occurrence is relative to the end of the specified week or month. You can\'t specify this value with a daily schedule.\n\nOccurrenceUnit (string) --The unit for OccurrenceDays (DayOfWeek or DayOfMonth ). This value is required for a monthly schedule. You can\'t specify DayOfWeek with a weekly schedule. You can\'t specify this value with a daily schedule.\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'ScheduledInstanceAvailabilitySet': [
        {
            'AvailabilityZone': 'string',
            'AvailableInstanceCount': 123,
            'FirstSlotStartTime': datetime(2015, 1, 1),
            'HourlyPrice': 'string',
            'InstanceType': 'string',
            'MaxTermDurationInDays': 123,
            'MinTermDurationInDays': 123,
            'NetworkPlatform': 'string',
            'Platform': 'string',
            'PurchaseToken': 'string',
            'Recurrence': {
                'Frequency': 'string',
                'Interval': 123,
                'OccurrenceDaySet': [
                    123,
                ],
                'OccurrenceRelativeToEnd': True|False,
                'OccurrenceUnit': 'string'
            },
            'SlotDurationInHours': 123,
            'TotalScheduledInstanceHours': 123
        },
    ]
}


Response Structure

(dict) --
Contains the output of DescribeScheduledInstanceAvailability.

NextToken (string) --
The token required to retrieve the next set of results. This value is null when there are no more results to return.

ScheduledInstanceAvailabilitySet (list) --
Information about the available Scheduled Instances.

(dict) --
Describes a schedule that is available for your Scheduled Instances.

AvailabilityZone (string) --
The Availability Zone.

AvailableInstanceCount (integer) --
The number of available instances.

FirstSlotStartTime (datetime) --
The time period for the first schedule to start.

HourlyPrice (string) --
The hourly price for a single instance.

InstanceType (string) --
The instance type. You can specify one of the C3, C4, M4, or R3 instance types.

MaxTermDurationInDays (integer) --
The maximum term. The only possible value is 365 days.

MinTermDurationInDays (integer) --
The minimum term. The only possible value is 365 days.

NetworkPlatform (string) --
The network platform (EC2-Classic or EC2-VPC ).

Platform (string) --
The platform (Linux/UNIX or Windows ).

PurchaseToken (string) --
The purchase token. This token expires in two hours.

Recurrence (dict) --
The schedule recurrence.

Frequency (string) --
The frequency (Daily , Weekly , or Monthly ).

Interval (integer) --
The interval quantity. The interval unit depends on the value of frequency . For example, every 2 weeks or every 2 months.

OccurrenceDaySet (list) --
The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).

(integer) --


OccurrenceRelativeToEnd (boolean) --
Indicates whether the occurrence is relative to the end of the specified week or month.

OccurrenceUnit (string) --
The unit for occurrenceDaySet (DayOfWeek or DayOfMonth ).



SlotDurationInHours (integer) --
The number of hours in the schedule.

TotalScheduledInstanceHours (integer) --
The total number of hours for a single instance for the entire term.











Examples
This example describes a schedule that occurs every week on Sunday, starting on the specified date. Note that the output contains a single schedule as an example.
response = client.describe_scheduled_instance_availability(
    FirstSlotStartTimeRange={
        'EarliestTime': datetime(2016, 1, 31, 0, 0, 0, 6, 31, 0),
        'LatestTime': datetime(2016, 1, 31, 4, 0, 0, 6, 31, 0),
    },
    Recurrence={
        'Frequency': 'Weekly',
        'Interval': 1,
        'OccurrenceDays': [
            1,
        ],
    },
)

print(response)


Expected Output:
{
    'ScheduledInstanceAvailabilitySet': [
        {
            'AvailabilityZone': 'us-west-2b',
            'AvailableInstanceCount': 20,
            'FirstSlotStartTime': datetime(2016, 1, 31, 0, 0, 0, 6, 31, 0),
            'HourlyPrice': '0.095',
            'InstanceType': 'c4.large',
            'MaxTermDurationInDays': 366,
            'MinTermDurationInDays': 366,
            'NetworkPlatform': 'EC2-VPC',
            'Platform': 'Linux/UNIX',
            'PurchaseToken': 'eyJ2IjoiMSIsInMiOjEsImMiOi...',
            'Recurrence': {
                'Frequency': 'Weekly',
                'Interval': 1,
                'OccurrenceDaySet': [
                    1,
                ],
                'OccurrenceRelativeToEnd': False,
            },
            'SlotDurationInHours': 23,
            'TotalScheduledInstanceHours': 1219,
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NextToken': 'string',
        'ScheduledInstanceAvailabilitySet': [
            {
                'AvailabilityZone': 'string',
                'AvailableInstanceCount': 123,
                'FirstSlotStartTime': datetime(2015, 1, 1),
                'HourlyPrice': 'string',
                'InstanceType': 'string',
                'MaxTermDurationInDays': 123,
                'MinTermDurationInDays': 123,
                'NetworkPlatform': 'string',
                'Platform': 'string',
                'PurchaseToken': 'string',
                'Recurrence': {
                    'Frequency': 'string',
                    'Interval': 123,
                    'OccurrenceDaySet': [
                        123,
                    ],
                    'OccurrenceRelativeToEnd': True|False,
                    'OccurrenceUnit': 'string'
                },
                'SlotDurationInHours': 123,
                'TotalScheduledInstanceHours': 123
            },
        ]
    }
    
    
    :returns: 
    (integer) --
    
    """
    pass

def describe_scheduled_instances(DryRun=None, Filters=None, MaxResults=None, NextToken=None, ScheduledInstanceIds=None, SlotStartTimeRange=None):
    """
    Describes the specified Scheduled Instances or all your Scheduled Instances.
    See also: AWS API Documentation
    
    Examples
    This example describes the specified Scheduled Instance.
    Expected Output:
    
    :example: response = client.describe_scheduled_instances(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        ScheduledInstanceIds=[
            'string',
        ],
        SlotStartTimeRange={
            'EarliestTime': datetime(2015, 1, 1),
            'LatestTime': datetime(2015, 1, 1)
        }
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: The filters.\n\navailability-zone - The Availability Zone (for example, us-west-2a ).\ninstance-type - The instance type (for example, c4.large ).\nnetwork-platform - The network platform (EC2-Classic or EC2-VPC ).\nplatform - The platform (Linux/UNIX or Windows ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 100. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token for the next set of results.

    :type ScheduledInstanceIds: list
    :param ScheduledInstanceIds: The Scheduled Instance IDs.\n\n(string) --\n\n

    :type SlotStartTimeRange: dict
    :param SlotStartTimeRange: The time period for the first schedule to start.\n\nEarliestTime (datetime) --The earliest date and time, in UTC, for the Scheduled Instance to start.\n\nLatestTime (datetime) --The latest date and time, in UTC, for the Scheduled Instance to start.\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'ScheduledInstanceSet': [
        {
            'AvailabilityZone': 'string',
            'CreateDate': datetime(2015, 1, 1),
            'HourlyPrice': 'string',
            'InstanceCount': 123,
            'InstanceType': 'string',
            'NetworkPlatform': 'string',
            'NextSlotStartTime': datetime(2015, 1, 1),
            'Platform': 'string',
            'PreviousSlotEndTime': datetime(2015, 1, 1),
            'Recurrence': {
                'Frequency': 'string',
                'Interval': 123,
                'OccurrenceDaySet': [
                    123,
                ],
                'OccurrenceRelativeToEnd': True|False,
                'OccurrenceUnit': 'string'
            },
            'ScheduledInstanceId': 'string',
            'SlotDurationInHours': 123,
            'TermEndDate': datetime(2015, 1, 1),
            'TermStartDate': datetime(2015, 1, 1),
            'TotalScheduledInstanceHours': 123
        },
    ]
}


Response Structure

(dict) --
Contains the output of DescribeScheduledInstances.

NextToken (string) --
The token required to retrieve the next set of results. This value is null when there are no more results to return.

ScheduledInstanceSet (list) --
Information about the Scheduled Instances.

(dict) --
Describes a Scheduled Instance.

AvailabilityZone (string) --
The Availability Zone.

CreateDate (datetime) --
The date when the Scheduled Instance was purchased.

HourlyPrice (string) --
The hourly price for a single instance.

InstanceCount (integer) --
The number of instances.

InstanceType (string) --
The instance type.

NetworkPlatform (string) --
The network platform (EC2-Classic or EC2-VPC ).

NextSlotStartTime (datetime) --
The time for the next schedule to start.

Platform (string) --
The platform (Linux/UNIX or Windows ).

PreviousSlotEndTime (datetime) --
The time that the previous schedule ended or will end.

Recurrence (dict) --
The schedule recurrence.

Frequency (string) --
The frequency (Daily , Weekly , or Monthly ).

Interval (integer) --
The interval quantity. The interval unit depends on the value of frequency . For example, every 2 weeks or every 2 months.

OccurrenceDaySet (list) --
The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).

(integer) --


OccurrenceRelativeToEnd (boolean) --
Indicates whether the occurrence is relative to the end of the specified week or month.

OccurrenceUnit (string) --
The unit for occurrenceDaySet (DayOfWeek or DayOfMonth ).



ScheduledInstanceId (string) --
The Scheduled Instance ID.

SlotDurationInHours (integer) --
The number of hours in the schedule.

TermEndDate (datetime) --
The end date for the Scheduled Instance.

TermStartDate (datetime) --
The start date for the Scheduled Instance.

TotalScheduledInstanceHours (integer) --
The total number of hours for a single instance for the entire term.











Examples
This example describes the specified Scheduled Instance.
response = client.describe_scheduled_instances(
    ScheduledInstanceIds=[
        'sci-1234-1234-1234-1234-123456789012',
    ],
)

print(response)


Expected Output:
{
    'ScheduledInstanceSet': [
        {
            'AvailabilityZone': 'us-west-2b',
            'CreateDate': datetime(2016, 1, 25, 21, 43, 38, 0, 25, 0),
            'HourlyPrice': '0.095',
            'InstanceCount': 1,
            'InstanceType': 'c4.large',
            'NetworkPlatform': 'EC2-VPC',
            'NextSlotStartTime': datetime(2016, 1, 31, 9, 0, 0, 6, 31, 0),
            'Platform': 'Linux/UNIX',
            'Recurrence': {
                'Frequency': 'Weekly',
                'Interval': 1,
                'OccurrenceDaySet': [
                    1,
                ],
                'OccurrenceRelativeToEnd': False,
                'OccurrenceUnit': '',
            },
            'ScheduledInstanceId': 'sci-1234-1234-1234-1234-123456789012',
            'SlotDurationInHours': 32,
            'TermEndDate': datetime(2017, 1, 31, 9, 0, 0, 1, 31, 0),
            'TermStartDate': datetime(2016, 1, 31, 9, 0, 0, 6, 31, 0),
            'TotalScheduledInstanceHours': 1696,
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NextToken': 'string',
        'ScheduledInstanceSet': [
            {
                'AvailabilityZone': 'string',
                'CreateDate': datetime(2015, 1, 1),
                'HourlyPrice': 'string',
                'InstanceCount': 123,
                'InstanceType': 'string',
                'NetworkPlatform': 'string',
                'NextSlotStartTime': datetime(2015, 1, 1),
                'Platform': 'string',
                'PreviousSlotEndTime': datetime(2015, 1, 1),
                'Recurrence': {
                    'Frequency': 'string',
                    'Interval': 123,
                    'OccurrenceDaySet': [
                        123,
                    ],
                    'OccurrenceRelativeToEnd': True|False,
                    'OccurrenceUnit': 'string'
                },
                'ScheduledInstanceId': 'string',
                'SlotDurationInHours': 123,
                'TermEndDate': datetime(2015, 1, 1),
                'TermStartDate': datetime(2015, 1, 1),
                'TotalScheduledInstanceHours': 123
            },
        ]
    }
    
    
    :returns: 
    (integer) --
    
    """
    pass

def describe_security_group_references(DryRun=None, GroupId=None):
    """
    [VPC only] Describes the VPCs on the other side of a VPC peering connection that are referencing the security groups you\'ve specified in this request.
    See also: AWS API Documentation
    
    Examples
    This example describes the security group references for the specified security group.
    Expected Output:
    
    :example: response = client.describe_security_group_references(
        DryRun=True|False,
        GroupId=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type GroupId: list
    :param GroupId: [REQUIRED]\nThe IDs of the security groups in your account.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'SecurityGroupReferenceSet': [
        {
            'GroupId': 'string',
            'ReferencingVpcId': 'string',
            'VpcPeeringConnectionId': 'string'
        },
    ]
}


Response Structure

(dict) --

SecurityGroupReferenceSet (list) --
Information about the VPCs with the referencing security groups.

(dict) --
Describes a VPC with a security group that references your security group.

GroupId (string) --
The ID of your security group.

ReferencingVpcId (string) --
The ID of the VPC with the referencing security group.

VpcPeeringConnectionId (string) --
The ID of the VPC peering connection.











Examples
This example describes the security group references for the specified security group.
response = client.describe_security_group_references(
    GroupId=[
        'sg-903004f8',
    ],
)

print(response)


Expected Output:
{
    'SecurityGroupReferenceSet': [
        {
            'GroupId': 'sg-903004f8',
            'ReferencingVpcId': 'vpc-1a2b3c4d',
            'VpcPeeringConnectionId': 'pcx-b04deed9',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SecurityGroupReferenceSet': [
            {
                'GroupId': 'string',
                'ReferencingVpcId': 'string',
                'VpcPeeringConnectionId': 'string'
            },
        ]
    }
    
    
    """
    pass

def describe_security_groups(Filters=None, GroupIds=None, GroupNames=None, DryRun=None, NextToken=None, MaxResults=None):
    """
    Describes the specified security groups or all of your security groups.
    A security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see Amazon EC2 Security Groups in the Amazon Elastic Compute Cloud User Guide and Security Groups for Your VPC in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the specified security group.
    Expected Output:
    This example describes the security groups that include the specified tag (Purpose=test).
    Expected Output:
    
    :example: response = client.describe_security_groups(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        GroupIds=[
            'string',
        ],
        GroupNames=[
            'string',
        ],
        DryRun=True|False,
        NextToken='string',
        MaxResults=123
    )
    
    
    :type Filters: list
    :param Filters: The filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.\n\ndescription - The description of the security group.\negress.ip-permission.cidr - An IPv4 CIDR block for an outbound security group rule.\negress.ip-permission.from-port - For an outbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.\negress.ip-permission.group-id - The ID of a security group that has been referenced in an outbound security group rule.\negress.ip-permission.group-name - The name of a security group that has been referenced in an outbound security group rule.\negress.ip-permission.ipv6-cidr - An IPv6 CIDR block for an outbound security group rule.\negress.ip-permission.prefix-list-id - The ID (prefix) of the AWS service to which a security group rule allows outbound access.\negress.ip-permission.protocol - The IP protocol for an outbound security group rule (tcp | udp | icmp or a protocol number).\negress.ip-permission.to-port - For an outbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.\negress.ip-permission.user-id - The ID of an AWS account that has been referenced in an outbound security group rule.\ngroup-id - The ID of the security group.\ngroup-name - The name of the security group.\nip-permission.cidr - An IPv4 CIDR block for an inbound security group rule.\nip-permission.from-port - For an inbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.\nip-permission.group-id - The ID of a security group that has been referenced in an inbound security group rule.\nip-permission.group-name - The name of a security group that has been referenced in an inbound security group rule.\nip-permission.ipv6-cidr - An IPv6 CIDR block for an inbound security group rule.\nip-permission.prefix-list-id - The ID (prefix) of the AWS service from which a security group rule allows inbound access.\nip-permission.protocol - The IP protocol for an inbound security group rule (tcp | udp | icmp or a protocol number).\nip-permission.to-port - For an inbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.\nip-permission.user-id - The ID of an AWS account that has been referenced in an inbound security group rule.\nowner-id - The AWS account ID of the owner of the security group.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvpc-id - The ID of the VPC specified when the security group was created.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type GroupIds: list
    :param GroupIds: The IDs of the security groups. Required for security groups in a nondefault VPC.\nDefault: Describes all your security groups.\n\n(string) --\n\n

    :type GroupNames: list
    :param GroupNames: [EC2-Classic and default VPC only] The names of the security groups. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the group-name filter to describe security groups by name.\nDefault: Describes all your security groups.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NextToken: string
    :param NextToken: The token to request the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned NextToken value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.

    :rtype: dict

ReturnsResponse Syntax
{
    'SecurityGroups': [
        {
            'Description': 'string',
            'GroupName': 'string',
            'IpPermissions': [
                {
                    'FromPort': 123,
                    'IpProtocol': 'string',
                    'IpRanges': [
                        {
                            'CidrIp': 'string',
                            'Description': 'string'
                        },
                    ],
                    'Ipv6Ranges': [
                        {
                            'CidrIpv6': 'string',
                            'Description': 'string'
                        },
                    ],
                    'PrefixListIds': [
                        {
                            'Description': 'string',
                            'PrefixListId': 'string'
                        },
                    ],
                    'ToPort': 123,
                    'UserIdGroupPairs': [
                        {
                            'Description': 'string',
                            'GroupId': 'string',
                            'GroupName': 'string',
                            'PeeringStatus': 'string',
                            'UserId': 'string',
                            'VpcId': 'string',
                            'VpcPeeringConnectionId': 'string'
                        },
                    ]
                },
            ],
            'OwnerId': 'string',
            'GroupId': 'string',
            'IpPermissionsEgress': [
                {
                    'FromPort': 123,
                    'IpProtocol': 'string',
                    'IpRanges': [
                        {
                            'CidrIp': 'string',
                            'Description': 'string'
                        },
                    ],
                    'Ipv6Ranges': [
                        {
                            'CidrIpv6': 'string',
                            'Description': 'string'
                        },
                    ],
                    'PrefixListIds': [
                        {
                            'Description': 'string',
                            'PrefixListId': 'string'
                        },
                    ],
                    'ToPort': 123,
                    'UserIdGroupPairs': [
                        {
                            'Description': 'string',
                            'GroupId': 'string',
                            'GroupName': 'string',
                            'PeeringStatus': 'string',
                            'UserId': 'string',
                            'VpcId': 'string',
                            'VpcPeeringConnectionId': 'string'
                        },
                    ]
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcId': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

SecurityGroups (list) --
Information about the security groups.

(dict) --
Describes a security group

Description (string) --
A description of the security group.

GroupName (string) --
The name of the security group.

IpPermissions (list) --
The inbound rules associated with the security group.

(dict) --
Describes a set of permissions for a security group rule.

FromPort (integer) --
The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.

IpProtocol (string) --
The IP protocol name (tcp , udp , icmp , icmpv6 ) or number (see Protocol Numbers ).
[VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp , udp , icmp , or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp , udp , and icmp , you must specify a port range. For icmpv6 , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.

IpRanges (list) --
The IPv4 ranges.

(dict) --
Describes an IPv4 range.

CidrIp (string) --
The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.

Description (string) --
A description for the security group rule that references this IPv4 address range.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*





Ipv6Ranges (list) --
[VPC only] The IPv6 ranges.

(dict) --
[EC2-VPC only] Describes an IPv6 range.

CidrIpv6 (string) --
The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.

Description (string) --
A description for the security group rule that references this IPv6 address range.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*





PrefixListIds (list) --
[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group.

(dict) --
Describes a prefix list ID.

Description (string) --
A description for the security group rule that references this prefix list ID.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*

PrefixListId (string) --
The ID of the prefix.





ToPort (integer) --
The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.

UserIdGroupPairs (list) --
The security group and AWS account ID pairs.

(dict) --
Describes a security group and AWS account ID pair.

Description (string) --
A description for the security group rule that references this user ID group pair.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*

GroupId (string) --
The ID of the security group.

GroupName (string) --
The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.
For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.

PeeringStatus (string) --
The status of a VPC peering connection, if applicable.

UserId (string) --
The ID of an AWS account.
For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.
[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.

VpcId (string) --
The ID of the VPC for the referenced security group, if applicable.

VpcPeeringConnectionId (string) --
The ID of the VPC peering connection, if applicable.









OwnerId (string) --
The AWS account ID of the owner of the security group.

GroupId (string) --
The ID of the security group.

IpPermissionsEgress (list) --
[VPC only] The outbound rules associated with the security group.

(dict) --
Describes a set of permissions for a security group rule.

FromPort (integer) --
The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.

IpProtocol (string) --
The IP protocol name (tcp , udp , icmp , icmpv6 ) or number (see Protocol Numbers ).
[VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp , udp , icmp , or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp , udp , and icmp , you must specify a port range. For icmpv6 , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.

IpRanges (list) --
The IPv4 ranges.

(dict) --
Describes an IPv4 range.

CidrIp (string) --
The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.

Description (string) --
A description for the security group rule that references this IPv4 address range.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*





Ipv6Ranges (list) --
[VPC only] The IPv6 ranges.

(dict) --
[EC2-VPC only] Describes an IPv6 range.

CidrIpv6 (string) --
The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.

Description (string) --
A description for the security group rule that references this IPv6 address range.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*





PrefixListIds (list) --
[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group.

(dict) --
Describes a prefix list ID.

Description (string) --
A description for the security group rule that references this prefix list ID.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*

PrefixListId (string) --
The ID of the prefix.





ToPort (integer) --
The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.

UserIdGroupPairs (list) --
The security group and AWS account ID pairs.

(dict) --
Describes a security group and AWS account ID pair.

Description (string) --
A description for the security group rule that references this user ID group pair.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*

GroupId (string) --
The ID of the security group.

GroupName (string) --
The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.
For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.

PeeringStatus (string) --
The status of a VPC peering connection, if applicable.

UserId (string) --
The ID of an AWS account.
For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.
[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.

VpcId (string) --
The ID of the VPC for the referenced security group, if applicable.

VpcPeeringConnectionId (string) --
The ID of the VPC peering connection, if applicable.









Tags (list) --
Any tags assigned to the security group.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcId (string) --
[VPC only] The ID of the VPC for the security group.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the specified security group.
response = client.describe_security_groups(
    GroupIds=[
        'sg-903004f8',
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the security groups that include the specified tag (Purpose=test).
response = client.describe_security_groups(
    Filters=[
        {
            'Name': 'tag:Purpose',
            'Values': [
                'test',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SecurityGroups': [
            {
                'Description': 'string',
                'GroupName': 'string',
                'IpPermissions': [
                    {
                        'FromPort': 123,
                        'IpProtocol': 'string',
                        'IpRanges': [
                            {
                                'CidrIp': 'string',
                                'Description': 'string'
                            },
                        ],
                        'Ipv6Ranges': [
                            {
                                'CidrIpv6': 'string',
                                'Description': 'string'
                            },
                        ],
                        'PrefixListIds': [
                            {
                                'Description': 'string',
                                'PrefixListId': 'string'
                            },
                        ],
                        'ToPort': 123,
                        'UserIdGroupPairs': [
                            {
                                'Description': 'string',
                                'GroupId': 'string',
                                'GroupName': 'string',
                                'PeeringStatus': 'string',
                                'UserId': 'string',
                                'VpcId': 'string',
                                'VpcPeeringConnectionId': 'string'
                            },
                        ]
                    },
                ],
                'OwnerId': 'string',
                'GroupId': 'string',
                'IpPermissionsEgress': [
                    {
                        'FromPort': 123,
                        'IpProtocol': 'string',
                        'IpRanges': [
                            {
                                'CidrIp': 'string',
                                'Description': 'string'
                            },
                        ],
                        'Ipv6Ranges': [
                            {
                                'CidrIpv6': 'string',
                                'Description': 'string'
                            },
                        ],
                        'PrefixListIds': [
                            {
                                'Description': 'string',
                                'PrefixListId': 'string'
                            },
                        ],
                        'ToPort': 123,
                        'UserIdGroupPairs': [
                            {
                                'Description': 'string',
                                'GroupId': 'string',
                                'GroupName': 'string',
                                'PeeringStatus': 'string',
                                'UserId': 'string',
                                'VpcId': 'string',
                                'VpcPeeringConnectionId': 'string'
                            },
                        ]
                    },
                ],
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VpcId': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_snapshot_attribute(Attribute=None, SnapshotId=None, DryRun=None):
    """
    Describes the specified attribute of the specified snapshot. You can specify only one attribute at a time.
    For more information about EBS snapshots, see Amazon EBS Snapshots in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the createVolumePermission attribute on a snapshot with the snapshot ID of snap-066877671789bd71b.
    Expected Output:
    
    :example: response = client.describe_snapshot_attribute(
        Attribute='productCodes'|'createVolumePermission',
        SnapshotId='string',
        DryRun=True|False
    )
    
    
    :type Attribute: string
    :param Attribute: [REQUIRED]\nThe snapshot attribute you would like to view.\n

    :type SnapshotId: string
    :param SnapshotId: [REQUIRED]\nThe ID of the EBS snapshot.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'CreateVolumePermissions': [
        {
            'Group': 'all',
            'UserId': 'string'
        },
    ],
    'ProductCodes': [
        {
            'ProductCodeId': 'string',
            'ProductCodeType': 'devpay'|'marketplace'
        },
    ],
    'SnapshotId': 'string'
}


Response Structure

(dict) --

CreateVolumePermissions (list) --
The users and groups that have the permissions for creating volumes from the snapshot.

(dict) --
Describes the user or group to be added or removed from the list of create volume permissions for a volume.

Group (string) --
The group to be added or removed. The possible value is all .

UserId (string) --
The AWS account ID to be added or removed.





ProductCodes (list) --
The product codes.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.





SnapshotId (string) --
The ID of the EBS snapshot.







Examples
This example describes the createVolumePermission attribute on a snapshot with the snapshot ID of snap-066877671789bd71b.
response = client.describe_snapshot_attribute(
    Attribute='createVolumePermission',
    SnapshotId='snap-066877671789bd71b',
)

print(response)


Expected Output:
{
    'CreateVolumePermissions': [
    ],
    'SnapshotId': 'snap-066877671789bd71b',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'CreateVolumePermissions': [
            {
                'Group': 'all',
                'UserId': 'string'
            },
        ],
        'ProductCodes': [
            {
                'ProductCodeId': 'string',
                'ProductCodeType': 'devpay'|'marketplace'
            },
        ],
        'SnapshotId': 'string'
    }
    
    
    """
    pass

def describe_snapshots(Filters=None, MaxResults=None, NextToken=None, OwnerIds=None, RestorableByUserIds=None, SnapshotIds=None, DryRun=None):
    """
    Describes the specified EBS snapshots available to you or all of the EBS snapshots available to you.
    The snapshots available to you include public snapshots, private snapshots that you own, and private snapshots owned by other AWS accounts for which you have explicit create volume permissions.
    The create volume permissions fall into the following categories:
    The list of snapshots returned can be filtered by specifying snapshot IDs, snapshot owners, or AWS accounts with create volume permissions. If no options are specified, Amazon EC2 returns all snapshots for which you have create volume permissions.
    If you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned. If you specify an invalid snapshot ID, an error is returned. If you specify a snapshot ID for which you do not have access, it is not included in the returned results.
    If you specify one or more snapshot owners using the OwnerIds option, only snapshots from the specified owners and for which you have access are returned. The results can include the AWS account IDs of the specified owners, amazon for snapshots owned by Amazon, or self for snapshots that you own.
    If you specify a list of restorable users, only snapshots with create snapshot permissions for those users are returned. You can specify AWS account IDs (if you own the snapshots), self for snapshots for which you own or have explicit permissions, or all for public snapshots.
    If you are describing a long list of snapshots, you can paginate the output to make the list more manageable. The MaxResults parameter sets the maximum number of results returned in a single page. If the list of results exceeds your MaxResults value, then that number of results is returned along with a NextToken value that can be passed to a subsequent DescribeSnapshots request to retrieve the remaining results.
    To get the state of fast snapshot restores for a snapshot, use  DescribeFastSnapshotRestores .
    For more information about EBS snapshots, see Amazon EBS Snapshots in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes a snapshot with the snapshot ID of snap-1234567890abcdef0.
    Expected Output:
    This example describes all snapshots owned by the ID 012345678910 that are in the pending status.
    Expected Output:
    
    :example: response = client.describe_snapshots(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        OwnerIds=[
            'string',
        ],
        RestorableByUserIds=[
            'string',
        ],
        SnapshotIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\ndescription - A description of the snapshot.\nencrypted - Indicates whether the snapshot is encrypted (true | false )\nowner-alias - Value from an Amazon-maintained list (amazon | self | all | aws-marketplace | microsoft ) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.\nowner-id - The ID of the AWS account that owns the snapshot.\nprogress - The progress of the snapshot, as a percentage (for example, 80%).\nsnapshot-id - The snapshot ID.\nstart-time - The time stamp when the snapshot was initiated.\nstatus - The status of the snapshot (pending | completed | error ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvolume-id - The ID of the volume the snapshot is for.\nvolume-size - The size of the volume, in GiB.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of snapshot results returned by DescribeSnapshots in paginated output. When this parameter is used, DescribeSnapshots only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another DescribeSnapshots request with the returned NextToken value. This value can be between 5 and 1000; if MaxResults is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then DescribeSnapshots returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.

    :type NextToken: string
    :param NextToken: The NextToken value returned from a previous paginated DescribeSnapshots request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.

    :type OwnerIds: list
    :param OwnerIds: Describes the snapshots owned by these owners.\n\n(string) --\n\n

    :type RestorableByUserIds: list
    :param RestorableByUserIds: The IDs of the AWS accounts that can create volumes from the snapshot.\n\n(string) --\n\n

    :type SnapshotIds: list
    :param SnapshotIds: The snapshot IDs.\nDefault: Describes the snapshots for which you have create volume permissions.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Snapshots': [
        {
            'DataEncryptionKeyId': 'string',
            'Description': 'string',
            'Encrypted': True|False,
            'KmsKeyId': 'string',
            'OwnerId': 'string',
            'Progress': 'string',
            'SnapshotId': 'string',
            'StartTime': datetime(2015, 1, 1),
            'State': 'pending'|'completed'|'error',
            'StateMessage': 'string',
            'VolumeId': 'string',
            'VolumeSize': 123,
            'OwnerAlias': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Snapshots (list) --
Information about the snapshots.

(dict) --
Describes a snapshot.

DataEncryptionKeyId (string) --
The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by  DescribeSnapshots .

Description (string) --
The description for the snapshot.

Encrypted (boolean) --
Indicates whether the snapshot is encrypted.

KmsKeyId (string) --
The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.

OwnerId (string) --
The AWS account ID of the EBS snapshot owner.

Progress (string) --
The progress of the snapshot, as a percentage.

SnapshotId (string) --
The ID of the snapshot. Each snapshot receives a unique identifier when it is created.

StartTime (datetime) --
The time stamp when the snapshot was initiated.

State (string) --
The snapshot state.

StateMessage (string) --
Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by  DescribeSnapshots .

VolumeId (string) --
The ID of the volume that was used to create the snapshot. Snapshots created by the  CopySnapshot action have an arbitrary volume ID that should not be used for any purpose.

VolumeSize (integer) --
The size of the volume, in GiB.

OwnerAlias (string) --
Value from an Amazon-maintained list (amazon | self | all | aws-marketplace | microsoft ) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.

Tags (list) --
Any tags assigned to the snapshot.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The NextToken value to include in a future DescribeSnapshots request. When the results of a DescribeSnapshots request exceed MaxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes a snapshot with the snapshot ID of snap-1234567890abcdef0.
response = client.describe_snapshots(
    SnapshotIds=[
        'snap-1234567890abcdef0',
    ],
)

print(response)


Expected Output:
{
    'NextToken': '',
    'Snapshots': [
        {
            'Description': 'This is my snapshot.',
            'OwnerId': '012345678910',
            'Progress': '100%',
            'SnapshotId': 'snap-1234567890abcdef0',
            'StartTime': datetime(2014, 2, 28, 21, 28, 32, 4, 59, 0),
            'State': 'completed',
            'VolumeId': 'vol-049df61146c4d7901',
            'VolumeSize': 8,
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes all snapshots owned by the ID 012345678910 that are in the pending status.
response = client.describe_snapshots(
    Filters=[
        {
            'Name': 'status',
            'Values': [
                'pending',
            ],
        },
    ],
    OwnerIds=[
        '012345678910',
    ],
)

print(response)


Expected Output:
{
    'NextToken': '',
    'Snapshots': [
        {
            'Description': 'This is my copied snapshot.',
            'OwnerId': '012345678910',
            'Progress': '87%',
            'SnapshotId': 'snap-066877671789bd71b',
            'StartTime': datetime(2014, 2, 28, 21, 37, 27, 4, 59, 0),
            'State': 'pending',
            'VolumeId': 'vol-1234567890abcdef0',
            'VolumeSize': 8,
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Snapshots': [
            {
                'DataEncryptionKeyId': 'string',
                'Description': 'string',
                'Encrypted': True|False,
                'KmsKeyId': 'string',
                'OwnerId': 'string',
                'Progress': 'string',
                'SnapshotId': 'string',
                'StartTime': datetime(2015, 1, 1),
                'State': 'pending'|'completed'|'error',
                'StateMessage': 'string',
                'VolumeId': 'string',
                'VolumeSize': 123,
                'OwnerAlias': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    Filters (list) -- The filters.
    
    description - A description of the snapshot.
    encrypted - Indicates whether the snapshot is encrypted (true | false )
    owner-alias - Value from an Amazon-maintained list (amazon | self | all | aws-marketplace | microsoft ) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.
    owner-id - The ID of the AWS account that owns the snapshot.
    progress - The progress of the snapshot, as a percentage (for example, 80%).
    snapshot-id - The snapshot ID.
    start-time - The time stamp when the snapshot was initiated.
    status - The status of the snapshot (pending | completed | error ).
    tag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.
    tag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.
    volume-id - The ID of the volume the snapshot is for.
    volume-size - The size of the volume, in GiB.
    
    
    (dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:
    
    DescribeAvailabilityZones
    DescribeImages
    DescribeInstances
    DescribeKeyPairs
    DescribeSecurityGroups
    DescribeSnapshots
    DescribeSubnets
    DescribeTags
    DescribeVolumes
    DescribeVpcs
    
    
    Name (string) --The name of the filter. Filter names are case-sensitive.
    
    Values (list) --The filter values. Filter values are case-sensitive.
    
    (string) --
    
    
    
    
    
    
    MaxResults (integer) -- The maximum number of snapshot results returned by DescribeSnapshots in paginated output. When this parameter is used, DescribeSnapshots only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another DescribeSnapshots request with the returned NextToken value. This value can be between 5 and 1000; if MaxResults is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then DescribeSnapshots returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.
    NextToken (string) -- The NextToken value returned from a previous paginated DescribeSnapshots request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.
    OwnerIds (list) -- Describes the snapshots owned by these owners.
    
    (string) --
    
    
    RestorableByUserIds (list) -- The IDs of the AWS accounts that can create volumes from the snapshot.
    
    (string) --
    
    
    SnapshotIds (list) -- The snapshot IDs.
    Default: Describes the snapshots for which you have create volume permissions.
    
    (string) --
    
    
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    
    """
    pass

def describe_spot_datafeed_subscription(DryRun=None):
    """
    Describes the data feed for Spot Instances. For more information, see Spot Instance Data Feed in the Amazon EC2 User Guide for Linux Instances .
    See also: AWS API Documentation
    
    Examples
    This example describes the Spot Instance datafeed subscription for your AWS account.
    Expected Output:
    
    :example: response = client.describe_spot_datafeed_subscription(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'SpotDatafeedSubscription': {
        'Bucket': 'string',
        'Fault': {
            'Code': 'string',
            'Message': 'string'
        },
        'OwnerId': 'string',
        'Prefix': 'string',
        'State': 'Active'|'Inactive'
    }
}


Response Structure

(dict) --Contains the output of DescribeSpotDatafeedSubscription.

SpotDatafeedSubscription (dict) --The Spot Instance data feed subscription.

Bucket (string) --The Amazon S3 bucket where the Spot Instance data feed is located.

Fault (dict) --The fault codes for the Spot Instance request, if any.

Code (string) --The reason code for the Spot Instance state change.

Message (string) --The message for the Spot Instance state change.



OwnerId (string) --The AWS account ID of the account.

Prefix (string) --The prefix that is prepended to data feed files.

State (string) --The state of the Spot Instance data feed subscription.








Examples
This example describes the Spot Instance datafeed subscription for your AWS account.
response = client.describe_spot_datafeed_subscription(
)

print(response)


Expected Output:
{
    'SpotDatafeedSubscription': {
        'Bucket': 'my-s3-bucket',
        'OwnerId': '123456789012',
        'Prefix': 'spotdata',
        'State': 'Active',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SpotDatafeedSubscription': {
            'Bucket': 'string',
            'Fault': {
                'Code': 'string',
                'Message': 'string'
            },
            'OwnerId': 'string',
            'Prefix': 'string',
            'State': 'Active'|'Inactive'
        }
    }
    
    
    """
    pass

def describe_spot_fleet_instances(DryRun=None, MaxResults=None, NextToken=None, SpotFleetRequestId=None):
    """
    Describes the running instances for the specified Spot Fleet.
    See also: AWS API Documentation
    
    Examples
    This example lists the Spot Instances associated with the specified Spot fleet.
    Expected Output:
    
    :example: response = client.describe_spot_fleet_instances(
        DryRun=True|False,
        MaxResults=123,
        NextToken='string',
        SpotFleetRequestId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token for the next set of results.

    :type SpotFleetRequestId: string
    :param SpotFleetRequestId: [REQUIRED]\nThe ID of the Spot Fleet request.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ActiveInstances': [
        {
            'InstanceId': 'string',
            'InstanceType': 'string',
            'SpotInstanceRequestId': 'string',
            'InstanceHealth': 'healthy'|'unhealthy'
        },
    ],
    'NextToken': 'string',
    'SpotFleetRequestId': 'string'
}


Response Structure

(dict) --
Contains the output of DescribeSpotFleetInstances.

ActiveInstances (list) --
The running instances. This list is refreshed periodically and might be out of date.

(dict) --
Describes a running instance in a Spot Fleet.

InstanceId (string) --
The ID of the instance.

InstanceType (string) --
The instance type.

SpotInstanceRequestId (string) --
The ID of the Spot Instance request.

InstanceHealth (string) --
The health status of the instance. If the status of either the instance status check or the system status check is impaired , the health status of the instance is unhealthy . Otherwise, the health status is healthy .





NextToken (string) --
The token required to retrieve the next set of results. This value is null when there are no more results to return.

SpotFleetRequestId (string) --
The ID of the Spot Fleet request.







Examples
This example lists the Spot Instances associated with the specified Spot fleet.
response = client.describe_spot_fleet_instances(
    SpotFleetRequestId='sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
)

print(response)


Expected Output:
{
    'ActiveInstances': [
        {
            'InstanceId': 'i-1234567890abcdef0',
            'InstanceType': 'm3.medium',
            'SpotInstanceRequestId': 'sir-08b93456',
        },
    ],
    'SpotFleetRequestId': 'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'ActiveInstances': [
            {
                'InstanceId': 'string',
                'InstanceType': 'string',
                'SpotInstanceRequestId': 'string',
                'InstanceHealth': 'healthy'|'unhealthy'
            },
        ],
        'NextToken': 'string',
        'SpotFleetRequestId': 'string'
    }
    
    
    """
    pass

def describe_spot_fleet_request_history(DryRun=None, EventType=None, MaxResults=None, NextToken=None, SpotFleetRequestId=None, StartTime=None):
    """
    Describes the events for the specified Spot Fleet request during the specified time.
    Spot Fleet events are delayed by up to 30 seconds before they can be described. This ensures that you can query by the last evaluated time and not miss a recorded event. Spot Fleet events are available for 48 hours.
    See also: AWS API Documentation
    
    Examples
    This example returns the history for the specified Spot fleet starting at the specified time.
    Expected Output:
    
    :example: response = client.describe_spot_fleet_request_history(
        DryRun=True|False,
        EventType='instanceChange'|'fleetRequestChange'|'error'|'information',
        MaxResults=123,
        NextToken='string',
        SpotFleetRequestId='string',
        StartTime=datetime(2015, 1, 1)
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EventType: string
    :param EventType: The type of events to describe. By default, all events are described.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token for the next set of results.

    :type SpotFleetRequestId: string
    :param SpotFleetRequestId: [REQUIRED]\nThe ID of the Spot Fleet request.\n

    :type StartTime: datetime
    :param StartTime: [REQUIRED]\nThe starting date and time for the events, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).\n

    :rtype: dict

ReturnsResponse Syntax
{
    'HistoryRecords': [
        {
            'EventInformation': {
                'EventDescription': 'string',
                'EventSubType': 'string',
                'InstanceId': 'string'
            },
            'EventType': 'instanceChange'|'fleetRequestChange'|'error'|'information',
            'Timestamp': datetime(2015, 1, 1)
        },
    ],
    'LastEvaluatedTime': datetime(2015, 1, 1),
    'NextToken': 'string',
    'SpotFleetRequestId': 'string',
    'StartTime': datetime(2015, 1, 1)
}


Response Structure

(dict) --
Contains the output of DescribeSpotFleetRequestHistory.

HistoryRecords (list) --
Information about the events in the history of the Spot Fleet request.

(dict) --
Describes an event in the history of the Spot Fleet request.

EventInformation (dict) --
Information about the event.

EventDescription (string) --
The description of the event.

EventSubType (string) --
The event.
The following are the error events:

iamFleetRoleInvalid - The EC2 Fleet or Spot Fleet did not have the required permissions either to launch or terminate an instance.
spotFleetRequestConfigurationInvalid - The configuration is not valid. For more information, see the description of the event.
spotInstanceCountLimitExceeded - You\'ve reached the limit on the number of Spot Instances that you can launch.

The following are the fleetRequestChange events:

active - The EC2 Fleet or Spot Fleet request has been validated and Amazon EC2 is attempting to maintain the target number of running Spot Instances.
cancelled - The EC2 Fleet or Spot Fleet request is canceled and has no running Spot Instances. The EC2 Fleet or Spot Fleet will be deleted two days after its instances were terminated.
cancelled_running - The EC2 Fleet or Spot Fleet request is canceled and does not launch additional Spot Instances. Existing Spot Instances continue to run until they are interrupted or terminated.
cancelled_terminating - The EC2 Fleet or Spot Fleet request is canceled and its Spot Instances are terminating.
expired - The EC2 Fleet or Spot Fleet request has expired. A subsequent event indicates that the instances were terminated, if the request was created with TerminateInstancesWithExpiration set.
modify_in_progress - A request to modify the EC2 Fleet or Spot Fleet request was accepted and is in progress.
modify_successful - The EC2 Fleet or Spot Fleet request was modified.
price_update - The price for a launch configuration was adjusted because it was too high. This change is permanent.
submitted - The EC2 Fleet or Spot Fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of Spot Instances.

The following are the instanceChange events:

launched - A request was fulfilled and a new instance was launched.
terminated - An instance was terminated by the user.

The following are the Information events:

launchSpecTemporarilyBlacklisted - The configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.
launchSpecUnusable - The price in a launch specification is not valid because it is below the Spot price or the Spot price is above the On-Demand price.
fleetProgressHalted - The price in every launch specification is not valid. A launch specification might become valid if the Spot price changes.


InstanceId (string) --
The ID of the instance. This information is available only for instanceChange events.



EventType (string) --
The event type.

error - An error with the Spot Fleet request.
fleetRequestChange - A change in the status or configuration of the Spot Fleet request.
instanceChange - An instance was launched or terminated.
Information - An informational event.


Timestamp (datetime) --
The date and time of the event, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).





LastEvaluatedTime (datetime) --
The last date and time for the events, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). All records up to this time were retrieved.
If nextToken indicates that there are more results, this value is not present.

NextToken (string) --
The token required to retrieve the next set of results. This value is null when there are no more results to return.

SpotFleetRequestId (string) --
The ID of the Spot Fleet request.

StartTime (datetime) --
The starting date and time for the events, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).







Examples
This example returns the history for the specified Spot fleet starting at the specified time.
response = client.describe_spot_fleet_request_history(
    SpotFleetRequestId='sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    StartTime=datetime(2015, 5, 26, 0, 0, 0, 1, 146, 0),
)

print(response)


Expected Output:
{
    'HistoryRecords': [
        {
            'EventInformation': {
                'EventSubType': 'submitted',
            },
            'EventType': 'fleetRequestChange',
            'Timestamp': datetime(2015, 5, 26, 23, 17, 20, 1, 146, 0),
        },
        {
            'EventInformation': {
                'EventSubType': 'active',
            },
            'EventType': 'fleetRequestChange',
            'Timestamp': datetime(2015, 5, 26, 23, 17, 20, 1, 146, 0),
        },
        {
            'EventInformation': {
                'EventSubType': 'launched',
                'InstanceId': 'i-1234567890abcdef0',
            },
            'EventType': 'instanceChange',
            'Timestamp': datetime(2015, 5, 26, 23, 21, 21, 1, 146, 0),
        },
        {
            'EventInformation': {
                'EventSubType': 'launched',
                'InstanceId': 'i-1234567890abcdef1',
            },
            'EventType': 'instanceChange',
            'Timestamp': datetime(2015, 5, 26, 23, 21, 21, 1, 146, 0),
        },
    ],
    'NextToken': 'CpHNsscimcV5oH7bSbub03CI2Qms5+ypNpNm+53MNlR0YcXAkp0xFlfKf91yVxSExmbtma3awYxMFzNA663ZskT0AHtJ6TCb2Z8bQC2EnZgyELbymtWPfpZ1ZbauVg+P+TfGlWxWWB/Vr5dk5d4LfdgA/DRAHUrYgxzrEXAMPLE=',
    'SpotFleetRequestId': 'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    'StartTime': datetime(2015, 5, 26, 0, 0, 0, 1, 146, 0),
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'HistoryRecords': [
            {
                'EventInformation': {
                    'EventDescription': 'string',
                    'EventSubType': 'string',
                    'InstanceId': 'string'
                },
                'EventType': 'instanceChange'|'fleetRequestChange'|'error'|'information',
                'Timestamp': datetime(2015, 1, 1)
            },
        ],
        'LastEvaluatedTime': datetime(2015, 1, 1),
        'NextToken': 'string',
        'SpotFleetRequestId': 'string',
        'StartTime': datetime(2015, 1, 1)
    }
    
    
    :returns: 
    iamFleetRoleInvalid - The EC2 Fleet or Spot Fleet did not have the required permissions either to launch or terminate an instance.
    spotFleetRequestConfigurationInvalid - The configuration is not valid. For more information, see the description of the event.
    spotInstanceCountLimitExceeded - You\'ve reached the limit on the number of Spot Instances that you can launch.
    
    """
    pass

def describe_spot_fleet_requests(DryRun=None, MaxResults=None, NextToken=None, SpotFleetRequestIds=None):
    """
    Describes your Spot Fleet requests.
    Spot Fleet requests are deleted 48 hours after they are canceled and their instances are terminated.
    See also: AWS API Documentation
    
    Examples
    This example describes the specified Spot fleet request.
    Expected Output:
    
    :example: response = client.describe_spot_fleet_requests(
        DryRun=True|False,
        MaxResults=123,
        NextToken='string',
        SpotFleetRequestIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token for the next set of results.

    :type SpotFleetRequestIds: list
    :param SpotFleetRequestIds: The IDs of the Spot Fleet requests.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'SpotFleetRequestConfigs': [
        {
            'ActivityStatus': 'error'|'pending_fulfillment'|'pending_termination'|'fulfilled',
            'CreateTime': datetime(2015, 1, 1),
            'SpotFleetRequestConfig': {
                'AllocationStrategy': 'lowestPrice'|'diversified'|'capacityOptimized',
                'OnDemandAllocationStrategy': 'lowestPrice'|'prioritized',
                'ClientToken': 'string',
                'ExcessCapacityTerminationPolicy': 'noTermination'|'default',
                'FulfilledCapacity': 123.0,
                'OnDemandFulfilledCapacity': 123.0,
                'IamFleetRole': 'string',
                'LaunchSpecifications': [
                    {
                        'SecurityGroups': [
                            {
                                'GroupName': 'string',
                                'GroupId': 'string'
                            },
                        ],
                        'AddressingType': 'string',
                        'BlockDeviceMappings': [
                            {
                                'DeviceName': 'string',
                                'VirtualName': 'string',
                                'Ebs': {
                                    'DeleteOnTermination': True|False,
                                    'Iops': 123,
                                    'SnapshotId': 'string',
                                    'VolumeSize': 123,
                                    'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                                    'KmsKeyId': 'string',
                                    'Encrypted': True|False
                                },
                                'NoDevice': 'string'
                            },
                        ],
                        'EbsOptimized': True|False,
                        'IamInstanceProfile': {
                            'Arn': 'string',
                            'Name': 'string'
                        },
                        'ImageId': 'string',
                        'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                        'KernelId': 'string',
                        'KeyName': 'string',
                        'Monitoring': {
                            'Enabled': True|False
                        },
                        'NetworkInterfaces': [
                            {
                                'AssociatePublicIpAddress': True|False,
                                'DeleteOnTermination': True|False,
                                'Description': 'string',
                                'DeviceIndex': 123,
                                'Groups': [
                                    'string',
                                ],
                                'Ipv6AddressCount': 123,
                                'Ipv6Addresses': [
                                    {
                                        'Ipv6Address': 'string'
                                    },
                                ],
                                'NetworkInterfaceId': 'string',
                                'PrivateIpAddress': 'string',
                                'PrivateIpAddresses': [
                                    {
                                        'Primary': True|False,
                                        'PrivateIpAddress': 'string'
                                    },
                                ],
                                'SecondaryPrivateIpAddressCount': 123,
                                'SubnetId': 'string',
                                'InterfaceType': 'string'
                            },
                        ],
                        'Placement': {
                            'AvailabilityZone': 'string',
                            'GroupName': 'string',
                            'Tenancy': 'default'|'dedicated'|'host'
                        },
                        'RamdiskId': 'string',
                        'SpotPrice': 'string',
                        'SubnetId': 'string',
                        'UserData': 'string',
                        'WeightedCapacity': 123.0,
                        'TagSpecifications': [
                            {
                                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                                'Tags': [
                                    {
                                        'Key': 'string',
                                        'Value': 'string'
                                    },
                                ]
                            },
                        ]
                    },
                ],
                'LaunchTemplateConfigs': [
                    {
                        'LaunchTemplateSpecification': {
                            'LaunchTemplateId': 'string',
                            'LaunchTemplateName': 'string',
                            'Version': 'string'
                        },
                        'Overrides': [
                            {
                                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                                'SpotPrice': 'string',
                                'SubnetId': 'string',
                                'AvailabilityZone': 'string',
                                'WeightedCapacity': 123.0,
                                'Priority': 123.0
                            },
                        ]
                    },
                ],
                'SpotPrice': 'string',
                'TargetCapacity': 123,
                'OnDemandTargetCapacity': 123,
                'OnDemandMaxTotalPrice': 'string',
                'SpotMaxTotalPrice': 'string',
                'TerminateInstancesWithExpiration': True|False,
                'Type': 'request'|'maintain'|'instant',
                'ValidFrom': datetime(2015, 1, 1),
                'ValidUntil': datetime(2015, 1, 1),
                'ReplaceUnhealthyInstances': True|False,
                'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate',
                'LoadBalancersConfig': {
                    'ClassicLoadBalancersConfig': {
                        'ClassicLoadBalancers': [
                            {
                                'Name': 'string'
                            },
                        ]
                    },
                    'TargetGroupsConfig': {
                        'TargetGroups': [
                            {
                                'Arn': 'string'
                            },
                        ]
                    }
                },
                'InstancePoolsToUseCount': 123,
                'TagSpecifications': [
                    {
                        'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                        'Tags': [
                            {
                                'Key': 'string',
                                'Value': 'string'
                            },
                        ]
                    },
                ]
            },
            'SpotFleetRequestId': 'string',
            'SpotFleetRequestState': 'submitted'|'active'|'cancelled'|'failed'|'cancelled_running'|'cancelled_terminating'|'modifying',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --
Contains the output of DescribeSpotFleetRequests.

NextToken (string) --
The token required to retrieve the next set of results. This value is null when there are no more results to return.

SpotFleetRequestConfigs (list) --
Information about the configuration of your Spot Fleet.

(dict) --
Describes a Spot Fleet request.

ActivityStatus (string) --
The progress of the Spot Fleet request. If there is an error, the status is error . After all requests are placed, the status is pending_fulfillment . If the size of the fleet is equal to or greater than its target capacity, the status is fulfilled . If the size of the fleet is decreased, the status is pending_termination while Spot Instances are terminating.

CreateTime (datetime) --
The creation date and time of the request.

SpotFleetRequestConfig (dict) --
The configuration of the Spot Fleet request.

AllocationStrategy (string) --
Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the Spot Fleet request.
If the allocation strategy is lowestPrice , Spot Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.
If the allocation strategy is diversified , Spot Fleet launches instances from all the Spot Instance pools that you specify.
If the allocation strategy is capacityOptimized , Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.

OnDemandAllocationStrategy (string) --
The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify lowestPrice , Spot Fleet uses price to determine the order, launching the lowest price first. If you specify prioritized , Spot Fleet uses the priority that you assign to each Spot Fleet launch template override, launching the highest priority first. If you do not specify a value, Spot Fleet defaults to lowestPrice .

ClientToken (string) --
A unique, case-sensitive identifier that you provide to ensure the idempotency of your listings. This helps to avoid duplicate listings. For more information, see Ensuring Idempotency .

ExcessCapacityTerminationPolicy (string) --
Indicates whether running Spot Instances should be terminated if you decrease the target capacity of the Spot Fleet request below the current size of the Spot Fleet.

FulfilledCapacity (float) --
The number of units fulfilled by this request compared to the set target capacity. You cannot set this value.

OnDemandFulfilledCapacity (float) --
The number of On-Demand units fulfilled by this request compared to the set target On-Demand capacity.

IamFleetRole (string) --
The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that grants the Spot Fleet the permission to request, launch, terminate, and tag instances on your behalf. For more information, see Spot Fleet Prerequisites in the Amazon EC2 User Guide for Linux Instances . Spot Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request using CancelSpotFleetRequests or when the Spot Fleet request expires, if you set TerminateInstancesWithExpiration .

LaunchSpecifications (list) --
The launch specifications for the Spot Fleet request. If you specify LaunchSpecifications , you can\'t specify LaunchTemplateConfigs . If you include On-Demand capacity in your request, you must use LaunchTemplateConfigs .

(dict) --
Describes the launch specification for one or more Spot Instances. If you include On-Demand capacity in your fleet request, you can\'t use SpotFleetLaunchSpecification ; you must use LaunchTemplateConfig .

SecurityGroups (list) --
One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





AddressingType (string) --
Deprecated.

BlockDeviceMappings (list) --
One or more block devices that are mapped to the Spot Instances. You can\'t specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name (for example, /dev/sdh or xvdh ).

VirtualName (string) --
The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.
NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.
Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.

Ebs (dict) --
Parameters used to automatically set up EBS volumes when the instance is launched.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.

SnapshotId (string) --
The ID of the snapshot.

VolumeSize (integer) --
The size of the volume, in GiB.
Default: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.
Constraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.

VolumeType (string) --
The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.
Default: gp2

KmsKeyId (string) --
Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.
This parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .

Encrypted (boolean) --
Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
In no case can you remove encryption from an encrypted volume.
Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .
This parameter is not returned by .



NoDevice (string) --
Suppresses the specified device included in the block device mapping of the AMI.





EbsOptimized (boolean) --
Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
Default: false

IamInstanceProfile (dict) --
The IAM instance profile.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Name (string) --
The name of the instance profile.



ImageId (string) --
The ID of the AMI.

InstanceType (string) --
The instance type.

KernelId (string) --
The ID of the kernel.

KeyName (string) --
The name of the key pair.

Monitoring (dict) --
Enable or disable monitoring for the instances.

Enabled (boolean) --
Enables monitoring for the instance.
Default: false



NetworkInterfaces (list) --
One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.

(dict) --
Describes a network interface.

AssociatePublicIpAddress (boolean) --
Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true .

DeleteOnTermination (boolean) --
If set to true , the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.

Description (string) --
The description of the network interface. Applies only if creating a network interface when launching an instance.

DeviceIndex (integer) --
The position of the network interface in the attachment order. A primary network interface has a device index of 0.
If you specify a network interface when launching an instance, you must specify the device index.

Groups (list) --
The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.

(string) --


Ipv6AddressCount (integer) --
A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you\'ve specified a minimum number of instances to launch.

Ipv6Addresses (list) --
One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you\'ve specified a minimum number of instances to launch.

(dict) --
Describes an IPv6 address.

Ipv6Address (string) --
The IPv6 address.





NetworkInterfaceId (string) --
The ID of the network interface.
If you are creating a Spot Fleet, omit this parameter because you can\xe2\x80\x99t specify a network interface ID in a launch specification.

PrivateIpAddress (string) --
The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.

PrivateIpAddresses (list) --
One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.

(dict) --
Describes a secondary private IPv4 address for a network interface.

Primary (boolean) --
Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.

PrivateIpAddress (string) --
The private IPv4 addresses.





SecondaryPrivateIpAddressCount (integer) --
The number of secondary private IPv4 addresses. You can\'t specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.

SubnetId (string) --
The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.

InterfaceType (string) --
The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .
If you are not creating an EFA, specify interface or omit this parameter.
Valid values: interface | efa





Placement (dict) --
The placement information.

AvailabilityZone (string) --
The Availability Zone.
[Spot Fleet only] To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".

GroupName (string) --
The name of the placement group.

Tenancy (string) --
The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for Spot Instances.



RamdiskId (string) --
The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.

SpotPrice (string) --
The maximum price per unit hour that you are willing to pay for a Spot Instance. If this value is not specified, the default is the Spot price specified for the fleet. To determine the Spot price per unit hour, divide the Spot price by the value of WeightedCapacity .

SubnetId (string) --
The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, "subnet-1234abcdeexample1, subnet-0987cdef6example2".

UserData (string) --
The Base64-encoded user data that instances use when starting up.

WeightedCapacity (float) --
The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.
If the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.

TagSpecifications (list) --
The tags to apply during creation.

(dict) --
The tags for a Spot Fleet resource.

ResourceType (string) --
The type of resource. Currently, the only resource type that is supported is instance . To tag the Spot Fleet request on creation, use the TagSpecifications parameter in ` SpotFleetRequestConfigData https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetRequestConfigData.html`__ .

Tags (list) --
The tags.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.













LaunchTemplateConfigs (list) --
The launch template and overrides. If you specify LaunchTemplateConfigs , you can\'t specify LaunchSpecifications . If you include On-Demand capacity in your request, you must use LaunchTemplateConfigs .

(dict) --
Describes a launch template and overrides.

LaunchTemplateSpecification (dict) --
The launch template.

LaunchTemplateId (string) --
The ID of the launch template. If you specify the template ID, you can\'t specify the template name.

LaunchTemplateName (string) --
The name of the launch template. If you specify the template name, you can\'t specify the template ID.

Version (string) --
The launch template version number, $Latest , or $Default . You must specify a value, otherwise the request fails.
If the value is $Latest , Amazon EC2 uses the latest version of the launch template.
If the value is $Default , Amazon EC2 uses the default version of the launch template.



Overrides (list) --
Any parameters that you specify override the same parameters in the launch template.

(dict) --
Describes overrides for a launch template.

InstanceType (string) --
The instance type.

SpotPrice (string) --
The maximum price per unit hour that you are willing to pay for a Spot Instance.

SubnetId (string) --
The ID of the subnet in which to launch the instances.

AvailabilityZone (string) --
The Availability Zone in which to launch the instances.

WeightedCapacity (float) --
The number of units provided by the specified instance type.

Priority (float) --
The priority for the launch template override. If OnDemandAllocationStrategy is set to prioritized , Spot Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0 . The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.









SpotPrice (string) --
The maximum price per unit hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.

TargetCapacity (integer) --
The number of units to request for the Spot Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is maintain , you can specify a target capacity of 0 and add capacity later.

OnDemandTargetCapacity (integer) --
The number of On-Demand units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is maintain , you can specify a target capacity of 0 and add capacity later.

OnDemandMaxTotalPrice (string) --
The maximum amount per hour for On-Demand Instances that you\'re willing to pay. You can use the onDemandMaxTotalPrice parameter, the spotMaxTotalPrice parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you\'re willing to pay. When the maximum amount you\'re willing to pay is reached, the fleet stops launching instances even if it hasn\xe2\x80\x99t met the target capacity.

SpotMaxTotalPrice (string) --
The maximum amount per hour for Spot Instances that you\'re willing to pay. You can use the spotdMaxTotalPrice parameter, the onDemandMaxTotalPrice parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you\'re willing to pay. When the maximum amount you\'re willing to pay is reached, the fleet stops launching instances even if it hasn\xe2\x80\x99t met the target capacity.

TerminateInstancesWithExpiration (boolean) --
Indicates whether running Spot Instances are terminated when the Spot Fleet request expires.

Type (string) --
The type of request. Indicates whether the Spot Fleet only requests the target capacity or also attempts to maintain it. When this value is request , the Spot Fleet only places the required requests. It does not attempt to replenish Spot Instances if capacity is diminished, nor does it submit requests in alternative Spot pools if capacity is not available. When this value is maintain , the Spot Fleet maintains the target capacity. The Spot Fleet places the required requests to meet capacity and automatically replenishes any interrupted instances. Default: maintain . instant is listed but is not used by Spot Fleet.

ValidFrom (datetime) --
The start date and time of the request, in UTC format (YYYY -MM -DD T*HH* :MM :SS Z). By default, Amazon EC2 starts fulfilling the request immediately.

ValidUntil (datetime) --
The end date and time of the request, in UTC format (YYYY -MM -DD T*HH* :MM :SS Z). After the end date and time, no new Spot Instance requests are placed or able to fulfill the request. If no value is specified, the Spot Fleet request remains until you cancel it.

ReplaceUnhealthyInstances (boolean) --
Indicates whether Spot Fleet should replace unhealthy instances.

InstanceInterruptionBehavior (string) --
The behavior when a Spot Instance is interrupted. The default is terminate .

LoadBalancersConfig (dict) --
One or more Classic Load Balancers and target groups to attach to the Spot Fleet request. Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.
With Network Load Balancers, Spot Fleet cannot register instances that have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.

ClassicLoadBalancersConfig (dict) --
The Classic Load Balancers.

ClassicLoadBalancers (list) --
One or more Classic Load Balancers.

(dict) --
Describes a Classic Load Balancer.

Name (string) --
The name of the load balancer.







TargetGroupsConfig (dict) --
The target groups.

TargetGroups (list) --
One or more target groups.

(dict) --
Describes a load balancer target group.

Arn (string) --
The Amazon Resource Name (ARN) of the target group.









InstancePoolsToUseCount (integer) --
The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot AllocationStrategy is set to lowest-price . Spot Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.

TagSpecifications (list) --
The key-value pair for tagging the Spot Fleet request on creation. The value for ResourceType must be spot-fleet-request , otherwise the Spot Fleet request fails. To tag instances at launch, specify the tags in the launch template (valid only if you use LaunchTemplateConfigs ) or in the ` SpotFleetTagSpecification https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetTagSpecification.html`__ (valid only if you use LaunchSpecifications ). For information about tagging after launch, see Tagging Your Resources .

(dict) --
The tags to apply to a resource when the resource is being created.

ResourceType (string) --
The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .
To tag a resource after it has been created, see CreateTags .

Tags (list) --
The tags to apply to the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.











SpotFleetRequestId (string) --
The ID of the Spot Fleet request.

SpotFleetRequestState (string) --
The state of the Spot Fleet request.

Tags (list) --
The tags for a Spot Fleet resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.















Examples
This example describes the specified Spot fleet request.
response = client.describe_spot_fleet_requests(
    SpotFleetRequestIds=[
        'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    ],
)

print(response)


Expected Output:
{
    'SpotFleetRequestConfigs': [
        {
            'SpotFleetRequestConfig': {
                'IamFleetRole': 'arn:aws:iam::123456789012:role/my-spot-fleet-role',
                'LaunchSpecifications': [
                    {
                        'EbsOptimized': False,
                        'ImageId': 'ami-1a2b3c4d',
                        'InstanceType': 'cc2.8xlarge',
                        'NetworkInterfaces': [
                            {
                                'AssociatePublicIpAddress': True,
                                'DeleteOnTermination': False,
                                'DeviceIndex': 0,
                                'SecondaryPrivateIpAddressCount': 0,
                                'SubnetId': 'subnet-a61dafcf',
                            },
                        ],
                    },
                    {
                        'EbsOptimized': False,
                        'ImageId': 'ami-1a2b3c4d',
                        'InstanceType': 'r3.8xlarge',
                        'NetworkInterfaces': [
                            {
                                'AssociatePublicIpAddress': True,
                                'DeleteOnTermination': False,
                                'DeviceIndex': 0,
                                'SecondaryPrivateIpAddressCount': 0,
                                'SubnetId': 'subnet-a61dafcf',
                            },
                        ],
                    },
                ],
                'SpotPrice': '0.05',
                'TargetCapacity': 20,
            },
            'SpotFleetRequestId': 'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
            'SpotFleetRequestState': 'active',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NextToken': 'string',
        'SpotFleetRequestConfigs': [
            {
                'ActivityStatus': 'error'|'pending_fulfillment'|'pending_termination'|'fulfilled',
                'CreateTime': datetime(2015, 1, 1),
                'SpotFleetRequestConfig': {
                    'AllocationStrategy': 'lowestPrice'|'diversified'|'capacityOptimized',
                    'OnDemandAllocationStrategy': 'lowestPrice'|'prioritized',
                    'ClientToken': 'string',
                    'ExcessCapacityTerminationPolicy': 'noTermination'|'default',
                    'FulfilledCapacity': 123.0,
                    'OnDemandFulfilledCapacity': 123.0,
                    'IamFleetRole': 'string',
                    'LaunchSpecifications': [
                        {
                            'SecurityGroups': [
                                {
                                    'GroupName': 'string',
                                    'GroupId': 'string'
                                },
                            ],
                            'AddressingType': 'string',
                            'BlockDeviceMappings': [
                                {
                                    'DeviceName': 'string',
                                    'VirtualName': 'string',
                                    'Ebs': {
                                        'DeleteOnTermination': True|False,
                                        'Iops': 123,
                                        'SnapshotId': 'string',
                                        'VolumeSize': 123,
                                        'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                                        'KmsKeyId': 'string',
                                        'Encrypted': True|False
                                    },
                                    'NoDevice': 'string'
                                },
                            ],
                            'EbsOptimized': True|False,
                            'IamInstanceProfile': {
                                'Arn': 'string',
                                'Name': 'string'
                            },
                            'ImageId': 'string',
                            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                            'KernelId': 'string',
                            'KeyName': 'string',
                            'Monitoring': {
                                'Enabled': True|False
                            },
                            'NetworkInterfaces': [
                                {
                                    'AssociatePublicIpAddress': True|False,
                                    'DeleteOnTermination': True|False,
                                    'Description': 'string',
                                    'DeviceIndex': 123,
                                    'Groups': [
                                        'string',
                                    ],
                                    'Ipv6AddressCount': 123,
                                    'Ipv6Addresses': [
                                        {
                                            'Ipv6Address': 'string'
                                        },
                                    ],
                                    'NetworkInterfaceId': 'string',
                                    'PrivateIpAddress': 'string',
                                    'PrivateIpAddresses': [
                                        {
                                            'Primary': True|False,
                                            'PrivateIpAddress': 'string'
                                        },
                                    ],
                                    'SecondaryPrivateIpAddressCount': 123,
                                    'SubnetId': 'string',
                                    'InterfaceType': 'string'
                                },
                            ],
                            'Placement': {
                                'AvailabilityZone': 'string',
                                'GroupName': 'string',
                                'Tenancy': 'default'|'dedicated'|'host'
                            },
                            'RamdiskId': 'string',
                            'SpotPrice': 'string',
                            'SubnetId': 'string',
                            'UserData': 'string',
                            'WeightedCapacity': 123.0,
                            'TagSpecifications': [
                                {
                                    'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                                    'Tags': [
                                        {
                                            'Key': 'string',
                                            'Value': 'string'
                                        },
                                    ]
                                },
                            ]
                        },
                    ],
                    'LaunchTemplateConfigs': [
                        {
                            'LaunchTemplateSpecification': {
                                'LaunchTemplateId': 'string',
                                'LaunchTemplateName': 'string',
                                'Version': 'string'
                            },
                            'Overrides': [
                                {
                                    'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                                    'SpotPrice': 'string',
                                    'SubnetId': 'string',
                                    'AvailabilityZone': 'string',
                                    'WeightedCapacity': 123.0,
                                    'Priority': 123.0
                                },
                            ]
                        },
                    ],
                    'SpotPrice': 'string',
                    'TargetCapacity': 123,
                    'OnDemandTargetCapacity': 123,
                    'OnDemandMaxTotalPrice': 'string',
                    'SpotMaxTotalPrice': 'string',
                    'TerminateInstancesWithExpiration': True|False,
                    'Type': 'request'|'maintain'|'instant',
                    'ValidFrom': datetime(2015, 1, 1),
                    'ValidUntil': datetime(2015, 1, 1),
                    'ReplaceUnhealthyInstances': True|False,
                    'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate',
                    'LoadBalancersConfig': {
                        'ClassicLoadBalancersConfig': {
                            'ClassicLoadBalancers': [
                                {
                                    'Name': 'string'
                                },
                            ]
                        },
                        'TargetGroupsConfig': {
                            'TargetGroups': [
                                {
                                    'Arn': 'string'
                                },
                            ]
                        }
                    },
                    'InstancePoolsToUseCount': 123,
                    'TagSpecifications': [
                        {
                            'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                            'Tags': [
                                {
                                    'Key': 'string',
                                    'Value': 'string'
                                },
                            ]
                        },
                    ]
                },
                'SpotFleetRequestId': 'string',
                'SpotFleetRequestState': 'submitted'|'active'|'cancelled'|'failed'|'cancelled_running'|'cancelled_terminating'|'modifying',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_spot_instance_requests(Filters=None, DryRun=None, SpotInstanceRequestIds=None, NextToken=None, MaxResults=None):
    """
    Describes the specified Spot Instance requests.
    You can use DescribeSpotInstanceRequests to find a running Spot Instance by examining the response. If the status of the Spot Instance is fulfilled , the instance ID appears in the response and contains the identifier of the instance. Alternatively, you can use DescribeInstances with a filter to look for instances where the instance lifecycle is spot .
    We recommend that you set MaxResults to a value between 5 and 1000 to limit the number of results returned. This paginates the output, which makes the list more manageable and returns the results faster. If the list of results exceeds your MaxResults value, then that number of results is returned along with a NextToken value that can be passed to a subsequent DescribeSpotInstanceRequests request to retrieve the remaining results.
    Spot Instance requests are deleted four hours after they are canceled and their instances are terminated.
    See also: AWS API Documentation
    
    Examples
    This example describes the specified Spot Instance request.
    Expected Output:
    
    :example: response = client.describe_spot_instance_requests(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        SpotInstanceRequestIds=[
            'string',
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\navailability-zone-group - The Availability Zone group.\ncreate-time - The time stamp when the Spot Instance request was created.\nfault-code - The fault code related to the request.\nfault-message - The fault message related to the request.\ninstance-id - The ID of the instance that fulfilled the request.\nlaunch-group - The Spot Instance launch group.\nlaunch.block-device-mapping.delete-on-termination - Indicates whether the EBS volume is deleted on instance termination.\nlaunch.block-device-mapping.device-name - The device name for the volume in the block device mapping (for example, /dev/sdh or xvdh ).\nlaunch.block-device-mapping.snapshot-id - The ID of the snapshot for the EBS volume.\nlaunch.block-device-mapping.volume-size - The size of the EBS volume, in GiB.\nlaunch.block-device-mapping.volume-type - The type of EBS volume: gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic.\nlaunch.group-id - The ID of the security group for the instance.\nlaunch.group-name - The name of the security group for the instance.\nlaunch.image-id - The ID of the AMI.\nlaunch.instance-type - The type of instance (for example, m3.medium ).\nlaunch.kernel-id - The kernel ID.\nlaunch.key-name - The name of the key pair the instance launched with.\nlaunch.monitoring-enabled - Whether detailed monitoring is enabled for the Spot Instance.\nlaunch.ramdisk-id - The RAM disk ID.\nlaunched-availability-zone - The Availability Zone in which the request is launched.\nnetwork-interface.addresses.primary - Indicates whether the IP address is the primary private IP address.\nnetwork-interface.delete-on-termination - Indicates whether the network interface is deleted when the instance is terminated.\nnetwork-interface.description - A description of the network interface.\nnetwork-interface.device-index - The index of the device for the network interface attachment on the instance.\nnetwork-interface.group-id - The ID of the security group associated with the network interface.\nnetwork-interface.network-interface-id - The ID of the network interface.\nnetwork-interface.private-ip-address - The primary private IP address of the network interface.\nnetwork-interface.subnet-id - The ID of the subnet for the instance.\nproduct-description - The product description associated with the instance (Linux/UNIX | Windows ).\nspot-instance-request-id - The Spot Instance request ID.\nspot-price - The maximum hourly price for any Spot Instance launched to fulfill the request.\nstate - The state of the Spot Instance request (open | active | closed | cancelled | failed ). Spot request status information can help you track your Amazon EC2 Spot Instance requests. For more information, see Spot Request Status in the Amazon EC2 User Guide for Linux Instances .\nstatus-code - The short code describing the most recent evaluation of your Spot Instance request.\nstatus-message - The message explaining the status of the Spot Instance request.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\ntype - The type of Spot Instance request (one-time | persistent ).\nvalid-from - The start date of the request.\nvalid-until - The end date of the request.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type SpotInstanceRequestIds: list
    :param SpotInstanceRequestIds: One or more Spot Instance request IDs.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token to request the next set of results. This value is null when there are no more results to return.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. Specify a value between 5 and 1000. To retrieve the remaining results, make another call with the returned NextToken value.

    :rtype: dict

ReturnsResponse Syntax
{
    'SpotInstanceRequests': [
        {
            'ActualBlockHourlyPrice': 'string',
            'AvailabilityZoneGroup': 'string',
            'BlockDurationMinutes': 123,
            'CreateTime': datetime(2015, 1, 1),
            'Fault': {
                'Code': 'string',
                'Message': 'string'
            },
            'InstanceId': 'string',
            'LaunchGroup': 'string',
            'LaunchSpecification': {
                'UserData': 'string',
                'SecurityGroups': [
                    {
                        'GroupName': 'string',
                        'GroupId': 'string'
                    },
                ],
                'AddressingType': 'string',
                'BlockDeviceMappings': [
                    {
                        'DeviceName': 'string',
                        'VirtualName': 'string',
                        'Ebs': {
                            'DeleteOnTermination': True|False,
                            'Iops': 123,
                            'SnapshotId': 'string',
                            'VolumeSize': 123,
                            'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                            'KmsKeyId': 'string',
                            'Encrypted': True|False
                        },
                        'NoDevice': 'string'
                    },
                ],
                'EbsOptimized': True|False,
                'IamInstanceProfile': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'ImageId': 'string',
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'KernelId': 'string',
                'KeyName': 'string',
                'NetworkInterfaces': [
                    {
                        'AssociatePublicIpAddress': True|False,
                        'DeleteOnTermination': True|False,
                        'Description': 'string',
                        'DeviceIndex': 123,
                        'Groups': [
                            'string',
                        ],
                        'Ipv6AddressCount': 123,
                        'Ipv6Addresses': [
                            {
                                'Ipv6Address': 'string'
                            },
                        ],
                        'NetworkInterfaceId': 'string',
                        'PrivateIpAddress': 'string',
                        'PrivateIpAddresses': [
                            {
                                'Primary': True|False,
                                'PrivateIpAddress': 'string'
                            },
                        ],
                        'SecondaryPrivateIpAddressCount': 123,
                        'SubnetId': 'string',
                        'InterfaceType': 'string'
                    },
                ],
                'Placement': {
                    'AvailabilityZone': 'string',
                    'GroupName': 'string',
                    'Tenancy': 'default'|'dedicated'|'host'
                },
                'RamdiskId': 'string',
                'SubnetId': 'string',
                'Monitoring': {
                    'Enabled': True|False
                }
            },
            'LaunchedAvailabilityZone': 'string',
            'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
            'SpotInstanceRequestId': 'string',
            'SpotPrice': 'string',
            'State': 'open'|'active'|'closed'|'cancelled'|'failed',
            'Status': {
                'Code': 'string',
                'Message': 'string',
                'UpdateTime': datetime(2015, 1, 1)
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'Type': 'one-time'|'persistent',
            'ValidFrom': datetime(2015, 1, 1),
            'ValidUntil': datetime(2015, 1, 1),
            'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --
Contains the output of DescribeSpotInstanceRequests.

SpotInstanceRequests (list) --
One or more Spot Instance requests.

(dict) --
Describes a Spot Instance request.

ActualBlockHourlyPrice (string) --
If you specified a duration and your Spot Instance request was fulfilled, this is the fixed hourly price in effect for the Spot Instance while it runs.

AvailabilityZoneGroup (string) --
The Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.

BlockDurationMinutes (integer) --
The duration for the Spot Instance, in minutes.

CreateTime (datetime) --
The date and time when the Spot Instance request was created, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).

Fault (dict) --
The fault codes for the Spot Instance request, if any.

Code (string) --
The reason code for the Spot Instance state change.

Message (string) --
The message for the Spot Instance state change.



InstanceId (string) --
The instance ID, if an instance has been launched to fulfill the Spot Instance request.

LaunchGroup (string) --
The instance launch group. Launch groups are Spot Instances that launch together and terminate together.

LaunchSpecification (dict) --
Additional information for launching instances.

UserData (string) --
The Base64-encoded user data for the instance.

SecurityGroups (list) --
One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





AddressingType (string) --
Deprecated.

BlockDeviceMappings (list) --
One or more block device mapping entries.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name (for example, /dev/sdh or xvdh ).

VirtualName (string) --
The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.
NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.
Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.

Ebs (dict) --
Parameters used to automatically set up EBS volumes when the instance is launched.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.

SnapshotId (string) --
The ID of the snapshot.

VolumeSize (integer) --
The size of the volume, in GiB.
Default: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.
Constraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.

VolumeType (string) --
The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.
Default: gp2

KmsKeyId (string) --
Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.
This parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .

Encrypted (boolean) --
Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
In no case can you remove encryption from an encrypted volume.
Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .
This parameter is not returned by .



NoDevice (string) --
Suppresses the specified device included in the block device mapping of the AMI.





EbsOptimized (boolean) --
Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
Default: false

IamInstanceProfile (dict) --
The IAM instance profile.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Name (string) --
The name of the instance profile.



ImageId (string) --
The ID of the AMI.

InstanceType (string) --
The instance type.

KernelId (string) --
The ID of the kernel.

KeyName (string) --
The name of the key pair.

NetworkInterfaces (list) --
One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.

(dict) --
Describes a network interface.

AssociatePublicIpAddress (boolean) --
Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true .

DeleteOnTermination (boolean) --
If set to true , the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.

Description (string) --
The description of the network interface. Applies only if creating a network interface when launching an instance.

DeviceIndex (integer) --
The position of the network interface in the attachment order. A primary network interface has a device index of 0.
If you specify a network interface when launching an instance, you must specify the device index.

Groups (list) --
The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.

(string) --


Ipv6AddressCount (integer) --
A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you\'ve specified a minimum number of instances to launch.

Ipv6Addresses (list) --
One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you\'ve specified a minimum number of instances to launch.

(dict) --
Describes an IPv6 address.

Ipv6Address (string) --
The IPv6 address.





NetworkInterfaceId (string) --
The ID of the network interface.
If you are creating a Spot Fleet, omit this parameter because you can\xe2\x80\x99t specify a network interface ID in a launch specification.

PrivateIpAddress (string) --
The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.

PrivateIpAddresses (list) --
One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.

(dict) --
Describes a secondary private IPv4 address for a network interface.

Primary (boolean) --
Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.

PrivateIpAddress (string) --
The private IPv4 addresses.





SecondaryPrivateIpAddressCount (integer) --
The number of secondary private IPv4 addresses. You can\'t specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.

SubnetId (string) --
The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.

InterfaceType (string) --
The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .
If you are not creating an EFA, specify interface or omit this parameter.
Valid values: interface | efa





Placement (dict) --
The placement information for the instance.

AvailabilityZone (string) --
The Availability Zone.
[Spot Fleet only] To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".

GroupName (string) --
The name of the placement group.

Tenancy (string) --
The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for Spot Instances.



RamdiskId (string) --
The ID of the RAM disk.

SubnetId (string) --
The ID of the subnet in which to launch the instance.

Monitoring (dict) --
Describes the monitoring of an instance.

Enabled (boolean) --
Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.





LaunchedAvailabilityZone (string) --
The Availability Zone in which the request is launched.

ProductDescription (string) --
The product description associated with the Spot Instance.

SpotInstanceRequestId (string) --
The ID of the Spot Instance request.

SpotPrice (string) --
The maximum price per hour that you are willing to pay for a Spot Instance.

State (string) --
The state of the Spot Instance request. Spot status information helps track your Spot Instance requests. For more information, see Spot Status in the Amazon EC2 User Guide for Linux Instances .

Status (dict) --
The status code and status message describing the Spot Instance request.

Code (string) --
The status code. For a list of status codes, see Spot Status Codes in the Amazon EC2 User Guide for Linux Instances .

Message (string) --
The description for the status code.

UpdateTime (datetime) --
The date and time of the most recent status update, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).



Tags (list) --
Any tags assigned to the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





Type (string) --
The Spot Instance request type.

ValidFrom (datetime) --
The start date of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). The request becomes active at this date and time.

ValidUntil (datetime) --
The end date of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). If this is a one-time request, it remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached. The default end date is 7 days from the current date.

InstanceInterruptionBehavior (string) --
The behavior when a Spot Instance is interrupted.





NextToken (string) --
The token to use to retrieve the next set of results. This value is null when there are no more results to return.







Examples
This example describes the specified Spot Instance request.
response = client.describe_spot_instance_requests(
    SpotInstanceRequestIds=[
        'sir-08b93456',
    ],
)

print(response)


Expected Output:
{
    'SpotInstanceRequests': [
        {
            'CreateTime': datetime(2014, 4, 30, 18, 14, 55, 2, 120, 0),
            'InstanceId': 'i-1234567890abcdef0',
            'LaunchSpecification': {
                'BlockDeviceMappings': [
                    {
                        'DeviceName': '/dev/sda1',
                        'Ebs': {
                            'DeleteOnTermination': True,
                            'VolumeSize': 8,
                            'VolumeType': 'standard',
                        },
                    },
                ],
                'EbsOptimized': False,
                'ImageId': 'ami-7aba833f',
                'InstanceType': 'm1.small',
                'KeyName': 'my-key-pair',
                'SecurityGroups': [
                    {
                        'GroupId': 'sg-e38f24a7',
                        'GroupName': 'my-security-group',
                    },
                ],
            },
            'LaunchedAvailabilityZone': 'us-west-1b',
            'ProductDescription': 'Linux/UNIX',
            'SpotInstanceRequestId': 'sir-08b93456',
            'SpotPrice': '0.010000',
            'State': 'active',
            'Status': {
                'Code': 'fulfilled',
                'Message': 'Your Spot request is fulfilled.',
                'UpdateTime': datetime(2014, 4, 30, 18, 16, 21, 2, 120, 0),
            },
            'Type': 'one-time',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SpotInstanceRequests': [
            {
                'ActualBlockHourlyPrice': 'string',
                'AvailabilityZoneGroup': 'string',
                'BlockDurationMinutes': 123,
                'CreateTime': datetime(2015, 1, 1),
                'Fault': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'InstanceId': 'string',
                'LaunchGroup': 'string',
                'LaunchSpecification': {
                    'UserData': 'string',
                    'SecurityGroups': [
                        {
                            'GroupName': 'string',
                            'GroupId': 'string'
                        },
                    ],
                    'AddressingType': 'string',
                    'BlockDeviceMappings': [
                        {
                            'DeviceName': 'string',
                            'VirtualName': 'string',
                            'Ebs': {
                                'DeleteOnTermination': True|False,
                                'Iops': 123,
                                'SnapshotId': 'string',
                                'VolumeSize': 123,
                                'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                                'KmsKeyId': 'string',
                                'Encrypted': True|False
                            },
                            'NoDevice': 'string'
                        },
                    ],
                    'EbsOptimized': True|False,
                    'IamInstanceProfile': {
                        'Arn': 'string',
                        'Name': 'string'
                    },
                    'ImageId': 'string',
                    'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                    'KernelId': 'string',
                    'KeyName': 'string',
                    'NetworkInterfaces': [
                        {
                            'AssociatePublicIpAddress': True|False,
                            'DeleteOnTermination': True|False,
                            'Description': 'string',
                            'DeviceIndex': 123,
                            'Groups': [
                                'string',
                            ],
                            'Ipv6AddressCount': 123,
                            'Ipv6Addresses': [
                                {
                                    'Ipv6Address': 'string'
                                },
                            ],
                            'NetworkInterfaceId': 'string',
                            'PrivateIpAddress': 'string',
                            'PrivateIpAddresses': [
                                {
                                    'Primary': True|False,
                                    'PrivateIpAddress': 'string'
                                },
                            ],
                            'SecondaryPrivateIpAddressCount': 123,
                            'SubnetId': 'string',
                            'InterfaceType': 'string'
                        },
                    ],
                    'Placement': {
                        'AvailabilityZone': 'string',
                        'GroupName': 'string',
                        'Tenancy': 'default'|'dedicated'|'host'
                    },
                    'RamdiskId': 'string',
                    'SubnetId': 'string',
                    'Monitoring': {
                        'Enabled': True|False
                    }
                },
                'LaunchedAvailabilityZone': 'string',
                'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
                'SpotInstanceRequestId': 'string',
                'SpotPrice': 'string',
                'State': 'open'|'active'|'closed'|'cancelled'|'failed',
                'Status': {
                    'Code': 'string',
                    'Message': 'string',
                    'UpdateTime': datetime(2015, 1, 1)
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'Type': 'one-time'|'persistent',
                'ValidFrom': datetime(2015, 1, 1),
                'ValidUntil': datetime(2015, 1, 1),
                'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_spot_price_history(Filters=None, AvailabilityZone=None, DryRun=None, EndTime=None, InstanceTypes=None, MaxResults=None, NextToken=None, ProductDescriptions=None, StartTime=None):
    """
    Describes the Spot price history. For more information, see Spot Instance Pricing History in the Amazon EC2 User Guide for Linux Instances .
    When you specify a start and end time, this operation returns the prices of the instance types within the time range that you specified and the time when the price changed. The price is valid within the time period that you specified; the response merely indicates the last time that the price changed.
    See also: AWS API Documentation
    
    Examples
    This example returns the Spot Price history for m1.xlarge, Linux/UNIX (Amazon VPC) instances for a particular day in January.
    Expected Output:
    
    :example: response = client.describe_spot_price_history(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        AvailabilityZone='string',
        DryRun=True|False,
        EndTime=datetime(2015, 1, 1),
        InstanceTypes=[
            't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
        ],
        MaxResults=123,
        NextToken='string',
        ProductDescriptions=[
            'string',
        ],
        StartTime=datetime(2015, 1, 1)
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\navailability-zone - The Availability Zone for which prices should be returned.\ninstance-type - The type of instance (for example, m3.medium ).\nproduct-description - The product description for the Spot price (Linux/UNIX | SUSE Linux | Windows | Linux/UNIX (Amazon VPC) | SUSE Linux (Amazon VPC) | Windows (Amazon VPC) ).\nspot-price - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).\ntimestamp - The time stamp of the Spot price history, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type AvailabilityZone: string
    :param AvailabilityZone: Filters the results by the specified Availability Zone.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EndTime: datetime
    :param EndTime: The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).

    :type InstanceTypes: list
    :param InstanceTypes: Filters the results by the specified instance types.\n\n(string) --\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token for the next set of results.

    :type ProductDescriptions: list
    :param ProductDescriptions: Filters the results by the specified basic product descriptions.\n\n(string) --\n\n

    :type StartTime: datetime
    :param StartTime: The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'SpotPriceHistory': [
        {
            'AvailabilityZone': 'string',
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
            'SpotPrice': 'string',
            'Timestamp': datetime(2015, 1, 1)
        },
    ]
}


Response Structure

(dict) --
Contains the output of DescribeSpotPriceHistory.

NextToken (string) --
The token required to retrieve the next set of results. This value is null or an empty string when there are no more results to return.

SpotPriceHistory (list) --
The historical Spot prices.

(dict) --
Describes the maximum price per hour that you are willing to pay for a Spot Instance.

AvailabilityZone (string) --
The Availability Zone.

InstanceType (string) --
The instance type.

ProductDescription (string) --
A general description of the AMI.

SpotPrice (string) --
The maximum price per hour that you are willing to pay for a Spot Instance.

Timestamp (datetime) --
The date and time the request was created, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).











Examples
This example returns the Spot Price history for m1.xlarge, Linux/UNIX (Amazon VPC) instances for a particular day in January.
response = client.describe_spot_price_history(
    EndTime=datetime(2014, 1, 6, 8, 9, 10, 0, 6, -1),
    InstanceTypes=[
        'm1.xlarge',
    ],
    ProductDescriptions=[
        'Linux/UNIX (Amazon VPC)',
    ],
    StartTime=datetime(2014, 1, 6, 7, 8, 9, 0, 6, -1),
)

print(response)


Expected Output:
{
    'SpotPriceHistory': [
        {
            'AvailabilityZone': 'us-west-1a',
            'InstanceType': 'm1.xlarge',
            'ProductDescription': 'Linux/UNIX (Amazon VPC)',
            'SpotPrice': '0.080000',
            'Timestamp': datetime(2014, 1, 6, 4, 32, 53, 0, 6, 0),
        },
        {
            'AvailabilityZone': 'us-west-1c',
            'InstanceType': 'm1.xlarge',
            'ProductDescription': 'Linux/UNIX (Amazon VPC)',
            'SpotPrice': '0.080000',
            'Timestamp': datetime(2014, 1, 5, 11, 28, 26, 6, 5, 0),
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NextToken': 'string',
        'SpotPriceHistory': [
            {
                'AvailabilityZone': 'string',
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
                'SpotPrice': 'string',
                'Timestamp': datetime(2015, 1, 1)
            },
        ]
    }
    
    
    """
    pass

def describe_stale_security_groups(DryRun=None, MaxResults=None, NextToken=None, VpcId=None):
    """
    [VPC only] Describes the stale security group rules for security groups in a specified VPC. Rules are stale when they reference a deleted security group in a peer VPC, or a security group in a peer VPC for which the VPC peering connection has been deleted.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_stale_security_groups(
        DryRun=True|False,
        MaxResults=123,
        NextToken='string',
        VpcId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type MaxResults: integer
    :param MaxResults: The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.

    :type NextToken: string
    :param NextToken: The token for the next set of items to return. (You received this token from a prior call.)

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'StaleSecurityGroupSet': [
        {
            'Description': 'string',
            'GroupId': 'string',
            'GroupName': 'string',
            'StaleIpPermissions': [
                {
                    'FromPort': 123,
                    'IpProtocol': 'string',
                    'IpRanges': [
                        'string',
                    ],
                    'PrefixListIds': [
                        'string',
                    ],
                    'ToPort': 123,
                    'UserIdGroupPairs': [
                        {
                            'Description': 'string',
                            'GroupId': 'string',
                            'GroupName': 'string',
                            'PeeringStatus': 'string',
                            'UserId': 'string',
                            'VpcId': 'string',
                            'VpcPeeringConnectionId': 'string'
                        },
                    ]
                },
            ],
            'StaleIpPermissionsEgress': [
                {
                    'FromPort': 123,
                    'IpProtocol': 'string',
                    'IpRanges': [
                        'string',
                    ],
                    'PrefixListIds': [
                        'string',
                    ],
                    'ToPort': 123,
                    'UserIdGroupPairs': [
                        {
                            'Description': 'string',
                            'GroupId': 'string',
                            'GroupName': 'string',
                            'PeeringStatus': 'string',
                            'UserId': 'string',
                            'VpcId': 'string',
                            'VpcPeeringConnectionId': 'string'
                        },
                    ]
                },
            ],
            'VpcId': 'string'
        },
    ]
}


Response Structure

(dict) --

NextToken (string) --
The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.

StaleSecurityGroupSet (list) --
Information about the stale security groups.

(dict) --
Describes a stale security group (a security group that contains stale rules).

Description (string) --
The description of the security group.

GroupId (string) --
The ID of the security group.

GroupName (string) --
The name of the security group.

StaleIpPermissions (list) --
Information about the stale inbound rules in the security group.

(dict) --
Describes a stale rule in a security group.

FromPort (integer) --
The start of the port range for the TCP and UDP protocols, or an ICMP type number. A value of -1 indicates all ICMP types.

IpProtocol (string) --
The IP protocol name (for tcp , udp , and icmp ) or number (see Protocol Numbers) .

IpRanges (list) --
The IP ranges. Not applicable for stale security group rules.

(string) --


PrefixListIds (list) --
The prefix list IDs for an AWS service. Not applicable for stale security group rules.

(string) --


ToPort (integer) --
The end of the port range for the TCP and UDP protocols, or an ICMP type number. A value of -1 indicates all ICMP types.

UserIdGroupPairs (list) --
The security group pairs. Returns the ID of the referenced security group and VPC, and the ID and status of the VPC peering connection.

(dict) --
Describes a security group and AWS account ID pair.

Description (string) --
A description for the security group rule that references this user ID group pair.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*

GroupId (string) --
The ID of the security group.

GroupName (string) --
The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.
For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.

PeeringStatus (string) --
The status of a VPC peering connection, if applicable.

UserId (string) --
The ID of an AWS account.
For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.
[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.

VpcId (string) --
The ID of the VPC for the referenced security group, if applicable.

VpcPeeringConnectionId (string) --
The ID of the VPC peering connection, if applicable.









StaleIpPermissionsEgress (list) --
Information about the stale outbound rules in the security group.

(dict) --
Describes a stale rule in a security group.

FromPort (integer) --
The start of the port range for the TCP and UDP protocols, or an ICMP type number. A value of -1 indicates all ICMP types.

IpProtocol (string) --
The IP protocol name (for tcp , udp , and icmp ) or number (see Protocol Numbers) .

IpRanges (list) --
The IP ranges. Not applicable for stale security group rules.

(string) --


PrefixListIds (list) --
The prefix list IDs for an AWS service. Not applicable for stale security group rules.

(string) --


ToPort (integer) --
The end of the port range for the TCP and UDP protocols, or an ICMP type number. A value of -1 indicates all ICMP types.

UserIdGroupPairs (list) --
The security group pairs. Returns the ID of the referenced security group and VPC, and the ID and status of the VPC peering connection.

(dict) --
Describes a security group and AWS account ID pair.

Description (string) --
A description for the security group rule that references this user ID group pair.
Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*

GroupId (string) --
The ID of the security group.

GroupName (string) --
The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.
For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.

PeeringStatus (string) --
The status of a VPC peering connection, if applicable.

UserId (string) --
The ID of an AWS account.
For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.
[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.

VpcId (string) --
The ID of the VPC for the referenced security group, if applicable.

VpcPeeringConnectionId (string) --
The ID of the VPC peering connection, if applicable.









VpcId (string) --
The ID of the VPC for the security group.












    :return: {
        'NextToken': 'string',
        'StaleSecurityGroupSet': [
            {
                'Description': 'string',
                'GroupId': 'string',
                'GroupName': 'string',
                'StaleIpPermissions': [
                    {
                        'FromPort': 123,
                        'IpProtocol': 'string',
                        'IpRanges': [
                            'string',
                        ],
                        'PrefixListIds': [
                            'string',
                        ],
                        'ToPort': 123,
                        'UserIdGroupPairs': [
                            {
                                'Description': 'string',
                                'GroupId': 'string',
                                'GroupName': 'string',
                                'PeeringStatus': 'string',
                                'UserId': 'string',
                                'VpcId': 'string',
                                'VpcPeeringConnectionId': 'string'
                            },
                        ]
                    },
                ],
                'StaleIpPermissionsEgress': [
                    {
                        'FromPort': 123,
                        'IpProtocol': 'string',
                        'IpRanges': [
                            'string',
                        ],
                        'PrefixListIds': [
                            'string',
                        ],
                        'ToPort': 123,
                        'UserIdGroupPairs': [
                            {
                                'Description': 'string',
                                'GroupId': 'string',
                                'GroupName': 'string',
                                'PeeringStatus': 'string',
                                'UserId': 'string',
                                'VpcId': 'string',
                                'VpcPeeringConnectionId': 'string'
                            },
                        ]
                    },
                ],
                'VpcId': 'string'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_subnets(Filters=None, SubnetIds=None, DryRun=None, NextToken=None, MaxResults=None):
    """
    Describes one or more of your subnets.
    For more information, see Your VPC and Subnets in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the subnets for the specified VPC.
    Expected Output:
    
    :example: response = client.describe_subnets(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        SubnetIds=[
            'string',
        ],
        DryRun=True|False,
        NextToken='string',
        MaxResults=123
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\navailability-zone - The Availability Zone for the subnet. You can also use availabilityZone as the filter name.\navailability-zone-id - The ID of the Availability Zone for the subnet. You can also use availabilityZoneId as the filter name.\navailable-ip-address-count - The number of IPv4 addresses in the subnet that are available.\ncidr-block - The IPv4 CIDR block of the subnet. The CIDR block you specify must exactly match the subnet\'s CIDR block for information to be returned for the subnet. You can also use cidr or cidrBlock as the filter names.\ndefault-for-az - Indicates whether this is the default subnet for the Availability Zone. You can also use defaultForAz as the filter name.\nipv6-cidr-block-association.ipv6-cidr-block - An IPv6 CIDR block associated with the subnet.\nipv6-cidr-block-association.association-id - An association ID for an IPv6 CIDR block associated with the subnet.\nipv6-cidr-block-association.state - The state of an IPv6 CIDR block associated with the subnet.\nowner-id - The ID of the AWS account that owns the subnet.\nstate - The state of the subnet (pending | available ).\nsubnet-arn - The Amazon Resource Name (ARN) of the subnet.\nsubnet-id - The ID of the subnet.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvpc-id - The ID of the VPC for the subnet.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type SubnetIds: list
    :param SubnetIds: One or more subnet IDs.\nDefault: Describes all your subnets.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :rtype: dict

ReturnsResponse Syntax
{
    'Subnets': [
        {
            'AvailabilityZone': 'string',
            'AvailabilityZoneId': 'string',
            'AvailableIpAddressCount': 123,
            'CidrBlock': 'string',
            'DefaultForAz': True|False,
            'MapPublicIpOnLaunch': True|False,
            'MapCustomerOwnedIpOnLaunch': True|False,
            'CustomerOwnedIpv4Pool': 'string',
            'State': 'pending'|'available',
            'SubnetId': 'string',
            'VpcId': 'string',
            'OwnerId': 'string',
            'AssignIpv6AddressOnCreation': True|False,
            'Ipv6CidrBlockAssociationSet': [
                {
                    'AssociationId': 'string',
                    'Ipv6CidrBlock': 'string',
                    'Ipv6CidrBlockState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                        'StatusMessage': 'string'
                    }
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'SubnetArn': 'string',
            'OutpostArn': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Subnets (list) --
Information about one or more subnets.

(dict) --
Describes a subnet.

AvailabilityZone (string) --
The Availability Zone of the subnet.

AvailabilityZoneId (string) --
The AZ ID of the subnet.

AvailableIpAddressCount (integer) --
The number of unused private IPv4 addresses in the subnet. The IPv4 addresses for any stopped instances are considered unavailable.

CidrBlock (string) --
The IPv4 CIDR block assigned to the subnet.

DefaultForAz (boolean) --
Indicates whether this is the default subnet for the Availability Zone.

MapPublicIpOnLaunch (boolean) --
Indicates whether instances launched in this subnet receive a public IPv4 address.

MapCustomerOwnedIpOnLaunch (boolean) --
Indicates whether a network interface created in this subnet (including a network interface created by  RunInstances ) receives a customer-owned IPv4 address.

CustomerOwnedIpv4Pool (string) --
The customer-owned IPv4 address pool associated with the subnet.

State (string) --
The current state of the subnet.

SubnetId (string) --
The ID of the subnet.

VpcId (string) --
The ID of the VPC the subnet is in.

OwnerId (string) --
The ID of the AWS account that owns the subnet.

AssignIpv6AddressOnCreation (boolean) --
Indicates whether a network interface created in this subnet (including a network interface created by  RunInstances ) receives an IPv6 address.

Ipv6CidrBlockAssociationSet (list) --
Information about the IPv6 CIDR blocks associated with the subnet.

(dict) --
Describes an IPv6 CIDR block associated with a subnet.

AssociationId (string) --
The association ID for the CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of a CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.







Tags (list) --
Any tags assigned to the subnet.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





SubnetArn (string) --
The Amazon Resource Name (ARN) of the subnet.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the subnets for the specified VPC.
response = client.describe_subnets(
    Filters=[
        {
            'Name': 'vpc-id',
            'Values': [
                'vpc-a01106c2',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'Subnets': [
        {
            'AvailabilityZone': 'us-east-1c',
            'AvailableIpAddressCount': 251,
            'CidrBlock': '10.0.1.0/24',
            'DefaultForAz': False,
            'MapPublicIpOnLaunch': False,
            'State': 'available',
            'SubnetId': 'subnet-9d4a7b6c',
            'VpcId': 'vpc-a01106c2',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Subnets': [
            {
                'AvailabilityZone': 'string',
                'AvailabilityZoneId': 'string',
                'AvailableIpAddressCount': 123,
                'CidrBlock': 'string',
                'DefaultForAz': True|False,
                'MapPublicIpOnLaunch': True|False,
                'MapCustomerOwnedIpOnLaunch': True|False,
                'CustomerOwnedIpv4Pool': 'string',
                'State': 'pending'|'available',
                'SubnetId': 'string',
                'VpcId': 'string',
                'OwnerId': 'string',
                'AssignIpv6AddressOnCreation': True|False,
                'Ipv6CidrBlockAssociationSet': [
                    {
                        'AssociationId': 'string',
                        'Ipv6CidrBlock': 'string',
                        'Ipv6CidrBlockState': {
                            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                            'StatusMessage': 'string'
                        }
                    },
                ],
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'SubnetArn': 'string',
                'OutpostArn': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_tags(DryRun=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes the specified tags for your EC2 resources.
    For more information about tags, see Tagging Your Resources in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the tags for the specified instance.
    Expected Output:
    
    :example: response = client.describe_tags(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: The filters.\n\nkey - The tag key.\nresource-id - The ID of the resource.\nresource-type - The resource type (customer-gateway | dedicated-host | dhcp-options | elastic-ip | fleet | fpga-image | host-reservation | image | instance | internet-gateway | key-pair | launch-template | natgateway | network-acl | network-interface | placement-group | reserved-instances | route-table | security-group | snapshot | spot-instances-request | subnet | volume | vpc | vpc-endpoint | vpc-endpoint-service | vpc-peering-connection | vpn-connection | vpn-gateway ).\ntag :<key> - The key/value combination of the tag. For example, specify 'tag:Owner' for the filter name and 'TeamA' for the filter value to find resources with the tag 'Owner=TeamA'.\nvalue - The tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. This value can be between 5 and 1000. To retrieve the remaining results, make another call with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'Tags': [
        {
            'Key': 'string',
            'ResourceId': 'string',
            'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
            'Value': 'string'
        },
    ]
}


Response Structure

(dict) --

NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.

Tags (list) --
The tags.

(dict) --
Describes a tag.

Key (string) --
The tag key.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The resource type.

Value (string) --
The tag value.











Examples
This example describes the tags for the specified instance.
response = client.describe_tags(
    Filters=[
        {
            'Name': 'resource-id',
            'Values': [
                'i-1234567890abcdef8',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'Tags': [
        {
            'Key': 'Stack',
            'ResourceId': 'i-1234567890abcdef8',
            'ResourceType': 'instance',
            'Value': 'test',
        },
        {
            'Key': 'Name',
            'ResourceId': 'i-1234567890abcdef8',
            'ResourceType': 'instance',
            'Value': 'Beta Server',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NextToken': 'string',
        'Tags': [
            {
                'Key': 'string',
                'ResourceId': 'string',
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Value': 'string'
            },
        ]
    }
    
    
    """
    pass

def describe_traffic_mirror_filters(TrafficMirrorFilterIds=None, DryRun=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes one or more Traffic Mirror filters.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_traffic_mirror_filters(
        TrafficMirrorFilterIds=[
            'string',
        ],
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type TrafficMirrorFilterIds: list
    :param TrafficMirrorFilterIds: The ID of the Traffic Mirror filter.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\ndescription : The Traffic Mirror filter description.\ntraffic-mirror-filter-id : The ID of the Traffic Mirror filter.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorFilters': [
        {
            'TrafficMirrorFilterId': 'string',
            'IngressFilterRules': [
                {
                    'TrafficMirrorFilterRuleId': 'string',
                    'TrafficMirrorFilterId': 'string',
                    'TrafficDirection': 'ingress'|'egress',
                    'RuleNumber': 123,
                    'RuleAction': 'accept'|'reject',
                    'Protocol': 123,
                    'DestinationPortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'SourcePortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'DestinationCidrBlock': 'string',
                    'SourceCidrBlock': 'string',
                    'Description': 'string'
                },
            ],
            'EgressFilterRules': [
                {
                    'TrafficMirrorFilterRuleId': 'string',
                    'TrafficMirrorFilterId': 'string',
                    'TrafficDirection': 'ingress'|'egress',
                    'RuleNumber': 123,
                    'RuleAction': 'accept'|'reject',
                    'Protocol': 123,
                    'DestinationPortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'SourcePortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'DestinationCidrBlock': 'string',
                    'SourceCidrBlock': 'string',
                    'Description': 'string'
                },
            ],
            'NetworkServices': [
                'amazon-dns',
            ],
            'Description': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TrafficMirrorFilters (list) --
Information about one or more Traffic Mirror filters.

(dict) --
Describes the Traffic Mirror filter.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter.

IngressFilterRules (list) --
Information about the ingress rules that are associated with the Traffic Mirror filter.

(dict) --
Describes the Traffic Mirror rule.

TrafficMirrorFilterRuleId (string) --
The ID of the Traffic Mirror rule.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter that the rule is associated with.

TrafficDirection (string) --
The traffic direction assigned to the Traffic Mirror rule.

RuleNumber (integer) --
The rule number of the Traffic Mirror rule.

RuleAction (string) --
The action assigned to the Traffic Mirror rule.

Protocol (integer) --
The protocol assigned to the Traffic Mirror rule.

DestinationPortRange (dict) --
The destination port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



SourcePortRange (dict) --
The source port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



DestinationCidrBlock (string) --
The destination CIDR block assigned to the Traffic Mirror rule.

SourceCidrBlock (string) --
The source CIDR block assigned to the Traffic Mirror rule.

Description (string) --
The description of the Traffic Mirror rule.





EgressFilterRules (list) --
Information about the egress rules that are associated with the Traffic Mirror filter.

(dict) --
Describes the Traffic Mirror rule.

TrafficMirrorFilterRuleId (string) --
The ID of the Traffic Mirror rule.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter that the rule is associated with.

TrafficDirection (string) --
The traffic direction assigned to the Traffic Mirror rule.

RuleNumber (integer) --
The rule number of the Traffic Mirror rule.

RuleAction (string) --
The action assigned to the Traffic Mirror rule.

Protocol (integer) --
The protocol assigned to the Traffic Mirror rule.

DestinationPortRange (dict) --
The destination port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



SourcePortRange (dict) --
The source port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



DestinationCidrBlock (string) --
The destination CIDR block assigned to the Traffic Mirror rule.

SourceCidrBlock (string) --
The source CIDR block assigned to the Traffic Mirror rule.

Description (string) --
The description of the Traffic Mirror rule.





NetworkServices (list) --
The network service traffic that is associated with the Traffic Mirror filter.

(string) --


Description (string) --
The description of the Traffic Mirror filter.

Tags (list) --
The tags assigned to the Traffic Mirror filter.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. The value is null when there are no more results to return.








    :return: {
        'TrafficMirrorFilters': [
            {
                'TrafficMirrorFilterId': 'string',
                'IngressFilterRules': [
                    {
                        'TrafficMirrorFilterRuleId': 'string',
                        'TrafficMirrorFilterId': 'string',
                        'TrafficDirection': 'ingress'|'egress',
                        'RuleNumber': 123,
                        'RuleAction': 'accept'|'reject',
                        'Protocol': 123,
                        'DestinationPortRange': {
                            'FromPort': 123,
                            'ToPort': 123
                        },
                        'SourcePortRange': {
                            'FromPort': 123,
                            'ToPort': 123
                        },
                        'DestinationCidrBlock': 'string',
                        'SourceCidrBlock': 'string',
                        'Description': 'string'
                    },
                ],
                'EgressFilterRules': [
                    {
                        'TrafficMirrorFilterRuleId': 'string',
                        'TrafficMirrorFilterId': 'string',
                        'TrafficDirection': 'ingress'|'egress',
                        'RuleNumber': 123,
                        'RuleAction': 'accept'|'reject',
                        'Protocol': 123,
                        'DestinationPortRange': {
                            'FromPort': 123,
                            'ToPort': 123
                        },
                        'SourcePortRange': {
                            'FromPort': 123,
                            'ToPort': 123
                        },
                        'DestinationCidrBlock': 'string',
                        'SourceCidrBlock': 'string',
                        'Description': 'string'
                    },
                ],
                'NetworkServices': [
                    'amazon-dns',
                ],
                'Description': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_traffic_mirror_sessions(TrafficMirrorSessionIds=None, DryRun=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes one or more Traffic Mirror sessions. By default, all Traffic Mirror sessions are described. Alternatively, you can filter the results.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_traffic_mirror_sessions(
        TrafficMirrorSessionIds=[
            'string',
        ],
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type TrafficMirrorSessionIds: list
    :param TrafficMirrorSessionIds: The ID of the Traffic Mirror session.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\ndescription : The Traffic Mirror session description.\nnetwork-interface-id : The ID of the Traffic Mirror session network interface.\nowner-id : The ID of the account that owns the Traffic Mirror session.\npacket-length : The assigned number of packets to mirror.\nsession-number : The assigned session number.\ntraffic-mirror-filter-id : The ID of the Traffic Mirror filter.\ntraffic-mirror-session-id : The ID of the Traffic Mirror session.\ntraffic-mirror-target-id : The ID of the Traffic Mirror target.\nvirtual-network-id : The virtual network ID of the Traffic Mirror session.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorSessions': [
        {
            'TrafficMirrorSessionId': 'string',
            'TrafficMirrorTargetId': 'string',
            'TrafficMirrorFilterId': 'string',
            'NetworkInterfaceId': 'string',
            'OwnerId': 'string',
            'PacketLength': 123,
            'SessionNumber': 123,
            'VirtualNetworkId': 123,
            'Description': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TrafficMirrorSessions (list) --
Describes one or more Traffic Mirror sessions. By default, all Traffic Mirror sessions are described. Alternatively, you can filter the results.

(dict) --
Describes a Traffic Mirror session.

TrafficMirrorSessionId (string) --
The ID for the Traffic Mirror session.

TrafficMirrorTargetId (string) --
The ID of the Traffic Mirror target.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter.

NetworkInterfaceId (string) --
The ID of the Traffic Mirror session\'s network interface.

OwnerId (string) --
The ID of the account that owns the Traffic Mirror session.

PacketLength (integer) --
The number of bytes in each packet to mirror. These are the bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet

SessionNumber (integer) --
The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.
Valid values are 1-32766.

VirtualNetworkId (integer) --
The virtual network ID associated with the Traffic Mirror session.

Description (string) --
The description of the Traffic Mirror session.

Tags (list) --
The tags assigned to the Traffic Mirror session.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. The value is null when there are no more results to return.








    :return: {
        'TrafficMirrorSessions': [
            {
                'TrafficMirrorSessionId': 'string',
                'TrafficMirrorTargetId': 'string',
                'TrafficMirrorFilterId': 'string',
                'NetworkInterfaceId': 'string',
                'OwnerId': 'string',
                'PacketLength': 123,
                'SessionNumber': 123,
                'VirtualNetworkId': 123,
                'Description': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_traffic_mirror_targets(TrafficMirrorTargetIds=None, DryRun=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Information about one or more Traffic Mirror targets.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_traffic_mirror_targets(
        TrafficMirrorTargetIds=[
            'string',
        ],
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type TrafficMirrorTargetIds: list
    :param TrafficMirrorTargetIds: The ID of the Traffic Mirror targets.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\ndescription : The Traffic Mirror target description.\nnetwork-interface-id : The ID of the Traffic Mirror session network interface.\nnetwork-load-balancer-arn : The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the session.\nowner-id : The ID of the account that owns the Traffic Mirror session.\ntraffic-mirror-target-id : The ID of the Traffic Mirror target.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorTargets': [
        {
            'TrafficMirrorTargetId': 'string',
            'NetworkInterfaceId': 'string',
            'NetworkLoadBalancerArn': 'string',
            'Type': 'network-interface'|'network-load-balancer',
            'Description': 'string',
            'OwnerId': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TrafficMirrorTargets (list) --
Information about one or more Traffic Mirror targets.

(dict) --
Describes a Traffic Mirror target.

TrafficMirrorTargetId (string) --
The ID of the Traffic Mirror target.

NetworkInterfaceId (string) --
The network interface ID that is attached to the target.

NetworkLoadBalancerArn (string) --
The Amazon Resource Name (ARN) of the Network Load Balancer.

Type (string) --
The type of Traffic Mirror target.

Description (string) --
Information about the Traffic Mirror target.

OwnerId (string) --
The ID of the account that owns the Traffic Mirror target.

Tags (list) --
The tags assigned to the Traffic Mirror target.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. The value is null when there are no more results to return.








    :return: {
        'TrafficMirrorTargets': [
            {
                'TrafficMirrorTargetId': 'string',
                'NetworkInterfaceId': 'string',
                'NetworkLoadBalancerArn': 'string',
                'Type': 'network-interface'|'network-load-balancer',
                'Description': 'string',
                'OwnerId': 'string',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_transit_gateway_attachments(TransitGatewayAttachmentIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes one or more attachments between resources and transit gateways. By default, all attachments are described. Alternatively, you can filter the results by attachment ID, attachment state, resource ID, or resource owner.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_transit_gateway_attachments(
        TransitGatewayAttachmentIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentIds: list
    :param TransitGatewayAttachmentIds: The IDs of the attachments.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\nassociation.state - The state of the association (associating | associated | disassociating ).\nassociation.transit-gateway-route-table-id - The ID of the route table for the transit gateway.\nresource-id - The ID of the resource.\nresource-owner-id - The ID of the AWS account that owns the resource.\nresource-type - The resource type (vpc | vpn ).\nstate - The state of the attachment (available | deleted | deleting | failed | modifying | pendingAcceptance | pending | rollingBack | rejected | rejecting ).\ntransit-gateway-attachment-id - The ID of the attachment.\ntransit-gateway-id - The ID of the transit gateway.\ntransit-gateway-owner-id - The ID of the AWS account that owns the transit gateway.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayAttachments': [
        {
            'TransitGatewayAttachmentId': 'string',
            'TransitGatewayId': 'string',
            'TransitGatewayOwnerId': 'string',
            'ResourceOwnerId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'ResourceId': 'string',
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'Association': {
                'TransitGatewayRouteTableId': 'string',
                'State': 'associating'|'associated'|'disassociating'|'disassociated'
            },
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TransitGatewayAttachments (list) --
Information about the attachments.

(dict) --
Describes an attachment between a resource and a transit gateway.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

TransitGatewayId (string) --
The ID of the transit gateway.

TransitGatewayOwnerId (string) --
The ID of the AWS account that owns the transit gateway.

ResourceOwnerId (string) --
The ID of the AWS account that owns the resource.

ResourceType (string) --
The resource type.

ResourceId (string) --
The ID of the resource.

State (string) --
The attachment state.

Association (dict) --
The association.

TransitGatewayRouteTableId (string) --
The ID of the route table for the transit gateway.

State (string) --
The state of the association.



CreationTime (datetime) --
The creation time.

Tags (list) --
The tags for the attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'TransitGatewayAttachments': [
            {
                'TransitGatewayAttachmentId': 'string',
                'TransitGatewayId': 'string',
                'TransitGatewayOwnerId': 'string',
                'ResourceOwnerId': 'string',
                'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
                'ResourceId': 'string',
                'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
                'Association': {
                    'TransitGatewayRouteTableId': 'string',
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'
                },
                'CreationTime': datetime(2015, 1, 1),
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_transit_gateway_multicast_domains(TransitGatewayMulticastDomainIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes one or more transit gateway multicast domains.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_transit_gateway_multicast_domains(
        TransitGatewayMulticastDomainIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainIds: list
    :param TransitGatewayMulticastDomainIds: The ID of the transit gateway multicast domain.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\nstate - The state of the transit gateway multicast domain. Valid values are pending | available | deleting | deleted .\ntransit-gateway-id - The ID of the transit gateway.\ntransit-gateway-multicast-domain-id - The ID of the transit gateway multicast domain.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayMulticastDomains': [
        {
            'TransitGatewayMulticastDomainId': 'string',
            'TransitGatewayId': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TransitGatewayMulticastDomains (list) --
Information about the transit gateway multicast domains.

(dict) --
Describes the transit gateway multicast domain.

TransitGatewayMulticastDomainId (string) --
The ID of the transit gateway multicast domain.

TransitGatewayId (string) --
The ID of the transit gateway.

State (string) --
The state of the transit gateway multicast domain.

CreationTime (datetime) --
The time the transit gateway multicast domain was created.

Tags (list) --
The tags for the transit gateway multicast domain.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'TransitGatewayMulticastDomains': [
            {
                'TransitGatewayMulticastDomainId': 'string',
                'TransitGatewayId': 'string',
                'State': 'pending'|'available'|'deleting'|'deleted',
                'CreationTime': datetime(2015, 1, 1),
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_transit_gateway_peering_attachments(TransitGatewayAttachmentIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes your transit gateway peering attachments.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_transit_gateway_peering_attachments(
        TransitGatewayAttachmentIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentIds: list
    :param TransitGatewayAttachmentIds: One or more IDs of the transit gateway peering attachments.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\ntransit-gateway-attachment-id - The ID of the transit gateway attachment.\nlocal-owner-id - The ID of your AWS account.\nremote-owner-id - The ID of the AWS account in the remote Region that owns the transit gateway.\nstate - The state of the peering attachment (available | deleted | deleting | failed | modifying | pendingAcceptance | pending | rollingBack | rejected | rejecting ).\ntransit-gateway-id - The ID of the transit gateway.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayPeeringAttachments': [
        {
            'TransitGatewayAttachmentId': 'string',
            'RequesterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'AccepterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'Status': {
                'Code': 'string',
                'Message': 'string'
            },
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TransitGatewayPeeringAttachments (list) --
The transit gateway peering attachments.

(dict) --
Describes the transit gateway peering attachment.

TransitGatewayAttachmentId (string) --
The ID of the transit gateway peering attachment.

RequesterTgwInfo (dict) --
Information about the requester transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



AccepterTgwInfo (dict) --
Information about the accepter transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



Status (dict) --
The status of the transit gateway peering attachment.

Code (string) --
The status code.

Message (string) --
The status message, if applicable.



State (string) --
The state of the transit gateway peering attachment.

CreationTime (datetime) --
The time the transit gateway peering attachment was created.

Tags (list) --
The tags for the transit gateway peering attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'TransitGatewayPeeringAttachments': [
            {
                'TransitGatewayAttachmentId': 'string',
                'RequesterTgwInfo': {
                    'TransitGatewayId': 'string',
                    'OwnerId': 'string',
                    'Region': 'string'
                },
                'AccepterTgwInfo': {
                    'TransitGatewayId': 'string',
                    'OwnerId': 'string',
                    'Region': 'string'
                },
                'Status': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
                'CreationTime': datetime(2015, 1, 1),
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_transit_gateway_route_tables(TransitGatewayRouteTableIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes one or more transit gateway route tables. By default, all transit gateway route tables are described. Alternatively, you can filter the results.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_transit_gateway_route_tables(
        TransitGatewayRouteTableIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableIds: list
    :param TransitGatewayRouteTableIds: The IDs of the transit gateway route tables.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\ndefault-association-route-table - Indicates whether this is the default association route table for the transit gateway (true | false ).\ndefault-propagation-route-table - Indicates whether this is the default propagation route table for the transit gateway (true | false ).\nstate - The state of the attachment (available | deleted | deleting | failed | modifying | pendingAcceptance | pending | rollingBack | rejected | rejecting ).\ntransit-gateway-id - The ID of the transit gateway.\ntransit-gateway-route-table-id - The ID of the transit gateway route table.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayRouteTables': [
        {
            'TransitGatewayRouteTableId': 'string',
            'TransitGatewayId': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'DefaultAssociationRouteTable': True|False,
            'DefaultPropagationRouteTable': True|False,
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TransitGatewayRouteTables (list) --
Information about the transit gateway route tables.

(dict) --
Describes a transit gateway route table.

TransitGatewayRouteTableId (string) --
The ID of the transit gateway route table.

TransitGatewayId (string) --
The ID of the transit gateway.

State (string) --
The state of the transit gateway route table.

DefaultAssociationRouteTable (boolean) --
Indicates whether this is the default association route table for the transit gateway.

DefaultPropagationRouteTable (boolean) --
Indicates whether this is the default propagation route table for the transit gateway.

CreationTime (datetime) --
The creation time.

Tags (list) --
Any tags assigned to the route table.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'TransitGatewayRouteTables': [
            {
                'TransitGatewayRouteTableId': 'string',
                'TransitGatewayId': 'string',
                'State': 'pending'|'available'|'deleting'|'deleted',
                'DefaultAssociationRouteTable': True|False,
                'DefaultPropagationRouteTable': True|False,
                'CreationTime': datetime(2015, 1, 1),
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_transit_gateway_vpc_attachments(TransitGatewayAttachmentIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes one or more VPC attachments. By default, all VPC attachments are described. Alternatively, you can filter the results.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_transit_gateway_vpc_attachments(
        TransitGatewayAttachmentIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentIds: list
    :param TransitGatewayAttachmentIds: The IDs of the attachments.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\nstate - The state of the attachment (available | deleted | deleting | failed | modifying | pendingAcceptance | pending | rollingBack | rejected | rejecting ).\ntransit-gateway-attachment-id - The ID of the attachment.\ntransit-gateway-id - The ID of the transit gateway.\nvpc-id - The ID of the VPC.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayVpcAttachments': [
        {
            'TransitGatewayAttachmentId': 'string',
            'TransitGatewayId': 'string',
            'VpcId': 'string',
            'VpcOwnerId': 'string',
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'SubnetIds': [
                'string',
            ],
            'CreationTime': datetime(2015, 1, 1),
            'Options': {
                'DnsSupport': 'enable'|'disable',
                'Ipv6Support': 'enable'|'disable'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TransitGatewayVpcAttachments (list) --
Information about the VPC attachments.

(dict) --
Describes a VPC attachment.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

TransitGatewayId (string) --
The ID of the transit gateway.

VpcId (string) --
The ID of the VPC.

VpcOwnerId (string) --
The ID of the AWS account that owns the VPC.

State (string) --
The state of the VPC attachment.

SubnetIds (list) --
The IDs of the subnets.

(string) --


CreationTime (datetime) --
The creation time.

Options (dict) --
The VPC attachment options.

DnsSupport (string) --
Indicates whether DNS support is enabled.

Ipv6Support (string) --
Indicates whether IPv6 support is disabled.



Tags (list) --
The tags for the VPC attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'TransitGatewayVpcAttachments': [
            {
                'TransitGatewayAttachmentId': 'string',
                'TransitGatewayId': 'string',
                'VpcId': 'string',
                'VpcOwnerId': 'string',
                'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
                'SubnetIds': [
                    'string',
                ],
                'CreationTime': datetime(2015, 1, 1),
                'Options': {
                    'DnsSupport': 'enable'|'disable',
                    'Ipv6Support': 'enable'|'disable'
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_transit_gateways(TransitGatewayIds=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes one or more transit gateways. By default, all transit gateways are described. Alternatively, you can filter the results.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_transit_gateways(
        TransitGatewayIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayIds: list
    :param TransitGatewayIds: The IDs of the transit gateways.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\noptions.propagation-default-route-table-id - The ID of the default propagation route table.\noptions.amazon-side-asn - The private ASN for the Amazon side of a BGP session.\noptions.association-default-route-table-id - The ID of the default association route table.\noptions.auto-accept-shared-attachments - Indicates whether there is automatic acceptance of attachment requests (enable | disable ).\noptions.default-route-table-association - Indicates whether resource attachments are automatically associated with the default association route table (enable | disable ).\noptions.default-route-table-propagation - Indicates whether resource attachments automatically propagate routes to the default propagation route table (enable | disable ).\noptions.dns-support - Indicates whether DNS support is enabled (enable | disable ).\noptions.vpn-ecmp-support - Indicates whether Equal Cost Multipath Protocol support is enabled (enable | disable ).\nowner-id - The ID of the AWS account that owns the transit gateway.\nstate - The state of the attachment (available | deleted | deleting | failed | modifying | pendingAcceptance | pending | rollingBack | rejected | rejecting ).\ntransit-gateway-id - The ID of the transit gateway.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGateways': [
        {
            'TransitGatewayId': 'string',
            'TransitGatewayArn': 'string',
            'State': 'pending'|'available'|'modifying'|'deleting'|'deleted',
            'OwnerId': 'string',
            'Description': 'string',
            'CreationTime': datetime(2015, 1, 1),
            'Options': {
                'AmazonSideAsn': 123,
                'AutoAcceptSharedAttachments': 'enable'|'disable',
                'DefaultRouteTableAssociation': 'enable'|'disable',
                'AssociationDefaultRouteTableId': 'string',
                'DefaultRouteTablePropagation': 'enable'|'disable',
                'PropagationDefaultRouteTableId': 'string',
                'VpnEcmpSupport': 'enable'|'disable',
                'DnsSupport': 'enable'|'disable',
                'MulticastSupport': 'enable'|'disable'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TransitGateways (list) --
Information about the transit gateways.

(dict) --
Describes a transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

TransitGatewayArn (string) --
The Amazon Resource Name (ARN) of the transit gateway.

State (string) --
The state of the transit gateway.

OwnerId (string) --
The ID of the AWS account ID that owns the transit gateway.

Description (string) --
The description of the transit gateway.

CreationTime (datetime) --
The creation time.

Options (dict) --
The transit gateway options.

AmazonSideAsn (integer) --
A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.

AutoAcceptSharedAttachments (string) --
Indicates whether attachment requests are automatically accepted.

DefaultRouteTableAssociation (string) --
Indicates whether resource attachments are automatically associated with the default association route table.

AssociationDefaultRouteTableId (string) --
The ID of the default association route table.

DefaultRouteTablePropagation (string) --
Indicates whether resource attachments automatically propagate routes to the default propagation route table.

PropagationDefaultRouteTableId (string) --
The ID of the default propagation route table.

VpnEcmpSupport (string) --
Indicates whether Equal Cost Multipath Protocol support is enabled.

DnsSupport (string) --
Indicates whether DNS support is enabled.

MulticastSupport (string) --
Indicates whether multicast is enabled on the transit gateway



Tags (list) --
The tags for the transit gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'TransitGateways': [
            {
                'TransitGatewayId': 'string',
                'TransitGatewayArn': 'string',
                'State': 'pending'|'available'|'modifying'|'deleting'|'deleted',
                'OwnerId': 'string',
                'Description': 'string',
                'CreationTime': datetime(2015, 1, 1),
                'Options': {
                    'AmazonSideAsn': 123,
                    'AutoAcceptSharedAttachments': 'enable'|'disable',
                    'DefaultRouteTableAssociation': 'enable'|'disable',
                    'AssociationDefaultRouteTableId': 'string',
                    'DefaultRouteTablePropagation': 'enable'|'disable',
                    'PropagationDefaultRouteTableId': 'string',
                    'VpnEcmpSupport': 'enable'|'disable',
                    'DnsSupport': 'enable'|'disable',
                    'MulticastSupport': 'enable'|'disable'
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_volume_attribute(Attribute=None, VolumeId=None, DryRun=None):
    """
    Describes the specified attribute of the specified volume. You can specify only one attribute at a time.
    For more information about EBS volumes, see Amazon EBS Volumes in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes the autoEnableIo attribute of the volume with the ID vol-049df61146c4d7901.
    Expected Output:
    
    :example: response = client.describe_volume_attribute(
        Attribute='autoEnableIO'|'productCodes',
        VolumeId='string',
        DryRun=True|False
    )
    
    
    :type Attribute: string
    :param Attribute: [REQUIRED]\nThe attribute of the volume. This parameter is required.\n

    :type VolumeId: string
    :param VolumeId: [REQUIRED]\nThe ID of the volume.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'AutoEnableIO': {
        'Value': True|False
    },
    'ProductCodes': [
        {
            'ProductCodeId': 'string',
            'ProductCodeType': 'devpay'|'marketplace'
        },
    ],
    'VolumeId': 'string'
}


Response Structure

(dict) --

AutoEnableIO (dict) --
The state of autoEnableIO attribute.

Value (boolean) --
The attribute value. The valid values are true or false .



ProductCodes (list) --
A list of product codes.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.





VolumeId (string) --
The ID of the volume.







Examples
This example describes the autoEnableIo attribute of the volume with the ID vol-049df61146c4d7901.
response = client.describe_volume_attribute(
    Attribute='autoEnableIO',
    VolumeId='vol-049df61146c4d7901',
)

print(response)


Expected Output:
{
    'AutoEnableIO': {
        'Value': False,
    },
    'VolumeId': 'vol-049df61146c4d7901',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AutoEnableIO': {
            'Value': True|False
        },
        'ProductCodes': [
            {
                'ProductCodeId': 'string',
                'ProductCodeType': 'devpay'|'marketplace'
            },
        ],
        'VolumeId': 'string'
    }
    
    
    """
    pass

def describe_volume_status(Filters=None, MaxResults=None, NextToken=None, VolumeIds=None, DryRun=None):
    """
    Describes the status of the specified volumes. Volume status provides the result of the checks performed on your volumes to determine events that can impair the performance of your volumes. The performance of a volume can be affected if an issue occurs on the volume\'s underlying host. If the volume\'s underlying host experiences a power outage or system issue, after the system is restored, there could be data inconsistencies on the volume. Volume events notify you if this occurs. Volume actions notify you if any action needs to be taken in response to the event.
    The DescribeVolumeStatus operation provides the following information about the specified volumes:
    Volume status is based on the volume status checks, and does not reflect the volume state. Therefore, volume status does not indicate volumes in the error state (for example, when a volume is incapable of accepting I/O.)
    See also: AWS API Documentation
    
    Examples
    This example describes the status for the volume vol-1234567890abcdef0.
    Expected Output:
    This example describes the status for all volumes that are impaired. In this example output, there are no impaired volumes.
    Expected Output:
    
    :example: response = client.describe_volume_status(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        VolumeIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\naction.code - The action code for the event (for example, enable-volume-io ).\naction.description - A description of the action.\naction.event-id - The event ID associated with the action.\navailability-zone - The Availability Zone of the instance.\nevent.description - A description of the event.\nevent.event-id - The event ID.\nevent.event-type - The event type (for io-enabled : passed | failed ; for io-performance : io-performance:degraded | io-performance:severely-degraded | io-performance:stalled ).\nevent.not-after - The latest end time for the event.\nevent.not-before - The earliest start time for the event.\nvolume-status.details-name - The cause for volume-status.status (io-enabled | io-performance ).\nvolume-status.details-status - The status of volume-status.details-name (for io-enabled : passed | failed ; for io-performance : normal | degraded | severely-degraded | stalled ).\nvolume-status.status - The status of the volume (ok | impaired | warning | insufficient-data ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of volume results returned by DescribeVolumeStatus in paginated output. When this parameter is used, the request only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1000; if MaxResults is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then DescribeVolumeStatus returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.

    :type NextToken: string
    :param NextToken: The NextToken value to include in a future DescribeVolumeStatus request. When the results of the request exceed MaxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.

    :type VolumeIds: list
    :param VolumeIds: The IDs of the volumes.\nDefault: Describes all your volumes.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'VolumeStatuses': [
        {
            'Actions': [
                {
                    'Code': 'string',
                    'Description': 'string',
                    'EventId': 'string',
                    'EventType': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'OutpostArn': 'string',
            'Events': [
                {
                    'Description': 'string',
                    'EventId': 'string',
                    'EventType': 'string',
                    'NotAfter': datetime(2015, 1, 1),
                    'NotBefore': datetime(2015, 1, 1),
                    'InstanceId': 'string'
                },
            ],
            'VolumeId': 'string',
            'VolumeStatus': {
                'Details': [
                    {
                        'Name': 'io-enabled'|'io-performance',
                        'Status': 'string'
                    },
                ],
                'Status': 'ok'|'impaired'|'insufficient-data'
            },
            'AttachmentStatuses': [
                {
                    'IoPerformance': 'string',
                    'InstanceId': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --

NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.

VolumeStatuses (list) --
Information about the status of the volumes.

(dict) --
Describes the volume status.

Actions (list) --
The details of the operation.

(dict) --
Describes a volume status operation code.

Code (string) --
The code identifying the operation, for example, enable-volume-io .

Description (string) --
A description of the operation.

EventId (string) --
The ID of the event associated with this operation.

EventType (string) --
The event type associated with this operation.





AvailabilityZone (string) --
The Availability Zone of the volume.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

Events (list) --
A list of events associated with the volume.

(dict) --
Describes a volume status event.

Description (string) --
A description of the event.

EventId (string) --
The ID of this event.

EventType (string) --
The type of this event.

NotAfter (datetime) --
The latest end time of the event.

NotBefore (datetime) --
The earliest start time of the event.

InstanceId (string) --
The ID of the instance associated with the event.





VolumeId (string) --
The volume ID.

VolumeStatus (dict) --
The volume status.

Details (list) --
The details of the volume status.

(dict) --
Describes a volume status.

Name (string) --
The name of the volume status.

Status (string) --
The intended status of the volume status.





Status (string) --
The status of the volume.



AttachmentStatuses (list) --
Information about the instances to which the volume is attached.

(dict) --
Information about the instances to which the volume is attached.

IoPerformance (string) --
The maximum IOPS supported by the attached instance.

InstanceId (string) --
The ID of the attached instance.















Examples
This example describes the status for the volume vol-1234567890abcdef0.
response = client.describe_volume_status(
    VolumeIds=[
        'vol-1234567890abcdef0',
    ],
)

print(response)


Expected Output:
{
    'VolumeStatuses': [
        {
            'Actions': [
            ],
            'AvailabilityZone': 'us-east-1a',
            'Events': [
            ],
            'VolumeId': 'vol-1234567890abcdef0',
            'VolumeStatus': {
                'Details': [
                    {
                        'Name': 'io-enabled',
                        'Status': 'passed',
                    },
                    {
                        'Name': 'io-performance',
                        'Status': 'not-applicable',
                    },
                ],
                'Status': 'ok',
            },
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the status for all volumes that are impaired. In this example output, there are no impaired volumes.
response = client.describe_volume_status(
    Filters=[
        {
            'Name': 'volume-status.status',
            'Values': [
                'impaired',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'VolumeStatuses': [
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NextToken': 'string',
        'VolumeStatuses': [
            {
                'Actions': [
                    {
                        'Code': 'string',
                        'Description': 'string',
                        'EventId': 'string',
                        'EventType': 'string'
                    },
                ],
                'AvailabilityZone': 'string',
                'OutpostArn': 'string',
                'Events': [
                    {
                        'Description': 'string',
                        'EventId': 'string',
                        'EventType': 'string',
                        'NotAfter': datetime(2015, 1, 1),
                        'NotBefore': datetime(2015, 1, 1),
                        'InstanceId': 'string'
                    },
                ],
                'VolumeId': 'string',
                'VolumeStatus': {
                    'Details': [
                        {
                            'Name': 'io-enabled'|'io-performance',
                            'Status': 'string'
                        },
                    ],
                    'Status': 'ok'|'impaired'|'insufficient-data'
                },
                'AttachmentStatuses': [
                    {
                        'IoPerformance': 'string',
                        'InstanceId': 'string'
                    },
                ]
            },
        ]
    }
    
    
    """
    pass

def describe_volumes(Filters=None, VolumeIds=None, DryRun=None, MaxResults=None, NextToken=None):
    """
    Describes the specified EBS volumes or all of your EBS volumes.
    If you are describing a long list of volumes, you can paginate the output to make the list more manageable. The MaxResults parameter sets the maximum number of results returned in a single page. If the list of results exceeds your MaxResults value, then that number of results is returned along with a NextToken value that can be passed to a subsequent DescribeVolumes request to retrieve the remaining results.
    For more information about EBS volumes, see Amazon EBS Volumes in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example describes all of your volumes in the default region.
    Expected Output:
    This example describes all volumes that are both attached to the instance with the ID i-1234567890abcdef0 and set to delete when the instance terminates.
    Expected Output:
    
    :example: response = client.describe_volumes(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        VolumeIds=[
            'string',
        ],
        DryRun=True|False,
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type Filters: list
    :param Filters: The filters.\n\nattachment.attach-time - The time stamp when the attachment initiated.\nattachment.delete-on-termination - Whether the volume is deleted on instance termination.\nattachment.device - The device name specified in the block device mapping (for example, /dev/sda1 ).\nattachment.instance-id - The ID of the instance the volume is attached to.\nattachment.status - The attachment state (attaching | attached | detaching ).\navailability-zone - The Availability Zone in which the volume was created.\ncreate-time - The time stamp when the volume was created.\nencrypted - Indicates whether the volume is encrypted (true | false )\nmulti-attach-enabled - Indicates whether the volume is enabled for Multi-Attach (true | false )\nfast-restored - Indicates whether the volume was created from a snapshot that is enabled for fast snapshot restore (true | false ).\nsize - The size of the volume, in GiB.\nsnapshot-id - The snapshot from which the volume was created.\nstatus - The status of the volume (creating | available | in-use | deleting | deleted | error ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvolume-id - The volume ID.\nvolume-type - The Amazon EBS volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type VolumeIds: list
    :param VolumeIds: The volume IDs.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type MaxResults: integer
    :param MaxResults: The maximum number of volume results returned by DescribeVolumes in paginated output. When this parameter is used, DescribeVolumes only returns MaxResults results in a single page along with a NextToken response element. The remaining results of the initial request can be seen by sending another DescribeVolumes request with the returned NextToken value. This value can be between 5 and 500; if MaxResults is given a value larger than 500, only 500 results are returned. If this parameter is not used, then DescribeVolumes returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.

    :type NextToken: string
    :param NextToken: The NextToken value returned from a previous paginated DescribeVolumes request where MaxResults was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the NextToken value. This value is null when there are no more results to return.

    :rtype: dict

ReturnsResponse Syntax
{
    'Volumes': [
        {
            'Attachments': [
                {
                    'AttachTime': datetime(2015, 1, 1),
                    'Device': 'string',
                    'InstanceId': 'string',
                    'State': 'attaching'|'attached'|'detaching'|'detached'|'busy',
                    'VolumeId': 'string',
                    'DeleteOnTermination': True|False
                },
            ],
            'AvailabilityZone': 'string',
            'CreateTime': datetime(2015, 1, 1),
            'Encrypted': True|False,
            'KmsKeyId': 'string',
            'OutpostArn': 'string',
            'Size': 123,
            'SnapshotId': 'string',
            'State': 'creating'|'available'|'in-use'|'deleting'|'deleted'|'error',
            'VolumeId': 'string',
            'Iops': 123,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
            'FastRestored': True|False,
            'MultiAttachEnabled': True|False
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Volumes (list) --
Information about the volumes.

(dict) --
Describes a volume.

Attachments (list) --
Information about the volume attachments.

(dict) --
Describes volume attachment details.

AttachTime (datetime) --
The time stamp when the attachment initiated.

Device (string) --
The device name.

InstanceId (string) --
The ID of the instance.

State (string) --
The attachment state of the volume.

VolumeId (string) --
The ID of the volume.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination.





AvailabilityZone (string) --
The Availability Zone for the volume.

CreateTime (datetime) --
The time stamp when volume creation was initiated.

Encrypted (boolean) --
Indicates whether the volume is encrypted.

KmsKeyId (string) --
The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.

OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

Size (integer) --
The size of the volume, in GiBs.

SnapshotId (string) --
The snapshot from which the volume was created, if applicable.

State (string) --
The volume state.

VolumeId (string) --
The ID of the volume.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS SSD volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose SSD volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes, in most Regions. The maximum IOPS for io1 of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS.
Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.

Tags (list) --
Any tags assigned to the volume.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VolumeType (string) --
The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.

FastRestored (boolean) --
Indicates whether the volume was created using fast snapshot restore.

MultiAttachEnabled (boolean) --
Indicates whether Amazon EBS Multi-Attach is enabled.





NextToken (string) --
The NextToken value to include in a future DescribeVolumes request. When the results of a DescribeVolumes request exceed MaxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes all of your volumes in the default region.
response = client.describe_volumes(
)

print(response)


Expected Output:
{
    'NextToken': '',
    'Volumes': [
        {
            'Attachments': [
                {
                    'AttachTime': datetime(2013, 12, 18, 22, 35, 0, 2, 352, 0),
                    'DeleteOnTermination': True,
                    'Device': '/dev/sda1',
                    'InstanceId': 'i-1234567890abcdef0',
                    'State': 'attached',
                    'VolumeId': 'vol-049df61146c4d7901',
                },
            ],
            'AvailabilityZone': 'us-east-1a',
            'CreateTime': datetime(2013, 12, 18, 22, 35, 0, 2, 352, 0),
            'Size': 8,
            'SnapshotId': 'snap-1234567890abcdef0',
            'State': 'in-use',
            'VolumeId': 'vol-049df61146c4d7901',
            'VolumeType': 'standard',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes all volumes that are both attached to the instance with the ID i-1234567890abcdef0 and set to delete when the instance terminates.
response = client.describe_volumes(
    Filters=[
        {
            'Name': 'attachment.instance-id',
            'Values': [
                'i-1234567890abcdef0',
            ],
        },
        {
            'Name': 'attachment.delete-on-termination',
            'Values': [
                'true',
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'Volumes': [
        {
            'Attachments': [
                {
                    'AttachTime': datetime(2013, 12, 18, 22, 35, 0, 2, 352, 0),
                    'DeleteOnTermination': True,
                    'Device': '/dev/sda1',
                    'InstanceId': 'i-1234567890abcdef0',
                    'State': 'attached',
                    'VolumeId': 'vol-049df61146c4d7901',
                },
            ],
            'AvailabilityZone': 'us-east-1a',
            'CreateTime': datetime(2013, 12, 18, 22, 35, 0, 2, 352, 0),
            'Size': 8,
            'SnapshotId': 'snap-1234567890abcdef0',
            'State': 'in-use',
            'VolumeId': 'vol-049df61146c4d7901',
            'VolumeType': 'standard',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Volumes': [
            {
                'Attachments': [
                    {
                        'AttachTime': datetime(2015, 1, 1),
                        'Device': 'string',
                        'InstanceId': 'string',
                        'State': 'attaching'|'attached'|'detaching'|'detached'|'busy',
                        'VolumeId': 'string',
                        'DeleteOnTermination': True|False
                    },
                ],
                'AvailabilityZone': 'string',
                'CreateTime': datetime(2015, 1, 1),
                'Encrypted': True|False,
                'KmsKeyId': 'string',
                'OutpostArn': 'string',
                'Size': 123,
                'SnapshotId': 'string',
                'State': 'creating'|'available'|'in-use'|'deleting'|'deleted'|'error',
                'VolumeId': 'string',
                'Iops': 123,
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                'FastRestored': True|False,
                'MultiAttachEnabled': True|False
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_volumes_modifications(DryRun=None, VolumeIds=None, Filters=None, NextToken=None, MaxResults=None):
    """
    Reports the current modification status of EBS volumes.
    Current-generation EBS volumes support modification of attributes including type, size, and (for io1 volumes) IOPS provisioning while either attached to or detached from an instance. Following an action from the API or the console to modify a volume, the status of the modification may be modifying , optimizing , completed , or failed . If a volume has never been modified, then certain elements of the returned VolumeModification objects are null.
    You can also use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the Amazon CloudWatch Events User Guide . For more information, see Monitoring Volume Modifications" in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_volumes_modifications(
        DryRun=True|False,
        VolumeIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VolumeIds: list
    :param VolumeIds: The IDs of the volumes for which in-progress modifications will be described.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: The filters. Supported filters: volume-id | modification-state | target-size | target-iops | target-volume-type | original-size | original-iops | original-volume-type | start-time | originalMultiAttachEnabled | targetMultiAttachEnabled .\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type NextToken: string
    :param NextToken: The nextToken value returned by a previous paginated request.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results (up to a limit of 500) to be returned in a paginated request.

    :rtype: dict

ReturnsResponse Syntax
{
    'VolumesModifications': [
        {
            'VolumeId': 'string',
            'ModificationState': 'modifying'|'optimizing'|'completed'|'failed',
            'StatusMessage': 'string',
            'TargetSize': 123,
            'TargetIops': 123,
            'TargetVolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
            'OriginalSize': 123,
            'OriginalIops': 123,
            'OriginalVolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
            'Progress': 123,
            'StartTime': datetime(2015, 1, 1),
            'EndTime': datetime(2015, 1, 1)
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

VolumesModifications (list) --
Information about the volume modifications.

(dict) --
Describes the modification status of an EBS volume.
If the volume has never been modified, some element values will be null.

VolumeId (string) --
The ID of the volume.

ModificationState (string) --
The current modification state. The modification state is null for unmodified volumes.

StatusMessage (string) --
A status message about the modification progress or failure.

TargetSize (integer) --
The target size of the volume, in GiB.

TargetIops (integer) --
The target IOPS rate of the volume.

TargetVolumeType (string) --
The target EBS volume type of the volume.

OriginalSize (integer) --
The original size of the volume.

OriginalIops (integer) --
The original IOPS rate of the volume.

OriginalVolumeType (string) --
The original EBS volume type of the volume.

Progress (integer) --
The modification progress, from 0 to 100 percent complete.

StartTime (datetime) --
The modification start time.

EndTime (datetime) --
The modification completion or failure time.





NextToken (string) --
Token for pagination, null if there are no more results








    :return: {
        'VolumesModifications': [
            {
                'VolumeId': 'string',
                'ModificationState': 'modifying'|'optimizing'|'completed'|'failed',
                'StatusMessage': 'string',
                'TargetSize': 123,
                'TargetIops': 123,
                'TargetVolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                'OriginalSize': 123,
                'OriginalIops': 123,
                'OriginalVolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                'Progress': 123,
                'StartTime': datetime(2015, 1, 1),
                'EndTime': datetime(2015, 1, 1)
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_vpc_attribute(Attribute=None, VpcId=None, DryRun=None):
    """
    Describes the specified attribute of the specified VPC. You can specify only one attribute at a time.
    See also: AWS API Documentation
    
    Examples
    This example describes the enableDnsSupport attribute. This attribute indicates whether DNS resolution is enabled for the VPC. If this attribute is true, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.
    Expected Output:
    This example describes the enableDnsHostnames attribute. This attribute indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is true, instances in the VPC get DNS hostnames; otherwise, they do not.
    Expected Output:
    
    :example: response = client.describe_vpc_attribute(
        Attribute='enableDnsSupport'|'enableDnsHostnames',
        VpcId='string',
        DryRun=True|False
    )
    
    
    :type Attribute: string
    :param Attribute: [REQUIRED]\nThe VPC attribute.\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'VpcId': 'string',
    'EnableDnsHostnames': {
        'Value': True|False
    },
    'EnableDnsSupport': {
        'Value': True|False
    }
}


Response Structure

(dict) --

VpcId (string) --
The ID of the VPC.

EnableDnsHostnames (dict) --
Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is true , instances in the VPC get DNS hostnames; otherwise, they do not.

Value (boolean) --
The attribute value. The valid values are true or false .



EnableDnsSupport (dict) --
Indicates whether DNS resolution is enabled for the VPC. If this attribute is true , the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.

Value (boolean) --
The attribute value. The valid values are true or false .









Examples
This example describes the enableDnsSupport attribute. This attribute indicates whether DNS resolution is enabled for the VPC. If this attribute is true, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.
response = client.describe_vpc_attribute(
    Attribute='enableDnsSupport',
    VpcId='vpc-a01106c2',
)

print(response)


Expected Output:
{
    'EnableDnsSupport': {
        'Value': True,
    },
    'VpcId': 'vpc-a01106c2',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example describes the enableDnsHostnames attribute. This attribute indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is true, instances in the VPC get DNS hostnames; otherwise, they do not.
response = client.describe_vpc_attribute(
    Attribute='enableDnsHostnames',
    VpcId='vpc-a01106c2',
)

print(response)


Expected Output:
{
    'EnableDnsHostnames': {
        'Value': True,
    },
    'VpcId': 'vpc-a01106c2',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'VpcId': 'string',
        'EnableDnsHostnames': {
            'Value': True|False
        },
        'EnableDnsSupport': {
            'Value': True|False
        }
    }
    
    
    """
    pass

def describe_vpc_classic_link(Filters=None, DryRun=None, VpcIds=None):
    """
    Describes the ClassicLink status of one or more VPCs.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpc_classic_link(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        VpcIds=[
            'string',
        ]
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\nis-classic-link-enabled - Whether the VPC is enabled for ClassicLink (true | false ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcIds: list
    :param VpcIds: One or more VPCs for which you want to describe the ClassicLink status.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Vpcs': [
        {
            'ClassicLinkEnabled': True|False,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcId': 'string'
        },
    ]
}


Response Structure

(dict) --

Vpcs (list) --
The ClassicLink status of one or more VPCs.

(dict) --
Describes whether a VPC is enabled for ClassicLink.

ClassicLinkEnabled (boolean) --
Indicates whether the VPC is enabled for ClassicLink.

Tags (list) --
Any tags assigned to the VPC.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcId (string) --
The ID of the VPC.












    :return: {
        'Vpcs': [
            {
                'ClassicLinkEnabled': True|False,
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VpcId': 'string'
            },
        ]
    }
    
    
    """
    pass

def describe_vpc_classic_link_dns_support(MaxResults=None, NextToken=None, VpcIds=None):
    """
    Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it\'s linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information, see ClassicLink in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpc_classic_link_dns_support(
        MaxResults=123,
        NextToken='string',
        VpcIds=[
            'string',
        ]
    )
    
    
    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type VpcIds: list
    :param VpcIds: One or more VPC IDs.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'Vpcs': [
        {
            'ClassicLinkDnsSupported': True|False,
            'VpcId': 'string'
        },
    ]
}


Response Structure

(dict) --

NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.

Vpcs (list) --
Information about the ClassicLink DNS support status of the VPCs.

(dict) --
Describes the ClassicLink DNS support status of a VPC.

ClassicLinkDnsSupported (boolean) --
Indicates whether ClassicLink DNS support is enabled for the VPC.

VpcId (string) --
The ID of the VPC.












    :return: {
        'NextToken': 'string',
        'Vpcs': [
            {
                'ClassicLinkDnsSupported': True|False,
                'VpcId': 'string'
            },
        ]
    }
    
    
    """
    pass

def describe_vpc_endpoint_connection_notifications(DryRun=None, ConnectionNotificationId=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes the connection notifications for VPC endpoints and VPC endpoint services.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpc_endpoint_connection_notifications(
        DryRun=True|False,
        ConnectionNotificationId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ConnectionNotificationId: string
    :param ConnectionNotificationId: The ID of the notification.

    :type Filters: list
    :param Filters: One or more filters.\n\nconnection-notification-arn - The ARN of the SNS topic for the notification.\nconnection-notification-id - The ID of the notification.\nconnection-notification-state - The state of the notification (Enabled | Disabled ).\nconnection-notification-type - The type of notification (Topic ).\nservice-id - The ID of the endpoint service.\nvpc-endpoint-id - The ID of the VPC endpoint.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned NextToken value.

    :type NextToken: string
    :param NextToken: The token to request the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'ConnectionNotificationSet': [
        {
            'ConnectionNotificationId': 'string',
            'ServiceId': 'string',
            'VpcEndpointId': 'string',
            'ConnectionNotificationType': 'Topic',
            'ConnectionNotificationArn': 'string',
            'ConnectionEvents': [
                'string',
            ],
            'ConnectionNotificationState': 'Enabled'|'Disabled'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

ConnectionNotificationSet (list) --
One or more notifications.

(dict) --
Describes a connection notification for a VPC endpoint or VPC endpoint service.

ConnectionNotificationId (string) --
The ID of the notification.

ServiceId (string) --
The ID of the endpoint service.

VpcEndpointId (string) --
The ID of the VPC endpoint.

ConnectionNotificationType (string) --
The type of notification.

ConnectionNotificationArn (string) --
The ARN of the SNS topic for the notification.

ConnectionEvents (list) --
The events for the notification. Valid values are Accept , Connect , Delete , and Reject .

(string) --


ConnectionNotificationState (string) --
The state of the notification.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'ConnectionNotificationSet': [
            {
                'ConnectionNotificationId': 'string',
                'ServiceId': 'string',
                'VpcEndpointId': 'string',
                'ConnectionNotificationType': 'Topic',
                'ConnectionNotificationArn': 'string',
                'ConnectionEvents': [
                    'string',
                ],
                'ConnectionNotificationState': 'Enabled'|'Disabled'
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_vpc_endpoint_connections(DryRun=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes the VPC endpoint connections to your VPC endpoint services, including any endpoints that are pending your acceptance.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpc_endpoint_connections(
        DryRun=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Filters: list
    :param Filters: One or more filters.\n\nservice-id - The ID of the service.\nvpc-endpoint-owner - The AWS account number of the owner of the endpoint.\nvpc-endpoint-state - The state of the endpoint (pendingAcceptance | pending | available | deleting | deleted | rejected | failed ).\nvpc-endpoint-id - The ID of the endpoint.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'VpcEndpointConnections': [
        {
            'ServiceId': 'string',
            'VpcEndpointId': 'string',
            'VpcEndpointOwner': 'string',
            'VpcEndpointState': 'PendingAcceptance'|'Pending'|'Available'|'Deleting'|'Deleted'|'Rejected'|'Failed'|'Expired',
            'CreationTimestamp': datetime(2015, 1, 1),
            'DnsEntries': [
                {
                    'DnsName': 'string',
                    'HostedZoneId': 'string'
                },
            ],
            'NetworkLoadBalancerArns': [
                'string',
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

VpcEndpointConnections (list) --
Information about one or more VPC endpoint connections.

(dict) --
Describes a VPC endpoint connection to a service.

ServiceId (string) --
The ID of the service to which the endpoint is connected.

VpcEndpointId (string) --
The ID of the VPC endpoint.

VpcEndpointOwner (string) --
The AWS account ID of the owner of the VPC endpoint.

VpcEndpointState (string) --
The state of the VPC endpoint.

CreationTimestamp (datetime) --
The date and time that the VPC endpoint was created.

DnsEntries (list) --
The DNS entries for the VPC endpoint.

(dict) --
Describes a DNS entry.

DnsName (string) --
The DNS name.

HostedZoneId (string) --
The ID of the private hosted zone.





NetworkLoadBalancerArns (list) --
The Amazon Resource Names (ARNs) of the network load balancers for the service.

(string) --






NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'VpcEndpointConnections': [
            {
                'ServiceId': 'string',
                'VpcEndpointId': 'string',
                'VpcEndpointOwner': 'string',
                'VpcEndpointState': 'PendingAcceptance'|'Pending'|'Available'|'Deleting'|'Deleted'|'Rejected'|'Failed'|'Expired',
                'CreationTimestamp': datetime(2015, 1, 1),
                'DnsEntries': [
                    {
                        'DnsName': 'string',
                        'HostedZoneId': 'string'
                    },
                ],
                'NetworkLoadBalancerArns': [
                    'string',
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_vpc_endpoint_service_configurations(DryRun=None, ServiceIds=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes the VPC endpoint service configurations in your account (your services).
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpc_endpoint_service_configurations(
        DryRun=True|False,
        ServiceIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceIds: list
    :param ServiceIds: The IDs of one or more services.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\nservice-name - The name of the service.\nservice-id - The ID of the service.\nservice-state - The state of the service (Pending | Available | Deleting | Deleted | Failed ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'ServiceConfigurations': [
        {
            'ServiceType': [
                {
                    'ServiceType': 'Interface'|'Gateway'
                },
            ],
            'ServiceId': 'string',
            'ServiceName': 'string',
            'ServiceState': 'Pending'|'Available'|'Deleting'|'Deleted'|'Failed',
            'AvailabilityZones': [
                'string',
            ],
            'AcceptanceRequired': True|False,
            'ManagesVpcEndpoints': True|False,
            'NetworkLoadBalancerArns': [
                'string',
            ],
            'BaseEndpointDnsNames': [
                'string',
            ],
            'PrivateDnsName': 'string',
            'PrivateDnsNameConfiguration': {
                'State': 'pendingVerification'|'verified'|'failed',
                'Type': 'string',
                'Value': 'string',
                'Name': 'string'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

ServiceConfigurations (list) --
Information about one or more services.

(dict) --
Describes a service configuration for a VPC endpoint service.

ServiceType (list) --
The type of service.

(dict) --
Describes the type of service for a VPC endpoint.

ServiceType (string) --
The type of service.





ServiceId (string) --
The ID of the service.

ServiceName (string) --
The name of the service.

ServiceState (string) --
The service state.

AvailabilityZones (list) --
The Availability Zones in which the service is available.

(string) --


AcceptanceRequired (boolean) --
Indicates whether requests from other AWS accounts to create an endpoint to the service must first be accepted.

ManagesVpcEndpoints (boolean) --
Indicates whether the service manages its VPC endpoints. Management of the service VPC endpoints using the VPC endpoint API is restricted.

NetworkLoadBalancerArns (list) --
The Amazon Resource Names (ARNs) of the Network Load Balancers for the service.

(string) --


BaseEndpointDnsNames (list) --
The DNS names for the service.

(string) --


PrivateDnsName (string) --
The private DNS name for the service.

PrivateDnsNameConfiguration (dict) --
Information about the endpoint service private DNS name configuration.

State (string) --
The verification state of the VPC endpoint service.
>Consumers of the endpoint service can use the private name only when the state is verified .

Type (string) --
The endpoint service verification type, for example TXT.

Value (string) --
The value the service provider adds to the private DNS name domain record before verification.

Name (string) --
The name of the record subdomain the service provider needs to create. The service provider adds the value text to the name .



Tags (list) --
Any tags assigned to the service.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'ServiceConfigurations': [
            {
                'ServiceType': [
                    {
                        'ServiceType': 'Interface'|'Gateway'
                    },
                ],
                'ServiceId': 'string',
                'ServiceName': 'string',
                'ServiceState': 'Pending'|'Available'|'Deleting'|'Deleted'|'Failed',
                'AvailabilityZones': [
                    'string',
                ],
                'AcceptanceRequired': True|False,
                'ManagesVpcEndpoints': True|False,
                'NetworkLoadBalancerArns': [
                    'string',
                ],
                'BaseEndpointDnsNames': [
                    'string',
                ],
                'PrivateDnsName': 'string',
                'PrivateDnsNameConfiguration': {
                    'State': 'pendingVerification'|'verified'|'failed',
                    'Type': 'string',
                    'Value': 'string',
                    'Name': 'string'
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_vpc_endpoint_service_permissions(DryRun=None, ServiceId=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes the principals (service consumers) that are permitted to discover your VPC endpoint service.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpc_endpoint_service_permissions(
        DryRun=True|False,
        ServiceId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceId: string
    :param ServiceId: [REQUIRED]\nThe ID of the service.\n

    :type Filters: list
    :param Filters: One or more filters.\n\nprincipal - The ARN of the principal.\nprincipal-type - The principal type (All | Service | OrganizationUnit | Account | User | Role ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned NextToken value. This value can be between 5 and 1,000; if MaxResults is given a value larger than 1,000, only 1,000 results are returned.

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :rtype: dict

ReturnsResponse Syntax
{
    'AllowedPrincipals': [
        {
            'PrincipalType': 'All'|'Service'|'OrganizationUnit'|'Account'|'User'|'Role',
            'Principal': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

AllowedPrincipals (list) --
Information about one or more allowed principals.

(dict) --
Describes a principal.

PrincipalType (string) --
The type of principal.

Principal (string) --
The Amazon Resource Name (ARN) of the principal.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'AllowedPrincipals': [
            {
                'PrincipalType': 'All'|'Service'|'OrganizationUnit'|'Account'|'User'|'Role',
                'Principal': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_vpc_endpoint_services(DryRun=None, ServiceNames=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes available services to which you can create a VPC endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpc_endpoint_services(
        DryRun=True|False,
        ServiceNames=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceNames: list
    :param ServiceNames: One or more service names.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\nservice-name - The name of the service.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.\nConstraint: If the value is greater than 1,000, we return only 1,000 items.\n

    :type NextToken: string
    :param NextToken: The token for the next set of items to return. (You received this token from a prior call.)

    :rtype: dict

ReturnsResponse Syntax
{
    'ServiceNames': [
        'string',
    ],
    'ServiceDetails': [
        {
            'ServiceName': 'string',
            'ServiceId': 'string',
            'ServiceType': [
                {
                    'ServiceType': 'Interface'|'Gateway'
                },
            ],
            'AvailabilityZones': [
                'string',
            ],
            'Owner': 'string',
            'BaseEndpointDnsNames': [
                'string',
            ],
            'PrivateDnsName': 'string',
            'VpcEndpointPolicySupported': True|False,
            'AcceptanceRequired': True|False,
            'ManagesVpcEndpoints': True|False,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'PrivateDnsNameVerificationState': 'pendingVerification'|'verified'|'failed'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --
Contains the output of DescribeVpcEndpointServices.

ServiceNames (list) --
A list of supported services.

(string) --


ServiceDetails (list) --
Information about the service.

(dict) --
Describes a VPC endpoint service.

ServiceName (string) --
The Amazon Resource Name (ARN) of the service.

ServiceId (string) --
The ID of the endpoint service.

ServiceType (list) --
The type of service.

(dict) --
Describes the type of service for a VPC endpoint.

ServiceType (string) --
The type of service.





AvailabilityZones (list) --
The Availability Zones in which the service is available.

(string) --


Owner (string) --
The AWS account ID of the service owner.

BaseEndpointDnsNames (list) --
The DNS names for the service.

(string) --


PrivateDnsName (string) --
The private DNS name for the service.

VpcEndpointPolicySupported (boolean) --
Indicates whether the service supports endpoint policies.

AcceptanceRequired (boolean) --
Indicates whether VPC endpoint connection requests to the service must be accepted by the service owner.

ManagesVpcEndpoints (boolean) --
Indicates whether the service manages its VPC endpoints. Management of the service VPC endpoints using the VPC endpoint API is restricted.

Tags (list) --
Any tags assigned to the service.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





PrivateDnsNameVerificationState (string) --
The verification state of the VPC endpoint service.
Consumers of the endpoint service cannot use the private name when the state is not verified .





NextToken (string) --
The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.








    :return: {
        'ServiceNames': [
            'string',
        ],
        'ServiceDetails': [
            {
                'ServiceName': 'string',
                'ServiceId': 'string',
                'ServiceType': [
                    {
                        'ServiceType': 'Interface'|'Gateway'
                    },
                ],
                'AvailabilityZones': [
                    'string',
                ],
                'Owner': 'string',
                'BaseEndpointDnsNames': [
                    'string',
                ],
                'PrivateDnsName': 'string',
                'VpcEndpointPolicySupported': True|False,
                'AcceptanceRequired': True|False,
                'ManagesVpcEndpoints': True|False,
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'PrivateDnsNameVerificationState': 'pendingVerification'|'verified'|'failed'
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_vpc_endpoints(DryRun=None, VpcEndpointIds=None, Filters=None, MaxResults=None, NextToken=None):
    """
    Describes one or more of your VPC endpoints.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpc_endpoints(
        DryRun=True|False,
        VpcEndpointIds=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcEndpointIds: list
    :param VpcEndpointIds: One or more endpoint IDs.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: One or more filters.\n\nservice-name - The name of the service.\nvpc-id - The ID of the VPC in which the endpoint resides.\nvpc-endpoint-id - The ID of the endpoint.\nvpc-endpoint-state - The state of the endpoint (pendingAcceptance | pending | available | deleting | deleted | rejected | failed ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.\nConstraint: If the value is greater than 1,000, we return only 1,000 items.\n

    :type NextToken: string
    :param NextToken: The token for the next set of items to return. (You received this token from a prior call.)

    :rtype: dict

ReturnsResponse Syntax
{
    'VpcEndpoints': [
        {
            'VpcEndpointId': 'string',
            'VpcEndpointType': 'Interface'|'Gateway',
            'VpcId': 'string',
            'ServiceName': 'string',
            'State': 'PendingAcceptance'|'Pending'|'Available'|'Deleting'|'Deleted'|'Rejected'|'Failed'|'Expired',
            'PolicyDocument': 'string',
            'RouteTableIds': [
                'string',
            ],
            'SubnetIds': [
                'string',
            ],
            'Groups': [
                {
                    'GroupId': 'string',
                    'GroupName': 'string'
                },
            ],
            'PrivateDnsEnabled': True|False,
            'RequesterManaged': True|False,
            'NetworkInterfaceIds': [
                'string',
            ],
            'DnsEntries': [
                {
                    'DnsName': 'string',
                    'HostedZoneId': 'string'
                },
            ],
            'CreationTimestamp': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'OwnerId': 'string',
            'LastError': {
                'Message': 'string',
                'Code': 'string'
            }
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --
Contains the output of DescribeVpcEndpoints.

VpcEndpoints (list) --
Information about the endpoints.

(dict) --
Describes a VPC endpoint.

VpcEndpointId (string) --
The ID of the VPC endpoint.

VpcEndpointType (string) --
The type of endpoint.

VpcId (string) --
The ID of the VPC to which the endpoint is associated.

ServiceName (string) --
The name of the service to which the endpoint is associated.

State (string) --
The state of the VPC endpoint.

PolicyDocument (string) --
The policy document associated with the endpoint, if applicable.

RouteTableIds (list) --
(Gateway endpoint) One or more route tables associated with the endpoint.

(string) --


SubnetIds (list) --
(Interface endpoint) One or more subnets in which the endpoint is located.

(string) --


Groups (list) --
(Interface endpoint) Information about the security groups that are associated with the network interface.

(dict) --
Describes a security group.

GroupId (string) --
The ID of the security group.

GroupName (string) --
The name of the security group.





PrivateDnsEnabled (boolean) --
(Interface endpoint) Indicates whether the VPC is associated with a private hosted zone.

RequesterManaged (boolean) --
Indicates whether the VPC endpoint is being managed by its service.

NetworkInterfaceIds (list) --
(Interface endpoint) One or more network interfaces for the endpoint.

(string) --


DnsEntries (list) --
(Interface endpoint) The DNS entries for the endpoint.

(dict) --
Describes a DNS entry.

DnsName (string) --
The DNS name.

HostedZoneId (string) --
The ID of the private hosted zone.





CreationTimestamp (datetime) --
The date and time that the VPC endpoint was created.

Tags (list) --
Any tags assigned to the VPC endpoint.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





OwnerId (string) --
The ID of the AWS account that owns the VPC endpoint.

LastError (dict) --
The last error that occurred for VPC endpoint.

Message (string) --
The error message for the VPC endpoint error.

Code (string) --
The error code for the VPC endpoint error.







NextToken (string) --
The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.








    :return: {
        'VpcEndpoints': [
            {
                'VpcEndpointId': 'string',
                'VpcEndpointType': 'Interface'|'Gateway',
                'VpcId': 'string',
                'ServiceName': 'string',
                'State': 'PendingAcceptance'|'Pending'|'Available'|'Deleting'|'Deleted'|'Rejected'|'Failed'|'Expired',
                'PolicyDocument': 'string',
                'RouteTableIds': [
                    'string',
                ],
                'SubnetIds': [
                    'string',
                ],
                'Groups': [
                    {
                        'GroupId': 'string',
                        'GroupName': 'string'
                    },
                ],
                'PrivateDnsEnabled': True|False,
                'RequesterManaged': True|False,
                'NetworkInterfaceIds': [
                    'string',
                ],
                'DnsEntries': [
                    {
                        'DnsName': 'string',
                        'HostedZoneId': 'string'
                    },
                ],
                'CreationTimestamp': datetime(2015, 1, 1),
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'OwnerId': 'string',
                'LastError': {
                    'Message': 'string',
                    'Code': 'string'
                }
            },
        ],
        'NextToken': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_vpc_peering_connections(Filters=None, DryRun=None, VpcPeeringConnectionIds=None, NextToken=None, MaxResults=None):
    """
    Describes one or more of your VPC peering connections.
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpc_peering_connections(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        DryRun=True|False,
        VpcPeeringConnectionIds=[
            'string',
        ],
        NextToken='string',
        MaxResults=123
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\naccepter-vpc-info.cidr-block - The IPv4 CIDR block of the accepter VPC.\naccepter-vpc-info.owner-id - The AWS account ID of the owner of the accepter VPC.\naccepter-vpc-info.vpc-id - The ID of the accepter VPC.\nexpiration-time - The expiration date and time for the VPC peering connection.\nrequester-vpc-info.cidr-block - The IPv4 CIDR block of the requester\'s VPC.\nrequester-vpc-info.owner-id - The AWS account ID of the owner of the requester VPC.\nrequester-vpc-info.vpc-id - The ID of the requester VPC.\nstatus-code - The status of the VPC peering connection (pending-acceptance | failed | expired | provisioning | active | deleting | deleted | rejected ).\nstatus-message - A message that provides more information about the status of the VPC peering connection, if applicable.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvpc-peering-connection-id - The ID of the VPC peering connection.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcPeeringConnectionIds: list
    :param VpcPeeringConnectionIds: One or more VPC peering connection IDs.\nDefault: Describes all your VPC peering connections.\n\n(string) --\n\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :rtype: dict

ReturnsResponse Syntax
{
    'VpcPeeringConnections': [
        {
            'AccepterVpcInfo': {
                'CidrBlock': 'string',
                'Ipv6CidrBlockSet': [
                    {
                        'Ipv6CidrBlock': 'string'
                    },
                ],
                'CidrBlockSet': [
                    {
                        'CidrBlock': 'string'
                    },
                ],
                'OwnerId': 'string',
                'PeeringOptions': {
                    'AllowDnsResolutionFromRemoteVpc': True|False,
                    'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                    'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
                },
                'VpcId': 'string',
                'Region': 'string'
            },
            'ExpirationTime': datetime(2015, 1, 1),
            'RequesterVpcInfo': {
                'CidrBlock': 'string',
                'Ipv6CidrBlockSet': [
                    {
                        'Ipv6CidrBlock': 'string'
                    },
                ],
                'CidrBlockSet': [
                    {
                        'CidrBlock': 'string'
                    },
                ],
                'OwnerId': 'string',
                'PeeringOptions': {
                    'AllowDnsResolutionFromRemoteVpc': True|False,
                    'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                    'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
                },
                'VpcId': 'string',
                'Region': 'string'
            },
            'Status': {
                'Code': 'initiating-request'|'pending-acceptance'|'active'|'deleted'|'rejected'|'failed'|'expired'|'provisioning'|'deleting',
                'Message': 'string'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VpcPeeringConnectionId': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

VpcPeeringConnections (list) --
Information about the VPC peering connections.

(dict) --
Describes a VPC peering connection.

AccepterVpcInfo (dict) --
Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.

CidrBlock (string) --
The IPv4 CIDR block for the VPC.

Ipv6CidrBlockSet (list) --
The IPv6 CIDR block for the VPC.

(dict) --
Describes an IPv6 CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.





CidrBlockSet (list) --
Information about the IPv4 CIDR blocks for the VPC.

(dict) --
Describes an IPv4 CIDR block.

CidrBlock (string) --
The IPv4 CIDR block.





OwnerId (string) --
The AWS account ID of the VPC owner.

PeeringOptions (dict) --
Information about the VPC peering connection options for the accepter or requester VPC.

AllowDnsResolutionFromRemoteVpc (boolean) --
Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.

AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --
Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.

AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --
Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.



VpcId (string) --
The ID of the VPC.

Region (string) --
The Region in which the VPC is located.



ExpirationTime (datetime) --
The time that an unaccepted VPC peering connection will expire.

RequesterVpcInfo (dict) --
Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.

CidrBlock (string) --
The IPv4 CIDR block for the VPC.

Ipv6CidrBlockSet (list) --
The IPv6 CIDR block for the VPC.

(dict) --
Describes an IPv6 CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.





CidrBlockSet (list) --
Information about the IPv4 CIDR blocks for the VPC.

(dict) --
Describes an IPv4 CIDR block.

CidrBlock (string) --
The IPv4 CIDR block.





OwnerId (string) --
The AWS account ID of the VPC owner.

PeeringOptions (dict) --
Information about the VPC peering connection options for the accepter or requester VPC.

AllowDnsResolutionFromRemoteVpc (boolean) --
Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.

AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --
Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.

AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --
Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.



VpcId (string) --
The ID of the VPC.

Region (string) --
The Region in which the VPC is located.



Status (dict) --
The status of the VPC peering connection.

Code (string) --
The status of the VPC peering connection.

Message (string) --
A message that provides more information about the status, if applicable.



Tags (list) --
Any tags assigned to the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VpcPeeringConnectionId (string) --
The ID of the VPC peering connection.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'VpcPeeringConnections': [
            {
                'AccepterVpcInfo': {
                    'CidrBlock': 'string',
                    'Ipv6CidrBlockSet': [
                        {
                            'Ipv6CidrBlock': 'string'
                        },
                    ],
                    'CidrBlockSet': [
                        {
                            'CidrBlock': 'string'
                        },
                    ],
                    'OwnerId': 'string',
                    'PeeringOptions': {
                        'AllowDnsResolutionFromRemoteVpc': True|False,
                        'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                        'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
                    },
                    'VpcId': 'string',
                    'Region': 'string'
                },
                'ExpirationTime': datetime(2015, 1, 1),
                'RequesterVpcInfo': {
                    'CidrBlock': 'string',
                    'Ipv6CidrBlockSet': [
                        {
                            'Ipv6CidrBlock': 'string'
                        },
                    ],
                    'CidrBlockSet': [
                        {
                            'CidrBlock': 'string'
                        },
                    ],
                    'OwnerId': 'string',
                    'PeeringOptions': {
                        'AllowDnsResolutionFromRemoteVpc': True|False,
                        'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
                        'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
                    },
                    'VpcId': 'string',
                    'Region': 'string'
                },
                'Status': {
                    'Code': 'initiating-request'|'pending-acceptance'|'active'|'deleted'|'rejected'|'failed'|'expired'|'provisioning'|'deleting',
                    'Message': 'string'
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VpcPeeringConnectionId': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_vpcs(Filters=None, VpcIds=None, DryRun=None, NextToken=None, MaxResults=None):
    """
    Describes one or more of your VPCs.
    See also: AWS API Documentation
    
    Examples
    This example describes the specified VPC.
    Expected Output:
    
    :example: response = client.describe_vpcs(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        VpcIds=[
            'string',
        ],
        DryRun=True|False,
        NextToken='string',
        MaxResults=123
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\ncidr - The primary IPv4 CIDR block of the VPC. The CIDR block you specify must exactly match the VPC\'s CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, /28 ).\ncidr-block-association.cidr-block - An IPv4 CIDR block associated with the VPC.\ncidr-block-association.association-id - The association ID for an IPv4 CIDR block associated with the VPC.\ncidr-block-association.state - The state of an IPv4 CIDR block associated with the VPC.\ndhcp-options-id - The ID of a set of DHCP options.\nipv6-cidr-block-association.ipv6-cidr-block - An IPv6 CIDR block associated with the VPC.\nipv6-cidr-block-association.ipv6-pool - The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.\nipv6-cidr-block-association.association-id - The association ID for an IPv6 CIDR block associated with the VPC.\nipv6-cidr-block-association.state - The state of an IPv6 CIDR block associated with the VPC.\nisDefault - Indicates whether the VPC is the default VPC.\nowner-id - The ID of the AWS account that owns the VPC.\nstate - The state of the VPC (pending | available ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\nvpc-id - The ID of the VPC.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type VpcIds: list
    :param VpcIds: One or more VPC IDs.\nDefault: Describes all your VPCs.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :rtype: dict

ReturnsResponse Syntax
{
    'Vpcs': [
        {
            'CidrBlock': 'string',
            'DhcpOptionsId': 'string',
            'State': 'pending'|'available',
            'VpcId': 'string',
            'OwnerId': 'string',
            'InstanceTenancy': 'default'|'dedicated'|'host',
            'Ipv6CidrBlockAssociationSet': [
                {
                    'AssociationId': 'string',
                    'Ipv6CidrBlock': 'string',
                    'Ipv6CidrBlockState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                        'StatusMessage': 'string'
                    },
                    'NetworkBorderGroup': 'string',
                    'Ipv6Pool': 'string'
                },
            ],
            'CidrBlockAssociationSet': [
                {
                    'AssociationId': 'string',
                    'CidrBlock': 'string',
                    'CidrBlockState': {
                        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                        'StatusMessage': 'string'
                    }
                },
            ],
            'IsDefault': True|False,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Vpcs (list) --
Information about one or more VPCs.

(dict) --
Describes a VPC.

CidrBlock (string) --
The primary IPv4 CIDR block for the VPC.

DhcpOptionsId (string) --
The ID of the set of DHCP options you\'ve associated with the VPC (or default if the default options are associated with the VPC).

State (string) --
The current state of the VPC.

VpcId (string) --
The ID of the VPC.

OwnerId (string) --
The ID of the AWS account that owns the VPC.

InstanceTenancy (string) --
The allowed tenancy of instances launched into the VPC.

Ipv6CidrBlockAssociationSet (list) --
Information about the IPv6 CIDR blocks associated with the VPC.

(dict) --
Describes an IPv6 CIDR block associated with a VPC.

AssociationId (string) --
The association ID for the IPv6 CIDR block.

Ipv6CidrBlock (string) --
The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of the CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.



NetworkBorderGroup (string) --
The name of the location from which we advertise the IPV6 CIDR block.

Ipv6Pool (string) --
The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.





CidrBlockAssociationSet (list) --
Information about the IPv4 CIDR blocks associated with the VPC.

(dict) --
Describes an IPv4 CIDR block associated with a VPC.

AssociationId (string) --
The association ID for the IPv4 CIDR block.

CidrBlock (string) --
The IPv4 CIDR block.

CidrBlockState (dict) --
Information about the state of the CIDR block.

State (string) --
The state of the CIDR block.

StatusMessage (string) --
A message about the status of the CIDR block, if applicable.







IsDefault (boolean) --
Indicates whether the VPC is the default VPC.

Tags (list) --
Any tags assigned to the VPC.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.







Examples
This example describes the specified VPC.
response = client.describe_vpcs(
    VpcIds=[
        'vpc-a01106c2',
    ],
)

print(response)


Expected Output:
{
    'Vpcs': [
        {
            'CidrBlock': '10.0.0.0/16',
            'DhcpOptionsId': 'dopt-7a8b9c2d',
            'InstanceTenancy': 'default',
            'IsDefault': False,
            'State': 'available',
            'Tags': [
                {
                    'Key': 'Name',
                    'Value': 'MyVPC',
                },
            ],
            'VpcId': 'vpc-a01106c2',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Vpcs': [
            {
                'CidrBlock': 'string',
                'DhcpOptionsId': 'string',
                'State': 'pending'|'available',
                'VpcId': 'string',
                'OwnerId': 'string',
                'InstanceTenancy': 'default'|'dedicated'|'host',
                'Ipv6CidrBlockAssociationSet': [
                    {
                        'AssociationId': 'string',
                        'Ipv6CidrBlock': 'string',
                        'Ipv6CidrBlockState': {
                            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                            'StatusMessage': 'string'
                        },
                        'NetworkBorderGroup': 'string',
                        'Ipv6Pool': 'string'
                    },
                ],
                'CidrBlockAssociationSet': [
                    {
                        'AssociationId': 'string',
                        'CidrBlock': 'string',
                        'CidrBlockState': {
                            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                            'StatusMessage': 'string'
                        }
                    },
                ],
                'IsDefault': True|False,
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def describe_vpn_connections(Filters=None, VpnConnectionIds=None, DryRun=None):
    """
    Describes one or more of your VPN connections.
    For more information, see AWS Site-to-Site VPN in the AWS Site-to-Site VPN User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpn_connections(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        VpnConnectionIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\ncustomer-gateway-configuration - The configuration information for the customer gateway.\ncustomer-gateway-id - The ID of a customer gateway associated with the VPN connection.\nstate - The state of the VPN connection (pending | available | deleting | deleted ).\noption.static-routes-only - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).\nroute.destination-cidr-block - The destination CIDR block. This corresponds to the subnet used in a customer data center.\nbgp-asn - The BGP Autonomous System Number (ASN) associated with a BGP device.\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\ntype - The type of VPN connection. Currently the only supported type is ipsec.1 .\nvpn-connection-id - The ID of the VPN connection.\nvpn-gateway-id - The ID of a virtual private gateway associated with the VPN connection.\ntransit-gateway-id - The ID of a transit gateway associated with the VPN connection.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type VpnConnectionIds: list
    :param VpnConnectionIds: One or more VPN connection IDs.\nDefault: Describes your VPN connections.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'VpnConnections': [
        {
            'CustomerGatewayConfiguration': 'string',
            'CustomerGatewayId': 'string',
            'Category': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'Type': 'ipsec.1',
            'VpnConnectionId': 'string',
            'VpnGatewayId': 'string',
            'TransitGatewayId': 'string',
            'Options': {
                'EnableAcceleration': True|False,
                'StaticRoutesOnly': True|False,
                'TunnelOptions': [
                    {
                        'OutsideIpAddress': 'string',
                        'TunnelInsideCidr': 'string',
                        'PreSharedKey': 'string',
                        'Phase1LifetimeSeconds': 123,
                        'Phase2LifetimeSeconds': 123,
                        'RekeyMarginTimeSeconds': 123,
                        'RekeyFuzzPercentage': 123,
                        'ReplayWindowSize': 123,
                        'DpdTimeoutSeconds': 123,
                        'Phase1EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'Phase2DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'IkeVersions': [
                            {
                                'Value': 'string'
                            },
                        ]
                    },
                ]
            },
            'Routes': [
                {
                    'DestinationCidrBlock': 'string',
                    'Source': 'Static',
                    'State': 'pending'|'available'|'deleting'|'deleted'
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VgwTelemetry': [
                {
                    'AcceptedRouteCount': 123,
                    'LastStatusChange': datetime(2015, 1, 1),
                    'OutsideIpAddress': 'string',
                    'Status': 'UP'|'DOWN',
                    'StatusMessage': 'string',
                    'CertificateArn': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --
Contains the output of DescribeVpnConnections.

VpnConnections (list) --
Information about one or more VPN connections.

(dict) --
Describes a VPN connection.

CustomerGatewayConfiguration (string) --
The configuration information for the VPN connection\'s customer gateway (in the native XML format). This element is always present in the  CreateVpnConnection response; however, it\'s present in the  DescribeVpnConnections response only if the VPN connection is in the pending or available state.

CustomerGatewayId (string) --
The ID of the customer gateway at your end of the VPN connection.

Category (string) --
The category of the VPN connection. A value of VPN indicates an AWS VPN connection. A value of VPN-Classic indicates an AWS Classic VPN connection.

State (string) --
The current state of the VPN connection.

Type (string) --
The type of VPN connection.

VpnConnectionId (string) --
The ID of the VPN connection.

VpnGatewayId (string) --
The ID of the virtual private gateway at the AWS side of the VPN connection.

TransitGatewayId (string) --
The ID of the transit gateway associated with the VPN connection.

Options (dict) --
The VPN connection options.

EnableAcceleration (boolean) --
Indicates whether acceleration is enabled for the VPN connection.

StaticRoutesOnly (boolean) --
Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don\'t support BGP.

TunnelOptions (list) --
Indicates the VPN tunnel options.

(dict) --
The VPN tunnel options.

OutsideIpAddress (string) --
The external IP address of the VPN tunnel.

TunnelInsideCidr (string) --
The range of inside IP addresses for the tunnel.

PreSharedKey (string) --
The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.

Phase1LifetimeSeconds (integer) --
The lifetime for phase 1 of the IKE negotiation, in seconds.

Phase2LifetimeSeconds (integer) --
The lifetime for phase 2 of the IKE negotiation, in seconds.

RekeyMarginTimeSeconds (integer) --
The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey.

RekeyFuzzPercentage (integer) --
The percentage of the rekey window determined by RekeyMarginTimeSeconds during which the rekey time is randomly selected.

ReplayWindowSize (integer) --
The number of packets in an IKE replay window.

DpdTimeoutSeconds (integer) --
The number of seconds after which a DPD timeout occurs.

Phase1EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The encryption algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the encryption algorithm.





Phase2EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The encryption algorithm for phase 2 IKE negotiations.

Value (string) --
The encryption algorithm.





Phase1IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The integrity algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the integrity algorithm.





Phase2IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The integrity algorithm for phase 2 IKE negotiations.

Value (string) --
The integrity algorithm.





Phase1DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 1 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





Phase2DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 2 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





IkeVersions (list) --
The IKE versions that are permitted for the VPN tunnel.

(dict) --
The internet key exchange (IKE) version permitted for the VPN tunnel.

Value (string) --
The IKE version.











Routes (list) --
The static routes associated with the VPN connection.

(dict) --
Describes a static route for a VPN connection.

DestinationCidrBlock (string) --
The CIDR block associated with the local subnet of the customer data center.

Source (string) --
Indicates how the routes were provided.

State (string) --
The current state of the static route.





Tags (list) --
Any tags assigned to the VPN connection.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VgwTelemetry (list) --
Information about the VPN tunnel.

(dict) --
Describes telemetry for a VPN tunnel.

AcceptedRouteCount (integer) --
The number of accepted routes.

LastStatusChange (datetime) --
The date and time of the last change in status.

OutsideIpAddress (string) --
The Internet-routable IP address of the virtual private gateway\'s outside interface.

Status (string) --
The status of the VPN tunnel.

StatusMessage (string) --
If an error occurs, a description of the error.

CertificateArn (string) --
The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.
















    :return: {
        'VpnConnections': [
            {
                'CustomerGatewayConfiguration': 'string',
                'CustomerGatewayId': 'string',
                'Category': 'string',
                'State': 'pending'|'available'|'deleting'|'deleted',
                'Type': 'ipsec.1',
                'VpnConnectionId': 'string',
                'VpnGatewayId': 'string',
                'TransitGatewayId': 'string',
                'Options': {
                    'EnableAcceleration': True|False,
                    'StaticRoutesOnly': True|False,
                    'TunnelOptions': [
                        {
                            'OutsideIpAddress': 'string',
                            'TunnelInsideCidr': 'string',
                            'PreSharedKey': 'string',
                            'Phase1LifetimeSeconds': 123,
                            'Phase2LifetimeSeconds': 123,
                            'RekeyMarginTimeSeconds': 123,
                            'RekeyFuzzPercentage': 123,
                            'ReplayWindowSize': 123,
                            'DpdTimeoutSeconds': 123,
                            'Phase1EncryptionAlgorithms': [
                                {
                                    'Value': 'string'
                                },
                            ],
                            'Phase2EncryptionAlgorithms': [
                                {
                                    'Value': 'string'
                                },
                            ],
                            'Phase1IntegrityAlgorithms': [
                                {
                                    'Value': 'string'
                                },
                            ],
                            'Phase2IntegrityAlgorithms': [
                                {
                                    'Value': 'string'
                                },
                            ],
                            'Phase1DHGroupNumbers': [
                                {
                                    'Value': 123
                                },
                            ],
                            'Phase2DHGroupNumbers': [
                                {
                                    'Value': 123
                                },
                            ],
                            'IkeVersions': [
                                {
                                    'Value': 'string'
                                },
                            ]
                        },
                    ]
                },
                'Routes': [
                    {
                        'DestinationCidrBlock': 'string',
                        'Source': 'Static',
                        'State': 'pending'|'available'|'deleting'|'deleted'
                    },
                ],
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VgwTelemetry': [
                    {
                        'AcceptedRouteCount': 123,
                        'LastStatusChange': datetime(2015, 1, 1),
                        'OutsideIpAddress': 'string',
                        'Status': 'UP'|'DOWN',
                        'StatusMessage': 'string',
                        'CertificateArn': 'string'
                    },
                ]
            },
        ]
    }
    
    
    """
    pass

def describe_vpn_gateways(Filters=None, VpnGatewayIds=None, DryRun=None):
    """
    Describes one or more of your virtual private gateways.
    For more information, see AWS Site-to-Site VPN in the AWS Site-to-Site VPN User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.describe_vpn_gateways(
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        VpnGatewayIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type Filters: list
    :param Filters: One or more filters.\n\namazon-side-asn - The Autonomous System Number (ASN) for the Amazon side of the gateway.\nattachment.state - The current state of the attachment between the gateway and the VPC (attaching | attached | detaching | detached ).\nattachment.vpc-id - The ID of an attached VPC.\navailability-zone - The Availability Zone for the virtual private gateway (if applicable).\nstate - The state of the virtual private gateway (pending | available | deleting | deleted ).\ntag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , specify tag:Owner for the filter name and TeamA for the filter value.\ntag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.\ntype - The type of virtual private gateway. Currently the only supported type is ipsec.1 .\nvpn-gateway-id - The ID of the virtual private gateway.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type VpnGatewayIds: list
    :param VpnGatewayIds: One or more virtual private gateway IDs.\nDefault: Describes all your virtual private gateways.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'VpnGateways': [
        {
            'AvailabilityZone': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'Type': 'ipsec.1',
            'VpcAttachments': [
                {
                    'State': 'attaching'|'attached'|'detaching'|'detached',
                    'VpcId': 'string'
                },
            ],
            'VpnGatewayId': 'string',
            'AmazonSideAsn': 123,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --
Contains the output of DescribeVpnGateways.

VpnGateways (list) --
Information about one or more virtual private gateways.

(dict) --
Describes a virtual private gateway.

AvailabilityZone (string) --
The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned.

State (string) --
The current state of the virtual private gateway.

Type (string) --
The type of VPN connection the virtual private gateway supports.

VpcAttachments (list) --
Any VPCs attached to the virtual private gateway.

(dict) --
Describes an attachment between a virtual private gateway and a VPC.

State (string) --
The current state of the attachment.

VpcId (string) --
The ID of the VPC.





VpnGatewayId (string) --
The ID of the virtual private gateway.

AmazonSideAsn (integer) --
The private Autonomous System Number (ASN) for the Amazon side of a BGP session.

Tags (list) --
Any tags assigned to the virtual private gateway.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
















    :return: {
        'VpnGateways': [
            {
                'AvailabilityZone': 'string',
                'State': 'pending'|'available'|'deleting'|'deleted',
                'Type': 'ipsec.1',
                'VpcAttachments': [
                    {
                        'State': 'attaching'|'attached'|'detaching'|'detached',
                        'VpcId': 'string'
                    },
                ],
                'VpnGatewayId': 'string',
                'AmazonSideAsn': 123,
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    }
    
    
    """
    pass

def detach_classic_link_vpc(DryRun=None, InstanceId=None, VpcId=None):
    """
    Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has been unlinked, the VPC security groups are no longer associated with it. An instance is automatically unlinked from a VPC when it\'s stopped.
    See also: AWS API Documentation
    
    
    :example: response = client.detach_classic_link_vpc(
        DryRun=True|False,
        InstanceId='string',
        VpcId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance to unlink from the VPC.\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC to which the instance is linked.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def detach_internet_gateway(DryRun=None, InternetGatewayId=None, VpcId=None):
    """
    Detaches an internet gateway from a VPC, disabling connectivity between the internet and the VPC. The VPC must not contain any running instances with Elastic IP addresses or public IPv4 addresses.
    See also: AWS API Documentation
    
    Examples
    This example detaches the specified Internet gateway from the specified VPC.
    Expected Output:
    
    :example: response = client.detach_internet_gateway(
        DryRun=True|False,
        InternetGatewayId='string',
        VpcId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InternetGatewayId: string
    :param InternetGatewayId: [REQUIRED]\nThe ID of the internet gateway.\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :return: response = client.detach_internet_gateway(
        InternetGatewayId='igw-c0a643a9',
        VpcId='vpc-a01106c2',
    )
    
    print(response)
    
    
    """
    pass

def detach_network_interface(AttachmentId=None, DryRun=None, Force=None):
    """
    Detaches a network interface from an instance.
    See also: AWS API Documentation
    
    Examples
    This example detaches the specified network interface from its attached instance.
    Expected Output:
    
    :example: response = client.detach_network_interface(
        AttachmentId='string',
        DryRun=True|False,
        Force=True|False
    )
    
    
    :type AttachmentId: string
    :param AttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Force: boolean
    :param Force: Specifies whether to force a detachment.\n\nNote\n\nUse the Force parameter only as a last resort to detach a network interface from a failed instance.\nIf you use the Force parameter to detach a network interface, you might not be able to attach a different network interface to the same index on the instance without first stopping and starting the instance.\nIf you force the detachment of a network interface, the instance metadata might not get updated. This means that the attributes associated with the detached network interface might still be visible. The instance metadata will get updated when you stop and start the instance.\n\n\n

    :return: response = client.detach_network_interface(
        AttachmentId='eni-attach-66c4350a',
    )
    
    print(response)
    
    
    """
    pass

def detach_volume(Device=None, Force=None, InstanceId=None, VolumeId=None, DryRun=None):
    """
    Detaches an EBS volume from an instance. Make sure to unmount any file systems on the device within your operating system before detaching the volume. Failure to do so can result in the volume becoming stuck in the busy state while detaching. If this happens, detachment can be delayed indefinitely until you unmount the volume, force detachment, reboot the instance, or all three. If an EBS volume is the root device of an instance, it can\'t be detached while the instance is running. To detach the root volume, stop the instance first.
    When a volume with an AWS Marketplace product code is detached from an instance, the product code is no longer associated with the instance.
    For more information, see Detaching an Amazon EBS Volume in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example detaches the volume (vol-049df61146c4d7901) from the instance it is attached to.
    Expected Output:
    
    :example: response = client.detach_volume(
        Device='string',
        Force=True|False,
        InstanceId='string',
        VolumeId='string',
        DryRun=True|False
    )
    
    
    :type Device: string
    :param Device: The device name.

    :type Force: boolean
    :param Force: Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won\'t have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.

    :type InstanceId: string
    :param InstanceId: The ID of the instance. If you are detaching a Multi-Attach enabled volume, you must specify an instance ID.

    :type VolumeId: string
    :param VolumeId: [REQUIRED]\nThe ID of the volume.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'AttachTime': datetime(2015, 1, 1),
    'Device': 'string',
    'InstanceId': 'string',
    'State': 'attaching'|'attached'|'detaching'|'detached'|'busy',
    'VolumeId': 'string',
    'DeleteOnTermination': True|False
}


Response Structure

(dict) --
Describes volume attachment details.

AttachTime (datetime) --
The time stamp when the attachment initiated.

Device (string) --
The device name.

InstanceId (string) --
The ID of the instance.

State (string) --
The attachment state of the volume.

VolumeId (string) --
The ID of the volume.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination.







Examples
This example detaches the volume (vol-049df61146c4d7901) from the instance it is attached to.
response = client.detach_volume(
    VolumeId='vol-1234567890abcdef0',
)

print(response)


Expected Output:
{
    'AttachTime': datetime(2014, 2, 27, 19, 23, 6, 3, 58, 0),
    'Device': '/dev/sdb',
    'InstanceId': 'i-1234567890abcdef0',
    'State': 'detaching',
    'VolumeId': 'vol-049df61146c4d7901',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AttachTime': datetime(2015, 1, 1),
        'Device': 'string',
        'InstanceId': 'string',
        'State': 'attaching'|'attached'|'detaching'|'detached'|'busy',
        'VolumeId': 'string',
        'DeleteOnTermination': True|False
    }
    
    
    """
    pass

def detach_vpn_gateway(VpcId=None, VpnGatewayId=None, DryRun=None):
    """
    Detaches a virtual private gateway from a VPC. You do this if you\'re planning to turn off the VPC and not use it anymore. You can confirm a virtual private gateway has been completely detached from a VPC by describing the virtual private gateway (any attachments to the virtual private gateway are also described).
    You must wait for the attachment\'s state to switch to detached before you can delete the VPC or attach a different VPC to the virtual private gateway.
    See also: AWS API Documentation
    
    
    :example: response = client.detach_vpn_gateway(
        VpcId='string',
        VpnGatewayId='string',
        DryRun=True|False
    )
    
    
    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type VpnGatewayId: string
    :param VpnGatewayId: [REQUIRED]\nThe ID of the virtual private gateway.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    """
    pass

def disable_ebs_encryption_by_default(DryRun=None):
    """
    Disables EBS encryption by default for your account in the current Region.
    After you disable encryption by default, you can still create encrypted volumes by enabling encryption when you create each volume.
    Disabling encryption by default does not change the encryption status of your existing volumes.
    For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.disable_ebs_encryption_by_default(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'EbsEncryptionByDefault': True|False
}


Response Structure

(dict) --
EbsEncryptionByDefault (boolean) --The updated status of encryption by default.







    :return: {
        'EbsEncryptionByDefault': True|False
    }
    
    
    """
    pass

def disable_fast_snapshot_restores(AvailabilityZones=None, SourceSnapshotIds=None, DryRun=None):
    """
    Disables fast snapshot restores for the specified snapshots in the specified Availability Zones.
    See also: AWS API Documentation
    
    
    :example: response = client.disable_fast_snapshot_restores(
        AvailabilityZones=[
            'string',
        ],
        SourceSnapshotIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type AvailabilityZones: list
    :param AvailabilityZones: [REQUIRED]\nOne or more Availability Zones. For example, us-east-2a .\n\n(string) --\n\n

    :type SourceSnapshotIds: list
    :param SourceSnapshotIds: [REQUIRED]\nThe IDs of one or more snapshots. For example, snap-1234567890abcdef0 .\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Successful': [
        {
            'SnapshotId': 'string',
            'AvailabilityZone': 'string',
            'State': 'enabling'|'optimizing'|'enabled'|'disabling'|'disabled',
            'StateTransitionReason': 'string',
            'OwnerId': 'string',
            'OwnerAlias': 'string',
            'EnablingTime': datetime(2015, 1, 1),
            'OptimizingTime': datetime(2015, 1, 1),
            'EnabledTime': datetime(2015, 1, 1),
            'DisablingTime': datetime(2015, 1, 1),
            'DisabledTime': datetime(2015, 1, 1)
        },
    ],
    'Unsuccessful': [
        {
            'SnapshotId': 'string',
            'FastSnapshotRestoreStateErrors': [
                {
                    'AvailabilityZone': 'string',
                    'Error': {
                        'Code': 'string',
                        'Message': 'string'
                    }
                },
            ]
        },
    ]
}


Response Structure

(dict) --

Successful (list) --
Information about the snapshots for which fast snapshot restores were successfully disabled.

(dict) --
Describes fast snapshot restores that were successfully disabled.

SnapshotId (string) --
The ID of the snapshot.

AvailabilityZone (string) --
The Availability Zone.

State (string) --
The state of fast snapshot restores for the snapshot.

StateTransitionReason (string) --
The reason for the state transition. The possible values are as follows:

Client.UserInitiated - The state successfully transitioned to enabling or disabling .
Client.UserInitiated - Lifecycle state transition - The state successfully transitioned to optimizing , enabled , or disabled .


OwnerId (string) --
The ID of the AWS account that owns the snapshot.

OwnerAlias (string) --
The alias of the snapshot owner.

EnablingTime (datetime) --
The time at which fast snapshot restores entered the enabling state.

OptimizingTime (datetime) --
The time at which fast snapshot restores entered the optimizing state.

EnabledTime (datetime) --
The time at which fast snapshot restores entered the enabled state.

DisablingTime (datetime) --
The time at which fast snapshot restores entered the disabling state.

DisabledTime (datetime) --
The time at which fast snapshot restores entered the disabled state.





Unsuccessful (list) --
Information about the snapshots for which fast snapshot restores could not be disabled.

(dict) --
Contains information about the errors that occurred when disabling fast snapshot restores.

SnapshotId (string) --
The ID of the snapshot.

FastSnapshotRestoreStateErrors (list) --
The errors.

(dict) --
Contains information about an error that occurred when disabling fast snapshot restores.

AvailabilityZone (string) --
The Availability Zone.

Error (dict) --
The error.

Code (string) --
The error code.

Message (string) --
The error message.


















    :return: {
        'Successful': [
            {
                'SnapshotId': 'string',
                'AvailabilityZone': 'string',
                'State': 'enabling'|'optimizing'|'enabled'|'disabling'|'disabled',
                'StateTransitionReason': 'string',
                'OwnerId': 'string',
                'OwnerAlias': 'string',
                'EnablingTime': datetime(2015, 1, 1),
                'OptimizingTime': datetime(2015, 1, 1),
                'EnabledTime': datetime(2015, 1, 1),
                'DisablingTime': datetime(2015, 1, 1),
                'DisabledTime': datetime(2015, 1, 1)
            },
        ],
        'Unsuccessful': [
            {
                'SnapshotId': 'string',
                'FastSnapshotRestoreStateErrors': [
                    {
                        'AvailabilityZone': 'string',
                        'Error': {
                            'Code': 'string',
                            'Message': 'string'
                        }
                    },
                ]
            },
        ]
    }
    
    
    :returns: 
    Client.UserInitiated - The state successfully transitioned to enabling or disabling .
    Client.UserInitiated - Lifecycle state transition - The state successfully transitioned to optimizing , enabled , or disabled .
    
    """
    pass

def disable_transit_gateway_route_table_propagation(TransitGatewayRouteTableId=None, TransitGatewayAttachmentId=None, DryRun=None):
    """
    Disables the specified resource attachment from propagating routes to the specified propagation route table.
    See also: AWS API Documentation
    
    
    :example: response = client.disable_transit_gateway_route_table_propagation(
        TransitGatewayRouteTableId='string',
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the propagation route table.\n

    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Propagation': {
        'TransitGatewayAttachmentId': 'string',
        'ResourceId': 'string',
        'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
        'TransitGatewayRouteTableId': 'string',
        'State': 'enabling'|'enabled'|'disabling'|'disabled'
    }
}


Response Structure

(dict) --

Propagation (dict) --
Information about route propagation.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The resource type.

TransitGatewayRouteTableId (string) --
The ID of the transit gateway route table.

State (string) --
The state.










    :return: {
        'Propagation': {
            'TransitGatewayAttachmentId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'TransitGatewayRouteTableId': 'string',
            'State': 'enabling'|'enabled'|'disabling'|'disabled'
        }
    }
    
    
    """
    pass

def disable_vgw_route_propagation(GatewayId=None, RouteTableId=None, DryRun=None):
    """
    Disables a virtual private gateway (VGW) from propagating routes to a specified route table of a VPC.
    See also: AWS API Documentation
    
    Examples
    This example disables the specified virtual private gateway from propagating static routes to the specified route table.
    Expected Output:
    
    :example: response = client.disable_vgw_route_propagation(
        GatewayId='string',
        RouteTableId='string',
        DryRun=True|False
    )
    
    
    :type GatewayId: string
    :param GatewayId: [REQUIRED]\nThe ID of the virtual private gateway.\n

    :type RouteTableId: string
    :param RouteTableId: [REQUIRED]\nThe ID of the route table.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.disable_vgw_route_propagation(
        GatewayId='vgw-9a4cacf3',
        RouteTableId='rtb-22574640',
    )
    
    print(response)
    
    
    """
    pass

def disable_vpc_classic_link(DryRun=None, VpcId=None):
    """
    Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has EC2-Classic instances linked to it.
    See also: AWS API Documentation
    
    
    :example: response = client.disable_vpc_classic_link(
        DryRun=True|False,
        VpcId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def disable_vpc_classic_link_dns_support(VpcId=None):
    """
    Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to public IP addresses when addressed between a linked EC2-Classic instance and instances in the VPC to which it\'s linked. For more information, see ClassicLink in the Amazon Elastic Compute Cloud User Guide .
    You must specify a VPC ID in the request.
    See also: AWS API Documentation
    
    
    :example: response = client.disable_vpc_classic_link_dns_support(
        VpcId='string'
    )
    
    
    :type VpcId: string
    :param VpcId: The ID of the VPC.

    :rtype: dict
ReturnsResponse Syntax{
    'Return': True|False
}


Response Structure

(dict) --
Return (boolean) --Returns true if the request succeeds; otherwise, it returns an error.







    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def disassociate_address(AssociationId=None, PublicIp=None, DryRun=None):
    """
    Disassociates an Elastic IP address from the instance or network interface it\'s associated with.
    An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see Elastic IP Addresses in the Amazon Elastic Compute Cloud User Guide .
    This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn\'t return an error.
    See also: AWS API Documentation
    
    Examples
    This example disassociates an Elastic IP address from an instance in a VPC.
    Expected Output:
    This example disassociates an Elastic IP address from an instance in EC2-Classic.
    Expected Output:
    
    :example: response = client.disassociate_address(
        AssociationId='string',
        PublicIp='string',
        DryRun=True|False
    )
    
    
    :type AssociationId: string
    :param AssociationId: [EC2-VPC] The association ID. Required for EC2-VPC.

    :type PublicIp: string
    :param PublicIp: [EC2-Classic] The Elastic IP address. Required for EC2-Classic.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.disassociate_address(
        AssociationId='eipassoc-2bebb745',
    )
    
    print(response)
    
    
    """
    pass

def disassociate_client_vpn_target_network(ClientVpnEndpointId=None, AssociationId=None, DryRun=None):
    """
    Disassociates a target network from the specified Client VPN endpoint. When you disassociate the last target network from a Client VPN, the following happens:
    See also: AWS API Documentation
    
    
    :example: response = client.disassociate_client_vpn_target_network(
        ClientVpnEndpointId='string',
        AssociationId='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint from which to disassociate the target network.\n

    :type AssociationId: string
    :param AssociationId: [REQUIRED]\nThe ID of the target network association.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'AssociationId': 'string',
    'Status': {
        'Code': 'associating'|'associated'|'association-failed'|'disassociating'|'disassociated',
        'Message': 'string'
    }
}


Response Structure

(dict) --

AssociationId (string) --
The ID of the target network association.

Status (dict) --
The current state of the target network association.

Code (string) --
The state of the target network association.

Message (string) --
A message about the status of the target network association, if applicable.










    :return: {
        'AssociationId': 'string',
        'Status': {
            'Code': 'associating'|'associated'|'association-failed'|'disassociating'|'disassociated',
            'Message': 'string'
        }
    }
    
    
    :returns: 
    ClientVpnEndpointId (string) -- [REQUIRED]
    The ID of the Client VPN endpoint from which to disassociate the target network.
    
    AssociationId (string) -- [REQUIRED]
    The ID of the target network association.
    
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    
    """
    pass

def disassociate_iam_instance_profile(AssociationId=None):
    """
    Disassociates an IAM instance profile from a running or stopped instance.
    Use  DescribeIamInstanceProfileAssociations to get the association ID.
    See also: AWS API Documentation
    
    Examples
    This example disassociates the specified IAM instance profile from an instance.
    Expected Output:
    
    :example: response = client.disassociate_iam_instance_profile(
        AssociationId='string'
    )
    
    
    :type AssociationId: string
    :param AssociationId: [REQUIRED]\nThe ID of the IAM instance profile association.\n

    :rtype: dict
ReturnsResponse Syntax{
    'IamInstanceProfileAssociation': {
        'AssociationId': 'string',
        'InstanceId': 'string',
        'IamInstanceProfile': {
            'Arn': 'string',
            'Id': 'string'
        },
        'State': 'associating'|'associated'|'disassociating'|'disassociated',
        'Timestamp': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --
IamInstanceProfileAssociation (dict) --Information about the IAM instance profile association.

AssociationId (string) --The ID of the association.

InstanceId (string) --The ID of the instance.

IamInstanceProfile (dict) --The IAM instance profile.

Arn (string) --The Amazon Resource Name (ARN) of the instance profile.

Id (string) --The ID of the instance profile.



State (string) --The state of the association.

Timestamp (datetime) --The time the IAM instance profile was associated with the instance.








Examples
This example disassociates the specified IAM instance profile from an instance.
response = client.disassociate_iam_instance_profile(
    AssociationId='iip-assoc-05020b59952902f5f',
)

print(response)


Expected Output:
{
    'IamInstanceProfileAssociation': {
        'AssociationId': 'iip-assoc-05020b59952902f5f',
        'IamInstanceProfile': {
            'Arn': 'arn:aws:iam::123456789012:instance-profile/admin-role',
            'Id': 'AIPAI5IVIHMFFYY2DKV5Y',
        },
        'InstanceId': 'i-123456789abcde123',
        'State': 'disassociating',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'IamInstanceProfileAssociation': {
            'AssociationId': 'string',
            'InstanceId': 'string',
            'IamInstanceProfile': {
                'Arn': 'string',
                'Id': 'string'
            },
            'State': 'associating'|'associated'|'disassociating'|'disassociated',
            'Timestamp': datetime(2015, 1, 1)
        }
    }
    
    
    """
    pass

def disassociate_route_table(AssociationId=None, DryRun=None):
    """
    Disassociates a subnet or gateway from a route table.
    After you perform this action, the subnet no longer uses the routes in the route table. Instead, it uses the routes in the VPC\'s main route table. For more information about route tables, see Route Tables in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example disassociates the specified route table from its associated subnet.
    Expected Output:
    
    :example: response = client.disassociate_route_table(
        AssociationId='string',
        DryRun=True|False
    )
    
    
    :type AssociationId: string
    :param AssociationId: [REQUIRED]\nThe association ID representing the current association between the route table and subnet or gateway.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.disassociate_route_table(
        AssociationId='rtbassoc-781d0d1a',
    )
    
    print(response)
    
    
    """
    pass

def disassociate_subnet_cidr_block(AssociationId=None):
    """
    Disassociates a CIDR block from a subnet. Currently, you can disassociate an IPv6 CIDR block only. You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it.
    See also: AWS API Documentation
    
    
    :example: response = client.disassociate_subnet_cidr_block(
        AssociationId='string'
    )
    
    
    :type AssociationId: string
    :param AssociationId: [REQUIRED]\nThe association ID for the CIDR block.\n

    :rtype: dict
ReturnsResponse Syntax{
    'Ipv6CidrBlockAssociation': {
        'AssociationId': 'string',
        'Ipv6CidrBlock': 'string',
        'Ipv6CidrBlockState': {
            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
            'StatusMessage': 'string'
        }
    },
    'SubnetId': 'string'
}


Response Structure

(dict) --
Ipv6CidrBlockAssociation (dict) --Information about the IPv6 CIDR block association.

AssociationId (string) --The association ID for the CIDR block.

Ipv6CidrBlock (string) --The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --Information about the state of the CIDR block.

State (string) --The state of a CIDR block.

StatusMessage (string) --A message about the status of the CIDR block, if applicable.





SubnetId (string) --The ID of the subnet.







    :return: {
        'Ipv6CidrBlockAssociation': {
            'AssociationId': 'string',
            'Ipv6CidrBlock': 'string',
            'Ipv6CidrBlockState': {
                'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                'StatusMessage': 'string'
            }
        },
        'SubnetId': 'string'
    }
    
    
    """
    pass

def disassociate_transit_gateway_multicast_domain(TransitGatewayMulticastDomainId=None, TransitGatewayAttachmentId=None, SubnetIds=None, DryRun=None):
    """
    Disassociates the specified subnets from the transit gateway multicast domain.
    See also: AWS API Documentation
    
    
    :example: response = client.disassociate_transit_gateway_multicast_domain(
        TransitGatewayMulticastDomainId='string',
        TransitGatewayAttachmentId='string',
        SubnetIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainId: string
    :param TransitGatewayMulticastDomainId: The ID of the transit gateway multicast domain.

    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: The ID of the attachment.

    :type SubnetIds: list
    :param SubnetIds: The IDs of the subnets;\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Associations': {
        'TransitGatewayMulticastDomainId': 'string',
        'TransitGatewayAttachmentId': 'string',
        'ResourceId': 'string',
        'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
        'Subnets': [
            {
                'SubnetId': 'string',
                'State': 'associating'|'associated'|'disassociating'|'disassociated'
            },
        ]
    }
}


Response Structure

(dict) --

Associations (dict) --
Information about the association.

TransitGatewayMulticastDomainId (string) --
The ID of the transit gateway multicast domain.

TransitGatewayAttachmentId (string) --
The ID of the transit gateway attachment.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The type of resource, for example a VPC attachment.

Subnets (list) --
The subnets associated with the multicast domain.

(dict) --
Describes the subnet association with the transit gateway multicast domain.

SubnetId (string) --
The ID of the subnet.

State (string) --
The state of the subnet association.














    :return: {
        'Associations': {
            'TransitGatewayMulticastDomainId': 'string',
            'TransitGatewayAttachmentId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'Subnets': [
                {
                    'SubnetId': 'string',
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'
                },
            ]
        }
    }
    
    
    """
    pass

def disassociate_transit_gateway_route_table(TransitGatewayRouteTableId=None, TransitGatewayAttachmentId=None, DryRun=None):
    """
    Disassociates a resource attachment from a transit gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.disassociate_transit_gateway_route_table(
        TransitGatewayRouteTableId='string',
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the transit gateway route table.\n

    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Association': {
        'TransitGatewayRouteTableId': 'string',
        'TransitGatewayAttachmentId': 'string',
        'ResourceId': 'string',
        'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
        'State': 'associating'|'associated'|'disassociating'|'disassociated'
    }
}


Response Structure

(dict) --

Association (dict) --
Information about the association.

TransitGatewayRouteTableId (string) --
The ID of the transit gateway route table.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The resource type.

State (string) --
The state of the association.










    :return: {
        'Association': {
            'TransitGatewayRouteTableId': 'string',
            'TransitGatewayAttachmentId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'State': 'associating'|'associated'|'disassociating'|'disassociated'
        }
    }
    
    
    """
    pass

def disassociate_vpc_cidr_block(AssociationId=None):
    """
    Disassociates a CIDR block from a VPC. To disassociate the CIDR block, you must specify its association ID. You can get the association ID by using  DescribeVpcs . You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it.
    You cannot disassociate the CIDR block with which you originally created the VPC (the primary CIDR block).
    See also: AWS API Documentation
    
    
    :example: response = client.disassociate_vpc_cidr_block(
        AssociationId='string'
    )
    
    
    :type AssociationId: string
    :param AssociationId: [REQUIRED]\nThe association ID for the CIDR block.\n

    :rtype: dict
ReturnsResponse Syntax{
    'Ipv6CidrBlockAssociation': {
        'AssociationId': 'string',
        'Ipv6CidrBlock': 'string',
        'Ipv6CidrBlockState': {
            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
            'StatusMessage': 'string'
        },
        'NetworkBorderGroup': 'string',
        'Ipv6Pool': 'string'
    },
    'CidrBlockAssociation': {
        'AssociationId': 'string',
        'CidrBlock': 'string',
        'CidrBlockState': {
            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
            'StatusMessage': 'string'
        }
    },
    'VpcId': 'string'
}


Response Structure

(dict) --
Ipv6CidrBlockAssociation (dict) --Information about the IPv6 CIDR block association.

AssociationId (string) --The association ID for the IPv6 CIDR block.

Ipv6CidrBlock (string) --The IPv6 CIDR block.

Ipv6CidrBlockState (dict) --Information about the state of the CIDR block.

State (string) --The state of the CIDR block.

StatusMessage (string) --A message about the status of the CIDR block, if applicable.



NetworkBorderGroup (string) --The name of the location from which we advertise the IPV6 CIDR block.

Ipv6Pool (string) --The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.



CidrBlockAssociation (dict) --Information about the IPv4 CIDR block association.

AssociationId (string) --The association ID for the IPv4 CIDR block.

CidrBlock (string) --The IPv4 CIDR block.

CidrBlockState (dict) --Information about the state of the CIDR block.

State (string) --The state of the CIDR block.

StatusMessage (string) --A message about the status of the CIDR block, if applicable.





VpcId (string) --The ID of the VPC.







    :return: {
        'Ipv6CidrBlockAssociation': {
            'AssociationId': 'string',
            'Ipv6CidrBlock': 'string',
            'Ipv6CidrBlockState': {
                'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                'StatusMessage': 'string'
            },
            'NetworkBorderGroup': 'string',
            'Ipv6Pool': 'string'
        },
        'CidrBlockAssociation': {
            'AssociationId': 'string',
            'CidrBlock': 'string',
            'CidrBlockState': {
                'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failing'|'failed',
                'StatusMessage': 'string'
            }
        },
        'VpcId': 'string'
    }
    
    
    """
    pass

def enable_ebs_encryption_by_default(DryRun=None):
    """
    Enables EBS encryption by default for your account in the current Region.
    After you enable encryption by default, the EBS volumes that you create are are always encrypted, either using the default CMK or the CMK that you specified when you created each volume. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    You can specify the default CMK for encryption by default using  ModifyEbsDefaultKmsKeyId or  ResetEbsDefaultKmsKeyId .
    Enabling encryption by default has no effect on the encryption status of your existing volumes.
    After you enable encryption by default, you can no longer launch instances using instance types that do not support encryption. For more information, see Supported Instance Types .
    See also: AWS API Documentation
    
    
    :example: response = client.enable_ebs_encryption_by_default(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'EbsEncryptionByDefault': True|False
}


Response Structure

(dict) --
EbsEncryptionByDefault (boolean) --The updated status of encryption by default.







    :return: {
        'EbsEncryptionByDefault': True|False
    }
    
    
    """
    pass

def enable_fast_snapshot_restores(AvailabilityZones=None, SourceSnapshotIds=None, DryRun=None):
    """
    Enables fast snapshot restores for the specified snapshots in the specified Availability Zones.
    You get the full benefit of fast snapshot restores after they enter the enabled state. To get the current state of fast snapshot restores, use  DescribeFastSnapshotRestores . To disable fast snapshot restores, use  DisableFastSnapshotRestores .
    For more information, see Amazon EBS Fast Snapshot Restore in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.enable_fast_snapshot_restores(
        AvailabilityZones=[
            'string',
        ],
        SourceSnapshotIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type AvailabilityZones: list
    :param AvailabilityZones: [REQUIRED]\nOne or more Availability Zones. For example, us-east-2a .\n\n(string) --\n\n

    :type SourceSnapshotIds: list
    :param SourceSnapshotIds: [REQUIRED]\nThe IDs of one or more snapshots. For example, snap-1234567890abcdef0 . You can specify a snapshot that was shared with you from another AWS account.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Successful': [
        {
            'SnapshotId': 'string',
            'AvailabilityZone': 'string',
            'State': 'enabling'|'optimizing'|'enabled'|'disabling'|'disabled',
            'StateTransitionReason': 'string',
            'OwnerId': 'string',
            'OwnerAlias': 'string',
            'EnablingTime': datetime(2015, 1, 1),
            'OptimizingTime': datetime(2015, 1, 1),
            'EnabledTime': datetime(2015, 1, 1),
            'DisablingTime': datetime(2015, 1, 1),
            'DisabledTime': datetime(2015, 1, 1)
        },
    ],
    'Unsuccessful': [
        {
            'SnapshotId': 'string',
            'FastSnapshotRestoreStateErrors': [
                {
                    'AvailabilityZone': 'string',
                    'Error': {
                        'Code': 'string',
                        'Message': 'string'
                    }
                },
            ]
        },
    ]
}


Response Structure

(dict) --

Successful (list) --
Information about the snapshots for which fast snapshot restores were successfully enabled.

(dict) --
Describes fast snapshot restores that were successfully enabled.

SnapshotId (string) --
The ID of the snapshot.

AvailabilityZone (string) --
The Availability Zone.

State (string) --
The state of fast snapshot restores.

StateTransitionReason (string) --
The reason for the state transition. The possible values are as follows:

Client.UserInitiated - The state successfully transitioned to enabling or disabling .
Client.UserInitiated - Lifecycle state transition - The state successfully transitioned to optimizing , enabled , or disabled .


OwnerId (string) --
The ID of the AWS account that owns the snapshot.

OwnerAlias (string) --
The alias of the snapshot owner.

EnablingTime (datetime) --
The time at which fast snapshot restores entered the enabling state.

OptimizingTime (datetime) --
The time at which fast snapshot restores entered the optimizing state.

EnabledTime (datetime) --
The time at which fast snapshot restores entered the enabled state.

DisablingTime (datetime) --
The time at which fast snapshot restores entered the disabling state.

DisabledTime (datetime) --
The time at which fast snapshot restores entered the disabled state.





Unsuccessful (list) --
Information about the snapshots for which fast snapshot restores could not be enabled.

(dict) --
Contains information about the errors that occurred when enabling fast snapshot restores.

SnapshotId (string) --
The ID of the snapshot.

FastSnapshotRestoreStateErrors (list) --
The errors.

(dict) --
Contains information about an error that occurred when enabling fast snapshot restores.

AvailabilityZone (string) --
The Availability Zone.

Error (dict) --
The error.

Code (string) --
The error code.

Message (string) --
The error message.


















    :return: {
        'Successful': [
            {
                'SnapshotId': 'string',
                'AvailabilityZone': 'string',
                'State': 'enabling'|'optimizing'|'enabled'|'disabling'|'disabled',
                'StateTransitionReason': 'string',
                'OwnerId': 'string',
                'OwnerAlias': 'string',
                'EnablingTime': datetime(2015, 1, 1),
                'OptimizingTime': datetime(2015, 1, 1),
                'EnabledTime': datetime(2015, 1, 1),
                'DisablingTime': datetime(2015, 1, 1),
                'DisabledTime': datetime(2015, 1, 1)
            },
        ],
        'Unsuccessful': [
            {
                'SnapshotId': 'string',
                'FastSnapshotRestoreStateErrors': [
                    {
                        'AvailabilityZone': 'string',
                        'Error': {
                            'Code': 'string',
                            'Message': 'string'
                        }
                    },
                ]
            },
        ]
    }
    
    
    :returns: 
    Client.UserInitiated - The state successfully transitioned to enabling or disabling .
    Client.UserInitiated - Lifecycle state transition - The state successfully transitioned to optimizing , enabled , or disabled .
    
    """
    pass

def enable_transit_gateway_route_table_propagation(TransitGatewayRouteTableId=None, TransitGatewayAttachmentId=None, DryRun=None):
    """
    Enables the specified attachment to propagate routes to the specified propagation route table.
    See also: AWS API Documentation
    
    
    :example: response = client.enable_transit_gateway_route_table_propagation(
        TransitGatewayRouteTableId='string',
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the propagation route table.\n

    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Propagation': {
        'TransitGatewayAttachmentId': 'string',
        'ResourceId': 'string',
        'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
        'TransitGatewayRouteTableId': 'string',
        'State': 'enabling'|'enabled'|'disabling'|'disabled'
    }
}


Response Structure

(dict) --

Propagation (dict) --
Information about route propagation.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The resource type.

TransitGatewayRouteTableId (string) --
The ID of the transit gateway route table.

State (string) --
The state.










    :return: {
        'Propagation': {
            'TransitGatewayAttachmentId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'TransitGatewayRouteTableId': 'string',
            'State': 'enabling'|'enabled'|'disabling'|'disabled'
        }
    }
    
    
    """
    pass

def enable_vgw_route_propagation(GatewayId=None, RouteTableId=None, DryRun=None):
    """
    Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC.
    See also: AWS API Documentation
    
    Examples
    This example enables the specified virtual private gateway to propagate static routes to the specified route table.
    Expected Output:
    
    :example: response = client.enable_vgw_route_propagation(
        GatewayId='string',
        RouteTableId='string',
        DryRun=True|False
    )
    
    
    :type GatewayId: string
    :param GatewayId: [REQUIRED]\nThe ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with.\n

    :type RouteTableId: string
    :param RouteTableId: [REQUIRED]\nThe ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.enable_vgw_route_propagation(
        GatewayId='vgw-9a4cacf3',
        RouteTableId='rtb-22574640',
    )
    
    print(response)
    
    
    """
    pass

def enable_volume_io(DryRun=None, VolumeId=None):
    """
    Enables I/O operations for a volume that had I/O operations disabled because the data on the volume was potentially inconsistent.
    See also: AWS API Documentation
    
    Examples
    This example enables I/O on volume vol-1234567890abcdef0.
    Expected Output:
    
    :example: response = client.enable_volume_io(
        DryRun=True|False,
        VolumeId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VolumeId: string
    :param VolumeId: [REQUIRED]\nThe ID of the volume.\n

    :return: response = client.enable_volume_io(
        VolumeId='vol-1234567890abcdef0',
    )
    
    print(response)
    
    
    """
    pass

def enable_vpc_classic_link(DryRun=None, VpcId=None):
    """
    Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled VPC to allow communication over private IP addresses. You cannot enable your VPC for ClassicLink if any of your VPC route tables have existing routes for address ranges within the 10.0.0.0/8 IP address range, excluding local routes for VPCs in the 10.0.0.0/16 and 10.1.0.0/16 IP address ranges. For more information, see ClassicLink in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.enable_vpc_classic_link(
        DryRun=True|False,
        VpcId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def enable_vpc_classic_link_dns_support(VpcId=None):
    """
    Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it\'s linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information, see ClassicLink in the Amazon Elastic Compute Cloud User Guide .
    You must specify a VPC ID in the request.
    See also: AWS API Documentation
    
    
    :example: response = client.enable_vpc_classic_link_dns_support(
        VpcId='string'
    )
    
    
    :type VpcId: string
    :param VpcId: The ID of the VPC.

    :rtype: dict
ReturnsResponse Syntax{
    'Return': True|False
}


Response Structure

(dict) --
Return (boolean) --Returns true if the request succeeds; otherwise, it returns an error.







    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def export_client_vpn_client_certificate_revocation_list(ClientVpnEndpointId=None, DryRun=None):
    """
    Downloads the client certificate revocation list for the specified Client VPN endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.export_client_vpn_client_certificate_revocation_list(
        ClientVpnEndpointId='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'CertificateRevocationList': 'string',
    'Status': {
        'Code': 'pending'|'active',
        'Message': 'string'
    }
}


Response Structure

(dict) --

CertificateRevocationList (string) --
Information about the client certificate revocation list.

Status (dict) --
The current state of the client certificate revocation list.

Code (string) --
The state of the client certificate revocation list.

Message (string) --
A message about the status of the client certificate revocation list, if applicable.










    :return: {
        'CertificateRevocationList': 'string',
        'Status': {
            'Code': 'pending'|'active',
            'Message': 'string'
        }
    }
    
    
    """
    pass

def export_client_vpn_client_configuration(ClientVpnEndpointId=None, DryRun=None):
    """
    Downloads the contents of the Client VPN endpoint configuration file for the specified Client VPN endpoint. The Client VPN endpoint configuration file includes the Client VPN endpoint and certificate information clients need to establish a connection with the Client VPN endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.export_client_vpn_client_configuration(
        ClientVpnEndpointId='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ClientConfiguration': 'string'
}


Response Structure

(dict) --

ClientConfiguration (string) --
The contents of the Client VPN endpoint configuration file.








    :return: {
        'ClientConfiguration': 'string'
    }
    
    
    """
    pass

def export_image(ClientToken=None, Description=None, DiskImageFormat=None, DryRun=None, ImageId=None, S3ExportLocation=None, RoleName=None):
    """
    Exports an Amazon Machine Image (AMI) to a VM file. For more information, see Exporting a VM Directory from an Amazon Machine Image (AMI) in the VM Import/Export User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.export_image(
        ClientToken='string',
        Description='string',
        DiskImageFormat='VMDK'|'RAW'|'VHD',
        DryRun=True|False,
        ImageId='string',
        S3ExportLocation={
            'S3Bucket': 'string',
            'S3Prefix': 'string'
        },
        RoleName='string'
    )
    
    
    :type ClientToken: string
    :param ClientToken: Token to enable idempotency for export image requests.\nThis field is autopopulated if not provided.\n

    :type Description: string
    :param Description: A description of the image being exported. The maximum length is 255 bytes.

    :type DiskImageFormat: string
    :param DiskImageFormat: [REQUIRED]\nThe disk image format.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ImageId: string
    :param ImageId: [REQUIRED]\nThe ID of the image.\n

    :type S3ExportLocation: dict
    :param S3ExportLocation: [REQUIRED]\nInformation about the destination S3 bucket. The bucket must exist and grant WRITE and READ_ACP permissions to the AWS account vm-import-export@amazon.com.\n\nS3Bucket (string) -- [REQUIRED]The destination S3 bucket.\n\nS3Prefix (string) --The prefix (logical hierarchy) in the bucket.\n\n\n

    :type RoleName: string
    :param RoleName: The name of the role that grants VM Import/Export permission to export images to your S3 bucket. If this parameter is not specified, the default role is named \'vmimport\'.

    :rtype: dict

ReturnsResponse Syntax
{
    'Description': 'string',
    'DiskImageFormat': 'VMDK'|'RAW'|'VHD',
    'ExportImageTaskId': 'string',
    'ImageId': 'string',
    'RoleName': 'string',
    'Progress': 'string',
    'S3ExportLocation': {
        'S3Bucket': 'string',
        'S3Prefix': 'string'
    },
    'Status': 'string',
    'StatusMessage': 'string'
}


Response Structure

(dict) --

Description (string) --
A description of the image being exported.

DiskImageFormat (string) --
The disk image format for the exported image.

ExportImageTaskId (string) --
The ID of the export image task.

ImageId (string) --
The ID of the image.

RoleName (string) --
The name of the role that grants VM Import/Export permission to export images to your S3 bucket.

Progress (string) --
The percent complete of the export image task.

S3ExportLocation (dict) --
Information about the destination S3 bucket.

S3Bucket (string) --
The destination S3 bucket.

S3Prefix (string) --
The prefix (logical hierarchy) in the bucket.



Status (string) --
The status of the export image task. The possible values are active , completed , deleting , and deleted .

StatusMessage (string) --
The status message for the export image task.








    :return: {
        'Description': 'string',
        'DiskImageFormat': 'VMDK'|'RAW'|'VHD',
        'ExportImageTaskId': 'string',
        'ImageId': 'string',
        'RoleName': 'string',
        'Progress': 'string',
        'S3ExportLocation': {
            'S3Bucket': 'string',
            'S3Prefix': 'string'
        },
        'Status': 'string',
        'StatusMessage': 'string'
    }
    
    
    """
    pass

def export_transit_gateway_routes(TransitGatewayRouteTableId=None, Filters=None, S3Bucket=None, DryRun=None):
    """
    Exports routes from the specified transit gateway route table to the specified S3 bucket. By default, all routes are exported. Alternatively, you can filter by CIDR range.
    The routes are saved to the specified bucket in a JSON file. For more information, see Export Route Tables to Amazon S3 in Transit Gateways .
    See also: AWS API Documentation
    
    
    :example: response = client.export_transit_gateway_routes(
        TransitGatewayRouteTableId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        S3Bucket='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the route table.\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\nattachment.transit-gateway-attachment-id - The id of the transit gateway attachment.\nattachment.resource-id - The resource id of the transit gateway attachment.\nroute-search.exact-match - The exact match of the specified filter.\nroute-search.longest-prefix-match - The longest prefix that matches the route.\nroute-search.subnet-of-match - The routes with a subnet that match the specified CIDR filter.\nroute-search.supernet-of-match - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns 10.0.1.0/29.\nstate - The state of the attachment (available | deleted | deleting | failed | modifying | pendingAcceptance | pending | rollingBack | rejected | rejecting ).\ntransit-gateway-route-destination-cidr-block - The CIDR range.\ntype - The type of route (active | blackhole ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type S3Bucket: string
    :param S3Bucket: [REQUIRED]\nThe name of the S3 bucket.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'S3Location': 'string'
}


Response Structure

(dict) --

S3Location (string) --
The URL of the exported file in Amazon S3. For example, s3://bucket_name /VPCTransitGateway/TransitGatewayRouteTables/file_name .








    :return: {
        'S3Location': 'string'
    }
    
    
    """
    pass

def generate_presigned_url(ClientMethod=None, Params=None, ExpiresIn=None, HttpMethod=None):
    """
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for

    :type Params: dict
    :param Params: The parameters normally passed to\nClientMethod.

    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid\nfor. By default it expires in an hour (3600 seconds)

    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By\ndefault, the http method is whatever is used in the method\'s model.

    """
    pass

def get_associated_ipv6_pool_cidrs(PoolId=None, NextToken=None, MaxResults=None, DryRun=None):
    """
    Gets information about the IPv6 CIDR block associations for a specified IPv6 address pool.
    See also: AWS API Documentation
    
    
    :example: response = client.get_associated_ipv6_pool_cidrs(
        PoolId='string',
        NextToken='string',
        MaxResults=123,
        DryRun=True|False
    )
    
    
    :type PoolId: string
    :param PoolId: [REQUIRED]\nThe ID of the IPv6 address pool.\n

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Ipv6CidrAssociations': [
        {
            'Ipv6Cidr': 'string',
            'AssociatedResource': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Ipv6CidrAssociations (list) --
Information about the IPv6 CIDR block associations.

(dict) --
Describes an IPv6 CIDR block association.

Ipv6Cidr (string) --
The IPv6 CIDR block.

AssociatedResource (string) --
The resource that\'s associated with the IPv6 CIDR block.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'Ipv6CidrAssociations': [
            {
                'Ipv6Cidr': 'string',
                'AssociatedResource': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def get_capacity_reservation_usage(CapacityReservationId=None, NextToken=None, MaxResults=None, DryRun=None):
    """
    Gets usage information about a Capacity Reservation. If the Capacity Reservation is shared, it shows usage information for the Capacity Reservation owner and each AWS account that is currently using the shared capacity. If the Capacity Reservation is not shared, it shows only the Capacity Reservation owner\'s usage.
    See also: AWS API Documentation
    
    
    :example: response = client.get_capacity_reservation_usage(
        CapacityReservationId='string',
        NextToken='string',
        MaxResults=123,
        DryRun=True|False
    )
    
    
    :type CapacityReservationId: string
    :param CapacityReservationId: [REQUIRED]\nThe ID of the Capacity Reservation.\n

    :type NextToken: string
    :param NextToken: The token to retrieve the next page of results.

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value.\nValid range: Minimum value of 1. Maximum value of 1000.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'NextToken': 'string',
    'CapacityReservationId': 'string',
    'InstanceType': 'string',
    'TotalInstanceCount': 123,
    'AvailableInstanceCount': 123,
    'State': 'active'|'expired'|'cancelled'|'pending'|'failed',
    'InstanceUsages': [
        {
            'AccountId': 'string',
            'UsedInstanceCount': 123
        },
    ]
}


Response Structure

(dict) --

NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.

CapacityReservationId (string) --
The ID of the Capacity Reservation.

InstanceType (string) --
The type of instance for which the Capacity Reservation reserves capacity.

TotalInstanceCount (integer) --
The number of instances for which the Capacity Reservation reserves capacity.

AvailableInstanceCount (integer) --
The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.

State (string) --
The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:

active - The Capacity Reservation is active and the capacity is available for your use.
expired - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.
cancelled - The Capacity Reservation was manually cancelled. The reserved capacity is no longer available for your use.
pending - The Capacity Reservation request was successful but the capacity provisioning is still pending.
failed - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.


InstanceUsages (list) --
Information about the Capacity Reservation usage.

(dict) --
Information about the Capacity Reservation usage.

AccountId (string) --
The ID of the AWS account that is making use of the Capacity Reservation.

UsedInstanceCount (integer) --
The number of instances the AWS account currently has in the Capacity Reservation.












    :return: {
        'NextToken': 'string',
        'CapacityReservationId': 'string',
        'InstanceType': 'string',
        'TotalInstanceCount': 123,
        'AvailableInstanceCount': 123,
        'State': 'active'|'expired'|'cancelled'|'pending'|'failed',
        'InstanceUsages': [
            {
                'AccountId': 'string',
                'UsedInstanceCount': 123
            },
        ]
    }
    
    
    :returns: 
    active - The Capacity Reservation is active and the capacity is available for your use.
    expired - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.
    cancelled - The Capacity Reservation was manually cancelled. The reserved capacity is no longer available for your use.
    pending - The Capacity Reservation request was successful but the capacity provisioning is still pending.
    failed - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.
    
    """
    pass

def get_coip_pool_usage(PoolId=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Describes the allocations from the specified customer-owned address pool.
    See also: AWS API Documentation
    
    
    :example: response = client.get_coip_pool_usage(
        PoolId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type PoolId: string
    :param PoolId: [REQUIRED]\nThe ID of the address pool.\n

    :type Filters: list
    :param Filters: The filters. The following are the possible values:\n\ncoip-address-usage.allocation-id\ncoip-address-usage.aws-account-id\ncoip-address-usage.aws-service\ncoip-address-usage.co-ip\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'CoipPoolId': 'string',
    'CoipAddressUsages': [
        {
            'AllocationId': 'string',
            'AwsAccountId': 'string',
            'AwsService': 'string',
            'CoIp': 'string'
        },
    ],
    'LocalGatewayRouteTableId': 'string'
}


Response Structure

(dict) --

CoipPoolId (string) --
The ID of the customer-owned address pool.

CoipAddressUsages (list) --
Information about the address usage.

(dict) --
Describes address usage for a customer-owned address pool.

AllocationId (string) --
The allocation ID of the address.

AwsAccountId (string) --
The AWS account ID.

AwsService (string) --
The AWS service.

CoIp (string) --
The customer-owned IP address.





LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.








    :return: {
        'CoipPoolId': 'string',
        'CoipAddressUsages': [
            {
                'AllocationId': 'string',
                'AwsAccountId': 'string',
                'AwsService': 'string',
                'CoIp': 'string'
            },
        ],
        'LocalGatewayRouteTableId': 'string'
    }
    
    
    """
    pass

def get_console_output(InstanceId=None, DryRun=None, Latest=None):
    """
    Gets the console output for the specified instance. For Linux instances, the instance console output displays the exact console output that would normally be displayed on a physical monitor attached to a computer. For Windows instances, the instance console output includes the last three system event log errors.
    By default, the console output returns buffered information that was posted shortly after an instance transition state (start, stop, reboot, or terminate). This information is available for at least one hour after the most recent post. Only the most recent 64 KB of console output is available.
    You can optionally retrieve the latest serial console output at any time during the instance lifecycle. This option is supported on instance types that use the Nitro hypervisor.
    For more information, see Instance Console Output in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example gets the console output for the specified instance.
    Expected Output:
    
    :example: response = client.get_console_output(
        InstanceId='string',
        DryRun=True|False,
        Latest=True|False
    )
    
    
    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Latest: boolean
    :param Latest: When enabled, retrieves the latest console output for the instance.\nDefault: disabled (false )\n

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceId': 'string',
    'Output': 'string',
    'Timestamp': datetime(2015, 1, 1)
}


Response Structure

(dict) --

InstanceId (string) --
The ID of the instance.

Output (string) --
The console output, base64-encoded. If you are using a command line tool, the tool decodes the output for you.

Timestamp (datetime) --
The time at which the output was last updated.







Examples
This example gets the console output for the specified instance.
response = client.get_console_output(
    InstanceId='i-1234567890abcdef0',
)

print(response)


Expected Output:
{
    'InstanceId': 'i-1234567890abcdef0',
    'Output': '...',
    'Timestamp': datetime(2018, 5, 25, 21, 23, 53, 4, 145, 0),
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'InstanceId': 'string',
        'Output': 'string',
        'Timestamp': datetime(2015, 1, 1)
    }
    
    
    """
    pass

def get_console_screenshot(DryRun=None, InstanceId=None, WakeUp=None):
    """
    Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.
    The returned content is Base64-encoded.
    See also: AWS API Documentation
    
    
    :example: response = client.get_console_screenshot(
        DryRun=True|False,
        InstanceId='string',
        WakeUp=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type WakeUp: boolean
    :param WakeUp: When set to true , acts as keystroke input and wakes up an instance that\'s in standby or 'sleep' mode.

    :rtype: dict

ReturnsResponse Syntax
{
    'ImageData': 'string',
    'InstanceId': 'string'
}


Response Structure

(dict) --

ImageData (string) --
The data that comprises the image.

InstanceId (string) --
The ID of the instance.








    :return: {
        'ImageData': 'string',
        'InstanceId': 'string'
    }
    
    
    """
    pass

def get_default_credit_specification(DryRun=None, InstanceFamily=None):
    """
    Describes the default credit option for CPU usage of a burstable performance instance family.
    For more information, see Burstable Performance Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.get_default_credit_specification(
        DryRun=True|False,
        InstanceFamily='t2'|'t3'|'t3a'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceFamily: string
    :param InstanceFamily: [REQUIRED]\nThe instance family.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceFamilyCreditSpecification': {
        'InstanceFamily': 't2'|'t3'|'t3a',
        'CpuCredits': 'string'
    }
}


Response Structure

(dict) --

InstanceFamilyCreditSpecification (dict) --
The default credit option for CPU usage of the instance family.

InstanceFamily (string) --
The instance family.

CpuCredits (string) --
The default credit option for CPU usage of the instance family. Valid values are standard and unlimited .










    :return: {
        'InstanceFamilyCreditSpecification': {
            'InstanceFamily': 't2'|'t3'|'t3a',
            'CpuCredits': 'string'
        }
    }
    
    
    """
    pass

def get_ebs_default_kms_key_id(DryRun=None):
    """
    Describes the default customer master key (CMK) for EBS encryption by default for your account in this Region. You can change the default CMK for encryption by default using  ModifyEbsDefaultKmsKeyId or  ResetEbsDefaultKmsKeyId .
    For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.get_ebs_default_kms_key_id(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'KmsKeyId': 'string'
}


Response Structure

(dict) --
KmsKeyId (string) --The Amazon Resource Name (ARN) of the default CMK for encryption by default.







    :return: {
        'KmsKeyId': 'string'
    }
    
    
    """
    pass

def get_ebs_encryption_by_default(DryRun=None):
    """
    Describes whether EBS encryption by default is enabled for your account in the current Region.
    For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.get_ebs_encryption_by_default(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'EbsEncryptionByDefault': True|False
}


Response Structure

(dict) --
EbsEncryptionByDefault (boolean) --Indicates whether encryption by default is enabled.







    :return: {
        'EbsEncryptionByDefault': True|False
    }
    
    
    """
    pass

def get_host_reservation_purchase_preview(HostIdSet=None, OfferingId=None):
    """
    Preview a reservation purchase with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation.
    This is a preview of the  PurchaseHostReservation action and does not result in the offering being purchased.
    See also: AWS API Documentation
    
    
    :example: response = client.get_host_reservation_purchase_preview(
        HostIdSet=[
            'string',
        ],
        OfferingId='string'
    )
    
    
    :type HostIdSet: list
    :param HostIdSet: [REQUIRED]\nThe IDs of the Dedicated Hosts with which the reservation is associated.\n\n(string) --\n\n

    :type OfferingId: string
    :param OfferingId: [REQUIRED]\nThe offering ID of the reservation.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'CurrencyCode': 'USD',
    'Purchase': [
        {
            'CurrencyCode': 'USD',
            'Duration': 123,
            'HostIdSet': [
                'string',
            ],
            'HostReservationId': 'string',
            'HourlyPrice': 'string',
            'InstanceFamily': 'string',
            'PaymentOption': 'AllUpfront'|'PartialUpfront'|'NoUpfront',
            'UpfrontPrice': 'string'
        },
    ],
    'TotalHourlyPrice': 'string',
    'TotalUpfrontPrice': 'string'
}


Response Structure

(dict) --

CurrencyCode (string) --
The currency in which the totalUpfrontPrice and totalHourlyPrice amounts are specified. At this time, the only supported currency is USD .

Purchase (list) --
The purchase information of the Dedicated Host reservation and the Dedicated Hosts associated with it.

(dict) --
Describes the result of the purchase.

CurrencyCode (string) --
The currency in which the UpfrontPrice and HourlyPrice amounts are specified. At this time, the only supported currency is USD .

Duration (integer) --
The duration of the reservation\'s term in seconds.

HostIdSet (list) --
The IDs of the Dedicated Hosts associated with the reservation.

(string) --


HostReservationId (string) --
The ID of the reservation.

HourlyPrice (string) --
The hourly price of the reservation per hour.

InstanceFamily (string) --
The instance family on the Dedicated Host that the reservation can be associated with.

PaymentOption (string) --
The payment option for the reservation.

UpfrontPrice (string) --
The upfront price of the reservation.





TotalHourlyPrice (string) --
The potential total hourly price of the reservation per hour.

TotalUpfrontPrice (string) --
The potential total upfront price. This is billed immediately.








    :return: {
        'CurrencyCode': 'USD',
        'Purchase': [
            {
                'CurrencyCode': 'USD',
                'Duration': 123,
                'HostIdSet': [
                    'string',
                ],
                'HostReservationId': 'string',
                'HourlyPrice': 'string',
                'InstanceFamily': 'string',
                'PaymentOption': 'AllUpfront'|'PartialUpfront'|'NoUpfront',
                'UpfrontPrice': 'string'
            },
        ],
        'TotalHourlyPrice': 'string',
        'TotalUpfrontPrice': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def get_launch_template_data(DryRun=None, InstanceId=None):
    """
    Retrieves the configuration data of the specified instance. You can use this data to create a launch template.
    See also: AWS API Documentation
    
    Examples
    This example gets the launch template data for the specified instance.
    Expected Output:
    
    :example: response = client.get_launch_template_data(
        DryRun=True|False,
        InstanceId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'LaunchTemplateData': {
        'KernelId': 'string',
        'EbsOptimized': True|False,
        'IamInstanceProfile': {
            'Arn': 'string',
            'Name': 'string'
        },
        'BlockDeviceMappings': [
            {
                'DeviceName': 'string',
                'VirtualName': 'string',
                'Ebs': {
                    'Encrypted': True|False,
                    'DeleteOnTermination': True|False,
                    'Iops': 123,
                    'KmsKeyId': 'string',
                    'SnapshotId': 'string',
                    'VolumeSize': 123,
                    'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1'
                },
                'NoDevice': 'string'
            },
        ],
        'NetworkInterfaces': [
            {
                'AssociatePublicIpAddress': True|False,
                'DeleteOnTermination': True|False,
                'Description': 'string',
                'DeviceIndex': 123,
                'Groups': [
                    'string',
                ],
                'InterfaceType': 'string',
                'Ipv6AddressCount': 123,
                'Ipv6Addresses': [
                    {
                        'Ipv6Address': 'string'
                    },
                ],
                'NetworkInterfaceId': 'string',
                'PrivateIpAddress': 'string',
                'PrivateIpAddresses': [
                    {
                        'Primary': True|False,
                        'PrivateIpAddress': 'string'
                    },
                ],
                'SecondaryPrivateIpAddressCount': 123,
                'SubnetId': 'string'
            },
        ],
        'ImageId': 'string',
        'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
        'KeyName': 'string',
        'Monitoring': {
            'Enabled': True|False
        },
        'Placement': {
            'AvailabilityZone': 'string',
            'Affinity': 'string',
            'GroupName': 'string',
            'HostId': 'string',
            'Tenancy': 'default'|'dedicated'|'host',
            'SpreadDomain': 'string',
            'HostResourceGroupArn': 'string',
            'PartitionNumber': 123
        },
        'RamDiskId': 'string',
        'DisableApiTermination': True|False,
        'InstanceInitiatedShutdownBehavior': 'stop'|'terminate',
        'UserData': 'string',
        'TagSpecifications': [
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        'ElasticGpuSpecifications': [
            {
                'Type': 'string'
            },
        ],
        'ElasticInferenceAccelerators': [
            {
                'Type': 'string',
                'Count': 123
            },
        ],
        'SecurityGroupIds': [
            'string',
        ],
        'SecurityGroups': [
            'string',
        ],
        'InstanceMarketOptions': {
            'MarketType': 'spot',
            'SpotOptions': {
                'MaxPrice': 'string',
                'SpotInstanceType': 'one-time'|'persistent',
                'BlockDurationMinutes': 123,
                'ValidUntil': datetime(2015, 1, 1),
                'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
            }
        },
        'CreditSpecification': {
            'CpuCredits': 'string'
        },
        'CpuOptions': {
            'CoreCount': 123,
            'ThreadsPerCore': 123
        },
        'CapacityReservationSpecification': {
            'CapacityReservationPreference': 'open'|'none',
            'CapacityReservationTarget': {
                'CapacityReservationId': 'string'
            }
        },
        'LicenseSpecifications': [
            {
                'LicenseConfigurationArn': 'string'
            },
        ],
        'HibernationOptions': {
            'Configured': True|False
        },
        'MetadataOptions': {
            'State': 'pending'|'applied',
            'HttpTokens': 'optional'|'required',
            'HttpPutResponseHopLimit': 123,
            'HttpEndpoint': 'disabled'|'enabled'
        }
    }
}


Response Structure

(dict) --

LaunchTemplateData (dict) --
The instance data.

KernelId (string) --
The ID of the kernel, if applicable.

EbsOptimized (boolean) --
Indicates whether the instance is optimized for Amazon EBS I/O.

IamInstanceProfile (dict) --
The IAM instance profile.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Name (string) --
The name of the instance profile.



BlockDeviceMappings (list) --
The block device mappings.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name.

VirtualName (string) --
The virtual device name (ephemeralN).

Ebs (dict) --
Information about the block device for an EBS volume.

Encrypted (boolean) --
Indicates whether the EBS volume is encrypted.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports.

KmsKeyId (string) --
The ARN of the AWS Key Management Service (AWS KMS) CMK used for encryption.

SnapshotId (string) --
The ID of the snapshot.

VolumeSize (integer) --
The size of the volume, in GiB.

VolumeType (string) --
The volume type.



NoDevice (string) --
Suppresses the specified device included in the block device mapping of the AMI.





NetworkInterfaces (list) --
The network interfaces.

(dict) --
Describes a network interface.

AssociatePublicIpAddress (boolean) --
Indicates whether to associate a public IPv4 address with eth0 for a new network interface.

DeleteOnTermination (boolean) --
Indicates whether the network interface is deleted when the instance is terminated.

Description (string) --
A description for the network interface.

DeviceIndex (integer) --
The device index for the network interface attachment.

Groups (list) --
The IDs of one or more security groups.

(string) --


InterfaceType (string) --
The type of network interface.

Ipv6AddressCount (integer) --
The number of IPv6 addresses for the network interface.

Ipv6Addresses (list) --
The IPv6 addresses for the network interface.

(dict) --
Describes an IPv6 address.

Ipv6Address (string) --
The IPv6 address.





NetworkInterfaceId (string) --
The ID of the network interface.

PrivateIpAddress (string) --
The primary private IPv4 address of the network interface.

PrivateIpAddresses (list) --
One or more private IPv4 addresses.

(dict) --
Describes a secondary private IPv4 address for a network interface.

Primary (boolean) --
Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.

PrivateIpAddress (string) --
The private IPv4 addresses.





SecondaryPrivateIpAddressCount (integer) --
The number of secondary private IPv4 addresses for the network interface.

SubnetId (string) --
The ID of the subnet for the network interface.





ImageId (string) --
The ID of the AMI that was used to launch the instance.

InstanceType (string) --
The instance type.

KeyName (string) --
The name of the key pair.

Monitoring (dict) --
The monitoring for the instance.

Enabled (boolean) --
Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.



Placement (dict) --
The placement of the instance.

AvailabilityZone (string) --
The Availability Zone of the instance.

Affinity (string) --
The affinity setting for the instance on the Dedicated Host.

GroupName (string) --
The name of the placement group for the instance.

HostId (string) --
The ID of the Dedicated Host for the instance.

Tenancy (string) --
The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.

SpreadDomain (string) --
Reserved for future use.

HostResourceGroupArn (string) --
The ARN of the host resource group in which to launch the instances.

PartitionNumber (integer) --
The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition .



RamDiskId (string) --
The ID of the RAM disk, if applicable.

DisableApiTermination (boolean) --
If set to true , indicates that the instance cannot be terminated using the Amazon EC2 console, command line tool, or API.

InstanceInitiatedShutdownBehavior (string) --
Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).

UserData (string) --
The user data for the instance.

TagSpecifications (list) --
The tags.

(dict) --
The tag specification for the launch template.

ResourceType (string) --
The type of resource.

Tags (list) --
The tags for the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.









ElasticGpuSpecifications (list) --
The elastic GPU specification.

(dict) --
Describes an elastic GPU.

Type (string) --
The elastic GPU type.





ElasticInferenceAccelerators (list) --
The elastic inference accelerator for the instance.

(dict) --
Describes an elastic inference accelerator.

Type (string) --
The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.

Count (integer) --
The number of elastic inference accelerators to attach to the instance.
Default: 1





SecurityGroupIds (list) --
The security group IDs.

(string) --


SecurityGroups (list) --
The security group names.

(string) --


InstanceMarketOptions (dict) --
The market (purchasing) option for the instances.

MarketType (string) --
The market type.

SpotOptions (dict) --
The options for Spot Instances.

MaxPrice (string) --
The maximum hourly price you\'re willing to pay for the Spot Instances.

SpotInstanceType (string) --
The Spot Instance request type.

BlockDurationMinutes (integer) --
The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).

ValidUntil (datetime) --
The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.

InstanceInterruptionBehavior (string) --
The behavior when a Spot Instance is interrupted.





CreditSpecification (dict) --
The credit option for CPU usage of the instance.

CpuCredits (string) --
The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited .



CpuOptions (dict) --
The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide .

CoreCount (integer) --
The number of CPU cores for the instance.

ThreadsPerCore (integer) --
The number of threads per CPU core.



CapacityReservationSpecification (dict) --
Information about the Capacity Reservation targeting option.

CapacityReservationPreference (string) --
Indicates the instance\'s Capacity Reservation preferences. Possible preferences include:

open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.


CapacityReservationTarget (dict) --
Information about the target Capacity Reservation.

CapacityReservationId (string) --
The ID of the Capacity Reservation.





LicenseSpecifications (list) --
The license configurations.

(dict) --
Describes a license configuration.

LicenseConfigurationArn (string) --
The Amazon Resource Name (ARN) of the license configuration.





HibernationOptions (dict) --
Indicates whether an instance is configured for hibernation. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide .

Configured (boolean) --
If this parameter is set to true , the instance is enabled for hibernation; otherwise, it is not enabled for hibernation.



MetadataOptions (dict) --
The metadata options for the instance. For more information, see Instance Metadata and User Data in the Amazon Elastic Compute Cloud User Guide .

State (string) --
The state of the metadata option changes.

pending - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.
applied - The metadata options have been successfully applied on the instance.


HttpTokens (string) --
The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .
If the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.
If the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.

HttpPutResponseHopLimit (integer) --
The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
Default: 1
Possible values: Integers from 1 to 64

HttpEndpoint (string) --
This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .

Note
If you specify a value of disabled , you will not be able to access your instance metadata.












Examples
This example gets the launch template data for the specified instance.
response = client.get_launch_template_data(
    InstanceId='0123d646e8048babc',
)

print(response)


Expected Output:
{
    'LaunchTemplateData': {
        'BlockDeviceMappings': [
            {
                'DeviceName': '/dev/xvda',
                'Ebs': {
                    'DeleteOnTermination': True,
                    'Encrypted': False,
                    'Iops': 100,
                    'SnapshotId': 'snap-02594938353ef77d3',
                    'VolumeSize': 8,
                    'VolumeType': 'gp2',
                },
            },
        ],
        'EbsOptimized': False,
        'ImageId': 'ami-32cf7b4a',
        'InstanceType': 't2.medium',
        'KeyName': 'my-key-pair',
        'Monitoring': {
            'Enabled': False,
        },
        'NetworkInterfaces': [
            {
                'AssociatePublicIpAddress': False,
                'DeleteOnTermination': True,
                'Description': '',
                'DeviceIndex': 0,
                'Groups': [
                    'sg-d14e1bb4',
                ],
                'Ipv6Addresses': [
                ],
                'NetworkInterfaceId': 'eni-4338b5a9',
                'PrivateIpAddress': '10.0.3.233',
                'PrivateIpAddresses': [
                    {
                        'Primary': True,
                        'PrivateIpAddress': '10.0.3.233',
                    },
                ],
                'SubnetId': 'subnet-5264e837',
            },
        ],
        'Placement': {
            'AvailabilityZone': 'us-east-2b',
            'GroupName': '',
            'Tenancy': 'default',
        },
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'LaunchTemplateData': {
            'KernelId': 'string',
            'EbsOptimized': True|False,
            'IamInstanceProfile': {
                'Arn': 'string',
                'Name': 'string'
            },
            'BlockDeviceMappings': [
                {
                    'DeviceName': 'string',
                    'VirtualName': 'string',
                    'Ebs': {
                        'Encrypted': True|False,
                        'DeleteOnTermination': True|False,
                        'Iops': 123,
                        'KmsKeyId': 'string',
                        'SnapshotId': 'string',
                        'VolumeSize': 123,
                        'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1'
                    },
                    'NoDevice': 'string'
                },
            ],
            'NetworkInterfaces': [
                {
                    'AssociatePublicIpAddress': True|False,
                    'DeleteOnTermination': True|False,
                    'Description': 'string',
                    'DeviceIndex': 123,
                    'Groups': [
                        'string',
                    ],
                    'InterfaceType': 'string',
                    'Ipv6AddressCount': 123,
                    'Ipv6Addresses': [
                        {
                            'Ipv6Address': 'string'
                        },
                    ],
                    'NetworkInterfaceId': 'string',
                    'PrivateIpAddress': 'string',
                    'PrivateIpAddresses': [
                        {
                            'Primary': True|False,
                            'PrivateIpAddress': 'string'
                        },
                    ],
                    'SecondaryPrivateIpAddressCount': 123,
                    'SubnetId': 'string'
                },
            ],
            'ImageId': 'string',
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'KeyName': 'string',
            'Monitoring': {
                'Enabled': True|False
            },
            'Placement': {
                'AvailabilityZone': 'string',
                'Affinity': 'string',
                'GroupName': 'string',
                'HostId': 'string',
                'Tenancy': 'default'|'dedicated'|'host',
                'SpreadDomain': 'string',
                'HostResourceGroupArn': 'string',
                'PartitionNumber': 123
            },
            'RamDiskId': 'string',
            'DisableApiTermination': True|False,
            'InstanceInitiatedShutdownBehavior': 'stop'|'terminate',
            'UserData': 'string',
            'TagSpecifications': [
                {
                    'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                    'Tags': [
                        {
                            'Key': 'string',
                            'Value': 'string'
                        },
                    ]
                },
            ],
            'ElasticGpuSpecifications': [
                {
                    'Type': 'string'
                },
            ],
            'ElasticInferenceAccelerators': [
                {
                    'Type': 'string',
                    'Count': 123
                },
            ],
            'SecurityGroupIds': [
                'string',
            ],
            'SecurityGroups': [
                'string',
            ],
            'InstanceMarketOptions': {
                'MarketType': 'spot',
                'SpotOptions': {
                    'MaxPrice': 'string',
                    'SpotInstanceType': 'one-time'|'persistent',
                    'BlockDurationMinutes': 123,
                    'ValidUntil': datetime(2015, 1, 1),
                    'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
                }
            },
            'CreditSpecification': {
                'CpuCredits': 'string'
            },
            'CpuOptions': {
                'CoreCount': 123,
                'ThreadsPerCore': 123
            },
            'CapacityReservationSpecification': {
                'CapacityReservationPreference': 'open'|'none',
                'CapacityReservationTarget': {
                    'CapacityReservationId': 'string'
                }
            },
            'LicenseSpecifications': [
                {
                    'LicenseConfigurationArn': 'string'
                },
            ],
            'HibernationOptions': {
                'Configured': True|False
            },
            'MetadataOptions': {
                'State': 'pending'|'applied',
                'HttpTokens': 'optional'|'required',
                'HttpPutResponseHopLimit': 123,
                'HttpEndpoint': 'disabled'|'enabled'
            }
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def get_paginator(operation_name=None):
    """
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name. This is the same name\nas the method name on the client. For example, if the\nmethod name is create_foo, and you\'d normally invoke the\noperation as client.create_foo(**kwargs), if the\ncreate_foo operation can be paginated, you can use the\ncall client.get_paginator('create_foo').

    :rtype: L{botocore.paginate.Paginator}
ReturnsA paginator object.


    """
    pass

def get_password_data(InstanceId=None, DryRun=None):
    """
    Retrieves the encrypted administrator password for a running Windows instance.
    The Windows password is generated at boot by the EC2Config service or EC2Launch scripts (Windows Server 2016 and later). This usually only happens the first time an instance is launched. For more information, see EC2Config and EC2Launch in the Amazon Elastic Compute Cloud User Guide.
    For the EC2Config service, the password is not generated for rebundled AMIs unless Ec2SetPassword is enabled before bundling.
    The password is encrypted using the key pair that you specified when you launched the instance. You must provide the corresponding key pair file.
    When you launch an instance, password generation and encryption may take a few minutes. If you try to retrieve the password before it\'s available, the output returns an empty string. We recommend that you wait up to 15 minutes after launching an instance before trying to retrieve the generated password.
    See also: AWS API Documentation
    
    
    :example: response = client.get_password_data(
        InstanceId='string',
        DryRun=True|False
    )
    
    
    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the Windows instance.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceId': 'string',
    'PasswordData': 'string',
    'Timestamp': datetime(2015, 1, 1)
}


Response Structure

(dict) --

InstanceId (string) --
The ID of the Windows instance.

PasswordData (string) --
The password of the instance. Returns an empty string if the password is not available.

Timestamp (datetime) --
The time the data was last updated.








    :return: {
        'InstanceId': 'string',
        'PasswordData': 'string',
        'Timestamp': datetime(2015, 1, 1)
    }
    
    
    """
    pass

def get_reserved_instances_exchange_quote(DryRun=None, ReservedInstanceIds=None, TargetConfigurations=None):
    """
    Returns a quote and exchange information for exchanging one or more specified Convertible Reserved Instances for a new Convertible Reserved Instance. If the exchange cannot be performed, the reason is returned in the response. Use  AcceptReservedInstancesExchangeQuote to perform the exchange.
    See also: AWS API Documentation
    
    
    :example: response = client.get_reserved_instances_exchange_quote(
        DryRun=True|False,
        ReservedInstanceIds=[
            'string',
        ],
        TargetConfigurations=[
            {
                'InstanceCount': 123,
                'OfferingId': 'string'
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ReservedInstanceIds: list
    :param ReservedInstanceIds: [REQUIRED]\nThe IDs of the Convertible Reserved Instances to exchange.\n\n(string) --\n\n

    :type TargetConfigurations: list
    :param TargetConfigurations: The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.\n\n(dict) --Details about the target configuration.\n\nInstanceCount (integer) --The number of instances the Covertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request\n\nOfferingId (string) -- [REQUIRED]The Convertible Reserved Instance offering ID.\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'CurrencyCode': 'string',
    'IsValidExchange': True|False,
    'OutputReservedInstancesWillExpireAt': datetime(2015, 1, 1),
    'PaymentDue': 'string',
    'ReservedInstanceValueRollup': {
        'HourlyPrice': 'string',
        'RemainingTotalValue': 'string',
        'RemainingUpfrontValue': 'string'
    },
    'ReservedInstanceValueSet': [
        {
            'ReservationValue': {
                'HourlyPrice': 'string',
                'RemainingTotalValue': 'string',
                'RemainingUpfrontValue': 'string'
            },
            'ReservedInstanceId': 'string'
        },
    ],
    'TargetConfigurationValueRollup': {
        'HourlyPrice': 'string',
        'RemainingTotalValue': 'string',
        'RemainingUpfrontValue': 'string'
    },
    'TargetConfigurationValueSet': [
        {
            'ReservationValue': {
                'HourlyPrice': 'string',
                'RemainingTotalValue': 'string',
                'RemainingUpfrontValue': 'string'
            },
            'TargetConfiguration': {
                'InstanceCount': 123,
                'OfferingId': 'string'
            }
        },
    ],
    'ValidationFailureReason': 'string'
}


Response Structure

(dict) --
Contains the output of GetReservedInstancesExchangeQuote.

CurrencyCode (string) --
The currency of the transaction.

IsValidExchange (boolean) --
If true , the exchange is valid. If false , the exchange cannot be completed.

OutputReservedInstancesWillExpireAt (datetime) --
The new end date of the reservation term.

PaymentDue (string) --
The total true upfront charge for the exchange.

ReservedInstanceValueRollup (dict) --
The cost associated with the Reserved Instance.

HourlyPrice (string) --
The hourly rate of the reservation.

RemainingTotalValue (string) --
The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number of hours remaining).

RemainingUpfrontValue (string) --
The remaining upfront cost of the reservation.



ReservedInstanceValueSet (list) --
The configuration of your Convertible Reserved Instances.

(dict) --
The total value of the Convertible Reserved Instance.

ReservationValue (dict) --
The total value of the Convertible Reserved Instance that you are exchanging.

HourlyPrice (string) --
The hourly rate of the reservation.

RemainingTotalValue (string) --
The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number of hours remaining).

RemainingUpfrontValue (string) --
The remaining upfront cost of the reservation.



ReservedInstanceId (string) --
The ID of the Convertible Reserved Instance that you are exchanging.





TargetConfigurationValueRollup (dict) --
The cost associated with the Reserved Instance.

HourlyPrice (string) --
The hourly rate of the reservation.

RemainingTotalValue (string) --
The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number of hours remaining).

RemainingUpfrontValue (string) --
The remaining upfront cost of the reservation.



TargetConfigurationValueSet (list) --
The values of the target Convertible Reserved Instances.

(dict) --
The total value of the new Convertible Reserved Instances.

ReservationValue (dict) --
The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of the list value, remaining upfront price, and additional upfront cost of the exchange.

HourlyPrice (string) --
The hourly rate of the reservation.

RemainingTotalValue (string) --
The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number of hours remaining).

RemainingUpfrontValue (string) --
The remaining upfront cost of the reservation.



TargetConfiguration (dict) --
The configuration of the Convertible Reserved Instances that make up the exchange.

InstanceCount (integer) --
The number of instances the Convertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request

OfferingId (string) --
The ID of the Convertible Reserved Instance offering.







ValidationFailureReason (string) --
Describes the reason why the exchange cannot be completed.








    :return: {
        'CurrencyCode': 'string',
        'IsValidExchange': True|False,
        'OutputReservedInstancesWillExpireAt': datetime(2015, 1, 1),
        'PaymentDue': 'string',
        'ReservedInstanceValueRollup': {
            'HourlyPrice': 'string',
            'RemainingTotalValue': 'string',
            'RemainingUpfrontValue': 'string'
        },
        'ReservedInstanceValueSet': [
            {
                'ReservationValue': {
                    'HourlyPrice': 'string',
                    'RemainingTotalValue': 'string',
                    'RemainingUpfrontValue': 'string'
                },
                'ReservedInstanceId': 'string'
            },
        ],
        'TargetConfigurationValueRollup': {
            'HourlyPrice': 'string',
            'RemainingTotalValue': 'string',
            'RemainingUpfrontValue': 'string'
        },
        'TargetConfigurationValueSet': [
            {
                'ReservationValue': {
                    'HourlyPrice': 'string',
                    'RemainingTotalValue': 'string',
                    'RemainingUpfrontValue': 'string'
                },
                'TargetConfiguration': {
                    'InstanceCount': 123,
                    'OfferingId': 'string'
                }
            },
        ],
        'ValidationFailureReason': 'string'
    }
    
    
    """
    pass

def get_transit_gateway_attachment_propagations(TransitGatewayAttachmentId=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Lists the route tables to which the specified resource attachment propagates routes.
    See also: AWS API Documentation
    
    
    :example: response = client.get_transit_gateway_attachment_propagations(
        TransitGatewayAttachmentId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\ntransit-gateway-route-table-id - The ID of the transit gateway route table.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayAttachmentPropagations': [
        {
            'TransitGatewayRouteTableId': 'string',
            'State': 'enabling'|'enabled'|'disabling'|'disabled'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TransitGatewayAttachmentPropagations (list) --
Information about the propagation route tables.

(dict) --
Describes a propagation route table.

TransitGatewayRouteTableId (string) --
The ID of the propagation route table.

State (string) --
The state of the propagation route table.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'TransitGatewayAttachmentPropagations': [
            {
                'TransitGatewayRouteTableId': 'string',
                'State': 'enabling'|'enabled'|'disabling'|'disabled'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def get_transit_gateway_multicast_domain_associations(TransitGatewayMulticastDomainId=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Gets information about the associations for the transit gateway multicast domain.
    See also: AWS API Documentation
    
    
    :example: response = client.get_transit_gateway_multicast_domain_associations(
        TransitGatewayMulticastDomainId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainId: string
    :param TransitGatewayMulticastDomainId: The ID of the transit gateway multicast domain.

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\nresource-id - The ID of the resource.\nresource-type - The type of resource. The valid value is: vpc .\nstate - The state of the subnet association. Valid values are associated | associating | disassociated | disassociating .\nsubnet-id - The ID of the subnet.\ntransit-gateway-attachment-id - The id of the transit gateway attachment.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'MulticastDomainAssociations': [
        {
            'TransitGatewayAttachmentId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'Subnet': {
                'SubnetId': 'string',
                'State': 'associating'|'associated'|'disassociating'|'disassociated'
            }
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

MulticastDomainAssociations (list) --
Information about the multicast domain associations.

(dict) --
Describes the resources associated with the transit gateway multicast domain.

TransitGatewayAttachmentId (string) --
The ID of the transit gateway attachment.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The type of resource, for example a VPC attachment.

Subnet (dict) --
The subnet associated with the transit gateway multicast domain.

SubnetId (string) --
The ID of the subnet.

State (string) --
The state of the subnet association.







NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'MulticastDomainAssociations': [
            {
                'TransitGatewayAttachmentId': 'string',
                'ResourceId': 'string',
                'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
                'Subnet': {
                    'SubnetId': 'string',
                    'State': 'associating'|'associated'|'disassociating'|'disassociated'
                }
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def get_transit_gateway_route_table_associations(TransitGatewayRouteTableId=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Gets information about the associations for the specified transit gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.get_transit_gateway_route_table_associations(
        TransitGatewayRouteTableId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the transit gateway route table.\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\nresource-id - The ID of the resource.\nresource-type - The resource type (vpc | vpn ).\ntransit-gateway-attachment-id - The ID of the attachment.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Associations': [
        {
            'TransitGatewayAttachmentId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'State': 'associating'|'associated'|'disassociating'|'disassociated'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Associations (list) --
Information about the associations.

(dict) --
Describes an association between a route table and a resource attachment.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The resource type.

State (string) --
The state of the association.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'Associations': [
            {
                'TransitGatewayAttachmentId': 'string',
                'ResourceId': 'string',
                'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
                'State': 'associating'|'associated'|'disassociating'|'disassociated'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def get_transit_gateway_route_table_propagations(TransitGatewayRouteTableId=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Gets information about the route table propagations for the specified transit gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.get_transit_gateway_route_table_propagations(
        TransitGatewayRouteTableId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the transit gateway route table.\n

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\nresource-id - The ID of the resource.\nresource-type - The resource type (vpc | vpn ).\ntransit-gateway-attachment-id - The ID of the attachment.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayRouteTablePropagations': [
        {
            'TransitGatewayAttachmentId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'State': 'enabling'|'enabled'|'disabling'|'disabled'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

TransitGatewayRouteTablePropagations (list) --
Information about the route table propagations.

(dict) --
Describes a route table propagation.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The type of resource.

State (string) --
The state of the resource.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'TransitGatewayRouteTablePropagations': [
            {
                'TransitGatewayAttachmentId': 'string',
                'ResourceId': 'string',
                'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
                'State': 'enabling'|'enabled'|'disabling'|'disabled'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def get_waiter(waiter_name=None):
    """
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters\nsection of the service docs for a list of available waiters.

    :rtype: botocore.waiter.Waiter


    """
    pass

def import_client_vpn_client_certificate_revocation_list(ClientVpnEndpointId=None, CertificateRevocationList=None, DryRun=None):
    """
    Uploads a client certificate revocation list to the specified Client VPN endpoint. Uploading a client certificate revocation list overwrites the existing client certificate revocation list.
    Uploading a client certificate revocation list resets existing client connections.
    See also: AWS API Documentation
    
    
    :example: response = client.import_client_vpn_client_certificate_revocation_list(
        ClientVpnEndpointId='string',
        CertificateRevocationList='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint to which the client certificate revocation list applies.\n

    :type CertificateRevocationList: string
    :param CertificateRevocationList: [REQUIRED]\nThe client certificate revocation list file. For more information, see Generate a Client Certificate Revocation List in the AWS Client VPN Administrator Guide .\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def import_image(Architecture=None, ClientData=None, ClientToken=None, Description=None, DiskContainers=None, DryRun=None, Encrypted=None, Hypervisor=None, KmsKeyId=None, LicenseType=None, Platform=None, RoleName=None, LicenseSpecifications=None):
    """
    Import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI). For more information, see Importing a VM as an Image Using VM Import/Export in the VM Import/Export User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.import_image(
        Architecture='string',
        ClientData={
            'Comment': 'string',
            'UploadEnd': datetime(2015, 1, 1),
            'UploadSize': 123.0,
            'UploadStart': datetime(2015, 1, 1)
        },
        ClientToken='string',
        Description='string',
        DiskContainers=[
            {
                'Description': 'string',
                'DeviceName': 'string',
                'Format': 'string',
                'SnapshotId': 'string',
                'Url': 'string',
                'UserBucket': {
                    'S3Bucket': 'string',
                    'S3Key': 'string'
                }
            },
        ],
        DryRun=True|False,
        Encrypted=True|False,
        Hypervisor='string',
        KmsKeyId='string',
        LicenseType='string',
        Platform='string',
        RoleName='string',
        LicenseSpecifications=[
            {
                'LicenseConfigurationArn': 'string'
            },
        ]
    )
    
    
    :type Architecture: string
    :param Architecture: The architecture of the virtual machine.\nValid values: i386 | x86_64 | arm64\n

    :type ClientData: dict
    :param ClientData: The client-specific data.\n\nComment (string) --A user-defined comment about the disk upload.\n\nUploadEnd (datetime) --The time that the disk upload ends.\n\nUploadSize (float) --The size of the uploaded disk image, in GiB.\n\nUploadStart (datetime) --The time that the disk upload starts.\n\n\n

    :type ClientToken: string
    :param ClientToken: The token to enable idempotency for VM import requests.

    :type Description: string
    :param Description: A description string for the import image task.

    :type DiskContainers: list
    :param DiskContainers: Information about the disk containers.\n\n(dict) --Describes the disk container object for an import image task.\n\nDescription (string) --The description of the disk image.\n\nDeviceName (string) --The block device mapping for the disk.\n\nFormat (string) --The format of the disk image being imported.\nValid values: VHD | VMDK | OVA\n\nSnapshotId (string) --The ID of the EBS snapshot to be used for importing the snapshot.\n\nUrl (string) --The URL to the Amazon S3-based disk image being imported. The URL can either be a https URL (https://..) or an Amazon S3 URL (s3://..)\n\nUserBucket (dict) --The S3 bucket for the disk image.\n\nS3Bucket (string) --The name of the S3 bucket where the disk image is located.\n\nS3Key (string) --The file name of the disk image.\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Encrypted: boolean
    :param Encrypted: Specifies whether the destination AMI of the imported image should be encrypted. The default CMK for EBS is used unless you specify a non-default AWS Key Management Service (AWS KMS) CMK using KmsKeyId . For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .

    :type Hypervisor: string
    :param Hypervisor: The target hypervisor platform.\nValid values: xen\n

    :type KmsKeyId: string
    :param KmsKeyId: An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted AMI. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.\nThe CMK identifier may be provided in any of the following formats:\n\nKey ID\nKey alias. The alias ARN contains the arn:aws:kms namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the alias namespace, and then the CMK alias. For example, arn:aws:kms:us-east-1 :012345678910 :alias/ExampleAlias .\nARN using key ID. The ID ARN contains the arn:aws:kms namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the key namespace, and then the CMK ID. For example, arn:aws:kms:us-east-1 :012345678910 :key/abcd1234-a123-456a-a12b-a123b4cd56ef .\nARN using key alias. The alias ARN contains the arn:aws:kms namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the alias namespace, and then the CMK alias. For example, arn:aws:kms:us-east-1 :012345678910 :alias/ExampleAlias .\n\nAWS parses KmsKeyId asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure.\nThe specified CMK must exist in the Region that the AMI is being copied to.\nAmazon EBS does not support asymmetric CMKs.\n

    :type LicenseType: string
    :param LicenseType: The license type to be used for the Amazon Machine Image (AMI) after importing.\nBy default, we detect the source-system operating system (OS) and apply the appropriate license. Specify AWS to replace the source-system license with an AWS license, if appropriate. Specify BYOL to retain the source-system license, if appropriate.\nTo use BYOL , you must have existing licenses with rights to use these licenses in a third party cloud, such as AWS. For more information, see Prerequisites in the VM Import/Export User Guide.\n

    :type Platform: string
    :param Platform: The operating system of the virtual machine.\nValid values: Windows | Linux\n

    :type RoleName: string
    :param RoleName: The name of the role to use when not using the default role, \'vmimport\'.

    :type LicenseSpecifications: list
    :param LicenseSpecifications: The ARNs of the license configurations.\n\n(dict) --The request information of license configurations.\n\nLicenseConfigurationArn (string) --The ARN of a license configuration.\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Architecture': 'string',
    'Description': 'string',
    'Encrypted': True|False,
    'Hypervisor': 'string',
    'ImageId': 'string',
    'ImportTaskId': 'string',
    'KmsKeyId': 'string',
    'LicenseType': 'string',
    'Platform': 'string',
    'Progress': 'string',
    'SnapshotDetails': [
        {
            'Description': 'string',
            'DeviceName': 'string',
            'DiskImageSize': 123.0,
            'Format': 'string',
            'Progress': 'string',
            'SnapshotId': 'string',
            'Status': 'string',
            'StatusMessage': 'string',
            'Url': 'string',
            'UserBucket': {
                'S3Bucket': 'string',
                'S3Key': 'string'
            }
        },
    ],
    'Status': 'string',
    'StatusMessage': 'string',
    'LicenseSpecifications': [
        {
            'LicenseConfigurationArn': 'string'
        },
    ]
}


Response Structure

(dict) --

Architecture (string) --
The architecture of the virtual machine.

Description (string) --
A description of the import task.

Encrypted (boolean) --
Indicates whether the AMI is encypted.

Hypervisor (string) --
The target hypervisor of the import task.

ImageId (string) --
The ID of the Amazon Machine Image (AMI) created by the import task.

ImportTaskId (string) --
The task ID of the import image task.

KmsKeyId (string) --
The identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to create the encrypted AMI.

LicenseType (string) --
The license type of the virtual machine.

Platform (string) --
The operating system of the virtual machine.

Progress (string) --
The progress of the task.

SnapshotDetails (list) --
Information about the snapshots.

(dict) --
Describes the snapshot created from the imported disk.

Description (string) --
A description for the snapshot.

DeviceName (string) --
The block device mapping for the snapshot.

DiskImageSize (float) --
The size of the disk in the snapshot, in GiB.

Format (string) --
The format of the disk image from which the snapshot is created.

Progress (string) --
The percentage of progress for the task.

SnapshotId (string) --
The snapshot ID of the disk being imported.

Status (string) --
A brief status of the snapshot creation.

StatusMessage (string) --
A detailed status message for the snapshot creation.

Url (string) --
The URL used to access the disk image.

UserBucket (dict) --
The S3 bucket for the disk image.

S3Bucket (string) --
The S3 bucket from which the disk image was created.

S3Key (string) --
The file name of the disk image.







Status (string) --
A brief status of the task.

StatusMessage (string) --
A detailed status message of the import task.

LicenseSpecifications (list) --
The ARNs of the license configurations.

(dict) --
The response information for license configurations.

LicenseConfigurationArn (string) --
The ARN of a license configuration.












    :return: {
        'Architecture': 'string',
        'Description': 'string',
        'Encrypted': True|False,
        'Hypervisor': 'string',
        'ImageId': 'string',
        'ImportTaskId': 'string',
        'KmsKeyId': 'string',
        'LicenseType': 'string',
        'Platform': 'string',
        'Progress': 'string',
        'SnapshotDetails': [
            {
                'Description': 'string',
                'DeviceName': 'string',
                'DiskImageSize': 123.0,
                'Format': 'string',
                'Progress': 'string',
                'SnapshotId': 'string',
                'Status': 'string',
                'StatusMessage': 'string',
                'Url': 'string',
                'UserBucket': {
                    'S3Bucket': 'string',
                    'S3Key': 'string'
                }
            },
        ],
        'Status': 'string',
        'StatusMessage': 'string',
        'LicenseSpecifications': [
            {
                'LicenseConfigurationArn': 'string'
            },
        ]
    }
    
    
    """
    pass

def import_instance(Description=None, DiskImages=None, DryRun=None, LaunchSpecification=None, Platform=None):
    """
    Creates an import instance task using metadata from the specified disk image. ImportInstance only supports single-volume VMs. To import multi-volume VMs, use  ImportImage . For more information, see Importing a Virtual Machine Using the Amazon EC2 CLI .
    For information about the import manifest referenced by this API action, see VM Import Manifest .
    See also: AWS API Documentation
    
    
    :example: response = client.import_instance(
        Description='string',
        DiskImages=[
            {
                'Description': 'string',
                'Image': {
                    'Bytes': 123,
                    'Format': 'VMDK'|'RAW'|'VHD',
                    'ImportManifestUrl': 'string'
                },
                'Volume': {
                    'Size': 123
                }
            },
        ],
        DryRun=True|False,
        LaunchSpecification={
            'AdditionalInfo': 'string',
            'Architecture': 'i386'|'x86_64'|'arm64',
            'GroupIds': [
                'string',
            ],
            'GroupNames': [
                'string',
            ],
            'InstanceInitiatedShutdownBehavior': 'stop'|'terminate',
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'Monitoring': True|False,
            'Placement': {
                'AvailabilityZone': 'string',
                'Affinity': 'string',
                'GroupName': 'string',
                'PartitionNumber': 123,
                'HostId': 'string',
                'Tenancy': 'default'|'dedicated'|'host',
                'SpreadDomain': 'string',
                'HostResourceGroupArn': 'string'
            },
            'PrivateIpAddress': 'string',
            'SubnetId': 'string',
            'UserData': {
                'Data': 'string'
            }
        },
        Platform='Windows'
    )
    
    
    :type Description: string
    :param Description: A description for the instance being imported.

    :type DiskImages: list
    :param DiskImages: The disk image.\n\n(dict) --Describes a disk image.\n\nDescription (string) --A description of the disk image.\n\nImage (dict) --Information about the disk image.\n\nBytes (integer) -- [REQUIRED]The size of the disk image, in GiB.\n\nFormat (string) -- [REQUIRED]The disk image format.\n\nImportManifestUrl (string) -- [REQUIRED]A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the 'Query String Request Authentication Alternative' section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide .\nFor information about the import manifest referenced by this API action, see VM Import Manifest .\n\n\n\nVolume (dict) --Information about the volume.\n\nSize (integer) -- [REQUIRED]The size of the volume, in GiB.\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type LaunchSpecification: dict
    :param LaunchSpecification: The launch specification.\n\nAdditionalInfo (string) --Reserved.\n\nArchitecture (string) --The architecture of the instance.\n\nGroupIds (list) --The security group IDs.\n\n(string) --\n\n\nGroupNames (list) --The security group names.\n\n(string) --\n\n\nInstanceInitiatedShutdownBehavior (string) --Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\n\nInstanceType (string) --The instance type. For more information about the instance types that you can import, see Instance Types in the VM Import/Export User Guide.\n\nMonitoring (boolean) --Indicates whether monitoring is enabled.\n\nPlacement (dict) --The placement information for the instance.\n\nAvailabilityZone (string) --The Availability Zone of the instance.\nIf not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.\nThis parameter is not supported by CreateFleet .\n\nAffinity (string) --The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance command.\nThis parameter is not supported by CreateFleet .\n\nGroupName (string) --The name of the placement group the instance is in.\n\nPartitionNumber (integer) --The number of the partition the instance is in. Valid only if the placement group strategy is set to partition .\nThis parameter is not supported by CreateFleet .\n\nHostId (string) --The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance command.\nThis parameter is not supported by CreateFleet .\n\nTenancy (string) --The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance command.\nThis parameter is not supported by CreateFleet .\n\nSpreadDomain (string) --Reserved for future use.\nThis parameter is not supported by CreateFleet .\n\nHostResourceGroupArn (string) --The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host .\nThis parameter is not supported by CreateFleet .\n\n\n\nPrivateIpAddress (string) --[EC2-VPC] An available IP address from the IP address range of the subnet.\n\nSubnetId (string) --[EC2-VPC] The ID of the subnet in which to launch the instance.\n\nUserData (dict) --The Base64-encoded user data to make available to the instance.\n\nData (string) --The user data. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.\n\n\n\n\n

    :type Platform: string
    :param Platform: [REQUIRED]\nThe instance operating system.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ConversionTask': {
        'ConversionTaskId': 'string',
        'ExpirationTime': 'string',
        'ImportInstance': {
            'Description': 'string',
            'InstanceId': 'string',
            'Platform': 'Windows',
            'Volumes': [
                {
                    'AvailabilityZone': 'string',
                    'BytesConverted': 123,
                    'Description': 'string',
                    'Image': {
                        'Checksum': 'string',
                        'Format': 'VMDK'|'RAW'|'VHD',
                        'ImportManifestUrl': 'string',
                        'Size': 123
                    },
                    'Status': 'string',
                    'StatusMessage': 'string',
                    'Volume': {
                        'Id': 'string',
                        'Size': 123
                    }
                },
            ]
        },
        'ImportVolume': {
            'AvailabilityZone': 'string',
            'BytesConverted': 123,
            'Description': 'string',
            'Image': {
                'Checksum': 'string',
                'Format': 'VMDK'|'RAW'|'VHD',
                'ImportManifestUrl': 'string',
                'Size': 123
            },
            'Volume': {
                'Id': 'string',
                'Size': 123
            }
        },
        'State': 'active'|'cancelling'|'cancelled'|'completed',
        'StatusMessage': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

ConversionTask (dict) --
Information about the conversion task.

ConversionTaskId (string) --
The ID of the conversion task.

ExpirationTime (string) --
The time when the task expires. If the upload isn\'t complete before the expiration time, we automatically cancel the task.

ImportInstance (dict) --
If the task is for importing an instance, this contains information about the import instance task.

Description (string) --
A description of the task.

InstanceId (string) --
The ID of the instance.

Platform (string) --
The instance operating system.

Volumes (list) --
The volumes.

(dict) --
Describes an import volume task.

AvailabilityZone (string) --
The Availability Zone where the resulting instance will reside.

BytesConverted (integer) --
The number of bytes converted so far.

Description (string) --
A description of the task.

Image (dict) --
The image.

Checksum (string) --
The checksum computed for the disk image.

Format (string) --
The disk image format.

ImportManifestUrl (string) --
A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide .
For information about the import manifest referenced by this API action, see VM Import Manifest .

Size (integer) --
The size of the disk image, in GiB.



Status (string) --
The status of the import of this particular disk image.

StatusMessage (string) --
The status information or errors related to the disk image.

Volume (dict) --
The volume.

Id (string) --
The volume identifier.

Size (integer) --
The size of the volume, in GiB.









ImportVolume (dict) --
If the task is for importing a volume, this contains information about the import volume task.

AvailabilityZone (string) --
The Availability Zone where the resulting volume will reside.

BytesConverted (integer) --
The number of bytes converted so far.

Description (string) --
The description you provided when starting the import volume task.

Image (dict) --
The image.

Checksum (string) --
The checksum computed for the disk image.

Format (string) --
The disk image format.

ImportManifestUrl (string) --
A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide .
For information about the import manifest referenced by this API action, see VM Import Manifest .

Size (integer) --
The size of the disk image, in GiB.



Volume (dict) --
The volume.

Id (string) --
The volume identifier.

Size (integer) --
The size of the volume, in GiB.





State (string) --
The state of the conversion task.

StatusMessage (string) --
The status message related to the conversion task.

Tags (list) --
Any tags assigned to the task.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'ConversionTask': {
            'ConversionTaskId': 'string',
            'ExpirationTime': 'string',
            'ImportInstance': {
                'Description': 'string',
                'InstanceId': 'string',
                'Platform': 'Windows',
                'Volumes': [
                    {
                        'AvailabilityZone': 'string',
                        'BytesConverted': 123,
                        'Description': 'string',
                        'Image': {
                            'Checksum': 'string',
                            'Format': 'VMDK'|'RAW'|'VHD',
                            'ImportManifestUrl': 'string',
                            'Size': 123
                        },
                        'Status': 'string',
                        'StatusMessage': 'string',
                        'Volume': {
                            'Id': 'string',
                            'Size': 123
                        }
                    },
                ]
            },
            'ImportVolume': {
                'AvailabilityZone': 'string',
                'BytesConverted': 123,
                'Description': 'string',
                'Image': {
                    'Checksum': 'string',
                    'Format': 'VMDK'|'RAW'|'VHD',
                    'ImportManifestUrl': 'string',
                    'Size': 123
                },
                'Volume': {
                    'Id': 'string',
                    'Size': 123
                }
            },
            'State': 'active'|'cancelling'|'cancelled'|'completed',
            'StatusMessage': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def import_key_pair(DryRun=None, KeyName=None, PublicKeyMaterial=None, TagSpecifications=None):
    """
    Imports the public key from an RSA key pair that you created with a third-party tool. Compare this with  CreateKeyPair , in which AWS creates the key pair and gives the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create the key pair and give AWS just the public key. The private key is never transferred between you and AWS.
    For more information about key pairs, see Key Pairs in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.import_key_pair(
        DryRun=True|False,
        KeyName='string',
        PublicKeyMaterial=b'bytes',
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type KeyName: string
    :param KeyName: [REQUIRED]\nA unique name for the key pair.\n

    :type PublicKeyMaterial: bytes
    :param PublicKeyMaterial: [REQUIRED]\nThe public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the imported key pair.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'KeyFingerprint': 'string',
    'KeyName': 'string',
    'KeyPairId': 'string',
    'Tags': [
        {
            'Key': 'string',
            'Value': 'string'
        },
    ]
}


Response Structure

(dict) --

KeyFingerprint (string) --
The MD5 public key fingerprint as specified in section 4 of RFC 4716.

KeyName (string) --
The key pair name you provided.

KeyPairId (string) --
The ID of the resulting key pair.

Tags (list) --
The tags applied to the imported key pair.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.












    :return: {
        'KeyFingerprint': 'string',
        'KeyName': 'string',
        'KeyPairId': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
    
    
    """
    pass

def import_snapshot(ClientData=None, ClientToken=None, Description=None, DiskContainer=None, DryRun=None, Encrypted=None, KmsKeyId=None, RoleName=None):
    """
    Imports a disk into an EBS snapshot.
    See also: AWS API Documentation
    
    
    :example: response = client.import_snapshot(
        ClientData={
            'Comment': 'string',
            'UploadEnd': datetime(2015, 1, 1),
            'UploadSize': 123.0,
            'UploadStart': datetime(2015, 1, 1)
        },
        ClientToken='string',
        Description='string',
        DiskContainer={
            'Description': 'string',
            'Format': 'string',
            'Url': 'string',
            'UserBucket': {
                'S3Bucket': 'string',
                'S3Key': 'string'
            }
        },
        DryRun=True|False,
        Encrypted=True|False,
        KmsKeyId='string',
        RoleName='string'
    )
    
    
    :type ClientData: dict
    :param ClientData: The client-specific data.\n\nComment (string) --A user-defined comment about the disk upload.\n\nUploadEnd (datetime) --The time that the disk upload ends.\n\nUploadSize (float) --The size of the uploaded disk image, in GiB.\n\nUploadStart (datetime) --The time that the disk upload starts.\n\n\n

    :type ClientToken: string
    :param ClientToken: Token to enable idempotency for VM import requests.

    :type Description: string
    :param Description: The description string for the import snapshot task.

    :type DiskContainer: dict
    :param DiskContainer: Information about the disk container.\n\nDescription (string) --The description of the disk image being imported.\n\nFormat (string) --The format of the disk image being imported.\nValid values: VHD | VMDK\n\nUrl (string) --The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..).\n\nUserBucket (dict) --The S3 bucket for the disk image.\n\nS3Bucket (string) --The name of the S3 bucket where the disk image is located.\n\nS3Key (string) --The file name of the disk image.\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Encrypted: boolean
    :param Encrypted: Specifies whether the destination snapshot of the imported image should be encrypted. The default CMK for EBS is used unless you specify a non-default AWS Key Management Service (AWS KMS) CMK using KmsKeyId . For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .

    :type KmsKeyId: string
    :param KmsKeyId: An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.\nThe CMK identifier may be provided in any of the following formats:\n\nKey ID\nKey alias. The alias ARN contains the arn:aws:kms namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the alias namespace, and then the CMK alias. For example, arn:aws:kms:us-east-1 :012345678910 :alias/ExampleAlias .\nARN using key ID. The ID ARN contains the arn:aws:kms namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the key namespace, and then the CMK ID. For example, arn:aws:kms:us-east-1 :012345678910 :key/abcd1234-a123-456a-a12b-a123b4cd56ef .\nARN using key alias. The alias ARN contains the arn:aws:kms namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the alias namespace, and then the CMK alias. For example, arn:aws:kms:us-east-1 :012345678910 :alias/ExampleAlias .\n\nAWS parses KmsKeyId asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure.\nThe specified CMK must exist in the Region that the snapshot is being copied to.\nAmazon EBS does not support asymmetric CMKs.\n

    :type RoleName: string
    :param RoleName: The name of the role to use when not using the default role, \'vmimport\'.

    :rtype: dict

ReturnsResponse Syntax
{
    'Description': 'string',
    'ImportTaskId': 'string',
    'SnapshotTaskDetail': {
        'Description': 'string',
        'DiskImageSize': 123.0,
        'Encrypted': True|False,
        'Format': 'string',
        'KmsKeyId': 'string',
        'Progress': 'string',
        'SnapshotId': 'string',
        'Status': 'string',
        'StatusMessage': 'string',
        'Url': 'string',
        'UserBucket': {
            'S3Bucket': 'string',
            'S3Key': 'string'
        }
    }
}


Response Structure

(dict) --

Description (string) --
A description of the import snapshot task.

ImportTaskId (string) --
The ID of the import snapshot task.

SnapshotTaskDetail (dict) --
Information about the import snapshot task.

Description (string) --
The description of the snapshot.

DiskImageSize (float) --
The size of the disk in the snapshot, in GiB.

Encrypted (boolean) --
Indicates whether the snapshot is encrypted.

Format (string) --
The format of the disk image from which the snapshot is created.

KmsKeyId (string) --
The identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to create the encrypted snapshot.

Progress (string) --
The percentage of completion for the import snapshot task.

SnapshotId (string) --
The snapshot ID of the disk being imported.

Status (string) --
A brief status for the import snapshot task.

StatusMessage (string) --
A detailed status message for the import snapshot task.

Url (string) --
The URL of the disk image from which the snapshot is created.

UserBucket (dict) --
The S3 bucket for the disk image.

S3Bucket (string) --
The S3 bucket from which the disk image was created.

S3Key (string) --
The file name of the disk image.












    :return: {
        'Description': 'string',
        'ImportTaskId': 'string',
        'SnapshotTaskDetail': {
            'Description': 'string',
            'DiskImageSize': 123.0,
            'Encrypted': True|False,
            'Format': 'string',
            'KmsKeyId': 'string',
            'Progress': 'string',
            'SnapshotId': 'string',
            'Status': 'string',
            'StatusMessage': 'string',
            'Url': 'string',
            'UserBucket': {
                'S3Bucket': 'string',
                'S3Key': 'string'
            }
        }
    }
    
    
    """
    pass

def import_volume(AvailabilityZone=None, Description=None, DryRun=None, Image=None, Volume=None):
    """
    Creates an import volume task using metadata from the specified disk image.For more information, see Importing Disks to Amazon EBS .
    For information about the import manifest referenced by this API action, see VM Import Manifest .
    See also: AWS API Documentation
    
    
    :example: response = client.import_volume(
        AvailabilityZone='string',
        Description='string',
        DryRun=True|False,
        Image={
            'Bytes': 123,
            'Format': 'VMDK'|'RAW'|'VHD',
            'ImportManifestUrl': 'string'
        },
        Volume={
            'Size': 123
        }
    )
    
    
    :type AvailabilityZone: string
    :param AvailabilityZone: [REQUIRED]\nThe Availability Zone for the resulting EBS volume.\n

    :type Description: string
    :param Description: A description of the volume.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Image: dict
    :param Image: [REQUIRED]\nThe disk image.\n\nBytes (integer) -- [REQUIRED]The size of the disk image, in GiB.\n\nFormat (string) -- [REQUIRED]The disk image format.\n\nImportManifestUrl (string) -- [REQUIRED]A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the 'Query String Request Authentication Alternative' section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide .\nFor information about the import manifest referenced by this API action, see VM Import Manifest .\n\n\n

    :type Volume: dict
    :param Volume: [REQUIRED]\nThe volume size.\n\nSize (integer) -- [REQUIRED]The size of the volume, in GiB.\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ConversionTask': {
        'ConversionTaskId': 'string',
        'ExpirationTime': 'string',
        'ImportInstance': {
            'Description': 'string',
            'InstanceId': 'string',
            'Platform': 'Windows',
            'Volumes': [
                {
                    'AvailabilityZone': 'string',
                    'BytesConverted': 123,
                    'Description': 'string',
                    'Image': {
                        'Checksum': 'string',
                        'Format': 'VMDK'|'RAW'|'VHD',
                        'ImportManifestUrl': 'string',
                        'Size': 123
                    },
                    'Status': 'string',
                    'StatusMessage': 'string',
                    'Volume': {
                        'Id': 'string',
                        'Size': 123
                    }
                },
            ]
        },
        'ImportVolume': {
            'AvailabilityZone': 'string',
            'BytesConverted': 123,
            'Description': 'string',
            'Image': {
                'Checksum': 'string',
                'Format': 'VMDK'|'RAW'|'VHD',
                'ImportManifestUrl': 'string',
                'Size': 123
            },
            'Volume': {
                'Id': 'string',
                'Size': 123
            }
        },
        'State': 'active'|'cancelling'|'cancelled'|'completed',
        'StatusMessage': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

ConversionTask (dict) --
Information about the conversion task.

ConversionTaskId (string) --
The ID of the conversion task.

ExpirationTime (string) --
The time when the task expires. If the upload isn\'t complete before the expiration time, we automatically cancel the task.

ImportInstance (dict) --
If the task is for importing an instance, this contains information about the import instance task.

Description (string) --
A description of the task.

InstanceId (string) --
The ID of the instance.

Platform (string) --
The instance operating system.

Volumes (list) --
The volumes.

(dict) --
Describes an import volume task.

AvailabilityZone (string) --
The Availability Zone where the resulting instance will reside.

BytesConverted (integer) --
The number of bytes converted so far.

Description (string) --
A description of the task.

Image (dict) --
The image.

Checksum (string) --
The checksum computed for the disk image.

Format (string) --
The disk image format.

ImportManifestUrl (string) --
A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide .
For information about the import manifest referenced by this API action, see VM Import Manifest .

Size (integer) --
The size of the disk image, in GiB.



Status (string) --
The status of the import of this particular disk image.

StatusMessage (string) --
The status information or errors related to the disk image.

Volume (dict) --
The volume.

Id (string) --
The volume identifier.

Size (integer) --
The size of the volume, in GiB.









ImportVolume (dict) --
If the task is for importing a volume, this contains information about the import volume task.

AvailabilityZone (string) --
The Availability Zone where the resulting volume will reside.

BytesConverted (integer) --
The number of bytes converted so far.

Description (string) --
The description you provided when starting the import volume task.

Image (dict) --
The image.

Checksum (string) --
The checksum computed for the disk image.

Format (string) --
The disk image format.

ImportManifestUrl (string) --
A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the Authenticating REST Requests topic in the Amazon Simple Storage Service Developer Guide .
For information about the import manifest referenced by this API action, see VM Import Manifest .

Size (integer) --
The size of the disk image, in GiB.



Volume (dict) --
The volume.

Id (string) --
The volume identifier.

Size (integer) --
The size of the volume, in GiB.





State (string) --
The state of the conversion task.

StatusMessage (string) --
The status message related to the conversion task.

Tags (list) --
Any tags assigned to the task.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'ConversionTask': {
            'ConversionTaskId': 'string',
            'ExpirationTime': 'string',
            'ImportInstance': {
                'Description': 'string',
                'InstanceId': 'string',
                'Platform': 'Windows',
                'Volumes': [
                    {
                        'AvailabilityZone': 'string',
                        'BytesConverted': 123,
                        'Description': 'string',
                        'Image': {
                            'Checksum': 'string',
                            'Format': 'VMDK'|'RAW'|'VHD',
                            'ImportManifestUrl': 'string',
                            'Size': 123
                        },
                        'Status': 'string',
                        'StatusMessage': 'string',
                        'Volume': {
                            'Id': 'string',
                            'Size': 123
                        }
                    },
                ]
            },
            'ImportVolume': {
                'AvailabilityZone': 'string',
                'BytesConverted': 123,
                'Description': 'string',
                'Image': {
                    'Checksum': 'string',
                    'Format': 'VMDK'|'RAW'|'VHD',
                    'ImportManifestUrl': 'string',
                    'Size': 123
                },
                'Volume': {
                    'Id': 'string',
                    'Size': 123
                }
            },
            'State': 'active'|'cancelling'|'cancelled'|'completed',
            'StatusMessage': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def modify_availability_zone_group(GroupName=None, OptInStatus=None, DryRun=None):
    """
    Enables or disables an Availability Zone group for your account.
    Use describe-availability-zones to view the value for GroupName .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_availability_zone_group(
        GroupName='string',
        OptInStatus='opted-in'|'not-opted-in',
        DryRun=True|False
    )
    
    
    :type GroupName: string
    :param GroupName: [REQUIRED]\nThe name of the Availability Zone Group.\n

    :type OptInStatus: string
    :param OptInStatus: [REQUIRED]\nIndicates whether to enable or disable membership. The valid values are opted-in . You must contact AWS Support to disable an Availability Zone group.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Is true if the request succeeds, and an error otherwise.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def modify_capacity_reservation(CapacityReservationId=None, InstanceCount=None, EndDate=None, EndDateType=None, DryRun=None):
    """
    Modifies a Capacity Reservation\'s capacity and the conditions under which it is to be released. You cannot change a Capacity Reservation\'s instance type, EBS optimization, instance store settings, platform, Availability Zone, or instance eligibility. If you need to modify any of these attributes, we recommend that you cancel the Capacity Reservation, and then create a new one with the required attributes.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_capacity_reservation(
        CapacityReservationId='string',
        InstanceCount=123,
        EndDate=datetime(2015, 1, 1),
        EndDateType='unlimited'|'limited',
        DryRun=True|False
    )
    
    
    :type CapacityReservationId: string
    :param CapacityReservationId: [REQUIRED]\nThe ID of the Capacity Reservation.\n

    :type InstanceCount: integer
    :param InstanceCount: The number of instances for which to reserve capacity.

    :type EndDate: datetime
    :param EndDate: The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation\'s state changes to expired when it reaches its end date and time.\nThe Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.\nYou must provide an EndDate value if EndDateType is limited . Omit EndDate if EndDateType is unlimited .\n

    :type EndDateType: string
    :param EndDateType: Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:\n\nunlimited - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an EndDate value if EndDateType is unlimited .\nlimited - The Capacity Reservation expires automatically at a specified date and time. You must provide an EndDate value if EndDateType is limited .\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def modify_client_vpn_endpoint(ClientVpnEndpointId=None, ServerCertificateArn=None, ConnectionLogOptions=None, DnsServers=None, VpnPort=None, Description=None, SplitTunnel=None, DryRun=None, SecurityGroupIds=None, VpcId=None):
    """
    Modifies the specified Client VPN endpoint. Modifying the DNS server resets existing client connections.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_client_vpn_endpoint(
        ClientVpnEndpointId='string',
        ServerCertificateArn='string',
        ConnectionLogOptions={
            'Enabled': True|False,
            'CloudwatchLogGroup': 'string',
            'CloudwatchLogStream': 'string'
        },
        DnsServers={
            'CustomDnsServers': [
                'string',
            ],
            'Enabled': True|False
        },
        VpnPort=123,
        Description='string',
        SplitTunnel=True|False,
        DryRun=True|False,
        SecurityGroupIds=[
            'string',
        ],
        VpcId='string'
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint to modify.\n

    :type ServerCertificateArn: string
    :param ServerCertificateArn: The ARN of the server certificate to be used. The server certificate must be provisioned in AWS Certificate Manager (ACM).

    :type ConnectionLogOptions: dict
    :param ConnectionLogOptions: Information about the client connection logging options.\nIf you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:\n\nClient connection requests\nClient connection results (successful and unsuccessful)\nReasons for unsuccessful client connection requests\nClient connection termination time\n\n\nEnabled (boolean) --Indicates whether connection logging is enabled.\n\nCloudwatchLogGroup (string) --The name of the CloudWatch Logs log group.\n\nCloudwatchLogStream (string) --The name of the CloudWatch Logs log stream to which the connection data is published.\n\n\n

    :type DnsServers: dict
    :param DnsServers: Information about the DNS servers to be used by Client VPN connections. A Client VPN endpoint can have up to two DNS servers.\n\nCustomDnsServers (list) --The IPv4 address range, in CIDR notation, of the DNS servers to be used. You can specify up to two DNS servers. Ensure that the DNS servers can be reached by the clients. The specified values overwrite the existing values.\n\n(string) --\n\n\nEnabled (boolean) --Indicates whether DNS servers should be used. Specify False to delete the existing DNS servers.\n\n\n

    :type VpnPort: integer
    :param VpnPort: The port number to assign to the Client VPN endpoint for TCP and UDP traffic.\nValid Values: 443 | 1194\nDefault Value: 443\n

    :type Description: string
    :param Description: A brief description of the Client VPN endpoint.

    :type SplitTunnel: boolean
    :param SplitTunnel: Indicates whether the VPN is split-tunnel.\nFor information about split-tunnel VPN endpoints, see Split-Tunnel AWS Client VPN Endpoint in the AWS Client VPN Administrator Guide .\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type SecurityGroupIds: list
    :param SecurityGroupIds: The IDs of one or more security groups to apply to the target network.\n\n(string) --\n\n

    :type VpcId: string
    :param VpcId: The ID of the VPC to associate with the Client VPN endpoint.

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def modify_default_credit_specification(DryRun=None, InstanceFamily=None, CpuCredits=None):
    """
    Modifies the default credit option for CPU usage of burstable performance instances. The default credit option is set at the account level per AWS Region, and is specified per instance family. All new burstable performance instances in the account launch using the default credit option.
    For more information, see Burstable Performance Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_default_credit_specification(
        DryRun=True|False,
        InstanceFamily='t2'|'t3'|'t3a',
        CpuCredits='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceFamily: string
    :param InstanceFamily: [REQUIRED]\nThe instance family.\n

    :type CpuCredits: string
    :param CpuCredits: [REQUIRED]\nThe credit option for CPU usage of the instance family.\nValid Values: standard | unlimited\n

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceFamilyCreditSpecification': {
        'InstanceFamily': 't2'|'t3'|'t3a',
        'CpuCredits': 'string'
    }
}


Response Structure

(dict) --

InstanceFamilyCreditSpecification (dict) --
The default credit option for CPU usage of the instance family.

InstanceFamily (string) --
The instance family.

CpuCredits (string) --
The default credit option for CPU usage of the instance family. Valid values are standard and unlimited .










    :return: {
        'InstanceFamilyCreditSpecification': {
            'InstanceFamily': 't2'|'t3'|'t3a',
            'CpuCredits': 'string'
        }
    }
    
    
    """
    pass

def modify_ebs_default_kms_key_id(KmsKeyId=None, DryRun=None):
    """
    Changes the default customer master key (CMK) for EBS encryption by default for your account in this Region.
    AWS creates a unique AWS managed CMK in each Region for use with encryption by default. If you change the default CMK to a symmetric customer managed CMK, it is used instead of the AWS managed CMK. To reset the default CMK to the AWS managed CMK for EBS, use  ResetEbsDefaultKmsKeyId . Amazon EBS does not support asymmetric CMKs.
    If you delete or disable the customer managed CMK that you specified for use with encryption by default, your instances will fail to launch.
    For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_ebs_default_kms_key_id(
        KmsKeyId='string',
        DryRun=True|False
    )
    
    
    :type KmsKeyId: string
    :param KmsKeyId: [REQUIRED]\nThe identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used. If KmsKeyId is specified, the encrypted state must be true .\nYou can specify the CMK using any of the following:\n\nKey ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.\nKey alias. For example, alias/ExampleAlias.\nKey ARN. For example, arn:aws:kms:us-east-1 :012345678910 :key/abcd1234-a123-456a-a12b-a123b4cd56ef .\nAlias ARN. For example, arn:aws:kms:us-east-1 :012345678910 :alias/ExampleAlias .\n\nAWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.\nAmazon EBS does not support asymmetric CMKs.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'KmsKeyId': 'string'
}


Response Structure

(dict) --

KmsKeyId (string) --
The Amazon Resource Name (ARN) of the default CMK for encryption by default.








    :return: {
        'KmsKeyId': 'string'
    }
    
    
    """
    pass

def modify_fleet(DryRun=None, ExcessCapacityTerminationPolicy=None, FleetId=None, TargetCapacitySpecification=None):
    """
    Modifies the specified EC2 Fleet.
    You can only modify an EC2 Fleet request of type maintain .
    While the EC2 Fleet is being modified, it is in the modifying state.
    To scale up your EC2 Fleet, increase its target capacity. The EC2 Fleet launches the additional Spot Instances according to the allocation strategy for the EC2 Fleet request. If the allocation strategy is lowest-price , the EC2 Fleet launches instances using the Spot Instance pool with the lowest price. If the allocation strategy is diversified , the EC2 Fleet distributes the instances across the Spot Instance pools. If the allocation strategy is capacity-optimized , EC2 Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.
    To scale down your EC2 Fleet, decrease its target capacity. First, the EC2 Fleet cancels any open requests that exceed the new target capacity. You can request that the EC2 Fleet terminate Spot Instances until the size of the fleet no longer exceeds the new target capacity. If the allocation strategy is lowest-price , the EC2 Fleet terminates the instances with the highest price per unit. If the allocation strategy is capacity-optimized , the EC2 Fleet terminates the instances in the Spot Instance pools that have the least available Spot Instance capacity. If the allocation strategy is diversified , the EC2 Fleet terminates instances across the Spot Instance pools. Alternatively, you can request that the EC2 Fleet keep the fleet at its current size, but not replace any Spot Instances that are interrupted or that you terminate manually.
    If you are finished with your EC2 Fleet for now, but will use it again later, you can set the target capacity to 0.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_fleet(
        DryRun=True|False,
        ExcessCapacityTerminationPolicy='no-termination'|'termination',
        FleetId='string',
        TargetCapacitySpecification={
            'TotalTargetCapacity': 123,
            'OnDemandTargetCapacity': 123,
            'SpotTargetCapacity': 123,
            'DefaultTargetCapacityType': 'spot'|'on-demand'
        }
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ExcessCapacityTerminationPolicy: string
    :param ExcessCapacityTerminationPolicy: Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.

    :type FleetId: string
    :param FleetId: [REQUIRED]\nThe ID of the EC2 Fleet.\n

    :type TargetCapacitySpecification: dict
    :param TargetCapacitySpecification: [REQUIRED]\nThe size of the EC2 Fleet.\n\nTotalTargetCapacity (integer) -- [REQUIRED]The number of units to request, filled using DefaultTargetCapacityType .\n\nOnDemandTargetCapacity (integer) --The number of On-Demand units to request.\n\nSpotTargetCapacity (integer) --The number of Spot units to request.\n\nDefaultTargetCapacityType (string) --The default TotalTargetCapacity , which is either Spot or On-Demand .\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Is true if the request succeeds, and an error otherwise.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def modify_fpga_image_attribute(DryRun=None, FpgaImageId=None, Attribute=None, OperationType=None, UserIds=None, UserGroups=None, ProductCodes=None, LoadPermission=None, Description=None, Name=None):
    """
    Modifies the specified attribute of the specified Amazon FPGA Image (AFI).
    See also: AWS API Documentation
    
    
    :example: response = client.modify_fpga_image_attribute(
        DryRun=True|False,
        FpgaImageId='string',
        Attribute='description'|'name'|'loadPermission'|'productCodes',
        OperationType='add'|'remove',
        UserIds=[
            'string',
        ],
        UserGroups=[
            'string',
        ],
        ProductCodes=[
            'string',
        ],
        LoadPermission={
            'Add': [
                {
                    'Group': 'all',
                    'UserId': 'string'
                },
            ],
            'Remove': [
                {
                    'Group': 'all',
                    'UserId': 'string'
                },
            ]
        },
        Description='string',
        Name='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type FpgaImageId: string
    :param FpgaImageId: [REQUIRED]\nThe ID of the AFI.\n

    :type Attribute: string
    :param Attribute: The name of the attribute.

    :type OperationType: string
    :param OperationType: The operation type.

    :type UserIds: list
    :param UserIds: The AWS account IDs. This parameter is valid only when modifying the loadPermission attribute.\n\n(string) --\n\n

    :type UserGroups: list
    :param UserGroups: The user groups. This parameter is valid only when modifying the loadPermission attribute.\n\n(string) --\n\n

    :type ProductCodes: list
    :param ProductCodes: The product codes. After you add a product code to an AFI, it can\'t be removed. This parameter is valid only when modifying the productCodes attribute.\n\n(string) --\n\n

    :type LoadPermission: dict
    :param LoadPermission: The load permission for the AFI.\n\nAdd (list) --The load permissions to add.\n\n(dict) --Describes a load permission.\n\nGroup (string) --The name of the group.\n\nUserId (string) --The AWS account ID.\n\n\n\n\n\nRemove (list) --The load permissions to remove.\n\n(dict) --Describes a load permission.\n\nGroup (string) --The name of the group.\n\nUserId (string) --The AWS account ID.\n\n\n\n\n\n\n

    :type Description: string
    :param Description: A description for the AFI.

    :type Name: string
    :param Name: A name for the AFI.

    :rtype: dict

ReturnsResponse Syntax
{
    'FpgaImageAttribute': {
        'FpgaImageId': 'string',
        'Name': 'string',
        'Description': 'string',
        'LoadPermissions': [
            {
                'UserId': 'string',
                'Group': 'all'
            },
        ],
        'ProductCodes': [
            {
                'ProductCodeId': 'string',
                'ProductCodeType': 'devpay'|'marketplace'
            },
        ]
    }
}


Response Structure

(dict) --

FpgaImageAttribute (dict) --
Information about the attribute.

FpgaImageId (string) --
The ID of the AFI.

Name (string) --
The name of the AFI.

Description (string) --
The description of the AFI.

LoadPermissions (list) --
The load permissions.

(dict) --
Describes a load permission.

UserId (string) --
The AWS account ID.

Group (string) --
The name of the group.





ProductCodes (list) --
The product codes.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.














    :return: {
        'FpgaImageAttribute': {
            'FpgaImageId': 'string',
            'Name': 'string',
            'Description': 'string',
            'LoadPermissions': [
                {
                    'UserId': 'string',
                    'Group': 'all'
                },
            ],
            'ProductCodes': [
                {
                    'ProductCodeId': 'string',
                    'ProductCodeType': 'devpay'|'marketplace'
                },
            ]
        }
    }
    
    
    """
    pass

def modify_hosts(AutoPlacement=None, HostIds=None, HostRecovery=None, InstanceType=None, InstanceFamily=None):
    """
    Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled, any instances that you launch with a tenancy of host but without a specific host ID are placed onto any available Dedicated Host in your account that has auto-placement enabled. When auto-placement is disabled, you need to provide a host ID to have the instance launch onto a specific host. If no host ID is provided, the instance is launched onto a suitable host with auto-placement enabled.
    You can also use this API action to modify a Dedicated Host to support either multiple instance types in an instance family, or to support a specific instance type only.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_hosts(
        AutoPlacement='on'|'off',
        HostIds=[
            'string',
        ],
        HostRecovery='on'|'off',
        InstanceType='string',
        InstanceFamily='string'
    )
    
    
    :type AutoPlacement: string
    :param AutoPlacement: Specify whether to enable or disable auto-placement.

    :type HostIds: list
    :param HostIds: [REQUIRED]\nThe IDs of the Dedicated Hosts to modify.\n\n(string) --\n\n

    :type HostRecovery: string
    :param HostRecovery: Indicates whether to enable or disable host recovery for the Dedicated Host. For more information, see Host Recovery in the Amazon Elastic Compute Cloud User Guide .

    :type InstanceType: string
    :param InstanceType: Specifies the instance type to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support only a specific instance type.\nIf you want to modify a Dedicated Host to support multiple instance types in its current instance family, omit this parameter and specify InstanceFamily instead. You cannot specify InstanceType and InstanceFamily in the same request.\n

    :type InstanceFamily: string
    :param InstanceFamily: Specifies the instance family to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support multiple instance types within its current instance family.\nIf you want to modify a Dedicated Host to support a specific instance type only, omit this parameter and specify InstanceType instead. You cannot specify InstanceFamily and InstanceType in the same request.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Successful': [
        'string',
    ],
    'Unsuccessful': [
        {
            'Error': {
                'Code': 'string',
                'Message': 'string'
            },
            'ResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --

Successful (list) --
The IDs of the Dedicated Hosts that were successfully modified.

(string) --


Unsuccessful (list) --
The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.

(dict) --
Information about items that were not successfully processed in a batch call.

Error (dict) --
Information about the error.

Code (string) --
The error code.

Message (string) --
The error message accompanying the error code.



ResourceId (string) --
The ID of the resource.












    :return: {
        'Successful': [
            'string',
        ],
        'Unsuccessful': [
            {
                'Error': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'ResourceId': 'string'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_id_format(Resource=None, UseLongIds=None):
    """
    Modifies the ID format for the specified resource on a per-Region basis. You can specify that resources should receive longer IDs (17-character IDs) when they are created.
    This request can only be used to modify longer ID settings for resource types that are within the opt-in period. Resources currently in their opt-in period include: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | route-table | route-table-association | security-group | subnet | subnet-cidr-block-association | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .
    This setting applies to the IAM user who makes the request; it does not apply to the entire AWS account. By default, an IAM user defaults to the same settings as the root user. If you\'re using this action as the root user, then these settings apply to the entire account, unless an IAM user explicitly overrides these settings for themselves. For more information, see Resource IDs in the Amazon Elastic Compute Cloud User Guide .
    Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant Describe command for the resource type.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_id_format(
        Resource='string',
        UseLongIds=True|False
    )
    
    
    :type Resource: string
    :param Resource: [REQUIRED]\nThe type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | route-table | route-table-association | security-group | subnet | subnet-cidr-block-association | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .\nAlternatively, use the all-current option to include all resource types that are currently within their opt-in period for longer IDs.\n

    :type UseLongIds: boolean
    :param UseLongIds: [REQUIRED]\nIndicate whether the resource should use longer IDs (17-character IDs).\n

    """
    pass

def modify_identity_id_format(PrincipalArn=None, Resource=None, UseLongIds=None):
    """
    Modifies the ID format of a resource for a specified IAM user, IAM role, or the root user for an account; or all IAM users, IAM roles, and the root user for an account. You can specify that resources should receive longer IDs (17-character IDs) when they are created.
    This request can only be used to modify longer ID settings for resource types that are within the opt-in period. Resources currently in their opt-in period include: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | route-table | route-table-association | security-group | subnet | subnet-cidr-block-association | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .
    For more information, see Resource IDs in the Amazon Elastic Compute Cloud User Guide .
    This setting applies to the principal specified in the request; it does not apply to the principal that makes the request.
    Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant Describe command for the resource type.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_identity_id_format(
        PrincipalArn='string',
        Resource='string',
        UseLongIds=True|False
    )
    
    
    :type PrincipalArn: string
    :param PrincipalArn: [REQUIRED]\nThe ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify all to modify the ID format for all IAM users, IAM roles, and the root user of the account.\n

    :type Resource: string
    :param Resource: [REQUIRED]\nThe type of resource: bundle | conversion-task | customer-gateway | dhcp-options | elastic-ip-allocation | elastic-ip-association | export-task | flow-log | image | import-task | internet-gateway | network-acl | network-acl-association | network-interface | network-interface-attachment | prefix-list | route-table | route-table-association | security-group | subnet | subnet-cidr-block-association | vpc | vpc-cidr-block-association | vpc-endpoint | vpc-peering-connection | vpn-connection | vpn-gateway .\nAlternatively, use the all-current option to include all resource types that are currently within their opt-in period for longer IDs.\n

    :type UseLongIds: boolean
    :param UseLongIds: [REQUIRED]\nIndicates whether the resource should use longer IDs (17-character IDs)\n

    """
    pass

def modify_image_attribute(Attribute=None, Description=None, ImageId=None, LaunchPermission=None, OperationType=None, ProductCodes=None, UserGroups=None, UserIds=None, Value=None, DryRun=None):
    """
    Modifies the specified attribute of the specified AMI. You can specify only one attribute at a time. You can use the Attribute parameter to specify the attribute or one of the following parameters: Description , LaunchPermission , or ProductCode .
    AWS Marketplace product codes cannot be modified. Images with an AWS Marketplace product code cannot be made public.
    To enable the SriovNetSupport enhanced networking attribute of an image, enable SriovNetSupport on an instance and create an AMI from the instance.
    See also: AWS API Documentation
    
    Examples
    This example makes the specified AMI public.
    Expected Output:
    This example grants launch permissions for the specified AMI to the specified AWS account.
    Expected Output:
    
    :example: response = client.modify_image_attribute(
        Attribute='string',
        Description={
            'Value': 'string'
        },
        ImageId='string',
        LaunchPermission={
            'Add': [
                {
                    'Group': 'all',
                    'UserId': 'string'
                },
            ],
            'Remove': [
                {
                    'Group': 'all',
                    'UserId': 'string'
                },
            ]
        },
        OperationType='add'|'remove',
        ProductCodes=[
            'string',
        ],
        UserGroups=[
            'string',
        ],
        UserIds=[
            'string',
        ],
        Value='string',
        DryRun=True|False
    )
    
    
    :type Attribute: string
    :param Attribute: The name of the attribute to modify. The valid values are description , launchPermission , and productCodes .

    :type Description: dict
    :param Description: A new description for the AMI.\n\nValue (string) --The attribute value. The value is case-sensitive.\n\n\n

    :type ImageId: string
    :param ImageId: [REQUIRED]\nThe ID of the AMI.\n

    :type LaunchPermission: dict
    :param LaunchPermission: A new launch permission for the AMI.\n\nAdd (list) --The AWS account ID to add to the list of launch permissions for the AMI.\n\n(dict) --Describes a launch permission.\n\nGroup (string) --The name of the group.\n\nUserId (string) --The AWS account ID.\n\n\n\n\n\nRemove (list) --The AWS account ID to remove from the list of launch permissions for the AMI.\n\n(dict) --Describes a launch permission.\n\nGroup (string) --The name of the group.\n\nUserId (string) --The AWS account ID.\n\n\n\n\n\n\n

    :type OperationType: string
    :param OperationType: The operation type. This parameter can be used only when the Attribute parameter is launchPermission .

    :type ProductCodes: list
    :param ProductCodes: The DevPay product codes. After you add a product code to an AMI, it can\'t be removed.\n\n(string) --\n\n

    :type UserGroups: list
    :param UserGroups: The user groups. This parameter can be used only when the Attribute parameter is launchPermission .\n\n(string) --\n\n

    :type UserIds: list
    :param UserIds: The AWS account IDs. This parameter can be used only when the Attribute parameter is launchPermission .\n\n(string) --\n\n

    :type Value: string
    :param Value: The value of the attribute being modified. This parameter can be used only when the Attribute parameter is description or productCodes .

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.modify_image_attribute(
        ImageId='ami-5731123e',
        LaunchPermission={
            'Add': [
                {
                    'Group': 'all',
                },
            ],
        },
    )
    
    print(response)
    
    
    """
    pass

def modify_instance_attribute(SourceDestCheck=None, Attribute=None, BlockDeviceMappings=None, DisableApiTermination=None, DryRun=None, EbsOptimized=None, EnaSupport=None, Groups=None, InstanceId=None, InstanceInitiatedShutdownBehavior=None, InstanceType=None, Kernel=None, Ramdisk=None, SriovNetSupport=None, UserData=None, Value=None):
    """
    Modifies the specified attribute of the specified instance. You can specify only one attribute at a time.
    To modify some attributes, the instance must be stopped. For more information, see Modifying Attributes of a Stopped Instance in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example modifies the instance type of the specified stopped instance.
    Expected Output:
    This example enables enhanced networking for the specified stopped instance.
    Expected Output:
    
    :example: response = client.modify_instance_attribute(
        SourceDestCheck={
            'Value': True|False
        },
        Attribute='instanceType'|'kernel'|'ramdisk'|'userData'|'disableApiTermination'|'instanceInitiatedShutdownBehavior'|'rootDeviceName'|'blockDeviceMapping'|'productCodes'|'sourceDestCheck'|'groupSet'|'ebsOptimized'|'sriovNetSupport'|'enaSupport',
        BlockDeviceMappings=[
            {
                'DeviceName': 'string',
                'Ebs': {
                    'DeleteOnTermination': True|False,
                    'VolumeId': 'string'
                },
                'NoDevice': 'string',
                'VirtualName': 'string'
            },
        ],
        DisableApiTermination={
            'Value': True|False
        },
        DryRun=True|False,
        EbsOptimized={
            'Value': True|False
        },
        EnaSupport={
            'Value': True|False
        },
        Groups=[
            'string',
        ],
        InstanceId='string',
        InstanceInitiatedShutdownBehavior={
            'Value': 'string'
        },
        InstanceType={
            'Value': 'string'
        },
        Kernel={
            'Value': 'string'
        },
        Ramdisk={
            'Value': 'string'
        },
        SriovNetSupport={
            'Value': 'string'
        },
        UserData={
            'Value': b'bytes'
        },
        Value='string'
    )
    
    
    :type SourceDestCheck: dict
    :param SourceDestCheck: Specifies whether source/destination checking is enabled. A value of true means that checking is enabled, and false means that checking is disabled. This value must be false for a NAT instance to perform NAT.\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type Attribute: string
    :param Attribute: The name of the attribute.

    :type BlockDeviceMappings: list
    :param BlockDeviceMappings: Modifies the DeleteOnTermination attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for DeleteOnTermination , the default is true and the volume is deleted when the instance is terminated.\nTo add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see Updating the Block Device Mapping when Launching an Instance in the Amazon Elastic Compute Cloud User Guide .\n\n(dict) --Describes a block device mapping entry.\n\nDeviceName (string) --The device name (for example, /dev/sdh or xvdh ).\n\nEbs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.\n\nDeleteOnTermination (boolean) --Indicates whether the volume is deleted on instance termination.\n\nVolumeId (string) --The ID of the EBS volume.\n\n\n\nNoDevice (string) --suppress the specified device included in the block device mapping.\n\nVirtualName (string) --The virtual device name.\n\n\n\n\n

    :type DisableApiTermination: dict
    :param DisableApiTermination: If the value is true , you can\'t terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot Instances.\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EbsOptimized: dict
    :param EbsOptimized: Specifies whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type EnaSupport: dict
    :param EnaSupport: Set to true to enable enhanced networking with ENA for the instance.\nThis option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type Groups: list
    :param Groups: [EC2-VPC] Changes the security groups of the instance. You must specify at least one security group, even if it\'s just the default security group for the VPC. You must specify the security group ID, not the security group name.\n\n(string) --\n\n

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type InstanceInitiatedShutdownBehavior: dict
    :param InstanceInitiatedShutdownBehavior: Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\n\nValue (string) --The attribute value. The value is case-sensitive.\n\n\n

    :type InstanceType: dict
    :param InstanceType: Changes the instance type to the specified value. For more information, see Instance Types . If the instance type is not valid, the error returned is InvalidInstanceAttributeValue .\n\nValue (string) --The attribute value. The value is case-sensitive.\n\n\n

    :type Kernel: dict
    :param Kernel: Changes the instance\'s kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB .\n\nValue (string) --The attribute value. The value is case-sensitive.\n\n\n

    :type Ramdisk: dict
    :param Ramdisk: Changes the instance\'s RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB .\n\nValue (string) --The attribute value. The value is case-sensitive.\n\n\n

    :type SriovNetSupport: dict
    :param SriovNetSupport: Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.\nThere is no way to disable enhanced networking with the Intel 82599 Virtual Function interface at this time.\nThis option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.\n\nValue (string) --The attribute value. The value is case-sensitive.\n\n\n

    :type UserData: dict
    :param UserData: Changes the instance\'s user data to the specified value. If you are using an AWS SDK or command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text.\n\nValue (bytes) --\n\n

    :type Value: string
    :param Value: A new value for the attribute. Use only with the kernel , ramdisk , userData , disableApiTermination , or instanceInitiatedShutdownBehavior attribute.

    :return: response = client.modify_instance_attribute(
        InstanceId='i-1234567890abcdef0',
        InstanceType={
            'Value': 'm5.large',
        },
    )
    
    print(response)
    
    
    """
    pass

def modify_instance_capacity_reservation_attributes(InstanceId=None, CapacityReservationSpecification=None, DryRun=None):
    """
    Modifies the Capacity Reservation settings for a stopped instance. Use this action to configure an instance to target a specific Capacity Reservation, run in any open Capacity Reservation with matching attributes, or run On-Demand Instance capacity.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_instance_capacity_reservation_attributes(
        InstanceId='string',
        CapacityReservationSpecification={
            'CapacityReservationPreference': 'open'|'none',
            'CapacityReservationTarget': {
                'CapacityReservationId': 'string'
            }
        },
        DryRun=True|False
    )
    
    
    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance to be modified.\n

    :type CapacityReservationSpecification: dict
    :param CapacityReservationSpecification: [REQUIRED]\nInformation about the Capacity Reservation targeting option.\n\nCapacityReservationPreference (string) --Indicates the instance\'s Capacity Reservation preferences. Possible preferences include:\n\nopen - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\nnone - The instance avoids running in a Capacity Reservation even if one is available. The instance runs as an On-Demand Instance.\n\n\nCapacityReservationTarget (dict) --Information about the target Capacity Reservation.\n\nCapacityReservationId (string) --The ID of the Capacity Reservation.\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def modify_instance_credit_specification(DryRun=None, ClientToken=None, InstanceCreditSpecifications=None):
    """
    Modifies the credit option for CPU usage on a running or stopped burstable performance instance. The credit options are standard and unlimited .
    For more information, see Burstable Performance Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_instance_credit_specification(
        DryRun=True|False,
        ClientToken='string',
        InstanceCreditSpecifications=[
            {
                'InstanceId': 'string',
                'CpuCredits': 'string'
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see Ensuring Idempotency .

    :type InstanceCreditSpecifications: list
    :param InstanceCreditSpecifications: [REQUIRED]\nInformation about the credit option for CPU usage.\n\n(dict) --Describes the credit option for CPU usage of a burstable performance instance.\n\nInstanceId (string) --The ID of the instance.\n\nCpuCredits (string) --The credit option for CPU usage of the instance. Valid values are standard and unlimited .\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'SuccessfulInstanceCreditSpecifications': [
        {
            'InstanceId': 'string'
        },
    ],
    'UnsuccessfulInstanceCreditSpecifications': [
        {
            'InstanceId': 'string',
            'Error': {
                'Code': 'InvalidInstanceID.Malformed'|'InvalidInstanceID.NotFound'|'IncorrectInstanceState'|'InstanceCreditSpecification.NotSupported',
                'Message': 'string'
            }
        },
    ]
}


Response Structure

(dict) --

SuccessfulInstanceCreditSpecifications (list) --
Information about the instances whose credit option for CPU usage was successfully modified.

(dict) --
Describes the burstable performance instance whose credit option for CPU usage was successfully modified.

InstanceId (string) --
The ID of the instance.





UnsuccessfulInstanceCreditSpecifications (list) --
Information about the instances whose credit option for CPU usage was not modified.

(dict) --
Describes the burstable performance instance whose credit option for CPU usage was not modified.

InstanceId (string) --
The ID of the instance.

Error (dict) --
The applicable error for the burstable performance instance whose credit option for CPU usage was not modified.

Code (string) --
The error code.

Message (string) --
The applicable error message.














    :return: {
        'SuccessfulInstanceCreditSpecifications': [
            {
                'InstanceId': 'string'
            },
        ],
        'UnsuccessfulInstanceCreditSpecifications': [
            {
                'InstanceId': 'string',
                'Error': {
                    'Code': 'InvalidInstanceID.Malformed'|'InvalidInstanceID.NotFound'|'IncorrectInstanceState'|'InstanceCreditSpecification.NotSupported',
                    'Message': 'string'
                }
            },
        ]
    }
    
    
    """
    pass

def modify_instance_event_start_time(DryRun=None, InstanceId=None, InstanceEventId=None, NotBefore=None):
    """
    Modifies the start time for a scheduled Amazon EC2 instance event.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_instance_event_start_time(
        DryRun=True|False,
        InstanceId='string',
        InstanceEventId='string',
        NotBefore=datetime(2015, 1, 1)
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance with the scheduled event.\n

    :type InstanceEventId: string
    :param InstanceEventId: [REQUIRED]\nThe ID of the event whose date and time you are modifying.\n

    :type NotBefore: datetime
    :param NotBefore: [REQUIRED]\nThe new date and time when the event will take place.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Event': {
        'InstanceEventId': 'string',
        'Code': 'instance-reboot'|'system-reboot'|'system-maintenance'|'instance-retirement'|'instance-stop',
        'Description': 'string',
        'NotAfter': datetime(2015, 1, 1),
        'NotBefore': datetime(2015, 1, 1),
        'NotBeforeDeadline': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --

Event (dict) --
Describes a scheduled event for an instance.

InstanceEventId (string) --
The ID of the event.

Code (string) --
The event code.

Description (string) --
A description of the event.
After a scheduled event is completed, it can still be described for up to a week. If the event has been completed, this description starts with the following text: [Completed].

NotAfter (datetime) --
The latest scheduled end time for the event.

NotBefore (datetime) --
The earliest scheduled start time for the event.

NotBeforeDeadline (datetime) --
The deadline for starting the event.










    :return: {
        'Event': {
            'InstanceEventId': 'string',
            'Code': 'instance-reboot'|'system-reboot'|'system-maintenance'|'instance-retirement'|'instance-stop',
            'Description': 'string',
            'NotAfter': datetime(2015, 1, 1),
            'NotBefore': datetime(2015, 1, 1),
            'NotBeforeDeadline': datetime(2015, 1, 1)
        }
    }
    
    
    """
    pass

def modify_instance_metadata_options(InstanceId=None, HttpTokens=None, HttpPutResponseHopLimit=None, HttpEndpoint=None, DryRun=None):
    """
    Modify the instance metadata parameters on a running or stopped instance. When you modify the parameters on a stopped instance, they are applied when the instance is started. When you modify the parameters on a running instance, the API responds with a state of \xe2\x80\x9cpending\xe2\x80\x9d. After the parameter modifications are successfully applied to the instance, the state of the modifications changes from \xe2\x80\x9cpending\xe2\x80\x9d to \xe2\x80\x9capplied\xe2\x80\x9d in subsequent describe-instances API calls. For more information, see Instance Metadata and User Data .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_instance_metadata_options(
        InstanceId='string',
        HttpTokens='optional'|'required',
        HttpPutResponseHopLimit=123,
        HttpEndpoint='disabled'|'enabled',
        DryRun=True|False
    )
    
    
    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type HttpTokens: string
    :param HttpTokens: The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .\nIf the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.\nIf the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.\n

    :type HttpPutResponseHopLimit: integer
    :param HttpPutResponseHopLimit: The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. If no parameter is specified, the existing state is maintained.\nPossible values: Integers from 1 to 64\n

    :type HttpEndpoint: string
    :param HttpEndpoint: This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the existing state is maintained.\n\nNote\nIf you specify a value of disabled , you will not be able to access your instance metadata.\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceId': 'string',
    'InstanceMetadataOptions': {
        'State': 'pending'|'applied',
        'HttpTokens': 'optional'|'required',
        'HttpPutResponseHopLimit': 123,
        'HttpEndpoint': 'disabled'|'enabled'
    }
}


Response Structure

(dict) --

InstanceId (string) --
The ID of the instance.

InstanceMetadataOptions (dict) --
The metadata options for the instance.

State (string) --
The state of the metadata option changes.

pending - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.
applied - The metadata options have been successfully applied on the instance.


HttpTokens (string) --
The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .
If the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.
If the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.

HttpPutResponseHopLimit (integer) --
The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
Default: 1
Possible values: Integers from 1 to 64

HttpEndpoint (string) --
This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .

Note
If you specify a value of disabled , you will not be able to access your instance metadata.











    :return: {
        'InstanceId': 'string',
        'InstanceMetadataOptions': {
            'State': 'pending'|'applied',
            'HttpTokens': 'optional'|'required',
            'HttpPutResponseHopLimit': 123,
            'HttpEndpoint': 'disabled'|'enabled'
        }
    }
    
    
    """
    pass

def modify_instance_placement(Affinity=None, GroupName=None, HostId=None, InstanceId=None, Tenancy=None, PartitionNumber=None, HostResourceGroupArn=None):
    """
    Modifies the placement attributes for a specified instance. You can do the following:
    At least one attribute for affinity, host ID, tenancy, or placement group name must be specified in the request. Affinity and tenancy can be modified in the same request.
    To modify the host ID, tenancy, placement group, or partition for an instance, the instance must be in the stopped state.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_instance_placement(
        Affinity='default'|'host',
        GroupName='string',
        HostId='string',
        InstanceId='string',
        Tenancy='dedicated'|'host',
        PartitionNumber=123,
        HostResourceGroupArn='string'
    )
    
    
    :type Affinity: string
    :param Affinity: The affinity setting for the instance.

    :type GroupName: string
    :param GroupName: The name of the placement group in which to place the instance. For spread placement groups, the instance must have a tenancy of default . For cluster and partition placement groups, the instance must have a tenancy of default or dedicated .\nTo remove an instance from a placement group, specify an empty string ('').\n

    :type HostId: string
    :param HostId: The ID of the Dedicated Host with which to associate the instance.

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance that you are modifying.\n

    :type Tenancy: string
    :param Tenancy: The tenancy for the instance.

    :type PartitionNumber: integer
    :param PartitionNumber: Reserved for future use.

    :type HostResourceGroupArn: string
    :param HostResourceGroupArn: The ARN of the host resource group in which to place the instance.

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Is true if the request succeeds, and an error otherwise.








    :return: {
        'Return': True|False
    }
    
    
    :returns: 
    Affinity (string) -- The affinity setting for the instance.
    GroupName (string) -- The name of the placement group in which to place the instance. For spread placement groups, the instance must have a tenancy of default . For cluster and partition placement groups, the instance must have a tenancy of default or dedicated .
    To remove an instance from a placement group, specify an empty string ("").
    
    HostId (string) -- The ID of the Dedicated Host with which to associate the instance.
    InstanceId (string) -- [REQUIRED]
    The ID of the instance that you are modifying.
    
    Tenancy (string) -- The tenancy for the instance.
    PartitionNumber (integer) -- Reserved for future use.
    HostResourceGroupArn (string) -- The ARN of the host resource group in which to place the instance.
    
    """
    pass

def modify_launch_template(DryRun=None, ClientToken=None, LaunchTemplateId=None, LaunchTemplateName=None, DefaultVersion=None):
    """
    Modifies a launch template. You can specify which version of the launch template to set as the default version. When launching an instance, the default version applies when a launch template version is not specified.
    See also: AWS API Documentation
    
    Examples
    This example specifies version 2 as the default version of the specified launch template.
    Expected Output:
    
    :example: response = client.modify_launch_template(
        DryRun=True|False,
        ClientToken='string',
        LaunchTemplateId='string',
        LaunchTemplateName='string',
        DefaultVersion='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see Ensuring Idempotency .\nConstraint: Maximum 128 ASCII characters.\n

    :type LaunchTemplateId: string
    :param LaunchTemplateId: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.

    :type LaunchTemplateName: string
    :param LaunchTemplateName: The name of the launch template. You must specify either the launch template ID or launch template name in the request.

    :type DefaultVersion: string
    :param DefaultVersion: The version number of the launch template to set as the default version.

    :rtype: dict

ReturnsResponse Syntax
{
    'LaunchTemplate': {
        'LaunchTemplateId': 'string',
        'LaunchTemplateName': 'string',
        'CreateTime': datetime(2015, 1, 1),
        'CreatedBy': 'string',
        'DefaultVersionNumber': 123,
        'LatestVersionNumber': 123,
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

LaunchTemplate (dict) --
Information about the launch template.

LaunchTemplateId (string) --
The ID of the launch template.

LaunchTemplateName (string) --
The name of the launch template.

CreateTime (datetime) --
The time launch template was created.

CreatedBy (string) --
The principal that created the launch template.

DefaultVersionNumber (integer) --
The version number of the default version of the launch template.

LatestVersionNumber (integer) --
The version number of the latest version of the launch template.

Tags (list) --
The tags for the launch template.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.













Examples
This example specifies version 2 as the default version of the specified launch template.
response = client.modify_launch_template(
    DefaultVersion='2',
    LaunchTemplateId='lt-0abcd290751193123',
)

print(response)


Expected Output:
{
    'LaunchTemplate': {
        'CreateTime': datetime(2017, 12, 1, 13, 35, 46, 4, 335, 0),
        'CreatedBy': 'arn:aws:iam::123456789012:root',
        'DefaultVersionNumber': 2,
        'LatestVersionNumber': 2,
        'LaunchTemplateId': 'lt-0abcd290751193123',
        'LaunchTemplateName': 'WebServers',
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'LaunchTemplate': {
            'LaunchTemplateId': 'string',
            'LaunchTemplateName': 'string',
            'CreateTime': datetime(2015, 1, 1),
            'CreatedBy': 'string',
            'DefaultVersionNumber': 123,
            'LatestVersionNumber': 123,
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def modify_network_interface_attribute(Attachment=None, Description=None, DryRun=None, Groups=None, NetworkInterfaceId=None, SourceDestCheck=None):
    """
    Modifies the specified network interface attribute. You can specify only one attribute at a time. You can use this action to attach and detach security groups from an existing EC2 instance.
    See also: AWS API Documentation
    
    Examples
    This example modifies the attachment attribute of the specified network interface.
    Expected Output:
    This example modifies the description attribute of the specified network interface.
    Expected Output:
    This example command modifies the groupSet attribute of the specified network interface.
    Expected Output:
    This example command modifies the sourceDestCheck attribute of the specified network interface.
    Expected Output:
    
    :example: response = client.modify_network_interface_attribute(
        Attachment={
            'AttachmentId': 'string',
            'DeleteOnTermination': True|False
        },
        Description={
            'Value': 'string'
        },
        DryRun=True|False,
        Groups=[
            'string',
        ],
        NetworkInterfaceId='string',
        SourceDestCheck={
            'Value': True|False
        }
    )
    
    
    :type Attachment: dict
    :param Attachment: Information about the interface attachment. If modifying the \'delete on termination\' attribute, you must specify the ID of the interface attachment.\n\nAttachmentId (string) --The ID of the network interface attachment.\n\nDeleteOnTermination (boolean) --Indicates whether the network interface is deleted when the instance is terminated.\n\n\n

    :type Description: dict
    :param Description: A description for the network interface.\n\nValue (string) --The attribute value. The value is case-sensitive.\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Groups: list
    :param Groups: Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it\'s just the default security group in the VPC. You must specify the ID of the security group, not the name.\n\n(string) --\n\n

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :type SourceDestCheck: dict
    :param SourceDestCheck: Indicates whether source/destination checking is enabled. A value of true means checking is enabled, and false means checking is disabled. This value must be false for a NAT instance to perform NAT. For more information, see NAT Instances in the Amazon Virtual Private Cloud User Guide .\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :return: response = client.modify_network_interface_attribute(
        Attachment={
            'AttachmentId': 'eni-attach-43348162',
            'DeleteOnTermination': False,
        },
        NetworkInterfaceId='eni-686ea200',
    )
    
    print(response)
    
    
    """
    pass

def modify_reserved_instances(ReservedInstancesIds=None, ClientToken=None, TargetConfigurations=None):
    """
    Modifies the Availability Zone, instance count, instance type, or network platform (EC2-Classic or EC2-VPC) of your Reserved Instances. The Reserved Instances to be modified must be identical, except for Availability Zone, network platform, and instance type.
    For more information, see Modifying Reserved Instances in the Amazon Elastic Compute Cloud User Guide.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_reserved_instances(
        ReservedInstancesIds=[
            'string',
        ],
        ClientToken='string',
        TargetConfigurations=[
            {
                'AvailabilityZone': 'string',
                'InstanceCount': 123,
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'Platform': 'string',
                'Scope': 'Availability Zone'|'Region'
            },
        ]
    )
    
    
    :type ReservedInstancesIds: list
    :param ReservedInstancesIds: [REQUIRED]\nThe IDs of the Reserved Instances to modify.\n\n(string) --\n\n

    :type ClientToken: string
    :param ClientToken: A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see Ensuring Idempotency .

    :type TargetConfigurations: list
    :param TargetConfigurations: [REQUIRED]\nThe configuration settings for the Reserved Instances to modify.\n\n(dict) --Describes the configuration settings for the modified Reserved Instances.\n\nAvailabilityZone (string) --The Availability Zone for the modified Reserved Instances.\n\nInstanceCount (integer) --The number of modified Reserved Instances.\n\nNote\nThis is a required field for a request.\n\n\nInstanceType (string) --The instance type for the modified Reserved Instances.\n\nPlatform (string) --The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.\n\nScope (string) --Whether the Reserved Instance is applied to instances in a Region or instances in a specific Availability Zone.\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ReservedInstancesModificationId': 'string'
}


Response Structure

(dict) --
Contains the output of ModifyReservedInstances.

ReservedInstancesModificationId (string) --
The ID for the modification.








    :return: {
        'ReservedInstancesModificationId': 'string'
    }
    
    
    """
    pass

def modify_snapshot_attribute(Attribute=None, CreateVolumePermission=None, GroupNames=None, OperationType=None, SnapshotId=None, UserIds=None, DryRun=None):
    """
    Adds or removes permission settings for the specified snapshot. You may add or remove specified AWS account IDs from a snapshot\'s list of create volume permissions, but you cannot do both in a single operation. If you need to both add and remove account IDs for a snapshot, you must use multiple operations. You can make up to 500 modifications to a snapshot in a single operation.
    Encrypted snapshots and snapshots with AWS Marketplace product codes cannot be made public. Snapshots encrypted with your default CMK cannot be shared with other accounts.
    For more information about modifying snapshot permissions, see Sharing Snapshots in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example modifies snapshot snap-1234567890abcdef0 to remove the create volume permission for a user with the account ID 123456789012. If the command succeeds, no output is returned.
    Expected Output:
    This example makes the snapshot snap-1234567890abcdef0 public.
    Expected Output:
    
    :example: response = client.modify_snapshot_attribute(
        Attribute='productCodes'|'createVolumePermission',
        CreateVolumePermission={
            'Add': [
                {
                    'Group': 'all',
                    'UserId': 'string'
                },
            ],
            'Remove': [
                {
                    'Group': 'all',
                    'UserId': 'string'
                },
            ]
        },
        GroupNames=[
            'string',
        ],
        OperationType='add'|'remove',
        SnapshotId='string',
        UserIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type Attribute: string
    :param Attribute: The snapshot attribute to modify. Only volume creation permissions can be modified.

    :type CreateVolumePermission: dict
    :param CreateVolumePermission: A JSON representation of the snapshot attribute modification.\n\nAdd (list) --Adds the specified AWS account ID or group to the list.\n\n(dict) --Describes the user or group to be added or removed from the list of create volume permissions for a volume.\n\nGroup (string) --The group to be added or removed. The possible value is all .\n\nUserId (string) --The AWS account ID to be added or removed.\n\n\n\n\n\nRemove (list) --Removes the specified AWS account ID or group from the list.\n\n(dict) --Describes the user or group to be added or removed from the list of create volume permissions for a volume.\n\nGroup (string) --The group to be added or removed. The possible value is all .\n\nUserId (string) --The AWS account ID to be added or removed.\n\n\n\n\n\n\n

    :type GroupNames: list
    :param GroupNames: The group to modify for the snapshot.\n\n(string) --\n\n

    :type OperationType: string
    :param OperationType: The type of operation to perform to the attribute.

    :type SnapshotId: string
    :param SnapshotId: [REQUIRED]\nThe ID of the snapshot.\n

    :type UserIds: list
    :param UserIds: The account ID to modify for the snapshot.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.modify_snapshot_attribute(
        Attribute='createVolumePermission',
        OperationType='remove',
        SnapshotId='snap-1234567890abcdef0',
        UserIds=[
            '123456789012',
        ],
    )
    
    print(response)
    
    
    """
    pass

def modify_spot_fleet_request(ExcessCapacityTerminationPolicy=None, SpotFleetRequestId=None, TargetCapacity=None, OnDemandTargetCapacity=None):
    """
    Modifies the specified Spot Fleet request.
    You can only modify a Spot Fleet request of type maintain .
    While the Spot Fleet request is being modified, it is in the modifying state.
    To scale up your Spot Fleet, increase its target capacity. The Spot Fleet launches the additional Spot Instances according to the allocation strategy for the Spot Fleet request. If the allocation strategy is lowestPrice , the Spot Fleet launches instances using the Spot Instance pool with the lowest price. If the allocation strategy is diversified , the Spot Fleet distributes the instances across the Spot Instance pools. If the allocation strategy is capacityOptimized , Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.
    To scale down your Spot Fleet, decrease its target capacity. First, the Spot Fleet cancels any open requests that exceed the new target capacity. You can request that the Spot Fleet terminate Spot Instances until the size of the fleet no longer exceeds the new target capacity. If the allocation strategy is lowestPrice , the Spot Fleet terminates the instances with the highest price per unit. If the allocation strategy is capacityOptimized , the Spot Fleet terminates the instances in the Spot Instance pools that have the least available Spot Instance capacity. If the allocation strategy is diversified , the Spot Fleet terminates instances across the Spot Instance pools. Alternatively, you can request that the Spot Fleet keep the fleet at its current size, but not replace any Spot Instances that are interrupted or that you terminate manually.
    If you are finished with your Spot Fleet for now, but will use it again later, you can set the target capacity to 0.
    See also: AWS API Documentation
    
    Examples
    This example increases the target capacity of the specified Spot fleet request.
    Expected Output:
    This example decreases the target capacity of the specified Spot fleet request without terminating any Spot Instances as a result.
    Expected Output:
    
    :example: response = client.modify_spot_fleet_request(
        ExcessCapacityTerminationPolicy='noTermination'|'default',
        SpotFleetRequestId='string',
        TargetCapacity=123,
        OnDemandTargetCapacity=123
    )
    
    
    :type ExcessCapacityTerminationPolicy: string
    :param ExcessCapacityTerminationPolicy: Indicates whether running Spot Instances should be terminated if the target capacity of the Spot Fleet request is decreased below the current size of the Spot Fleet.

    :type SpotFleetRequestId: string
    :param SpotFleetRequestId: [REQUIRED]\nThe ID of the Spot Fleet request.\n

    :type TargetCapacity: integer
    :param TargetCapacity: The size of the fleet.

    :type OnDemandTargetCapacity: integer
    :param OnDemandTargetCapacity: The number of On-Demand Instances in the fleet.

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --
Contains the output of ModifySpotFleetRequest.

Return (boolean) --
Is true if the request succeeds, and an error otherwise.







Examples
This example increases the target capacity of the specified Spot fleet request.
response = client.modify_spot_fleet_request(
    SpotFleetRequestId='sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    TargetCapacity=20,
)

print(response)


Expected Output:
{
    'Return': True,
    'ResponseMetadata': {
        '...': '...',
    },
}


This example decreases the target capacity of the specified Spot fleet request without terminating any Spot Instances as a result.
response = client.modify_spot_fleet_request(
    ExcessCapacityTerminationPolicy='NoTermination ',
    SpotFleetRequestId='sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    TargetCapacity=10,
)

print(response)


Expected Output:
{
    'Return': True,
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def modify_subnet_attribute(AssignIpv6AddressOnCreation=None, MapPublicIpOnLaunch=None, SubnetId=None, MapCustomerOwnedIpOnLaunch=None, CustomerOwnedIpv4Pool=None):
    """
    Modifies a subnet attribute. You can only modify one attribute at a time.
    See also: AWS API Documentation
    
    Examples
    This example modifies the specified subnet so that all instances launched into this subnet are assigned a public IP address.
    Expected Output:
    
    :example: response = client.modify_subnet_attribute(
        AssignIpv6AddressOnCreation={
            'Value': True|False
        },
        MapPublicIpOnLaunch={
            'Value': True|False
        },
        SubnetId='string',
        MapCustomerOwnedIpOnLaunch={
            'Value': True|False
        },
        CustomerOwnedIpv4Pool='string'
    )
    
    
    :type AssignIpv6AddressOnCreation: dict
    :param AssignIpv6AddressOnCreation: Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. This includes a network interface that\'s created when launching an instance into the subnet (the instance therefore receives an IPv6 address).\nIf you enable the IPv6 addressing feature for your subnet, your network interface or instance only receives an IPv6 address if it\'s created using version 2016-11-15 or later of the Amazon EC2 API.\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type MapPublicIpOnLaunch: dict
    :param MapPublicIpOnLaunch: Specify true to indicate that network interfaces attached to instances created in the specified subnet should be assigned a public IPv4 address.\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type SubnetId: string
    :param SubnetId: [REQUIRED]\nThe ID of the subnet.\n

    :type MapCustomerOwnedIpOnLaunch: dict
    :param MapCustomerOwnedIpOnLaunch: Specify true to indicate that network interfaces attached to instances created in the specified subnet should be assigned a customer-owned IPv4 address.\nWhen this value is true , you must specify the customer-owned IP pool using CustomerOwnedIpv4Pool .\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type CustomerOwnedIpv4Pool: string
    :param CustomerOwnedIpv4Pool: The customer-owned IPv4 address pool associated with the subnet.\nYou must set this value when you specify true for MapCustomerOwnedIpOnLaunch .\n

    :return: response = client.modify_subnet_attribute(
        MapPublicIpOnLaunch={
            'Value': True,
        },
        SubnetId='subnet-1a2b3c4d',
    )
    
    print(response)
    
    
    """
    pass

def modify_traffic_mirror_filter_network_services(TrafficMirrorFilterId=None, AddNetworkServices=None, RemoveNetworkServices=None, DryRun=None):
    """
    Allows or restricts mirroring network services.
    By default, Amazon DNS network services are not eligible for Traffic Mirror. Use AddNetworkServices to add network services to a Traffic Mirror filter. When a network service is added to the Traffic Mirror filter, all traffic related to that network service will be mirrored. When you no longer want to mirror network services, use RemoveNetworkServices to remove the network services from the Traffic Mirror filter.
    For information about filter rule properties, see Network Services in the Traffic Mirroring User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_traffic_mirror_filter_network_services(
        TrafficMirrorFilterId='string',
        AddNetworkServices=[
            'amazon-dns',
        ],
        RemoveNetworkServices=[
            'amazon-dns',
        ],
        DryRun=True|False
    )
    
    
    :type TrafficMirrorFilterId: string
    :param TrafficMirrorFilterId: [REQUIRED]\nThe ID of the Traffic Mirror filter.\n

    :type AddNetworkServices: list
    :param AddNetworkServices: The network service, for example Amazon DNS, that you want to mirror.\n\n(string) --\n\n

    :type RemoveNetworkServices: list
    :param RemoveNetworkServices: The network service, for example Amazon DNS, that you no longer want to mirror.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorFilter': {
        'TrafficMirrorFilterId': 'string',
        'IngressFilterRules': [
            {
                'TrafficMirrorFilterRuleId': 'string',
                'TrafficMirrorFilterId': 'string',
                'TrafficDirection': 'ingress'|'egress',
                'RuleNumber': 123,
                'RuleAction': 'accept'|'reject',
                'Protocol': 123,
                'DestinationPortRange': {
                    'FromPort': 123,
                    'ToPort': 123
                },
                'SourcePortRange': {
                    'FromPort': 123,
                    'ToPort': 123
                },
                'DestinationCidrBlock': 'string',
                'SourceCidrBlock': 'string',
                'Description': 'string'
            },
        ],
        'EgressFilterRules': [
            {
                'TrafficMirrorFilterRuleId': 'string',
                'TrafficMirrorFilterId': 'string',
                'TrafficDirection': 'ingress'|'egress',
                'RuleNumber': 123,
                'RuleAction': 'accept'|'reject',
                'Protocol': 123,
                'DestinationPortRange': {
                    'FromPort': 123,
                    'ToPort': 123
                },
                'SourcePortRange': {
                    'FromPort': 123,
                    'ToPort': 123
                },
                'DestinationCidrBlock': 'string',
                'SourceCidrBlock': 'string',
                'Description': 'string'
            },
        ],
        'NetworkServices': [
            'amazon-dns',
        ],
        'Description': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TrafficMirrorFilter (dict) --
The Traffic Mirror filter that the network service is associated with.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter.

IngressFilterRules (list) --
Information about the ingress rules that are associated with the Traffic Mirror filter.

(dict) --
Describes the Traffic Mirror rule.

TrafficMirrorFilterRuleId (string) --
The ID of the Traffic Mirror rule.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter that the rule is associated with.

TrafficDirection (string) --
The traffic direction assigned to the Traffic Mirror rule.

RuleNumber (integer) --
The rule number of the Traffic Mirror rule.

RuleAction (string) --
The action assigned to the Traffic Mirror rule.

Protocol (integer) --
The protocol assigned to the Traffic Mirror rule.

DestinationPortRange (dict) --
The destination port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



SourcePortRange (dict) --
The source port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



DestinationCidrBlock (string) --
The destination CIDR block assigned to the Traffic Mirror rule.

SourceCidrBlock (string) --
The source CIDR block assigned to the Traffic Mirror rule.

Description (string) --
The description of the Traffic Mirror rule.





EgressFilterRules (list) --
Information about the egress rules that are associated with the Traffic Mirror filter.

(dict) --
Describes the Traffic Mirror rule.

TrafficMirrorFilterRuleId (string) --
The ID of the Traffic Mirror rule.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter that the rule is associated with.

TrafficDirection (string) --
The traffic direction assigned to the Traffic Mirror rule.

RuleNumber (integer) --
The rule number of the Traffic Mirror rule.

RuleAction (string) --
The action assigned to the Traffic Mirror rule.

Protocol (integer) --
The protocol assigned to the Traffic Mirror rule.

DestinationPortRange (dict) --
The destination port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



SourcePortRange (dict) --
The source port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



DestinationCidrBlock (string) --
The destination CIDR block assigned to the Traffic Mirror rule.

SourceCidrBlock (string) --
The source CIDR block assigned to the Traffic Mirror rule.

Description (string) --
The description of the Traffic Mirror rule.





NetworkServices (list) --
The network service traffic that is associated with the Traffic Mirror filter.

(string) --


Description (string) --
The description of the Traffic Mirror filter.

Tags (list) --
The tags assigned to the Traffic Mirror filter.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TrafficMirrorFilter': {
            'TrafficMirrorFilterId': 'string',
            'IngressFilterRules': [
                {
                    'TrafficMirrorFilterRuleId': 'string',
                    'TrafficMirrorFilterId': 'string',
                    'TrafficDirection': 'ingress'|'egress',
                    'RuleNumber': 123,
                    'RuleAction': 'accept'|'reject',
                    'Protocol': 123,
                    'DestinationPortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'SourcePortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'DestinationCidrBlock': 'string',
                    'SourceCidrBlock': 'string',
                    'Description': 'string'
                },
            ],
            'EgressFilterRules': [
                {
                    'TrafficMirrorFilterRuleId': 'string',
                    'TrafficMirrorFilterId': 'string',
                    'TrafficDirection': 'ingress'|'egress',
                    'RuleNumber': 123,
                    'RuleAction': 'accept'|'reject',
                    'Protocol': 123,
                    'DestinationPortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'SourcePortRange': {
                        'FromPort': 123,
                        'ToPort': 123
                    },
                    'DestinationCidrBlock': 'string',
                    'SourceCidrBlock': 'string',
                    'Description': 'string'
                },
            ],
            'NetworkServices': [
                'amazon-dns',
            ],
            'Description': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_traffic_mirror_filter_rule(TrafficMirrorFilterRuleId=None, TrafficDirection=None, RuleNumber=None, RuleAction=None, DestinationPortRange=None, SourcePortRange=None, Protocol=None, DestinationCidrBlock=None, SourceCidrBlock=None, Description=None, RemoveFields=None, DryRun=None):
    """
    Modifies the specified Traffic Mirror rule.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_traffic_mirror_filter_rule(
        TrafficMirrorFilterRuleId='string',
        TrafficDirection='ingress'|'egress',
        RuleNumber=123,
        RuleAction='accept'|'reject',
        DestinationPortRange={
            'FromPort': 123,
            'ToPort': 123
        },
        SourcePortRange={
            'FromPort': 123,
            'ToPort': 123
        },
        Protocol=123,
        DestinationCidrBlock='string',
        SourceCidrBlock='string',
        Description='string',
        RemoveFields=[
            'destination-port-range'|'source-port-range'|'protocol'|'description',
        ],
        DryRun=True|False
    )
    
    
    :type TrafficMirrorFilterRuleId: string
    :param TrafficMirrorFilterRuleId: [REQUIRED]\nThe ID of the Traffic Mirror rule.\n

    :type TrafficDirection: string
    :param TrafficDirection: The type of traffic (ingress | egress ) to assign to the rule.

    :type RuleNumber: integer
    :param RuleNumber: The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.

    :type RuleAction: string
    :param RuleAction: The action to assign to the rule.

    :type DestinationPortRange: dict
    :param DestinationPortRange: The destination ports that are associated with the Traffic Mirror rule.\n\nFromPort (integer) --The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n\nToPort (integer) --The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n\n\n

    :type SourcePortRange: dict
    :param SourcePortRange: The port range to assign to the Traffic Mirror rule.\n\nFromPort (integer) --The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n\nToPort (integer) --The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.\n\n\n

    :type Protocol: integer
    :param Protocol: The protocol, for example TCP, to assign to the Traffic Mirror rule.

    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: The destination CIDR block to assign to the Traffic Mirror rule.

    :type SourceCidrBlock: string
    :param SourceCidrBlock: The source CIDR block to assign to the Traffic Mirror rule.

    :type Description: string
    :param Description: The description to assign to the Traffic Mirror rule.

    :type RemoveFields: list
    :param RemoveFields: The properties that you want to remove from the Traffic Mirror filter rule.\nWhen you remove a property from a Traffic Mirror filter rule, the property is set to the default.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorFilterRule': {
        'TrafficMirrorFilterRuleId': 'string',
        'TrafficMirrorFilterId': 'string',
        'TrafficDirection': 'ingress'|'egress',
        'RuleNumber': 123,
        'RuleAction': 'accept'|'reject',
        'Protocol': 123,
        'DestinationPortRange': {
            'FromPort': 123,
            'ToPort': 123
        },
        'SourcePortRange': {
            'FromPort': 123,
            'ToPort': 123
        },
        'DestinationCidrBlock': 'string',
        'SourceCidrBlock': 'string',
        'Description': 'string'
    }
}


Response Structure

(dict) --

TrafficMirrorFilterRule (dict) --
Modifies a Traffic Mirror rule.

TrafficMirrorFilterRuleId (string) --
The ID of the Traffic Mirror rule.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter that the rule is associated with.

TrafficDirection (string) --
The traffic direction assigned to the Traffic Mirror rule.

RuleNumber (integer) --
The rule number of the Traffic Mirror rule.

RuleAction (string) --
The action assigned to the Traffic Mirror rule.

Protocol (integer) --
The protocol assigned to the Traffic Mirror rule.

DestinationPortRange (dict) --
The destination port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



SourcePortRange (dict) --
The source port range assigned to the Traffic Mirror rule.

FromPort (integer) --
The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.

ToPort (integer) --
The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.



DestinationCidrBlock (string) --
The destination CIDR block assigned to the Traffic Mirror rule.

SourceCidrBlock (string) --
The source CIDR block assigned to the Traffic Mirror rule.

Description (string) --
The description of the Traffic Mirror rule.










    :return: {
        'TrafficMirrorFilterRule': {
            'TrafficMirrorFilterRuleId': 'string',
            'TrafficMirrorFilterId': 'string',
            'TrafficDirection': 'ingress'|'egress',
            'RuleNumber': 123,
            'RuleAction': 'accept'|'reject',
            'Protocol': 123,
            'DestinationPortRange': {
                'FromPort': 123,
                'ToPort': 123
            },
            'SourcePortRange': {
                'FromPort': 123,
                'ToPort': 123
            },
            'DestinationCidrBlock': 'string',
            'SourceCidrBlock': 'string',
            'Description': 'string'
        }
    }
    
    
    """
    pass

def modify_traffic_mirror_session(TrafficMirrorSessionId=None, TrafficMirrorTargetId=None, TrafficMirrorFilterId=None, PacketLength=None, SessionNumber=None, VirtualNetworkId=None, Description=None, RemoveFields=None, DryRun=None):
    """
    Modifies a Traffic Mirror session.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_traffic_mirror_session(
        TrafficMirrorSessionId='string',
        TrafficMirrorTargetId='string',
        TrafficMirrorFilterId='string',
        PacketLength=123,
        SessionNumber=123,
        VirtualNetworkId=123,
        Description='string',
        RemoveFields=[
            'packet-length'|'description'|'virtual-network-id',
        ],
        DryRun=True|False
    )
    
    
    :type TrafficMirrorSessionId: string
    :param TrafficMirrorSessionId: [REQUIRED]\nThe ID of the Traffic Mirror session.\n

    :type TrafficMirrorTargetId: string
    :param TrafficMirrorTargetId: The Traffic Mirror target. The target must be in the same VPC as the source, or have a VPC peering connection with the source.

    :type TrafficMirrorFilterId: string
    :param TrafficMirrorFilterId: The ID of the Traffic Mirror filter.

    :type PacketLength: integer
    :param PacketLength: The number of bytes in each packet to mirror. These are bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet.

    :type SessionNumber: integer
    :param SessionNumber: The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.\nValid values are 1-32766.\n

    :type VirtualNetworkId: integer
    :param VirtualNetworkId: The virtual network ID of the Traffic Mirror session.

    :type Description: string
    :param Description: The description to assign to the Traffic Mirror session.

    :type RemoveFields: list
    :param RemoveFields: The properties that you want to remove from the Traffic Mirror session.\nWhen you remove a property from a Traffic Mirror session, the property is set to the default.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TrafficMirrorSession': {
        'TrafficMirrorSessionId': 'string',
        'TrafficMirrorTargetId': 'string',
        'TrafficMirrorFilterId': 'string',
        'NetworkInterfaceId': 'string',
        'OwnerId': 'string',
        'PacketLength': 123,
        'SessionNumber': 123,
        'VirtualNetworkId': 123,
        'Description': 'string',
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TrafficMirrorSession (dict) --
Information about the Traffic Mirror session.

TrafficMirrorSessionId (string) --
The ID for the Traffic Mirror session.

TrafficMirrorTargetId (string) --
The ID of the Traffic Mirror target.

TrafficMirrorFilterId (string) --
The ID of the Traffic Mirror filter.

NetworkInterfaceId (string) --
The ID of the Traffic Mirror session\'s network interface.

OwnerId (string) --
The ID of the account that owns the Traffic Mirror session.

PacketLength (integer) --
The number of bytes in each packet to mirror. These are the bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet

SessionNumber (integer) --
The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.
Valid values are 1-32766.

VirtualNetworkId (integer) --
The virtual network ID associated with the Traffic Mirror session.

Description (string) --
The description of the Traffic Mirror session.

Tags (list) --
The tags assigned to the Traffic Mirror session.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TrafficMirrorSession': {
            'TrafficMirrorSessionId': 'string',
            'TrafficMirrorTargetId': 'string',
            'TrafficMirrorFilterId': 'string',
            'NetworkInterfaceId': 'string',
            'OwnerId': 'string',
            'PacketLength': 123,
            'SessionNumber': 123,
            'VirtualNetworkId': 123,
            'Description': 'string',
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def modify_transit_gateway_vpc_attachment(TransitGatewayAttachmentId=None, AddSubnetIds=None, RemoveSubnetIds=None, Options=None, DryRun=None):
    """
    Modifies the specified VPC attachment.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_transit_gateway_vpc_attachment(
        TransitGatewayAttachmentId='string',
        AddSubnetIds=[
            'string',
        ],
        RemoveSubnetIds=[
            'string',
        ],
        Options={
            'DnsSupport': 'enable'|'disable',
            'Ipv6Support': 'enable'|'disable'
        },
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type AddSubnetIds: list
    :param AddSubnetIds: The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.\n\n(string) --\n\n

    :type RemoveSubnetIds: list
    :param RemoveSubnetIds: The IDs of one or more subnets to remove.\n\n(string) --\n\n

    :type Options: dict
    :param Options: The new VPC attachment options.\n\nNote\nYou cannot modify the IPv6 options.\n\n\nDnsSupport (string) --Enable or disable DNS support. The default is enable .\n\nIpv6Support (string) --Enable or disable IPv6 support. The default is enable .\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayVpcAttachment': {
        'TransitGatewayAttachmentId': 'string',
        'TransitGatewayId': 'string',
        'VpcId': 'string',
        'VpcOwnerId': 'string',
        'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
        'SubnetIds': [
            'string',
        ],
        'CreationTime': datetime(2015, 1, 1),
        'Options': {
            'DnsSupport': 'enable'|'disable',
            'Ipv6Support': 'enable'|'disable'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayVpcAttachment (dict) --
Information about the modified attachment.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

TransitGatewayId (string) --
The ID of the transit gateway.

VpcId (string) --
The ID of the VPC.

VpcOwnerId (string) --
The ID of the AWS account that owns the VPC.

State (string) --
The state of the VPC attachment.

SubnetIds (list) --
The IDs of the subnets.

(string) --


CreationTime (datetime) --
The creation time.

Options (dict) --
The VPC attachment options.

DnsSupport (string) --
Indicates whether DNS support is enabled.

Ipv6Support (string) --
Indicates whether IPv6 support is disabled.



Tags (list) --
The tags for the VPC attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayVpcAttachment': {
            'TransitGatewayAttachmentId': 'string',
            'TransitGatewayId': 'string',
            'VpcId': 'string',
            'VpcOwnerId': 'string',
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'SubnetIds': [
                'string',
            ],
            'CreationTime': datetime(2015, 1, 1),
            'Options': {
                'DnsSupport': 'enable'|'disable',
                'Ipv6Support': 'enable'|'disable'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_volume(DryRun=None, VolumeId=None, Size=None, VolumeType=None, Iops=None):
    """
    You can modify several parameters of an existing EBS volume, including volume size, volume type, and IOPS capacity. If your EBS volume is attached to a current-generation EC2 instance type, you may be able to apply these changes without stopping the instance or detaching the volume from it. For more information about modifying an EBS volume running Linux, see Modifying the Size, IOPS, or Type of an EBS Volume on Linux . For more information about modifying an EBS volume running Windows, see Modifying the Size, IOPS, or Type of an EBS Volume on Windows .
    When you complete a resize operation on your volume, you need to extend the volume\'s file-system size to take advantage of the new storage capacity. For information about extending a Linux file system, see Extending a Linux File System . For information about extending a Windows file system, see Extending a Windows File System .
    You can use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the Amazon CloudWatch Events User Guide . You can also track the status of a modification using  DescribeVolumesModifications . For information about tracking status changes using either method, see Monitoring Volume Modifications .
    With previous-generation instance types, resizing an EBS volume may require detaching and reattaching the volume or stopping and restarting the instance. For more information, see Modifying the Size, IOPS, or Type of an EBS Volume on Linux and Modifying the Size, IOPS, or Type of an EBS Volume on Windows .
    If you reach the maximum volume modification rate per volume limit, you will need to wait at least six hours before applying further modifications to the affected EBS volume.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_volume(
        DryRun=True|False,
        VolumeId='string',
        Size=123,
        VolumeType='standard'|'io1'|'gp2'|'sc1'|'st1',
        Iops=123
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VolumeId: string
    :param VolumeId: [REQUIRED]\nThe ID of the volume.\n

    :type Size: integer
    :param Size: The target size of the volume, in GiB. The target volume size must be greater than or equal to than the existing size of the volume. For information about available EBS volume sizes, see Amazon EBS Volume Types .\nDefault: If no size is specified, the existing size is retained.\n

    :type VolumeType: string
    :param VolumeType: The target EBS volume type of the volume.\nDefault: If no type is specified, the existing type is retained.\n

    :type Iops: integer
    :param Iops: The target IOPS rate of the volume.\nThis is only valid for Provisioned IOPS SSD (io1 ) volumes. For more information, see Provisioned IOPS SSD (io1) Volumes .\nDefault: If no IOPS value is specified, the existing value is retained.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'VolumeModification': {
        'VolumeId': 'string',
        'ModificationState': 'modifying'|'optimizing'|'completed'|'failed',
        'StatusMessage': 'string',
        'TargetSize': 123,
        'TargetIops': 123,
        'TargetVolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
        'OriginalSize': 123,
        'OriginalIops': 123,
        'OriginalVolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
        'Progress': 123,
        'StartTime': datetime(2015, 1, 1),
        'EndTime': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --

VolumeModification (dict) --
Information about the volume modification.

VolumeId (string) --
The ID of the volume.

ModificationState (string) --
The current modification state. The modification state is null for unmodified volumes.

StatusMessage (string) --
A status message about the modification progress or failure.

TargetSize (integer) --
The target size of the volume, in GiB.

TargetIops (integer) --
The target IOPS rate of the volume.

TargetVolumeType (string) --
The target EBS volume type of the volume.

OriginalSize (integer) --
The original size of the volume.

OriginalIops (integer) --
The original IOPS rate of the volume.

OriginalVolumeType (string) --
The original EBS volume type of the volume.

Progress (integer) --
The modification progress, from 0 to 100 percent complete.

StartTime (datetime) --
The modification start time.

EndTime (datetime) --
The modification completion or failure time.










    :return: {
        'VolumeModification': {
            'VolumeId': 'string',
            'ModificationState': 'modifying'|'optimizing'|'completed'|'failed',
            'StatusMessage': 'string',
            'TargetSize': 123,
            'TargetIops': 123,
            'TargetVolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
            'OriginalSize': 123,
            'OriginalIops': 123,
            'OriginalVolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
            'Progress': 123,
            'StartTime': datetime(2015, 1, 1),
            'EndTime': datetime(2015, 1, 1)
        }
    }
    
    
    """
    pass

def modify_volume_attribute(AutoEnableIO=None, VolumeId=None, DryRun=None):
    """
    Modifies a volume attribute.
    By default, all I/O operations for the volume are suspended when the data on the volume is determined to be potentially inconsistent, to prevent undetectable, latent data corruption. The I/O access to the volume can be resumed by first enabling I/O access and then checking the data consistency on your volume.
    You can change the default behavior to resume I/O operations. We recommend that you change this only for boot volumes or for volumes that are stateless or disposable.
    See also: AWS API Documentation
    
    Examples
    This example sets the autoEnableIo attribute of the volume with the ID vol-1234567890abcdef0 to true. If the command succeeds, no output is returned.
    Expected Output:
    
    :example: response = client.modify_volume_attribute(
        AutoEnableIO={
            'Value': True|False
        },
        VolumeId='string',
        DryRun=True|False
    )
    
    
    :type AutoEnableIO: dict
    :param AutoEnableIO: Indicates whether the volume should be auto-enabled for I/O operations.\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type VolumeId: string
    :param VolumeId: [REQUIRED]\nThe ID of the volume.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.modify_volume_attribute(
        AutoEnableIO={
            'Value': True,
        },
        DryRun=True,
        VolumeId='vol-1234567890abcdef0',
    )
    
    print(response)
    
    
    """
    pass

def modify_vpc_attribute(EnableDnsHostnames=None, EnableDnsSupport=None, VpcId=None):
    """
    Modifies the specified attribute of the specified VPC.
    See also: AWS API Documentation
    
    Examples
    This example modifies the enableDnsSupport attribute. This attribute indicates whether DNS resolution is enabled for the VPC. If this attribute is true, the Amazon DNS server resolves DNS hostnames for instances in the VPC to their corresponding IP addresses; otherwise, it does not.
    Expected Output:
    This example modifies the enableDnsHostnames attribute. This attribute indicates whether instances launched in the VPC get DNS hostnames. If this attribute is true, instances in the VPC get DNS hostnames; otherwise, they do not.
    Expected Output:
    
    :example: response = client.modify_vpc_attribute(
        EnableDnsHostnames={
            'Value': True|False
        },
        EnableDnsSupport={
            'Value': True|False
        },
        VpcId='string'
    )
    
    
    :type EnableDnsHostnames: dict
    :param EnableDnsHostnames: Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.\nYou cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you\'ve enabled DNS support.\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type EnableDnsSupport: dict
    :param EnableDnsSupport: Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range 'plus two' succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.\nYou cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.\n\nValue (boolean) --The attribute value. The valid values are true or false .\n\n\n

    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :return: response = client.modify_vpc_attribute(
        EnableDnsSupport={
            'Value': False,
        },
        VpcId='vpc-a01106c2',
    )
    
    print(response)
    
    
    """
    pass

def modify_vpc_endpoint(DryRun=None, VpcEndpointId=None, ResetPolicy=None, PolicyDocument=None, AddRouteTableIds=None, RemoveRouteTableIds=None, AddSubnetIds=None, RemoveSubnetIds=None, AddSecurityGroupIds=None, RemoveSecurityGroupIds=None, PrivateDnsEnabled=None):
    """
    Modifies attributes of a specified VPC endpoint. The attributes that you can modify depend on the type of VPC endpoint (interface or gateway). For more information, see VPC Endpoints in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_vpc_endpoint(
        DryRun=True|False,
        VpcEndpointId='string',
        ResetPolicy=True|False,
        PolicyDocument='string',
        AddRouteTableIds=[
            'string',
        ],
        RemoveRouteTableIds=[
            'string',
        ],
        AddSubnetIds=[
            'string',
        ],
        RemoveSubnetIds=[
            'string',
        ],
        AddSecurityGroupIds=[
            'string',
        ],
        RemoveSecurityGroupIds=[
            'string',
        ],
        PrivateDnsEnabled=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcEndpointId: string
    :param VpcEndpointId: [REQUIRED]\nThe ID of the endpoint.\n

    :type ResetPolicy: boolean
    :param ResetPolicy: (Gateway endpoint) Specify true to reset the policy document to the default policy. The default policy allows full access to the service.

    :type PolicyDocument: string
    :param PolicyDocument: A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format.

    :type AddRouteTableIds: list
    :param AddRouteTableIds: (Gateway endpoint) One or more route tables IDs to associate with the endpoint.\n\n(string) --\n\n

    :type RemoveRouteTableIds: list
    :param RemoveRouteTableIds: (Gateway endpoint) One or more route table IDs to disassociate from the endpoint.\n\n(string) --\n\n

    :type AddSubnetIds: list
    :param AddSubnetIds: (Interface endpoint) One or more subnet IDs in which to serve the endpoint.\n\n(string) --\n\n

    :type RemoveSubnetIds: list
    :param RemoveSubnetIds: (Interface endpoint) One or more subnets IDs in which to remove the endpoint.\n\n(string) --\n\n

    :type AddSecurityGroupIds: list
    :param AddSecurityGroupIds: (Interface endpoint) One or more security group IDs to associate with the network interface.\n\n(string) --\n\n

    :type RemoveSecurityGroupIds: list
    :param RemoveSecurityGroupIds: (Interface endpoint) One or more security group IDs to disassociate from the network interface.\n\n(string) --\n\n

    :type PrivateDnsEnabled: boolean
    :param PrivateDnsEnabled: (Interface endpoint) Indicates whether a private hosted zone is associated with the VPC.

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def modify_vpc_endpoint_connection_notification(DryRun=None, ConnectionNotificationId=None, ConnectionNotificationArn=None, ConnectionEvents=None):
    """
    Modifies a connection notification for VPC endpoint or VPC endpoint service. You can change the SNS topic for the notification, or the events for which to be notified.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_vpc_endpoint_connection_notification(
        DryRun=True|False,
        ConnectionNotificationId='string',
        ConnectionNotificationArn='string',
        ConnectionEvents=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ConnectionNotificationId: string
    :param ConnectionNotificationId: [REQUIRED]\nThe ID of the notification.\n

    :type ConnectionNotificationArn: string
    :param ConnectionNotificationArn: The ARN for the SNS topic for the notification.

    :type ConnectionEvents: list
    :param ConnectionEvents: One or more events for the endpoint. Valid values are Accept , Connect , Delete , and Reject .\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ReturnValue': True|False
}


Response Structure

(dict) --

ReturnValue (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'ReturnValue': True|False
    }
    
    
    """
    pass

def modify_vpc_endpoint_service_configuration(DryRun=None, ServiceId=None, PrivateDnsName=None, RemovePrivateDnsName=None, AcceptanceRequired=None, AddNetworkLoadBalancerArns=None, RemoveNetworkLoadBalancerArns=None):
    """
    Modifies the attributes of your VPC endpoint service configuration. You can change the Network Load Balancers for your service, and you can specify whether acceptance is required for requests to connect to your endpoint service through an interface VPC endpoint.
    If you set or modify the private DNS name, you must prove that you own the private DNS domain name. For more information, see VPC Endpoint Service Private DNS Name Verification in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_vpc_endpoint_service_configuration(
        DryRun=True|False,
        ServiceId='string',
        PrivateDnsName='string',
        RemovePrivateDnsName=True|False,
        AcceptanceRequired=True|False,
        AddNetworkLoadBalancerArns=[
            'string',
        ],
        RemoveNetworkLoadBalancerArns=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceId: string
    :param ServiceId: [REQUIRED]\nThe ID of the service.\n

    :type PrivateDnsName: string
    :param PrivateDnsName: The private DNS name to assign to the endpoint service.

    :type RemovePrivateDnsName: boolean
    :param RemovePrivateDnsName: Removes the private DNS name of the endpoint service.

    :type AcceptanceRequired: boolean
    :param AcceptanceRequired: Indicates whether requests to create an endpoint to your service must be accepted.

    :type AddNetworkLoadBalancerArns: list
    :param AddNetworkLoadBalancerArns: The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service configuration.\n\n(string) --\n\n

    :type RemoveNetworkLoadBalancerArns: list
    :param RemoveNetworkLoadBalancerArns: The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service configuration.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def modify_vpc_endpoint_service_permissions(DryRun=None, ServiceId=None, AddAllowedPrincipals=None, RemoveAllowedPrincipals=None):
    """
    Modifies the permissions for your VPC endpoint service . You can add or remove permissions for service consumers (IAM users, IAM roles, and AWS accounts) to connect to your endpoint service.
    If you grant permissions to all principals, the service is public. Any users who know the name of a public service can send a request to attach an endpoint. If the service does not require manual approval, attachments are automatically approved.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_vpc_endpoint_service_permissions(
        DryRun=True|False,
        ServiceId='string',
        AddAllowedPrincipals=[
            'string',
        ],
        RemoveAllowedPrincipals=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceId: string
    :param ServiceId: [REQUIRED]\nThe ID of the service.\n

    :type AddAllowedPrincipals: list
    :param AddAllowedPrincipals: The Amazon Resource Names (ARN) of one or more principals. Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*).\n\n(string) --\n\n

    :type RemoveAllowedPrincipals: list
    :param RemoveAllowedPrincipals: The Amazon Resource Names (ARN) of one or more principals. Permissions are revoked for principals in this list.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ReturnValue': True|False
}


Response Structure

(dict) --

ReturnValue (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'ReturnValue': True|False
    }
    
    
    """
    pass

def modify_vpc_peering_connection_options(AccepterPeeringConnectionOptions=None, DryRun=None, RequesterPeeringConnectionOptions=None, VpcPeeringConnectionId=None):
    """
    Modifies the VPC peering connection options on one side of a VPC peering connection. You can do the following:
    If the peered VPCs are in the same AWS account, you can enable DNS resolution for queries from the local VPC. This ensures that queries from the local VPC resolve to private IP addresses in the peer VPC. This option is not available if the peered VPCs are in different AWS accounts or different Regions. For peered VPCs in different AWS accounts, each AWS account owner must initiate a separate request to modify the peering connection options. For inter-region peering connections, you must use the Region for the requester VPC to modify the requester VPC peering options and the Region for the accepter VPC to modify the accepter VPC peering options. To verify which VPCs are the accepter and the requester for a VPC peering connection, use the  DescribeVpcPeeringConnections command.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_vpc_peering_connection_options(
        AccepterPeeringConnectionOptions={
            'AllowDnsResolutionFromRemoteVpc': True|False,
            'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
            'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
        },
        DryRun=True|False,
        RequesterPeeringConnectionOptions={
            'AllowDnsResolutionFromRemoteVpc': True|False,
            'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
            'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
        },
        VpcPeeringConnectionId='string'
    )
    
    
    :type AccepterPeeringConnectionOptions: dict
    :param AccepterPeeringConnectionOptions: The VPC peering connection options for the accepter VPC.\n\nAllowDnsResolutionFromRemoteVpc (boolean) --If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.\n\nAllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --If true, enables outbound communication from an EC2-Classic instance that\'s linked to a local VPC using ClassicLink to instances in a peer VPC.\n\nAllowEgressFromLocalVpcToRemoteClassicLink (boolean) --If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that\'s linked to a peer VPC using ClassicLink.\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type RequesterPeeringConnectionOptions: dict
    :param RequesterPeeringConnectionOptions: The VPC peering connection options for the requester VPC.\n\nAllowDnsResolutionFromRemoteVpc (boolean) --If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.\n\nAllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --If true, enables outbound communication from an EC2-Classic instance that\'s linked to a local VPC using ClassicLink to instances in a peer VPC.\n\nAllowEgressFromLocalVpcToRemoteClassicLink (boolean) --If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that\'s linked to a peer VPC using ClassicLink.\n\n\n

    :type VpcPeeringConnectionId: string
    :param VpcPeeringConnectionId: [REQUIRED]\nThe ID of the VPC peering connection.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'AccepterPeeringConnectionOptions': {
        'AllowDnsResolutionFromRemoteVpc': True|False,
        'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
        'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
    },
    'RequesterPeeringConnectionOptions': {
        'AllowDnsResolutionFromRemoteVpc': True|False,
        'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
        'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
    }
}


Response Structure

(dict) --

AccepterPeeringConnectionOptions (dict) --
Information about the VPC peering connection options for the accepter VPC.

AllowDnsResolutionFromRemoteVpc (boolean) --
If true, the public DNS hostnames of instances in the specified VPC resolve to private IP addresses when queried from instances in the peer VPC.

AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --
If true, enables outbound communication from an EC2-Classic instance that\'s linked to a local VPC using ClassicLink to instances in a peer VPC.

AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --
If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that\'s linked to a peer VPC using ClassicLink.



RequesterPeeringConnectionOptions (dict) --
Information about the VPC peering connection options for the requester VPC.

AllowDnsResolutionFromRemoteVpc (boolean) --
If true, the public DNS hostnames of instances in the specified VPC resolve to private IP addresses when queried from instances in the peer VPC.

AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --
If true, enables outbound communication from an EC2-Classic instance that\'s linked to a local VPC using ClassicLink to instances in a peer VPC.

AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --
If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that\'s linked to a peer VPC using ClassicLink.










    :return: {
        'AccepterPeeringConnectionOptions': {
            'AllowDnsResolutionFromRemoteVpc': True|False,
            'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
            'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
        },
        'RequesterPeeringConnectionOptions': {
            'AllowDnsResolutionFromRemoteVpc': True|False,
            'AllowEgressFromLocalClassicLinkToRemoteVpc': True|False,
            'AllowEgressFromLocalVpcToRemoteClassicLink': True|False
        }
    }
    
    
    :returns: 
    AccepterPeeringConnectionOptions (dict) -- The VPC peering connection options for the accepter VPC.
    
    AllowDnsResolutionFromRemoteVpc (boolean) --If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
    
    AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --If true, enables outbound communication from an EC2-Classic instance that\'s linked to a local VPC using ClassicLink to instances in a peer VPC.
    
    AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that\'s linked to a peer VPC using ClassicLink.
    
    
    
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    RequesterPeeringConnectionOptions (dict) -- The VPC peering connection options for the requester VPC.
    
    AllowDnsResolutionFromRemoteVpc (boolean) --If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
    
    AllowEgressFromLocalClassicLinkToRemoteVpc (boolean) --If true, enables outbound communication from an EC2-Classic instance that\'s linked to a local VPC using ClassicLink to instances in a peer VPC.
    
    AllowEgressFromLocalVpcToRemoteClassicLink (boolean) --If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that\'s linked to a peer VPC using ClassicLink.
    
    
    
    VpcPeeringConnectionId (string) -- [REQUIRED]
    The ID of the VPC peering connection.
    
    
    """
    pass

def modify_vpc_tenancy(VpcId=None, InstanceTenancy=None, DryRun=None):
    """
    Modifies the instance tenancy attribute of the specified VPC. You can change the instance tenancy attribute of a VPC to default only. You cannot change the instance tenancy attribute to dedicated .
    After you modify the tenancy of the VPC, any new instances that you launch into the VPC have a tenancy of default , unless you specify otherwise during launch. The tenancy of any existing instances in the VPC is not affected.
    For more information, see Dedicated Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_vpc_tenancy(
        VpcId='string',
        InstanceTenancy='default',
        DryRun=True|False
    )
    
    
    :type VpcId: string
    :param VpcId: [REQUIRED]\nThe ID of the VPC.\n

    :type InstanceTenancy: string
    :param InstanceTenancy: [REQUIRED]\nThe instance tenancy attribute for the VPC.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ReturnValue': True|False
}


Response Structure

(dict) --

ReturnValue (boolean) --
Returns true if the request succeeds; otherwise, returns an error.








    :return: {
        'ReturnValue': True|False
    }
    
    
    """
    pass

def modify_vpn_connection(VpnConnectionId=None, TransitGatewayId=None, CustomerGatewayId=None, VpnGatewayId=None, DryRun=None):
    """
    Modifies the customer gateway or the target gateway of an AWS Site-to-Site VPN connection. To modify the target gateway, the following migration options are available:
    Before you perform the migration to the new gateway, you must configure the new gateway. Use  CreateVpnGateway to create a virtual private gateway, or  CreateTransitGateway to create a transit gateway.
    This step is required when you migrate from a virtual private gateway with static routes to a transit gateway.
    You must delete the static routes before you migrate to the new gateway.
    Keep a copy of the static route before you delete it. You will need to add back these routes to the transit gateway after the VPN connection migration is complete.
    After you migrate to the new gateway, you might need to modify your VPC route table. Use  CreateRoute and  DeleteRoute to make the changes described in VPN Gateway Target Modification Required VPC Route Table Updates in the AWS Site-to-Site VPN User Guide .
    When the new gateway is a transit gateway, modify the transit gateway route table to allow traffic between the VPC and the AWS Site-to-Site VPN connection. Use  CreateTransitGatewayRoute to add the routes.
    If you deleted VPN static routes, you must add the static routes to the transit gateway route table.
    After you perform this operation, the AWS VPN endpoint\'s IP addresses on the AWS side and the tunnel options remain intact. Your AWS Site-to-Site VPN connection will be temporarily unavailable for a brief period while we provision the new endpoints.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_vpn_connection(
        VpnConnectionId='string',
        TransitGatewayId='string',
        CustomerGatewayId='string',
        VpnGatewayId='string',
        DryRun=True|False
    )
    
    
    :type VpnConnectionId: string
    :param VpnConnectionId: [REQUIRED]\nThe ID of the VPN connection.\n

    :type TransitGatewayId: string
    :param TransitGatewayId: The ID of the transit gateway.

    :type CustomerGatewayId: string
    :param CustomerGatewayId: The ID of the customer gateway at your end of the VPN connection.

    :type VpnGatewayId: string
    :param VpnGatewayId: The ID of the virtual private gateway at the AWS side of the VPN connection.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'VpnConnection': {
        'CustomerGatewayConfiguration': 'string',
        'CustomerGatewayId': 'string',
        'Category': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'Type': 'ipsec.1',
        'VpnConnectionId': 'string',
        'VpnGatewayId': 'string',
        'TransitGatewayId': 'string',
        'Options': {
            'EnableAcceleration': True|False,
            'StaticRoutesOnly': True|False,
            'TunnelOptions': [
                {
                    'OutsideIpAddress': 'string',
                    'TunnelInsideCidr': 'string',
                    'PreSharedKey': 'string',
                    'Phase1LifetimeSeconds': 123,
                    'Phase2LifetimeSeconds': 123,
                    'RekeyMarginTimeSeconds': 123,
                    'RekeyFuzzPercentage': 123,
                    'ReplayWindowSize': 123,
                    'DpdTimeoutSeconds': 123,
                    'Phase1EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'Phase2DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'IkeVersions': [
                        {
                            'Value': 'string'
                        },
                    ]
                },
            ]
        },
        'Routes': [
            {
                'DestinationCidrBlock': 'string',
                'Source': 'Static',
                'State': 'pending'|'available'|'deleting'|'deleted'
            },
        ],
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VgwTelemetry': [
            {
                'AcceptedRouteCount': 123,
                'LastStatusChange': datetime(2015, 1, 1),
                'OutsideIpAddress': 'string',
                'Status': 'UP'|'DOWN',
                'StatusMessage': 'string',
                'CertificateArn': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

VpnConnection (dict) --
Describes a VPN connection.

CustomerGatewayConfiguration (string) --
The configuration information for the VPN connection\'s customer gateway (in the native XML format). This element is always present in the  CreateVpnConnection response; however, it\'s present in the  DescribeVpnConnections response only if the VPN connection is in the pending or available state.

CustomerGatewayId (string) --
The ID of the customer gateway at your end of the VPN connection.

Category (string) --
The category of the VPN connection. A value of VPN indicates an AWS VPN connection. A value of VPN-Classic indicates an AWS Classic VPN connection.

State (string) --
The current state of the VPN connection.

Type (string) --
The type of VPN connection.

VpnConnectionId (string) --
The ID of the VPN connection.

VpnGatewayId (string) --
The ID of the virtual private gateway at the AWS side of the VPN connection.

TransitGatewayId (string) --
The ID of the transit gateway associated with the VPN connection.

Options (dict) --
The VPN connection options.

EnableAcceleration (boolean) --
Indicates whether acceleration is enabled for the VPN connection.

StaticRoutesOnly (boolean) --
Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don\'t support BGP.

TunnelOptions (list) --
Indicates the VPN tunnel options.

(dict) --
The VPN tunnel options.

OutsideIpAddress (string) --
The external IP address of the VPN tunnel.

TunnelInsideCidr (string) --
The range of inside IP addresses for the tunnel.

PreSharedKey (string) --
The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.

Phase1LifetimeSeconds (integer) --
The lifetime for phase 1 of the IKE negotiation, in seconds.

Phase2LifetimeSeconds (integer) --
The lifetime for phase 2 of the IKE negotiation, in seconds.

RekeyMarginTimeSeconds (integer) --
The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey.

RekeyFuzzPercentage (integer) --
The percentage of the rekey window determined by RekeyMarginTimeSeconds during which the rekey time is randomly selected.

ReplayWindowSize (integer) --
The number of packets in an IKE replay window.

DpdTimeoutSeconds (integer) --
The number of seconds after which a DPD timeout occurs.

Phase1EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The encryption algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the encryption algorithm.





Phase2EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The encryption algorithm for phase 2 IKE negotiations.

Value (string) --
The encryption algorithm.





Phase1IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The integrity algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the integrity algorithm.





Phase2IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The integrity algorithm for phase 2 IKE negotiations.

Value (string) --
The integrity algorithm.





Phase1DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 1 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





Phase2DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 2 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





IkeVersions (list) --
The IKE versions that are permitted for the VPN tunnel.

(dict) --
The internet key exchange (IKE) version permitted for the VPN tunnel.

Value (string) --
The IKE version.











Routes (list) --
The static routes associated with the VPN connection.

(dict) --
Describes a static route for a VPN connection.

DestinationCidrBlock (string) --
The CIDR block associated with the local subnet of the customer data center.

Source (string) --
Indicates how the routes were provided.

State (string) --
The current state of the static route.





Tags (list) --
Any tags assigned to the VPN connection.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VgwTelemetry (list) --
Information about the VPN tunnel.

(dict) --
Describes telemetry for a VPN tunnel.

AcceptedRouteCount (integer) --
The number of accepted routes.

LastStatusChange (datetime) --
The date and time of the last change in status.

OutsideIpAddress (string) --
The Internet-routable IP address of the virtual private gateway\'s outside interface.

Status (string) --
The status of the VPN tunnel.

StatusMessage (string) --
If an error occurs, a description of the error.

CertificateArn (string) --
The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.














    :return: {
        'VpnConnection': {
            'CustomerGatewayConfiguration': 'string',
            'CustomerGatewayId': 'string',
            'Category': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'Type': 'ipsec.1',
            'VpnConnectionId': 'string',
            'VpnGatewayId': 'string',
            'TransitGatewayId': 'string',
            'Options': {
                'EnableAcceleration': True|False,
                'StaticRoutesOnly': True|False,
                'TunnelOptions': [
                    {
                        'OutsideIpAddress': 'string',
                        'TunnelInsideCidr': 'string',
                        'PreSharedKey': 'string',
                        'Phase1LifetimeSeconds': 123,
                        'Phase2LifetimeSeconds': 123,
                        'RekeyMarginTimeSeconds': 123,
                        'RekeyFuzzPercentage': 123,
                        'ReplayWindowSize': 123,
                        'DpdTimeoutSeconds': 123,
                        'Phase1EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'Phase2DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'IkeVersions': [
                            {
                                'Value': 'string'
                            },
                        ]
                    },
                ]
            },
            'Routes': [
                {
                    'DestinationCidrBlock': 'string',
                    'Source': 'Static',
                    'State': 'pending'|'available'|'deleting'|'deleted'
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VgwTelemetry': [
                {
                    'AcceptedRouteCount': 123,
                    'LastStatusChange': datetime(2015, 1, 1),
                    'OutsideIpAddress': 'string',
                    'Status': 'UP'|'DOWN',
                    'StatusMessage': 'string',
                    'CertificateArn': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    VpnConnectionId (string) -- [REQUIRED]
    The ID of the VPN connection.
    
    TransitGatewayId (string) -- The ID of the transit gateway.
    CustomerGatewayId (string) -- The ID of the customer gateway at your end of the VPN connection.
    VpnGatewayId (string) -- The ID of the virtual private gateway at the AWS side of the VPN connection.
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    
    """
    pass

def modify_vpn_tunnel_certificate(VpnConnectionId=None, VpnTunnelOutsideIpAddress=None, DryRun=None):
    """
    Modifies the VPN tunnel endpoint certificate.
    See also: AWS API Documentation
    
    
    :example: response = client.modify_vpn_tunnel_certificate(
        VpnConnectionId='string',
        VpnTunnelOutsideIpAddress='string',
        DryRun=True|False
    )
    
    
    :type VpnConnectionId: string
    :param VpnConnectionId: [REQUIRED]\nThe ID of the AWS Site-to-Site VPN connection.\n

    :type VpnTunnelOutsideIpAddress: string
    :param VpnTunnelOutsideIpAddress: [REQUIRED]\nThe external IP address of the VPN tunnel.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'VpnConnection': {
        'CustomerGatewayConfiguration': 'string',
        'CustomerGatewayId': 'string',
        'Category': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'Type': 'ipsec.1',
        'VpnConnectionId': 'string',
        'VpnGatewayId': 'string',
        'TransitGatewayId': 'string',
        'Options': {
            'EnableAcceleration': True|False,
            'StaticRoutesOnly': True|False,
            'TunnelOptions': [
                {
                    'OutsideIpAddress': 'string',
                    'TunnelInsideCidr': 'string',
                    'PreSharedKey': 'string',
                    'Phase1LifetimeSeconds': 123,
                    'Phase2LifetimeSeconds': 123,
                    'RekeyMarginTimeSeconds': 123,
                    'RekeyFuzzPercentage': 123,
                    'ReplayWindowSize': 123,
                    'DpdTimeoutSeconds': 123,
                    'Phase1EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'Phase2DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'IkeVersions': [
                        {
                            'Value': 'string'
                        },
                    ]
                },
            ]
        },
        'Routes': [
            {
                'DestinationCidrBlock': 'string',
                'Source': 'Static',
                'State': 'pending'|'available'|'deleting'|'deleted'
            },
        ],
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VgwTelemetry': [
            {
                'AcceptedRouteCount': 123,
                'LastStatusChange': datetime(2015, 1, 1),
                'OutsideIpAddress': 'string',
                'Status': 'UP'|'DOWN',
                'StatusMessage': 'string',
                'CertificateArn': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

VpnConnection (dict) --
Describes a VPN connection.

CustomerGatewayConfiguration (string) --
The configuration information for the VPN connection\'s customer gateway (in the native XML format). This element is always present in the  CreateVpnConnection response; however, it\'s present in the  DescribeVpnConnections response only if the VPN connection is in the pending or available state.

CustomerGatewayId (string) --
The ID of the customer gateway at your end of the VPN connection.

Category (string) --
The category of the VPN connection. A value of VPN indicates an AWS VPN connection. A value of VPN-Classic indicates an AWS Classic VPN connection.

State (string) --
The current state of the VPN connection.

Type (string) --
The type of VPN connection.

VpnConnectionId (string) --
The ID of the VPN connection.

VpnGatewayId (string) --
The ID of the virtual private gateway at the AWS side of the VPN connection.

TransitGatewayId (string) --
The ID of the transit gateway associated with the VPN connection.

Options (dict) --
The VPN connection options.

EnableAcceleration (boolean) --
Indicates whether acceleration is enabled for the VPN connection.

StaticRoutesOnly (boolean) --
Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don\'t support BGP.

TunnelOptions (list) --
Indicates the VPN tunnel options.

(dict) --
The VPN tunnel options.

OutsideIpAddress (string) --
The external IP address of the VPN tunnel.

TunnelInsideCidr (string) --
The range of inside IP addresses for the tunnel.

PreSharedKey (string) --
The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.

Phase1LifetimeSeconds (integer) --
The lifetime for phase 1 of the IKE negotiation, in seconds.

Phase2LifetimeSeconds (integer) --
The lifetime for phase 2 of the IKE negotiation, in seconds.

RekeyMarginTimeSeconds (integer) --
The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey.

RekeyFuzzPercentage (integer) --
The percentage of the rekey window determined by RekeyMarginTimeSeconds during which the rekey time is randomly selected.

ReplayWindowSize (integer) --
The number of packets in an IKE replay window.

DpdTimeoutSeconds (integer) --
The number of seconds after which a DPD timeout occurs.

Phase1EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The encryption algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the encryption algorithm.





Phase2EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The encryption algorithm for phase 2 IKE negotiations.

Value (string) --
The encryption algorithm.





Phase1IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The integrity algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the integrity algorithm.





Phase2IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The integrity algorithm for phase 2 IKE negotiations.

Value (string) --
The integrity algorithm.





Phase1DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 1 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





Phase2DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 2 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





IkeVersions (list) --
The IKE versions that are permitted for the VPN tunnel.

(dict) --
The internet key exchange (IKE) version permitted for the VPN tunnel.

Value (string) --
The IKE version.











Routes (list) --
The static routes associated with the VPN connection.

(dict) --
Describes a static route for a VPN connection.

DestinationCidrBlock (string) --
The CIDR block associated with the local subnet of the customer data center.

Source (string) --
Indicates how the routes were provided.

State (string) --
The current state of the static route.





Tags (list) --
Any tags assigned to the VPN connection.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VgwTelemetry (list) --
Information about the VPN tunnel.

(dict) --
Describes telemetry for a VPN tunnel.

AcceptedRouteCount (integer) --
The number of accepted routes.

LastStatusChange (datetime) --
The date and time of the last change in status.

OutsideIpAddress (string) --
The Internet-routable IP address of the virtual private gateway\'s outside interface.

Status (string) --
The status of the VPN tunnel.

StatusMessage (string) --
If an error occurs, a description of the error.

CertificateArn (string) --
The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.














    :return: {
        'VpnConnection': {
            'CustomerGatewayConfiguration': 'string',
            'CustomerGatewayId': 'string',
            'Category': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'Type': 'ipsec.1',
            'VpnConnectionId': 'string',
            'VpnGatewayId': 'string',
            'TransitGatewayId': 'string',
            'Options': {
                'EnableAcceleration': True|False,
                'StaticRoutesOnly': True|False,
                'TunnelOptions': [
                    {
                        'OutsideIpAddress': 'string',
                        'TunnelInsideCidr': 'string',
                        'PreSharedKey': 'string',
                        'Phase1LifetimeSeconds': 123,
                        'Phase2LifetimeSeconds': 123,
                        'RekeyMarginTimeSeconds': 123,
                        'RekeyFuzzPercentage': 123,
                        'ReplayWindowSize': 123,
                        'DpdTimeoutSeconds': 123,
                        'Phase1EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'Phase2DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'IkeVersions': [
                            {
                                'Value': 'string'
                            },
                        ]
                    },
                ]
            },
            'Routes': [
                {
                    'DestinationCidrBlock': 'string',
                    'Source': 'Static',
                    'State': 'pending'|'available'|'deleting'|'deleted'
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VgwTelemetry': [
                {
                    'AcceptedRouteCount': 123,
                    'LastStatusChange': datetime(2015, 1, 1),
                    'OutsideIpAddress': 'string',
                    'Status': 'UP'|'DOWN',
                    'StatusMessage': 'string',
                    'CertificateArn': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def modify_vpn_tunnel_options(VpnConnectionId=None, VpnTunnelOutsideIpAddress=None, TunnelOptions=None, DryRun=None):
    """
    Modifies the options for a VPN tunnel in an AWS Site-to-Site VPN connection. You can modify multiple options for a tunnel in a single request, but you can only modify one tunnel at a time. For more information, see Site-to-Site VPN Tunnel Options for Your Site-to-Site VPN Connection in the AWS Site-to-Site VPN User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.modify_vpn_tunnel_options(
        VpnConnectionId='string',
        VpnTunnelOutsideIpAddress='string',
        TunnelOptions={
            'TunnelInsideCidr': 'string',
            'PreSharedKey': 'string',
            'Phase1LifetimeSeconds': 123,
            'Phase2LifetimeSeconds': 123,
            'RekeyMarginTimeSeconds': 123,
            'RekeyFuzzPercentage': 123,
            'ReplayWindowSize': 123,
            'DPDTimeoutSeconds': 123,
            'Phase1EncryptionAlgorithms': [
                {
                    'Value': 'string'
                },
            ],
            'Phase2EncryptionAlgorithms': [
                {
                    'Value': 'string'
                },
            ],
            'Phase1IntegrityAlgorithms': [
                {
                    'Value': 'string'
                },
            ],
            'Phase2IntegrityAlgorithms': [
                {
                    'Value': 'string'
                },
            ],
            'Phase1DHGroupNumbers': [
                {
                    'Value': 123
                },
            ],
            'Phase2DHGroupNumbers': [
                {
                    'Value': 123
                },
            ],
            'IKEVersions': [
                {
                    'Value': 'string'
                },
            ]
        },
        DryRun=True|False
    )
    
    
    :type VpnConnectionId: string
    :param VpnConnectionId: [REQUIRED]\nThe ID of the AWS Site-to-Site VPN connection.\n

    :type VpnTunnelOutsideIpAddress: string
    :param VpnTunnelOutsideIpAddress: [REQUIRED]\nThe external IP address of the VPN tunnel.\n

    :type TunnelOptions: dict
    :param TunnelOptions: [REQUIRED]\nThe tunnel options to modify.\n\nTunnelInsideCidr (string) --The range of inside IP addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway.\nConstraints: A size /30 CIDR block from the 169.254.0.0/16 range. The following CIDR blocks are reserved and cannot be used:\n\n169.254.0.0/30\n169.254.1.0/30\n169.254.2.0/30\n169.254.3.0/30\n169.254.4.0/30\n169.254.5.0/30\n169.254.169.252/30\n\n\nPreSharedKey (string) --The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.\nConstraints: Allowed characters are alphanumeric characters, periods (.), and underscores (_). Must be between 8 and 64 characters in length and cannot start with zero (0).\n\nPhase1LifetimeSeconds (integer) --The lifetime for phase 1 of the IKE negotiation, in seconds.\nConstraints: A value between 900 and 28,800.\nDefault: 28800\n\nPhase2LifetimeSeconds (integer) --The lifetime for phase 2 of the IKE negotiation, in seconds.\nConstraints: A value between 900 and 3,600. The value must be less than the value for Phase1LifetimeSeconds .\nDefault: 3600\n\nRekeyMarginTimeSeconds (integer) --The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for RekeyFuzzPercentage .\nConstraints: A value between 60 and half of Phase2LifetimeSeconds .\nDefault: 540\n\nRekeyFuzzPercentage (integer) --The percentage of the rekey window (determined by RekeyMarginTimeSeconds ) during which the rekey time is randomly selected.\nConstraints: A value between 0 and 100.\nDefault: 100\n\nReplayWindowSize (integer) --The number of packets in an IKE replay window.\nConstraints: A value between 64 and 2048.\nDefault: 1024\n\nDPDTimeoutSeconds (integer) --The number of seconds after which a DPD timeout occurs.\nConstraints: A value between 0 and 30.\nDefault: 30\n\nPhase1EncryptionAlgorithms (list) --One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.\nValid values: AES128 | AES256\n\n(dict) --Specifies the encryption algorithm for the VPN tunnel for phase 1 IKE negotiations.\n\nValue (string) --The value for the encryption algorithm.\n\n\n\n\n\nPhase2EncryptionAlgorithms (list) --One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.\nValid values: AES128 | AES256\n\n(dict) --Specifies the encryption algorithm for the VPN tunnel for phase 2 IKE negotiations.\n\nValue (string) --The encryption algorithm.\n\n\n\n\n\nPhase1IntegrityAlgorithms (list) --One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.\nValid values: SHA1 | SHA2-256\n\n(dict) --Specifies the integrity algorithm for the VPN tunnel for phase 1 IKE negotiations.\n\nValue (string) --The value for the integrity algorithm.\n\n\n\n\n\nPhase2IntegrityAlgorithms (list) --One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.\nValid values: SHA1 | SHA2-256\n\n(dict) --Specifies the integrity algorithm for the VPN tunnel for phase 2 IKE negotiations.\n\nValue (string) --The integrity algorithm.\n\n\n\n\n\nPhase1DHGroupNumbers (list) --One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.\nValid values: 2 | 14 | 15 | 16 | 17 | 18 | 22 | 23 | 24\n\n(dict) --Specifies a Diffie-Hellman group number for the VPN tunnel for phase 1 IKE negotiations.\n\nValue (integer) --The Diffie-Hellmann group number.\n\n\n\n\n\nPhase2DHGroupNumbers (list) --One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.\nValid values: 2 | 5 | 14 | 15 | 16 | 17 | 18 | 22 | 23 | 24\n\n(dict) --Specifies a Diffie-Hellman group number for the VPN tunnel for phase 2 IKE negotiations.\n\nValue (integer) --The Diffie-Hellmann group number.\n\n\n\n\n\nIKEVersions (list) --The IKE versions that are permitted for the VPN tunnel.\nValid values: ikev1 | ikev2\n\n(dict) --The IKE version that is permitted for the VPN tunnel.\n\nValue (string) --The IKE version.\n\n\n\n\n\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'VpnConnection': {
        'CustomerGatewayConfiguration': 'string',
        'CustomerGatewayId': 'string',
        'Category': 'string',
        'State': 'pending'|'available'|'deleting'|'deleted',
        'Type': 'ipsec.1',
        'VpnConnectionId': 'string',
        'VpnGatewayId': 'string',
        'TransitGatewayId': 'string',
        'Options': {
            'EnableAcceleration': True|False,
            'StaticRoutesOnly': True|False,
            'TunnelOptions': [
                {
                    'OutsideIpAddress': 'string',
                    'TunnelInsideCidr': 'string',
                    'PreSharedKey': 'string',
                    'Phase1LifetimeSeconds': 123,
                    'Phase2LifetimeSeconds': 123,
                    'RekeyMarginTimeSeconds': 123,
                    'RekeyFuzzPercentage': 123,
                    'ReplayWindowSize': 123,
                    'DpdTimeoutSeconds': 123,
                    'Phase1EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2EncryptionAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase2IntegrityAlgorithms': [
                        {
                            'Value': 'string'
                        },
                    ],
                    'Phase1DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'Phase2DHGroupNumbers': [
                        {
                            'Value': 123
                        },
                    ],
                    'IkeVersions': [
                        {
                            'Value': 'string'
                        },
                    ]
                },
            ]
        },
        'Routes': [
            {
                'DestinationCidrBlock': 'string',
                'Source': 'Static',
                'State': 'pending'|'available'|'deleting'|'deleted'
            },
        ],
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        'VgwTelemetry': [
            {
                'AcceptedRouteCount': 123,
                'LastStatusChange': datetime(2015, 1, 1),
                'OutsideIpAddress': 'string',
                'Status': 'UP'|'DOWN',
                'StatusMessage': 'string',
                'CertificateArn': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

VpnConnection (dict) --
Describes a VPN connection.

CustomerGatewayConfiguration (string) --
The configuration information for the VPN connection\'s customer gateway (in the native XML format). This element is always present in the  CreateVpnConnection response; however, it\'s present in the  DescribeVpnConnections response only if the VPN connection is in the pending or available state.

CustomerGatewayId (string) --
The ID of the customer gateway at your end of the VPN connection.

Category (string) --
The category of the VPN connection. A value of VPN indicates an AWS VPN connection. A value of VPN-Classic indicates an AWS Classic VPN connection.

State (string) --
The current state of the VPN connection.

Type (string) --
The type of VPN connection.

VpnConnectionId (string) --
The ID of the VPN connection.

VpnGatewayId (string) --
The ID of the virtual private gateway at the AWS side of the VPN connection.

TransitGatewayId (string) --
The ID of the transit gateway associated with the VPN connection.

Options (dict) --
The VPN connection options.

EnableAcceleration (boolean) --
Indicates whether acceleration is enabled for the VPN connection.

StaticRoutesOnly (boolean) --
Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don\'t support BGP.

TunnelOptions (list) --
Indicates the VPN tunnel options.

(dict) --
The VPN tunnel options.

OutsideIpAddress (string) --
The external IP address of the VPN tunnel.

TunnelInsideCidr (string) --
The range of inside IP addresses for the tunnel.

PreSharedKey (string) --
The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.

Phase1LifetimeSeconds (integer) --
The lifetime for phase 1 of the IKE negotiation, in seconds.

Phase2LifetimeSeconds (integer) --
The lifetime for phase 2 of the IKE negotiation, in seconds.

RekeyMarginTimeSeconds (integer) --
The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey.

RekeyFuzzPercentage (integer) --
The percentage of the rekey window determined by RekeyMarginTimeSeconds during which the rekey time is randomly selected.

ReplayWindowSize (integer) --
The number of packets in an IKE replay window.

DpdTimeoutSeconds (integer) --
The number of seconds after which a DPD timeout occurs.

Phase1EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The encryption algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the encryption algorithm.





Phase2EncryptionAlgorithms (list) --
The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The encryption algorithm for phase 2 IKE negotiations.

Value (string) --
The encryption algorithm.





Phase1IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The integrity algorithm for phase 1 IKE negotiations.

Value (string) --
The value for the integrity algorithm.





Phase2IntegrityAlgorithms (list) --
The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The integrity algorithm for phase 2 IKE negotiations.

Value (string) --
The integrity algorithm.





Phase1DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 1 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





Phase2DHGroupNumbers (list) --
The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.

(dict) --
The Diffie-Hellmann group number for phase 2 IKE negotiations.

Value (integer) --
The Diffie-Hellmann group number.





IkeVersions (list) --
The IKE versions that are permitted for the VPN tunnel.

(dict) --
The internet key exchange (IKE) version permitted for the VPN tunnel.

Value (string) --
The IKE version.











Routes (list) --
The static routes associated with the VPN connection.

(dict) --
Describes a static route for a VPN connection.

DestinationCidrBlock (string) --
The CIDR block associated with the local subnet of the customer data center.

Source (string) --
Indicates how the routes were provided.

State (string) --
The current state of the static route.





Tags (list) --
Any tags assigned to the VPN connection.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VgwTelemetry (list) --
Information about the VPN tunnel.

(dict) --
Describes telemetry for a VPN tunnel.

AcceptedRouteCount (integer) --
The number of accepted routes.

LastStatusChange (datetime) --
The date and time of the last change in status.

OutsideIpAddress (string) --
The Internet-routable IP address of the virtual private gateway\'s outside interface.

Status (string) --
The status of the VPN tunnel.

StatusMessage (string) --
If an error occurs, a description of the error.

CertificateArn (string) --
The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.














    :return: {
        'VpnConnection': {
            'CustomerGatewayConfiguration': 'string',
            'CustomerGatewayId': 'string',
            'Category': 'string',
            'State': 'pending'|'available'|'deleting'|'deleted',
            'Type': 'ipsec.1',
            'VpnConnectionId': 'string',
            'VpnGatewayId': 'string',
            'TransitGatewayId': 'string',
            'Options': {
                'EnableAcceleration': True|False,
                'StaticRoutesOnly': True|False,
                'TunnelOptions': [
                    {
                        'OutsideIpAddress': 'string',
                        'TunnelInsideCidr': 'string',
                        'PreSharedKey': 'string',
                        'Phase1LifetimeSeconds': 123,
                        'Phase2LifetimeSeconds': 123,
                        'RekeyMarginTimeSeconds': 123,
                        'RekeyFuzzPercentage': 123,
                        'ReplayWindowSize': 123,
                        'DpdTimeoutSeconds': 123,
                        'Phase1EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2EncryptionAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase2IntegrityAlgorithms': [
                            {
                                'Value': 'string'
                            },
                        ],
                        'Phase1DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'Phase2DHGroupNumbers': [
                            {
                                'Value': 123
                            },
                        ],
                        'IkeVersions': [
                            {
                                'Value': 'string'
                            },
                        ]
                    },
                ]
            },
            'Routes': [
                {
                    'DestinationCidrBlock': 'string',
                    'Source': 'Static',
                    'State': 'pending'|'available'|'deleting'|'deleted'
                },
            ],
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VgwTelemetry': [
                {
                    'AcceptedRouteCount': 123,
                    'LastStatusChange': datetime(2015, 1, 1),
                    'OutsideIpAddress': 'string',
                    'Status': 'UP'|'DOWN',
                    'StatusMessage': 'string',
                    'CertificateArn': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def monitor_instances(InstanceIds=None, DryRun=None):
    """
    Enables detailed monitoring for a running instance. Otherwise, basic monitoring is enabled. For more information, see Monitoring Your Instances and Volumes in the Amazon Elastic Compute Cloud User Guide .
    To disable detailed monitoring, see .
    See also: AWS API Documentation
    
    
    :example: response = client.monitor_instances(
        InstanceIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type InstanceIds: list
    :param InstanceIds: [REQUIRED]\nThe IDs of the instances.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceMonitorings': [
        {
            'InstanceId': 'string',
            'Monitoring': {
                'State': 'disabled'|'disabling'|'enabled'|'pending'
            }
        },
    ]
}


Response Structure

(dict) --

InstanceMonitorings (list) --
The monitoring information.

(dict) --
Describes the monitoring of an instance.

InstanceId (string) --
The ID of the instance.

Monitoring (dict) --
The monitoring for the instance.

State (string) --
Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.














    :return: {
        'InstanceMonitorings': [
            {
                'InstanceId': 'string',
                'Monitoring': {
                    'State': 'disabled'|'disabling'|'enabled'|'pending'
                }
            },
        ]
    }
    
    
    """
    pass

def move_address_to_vpc(DryRun=None, PublicIp=None):
    """
    Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform. The Elastic IP address must be allocated to your account for more than 24 hours, and it must not be associated with an instance. After the Elastic IP address is moved, it is no longer available for use in the EC2-Classic platform, unless you move it back using the  RestoreAddressToClassic request. You cannot move an Elastic IP address that was originally allocated for use in the EC2-VPC platform to the EC2-Classic platform.
    See also: AWS API Documentation
    
    Examples
    This example moves the specified Elastic IP address to the EC2-VPC platform.
    Expected Output:
    
    :example: response = client.move_address_to_vpc(
        DryRun=True|False,
        PublicIp='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type PublicIp: string
    :param PublicIp: [REQUIRED]\nThe Elastic IP address.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'AllocationId': 'string',
    'Status': 'MoveInProgress'|'InVpc'|'InClassic'
}


Response Structure

(dict) --

AllocationId (string) --
The allocation ID for the Elastic IP address.

Status (string) --
The status of the move of the IP address.







Examples
This example moves the specified Elastic IP address to the EC2-VPC platform.
response = client.move_address_to_vpc(
    PublicIp='54.123.4.56',
)

print(response)


Expected Output:
{
    'Status': 'MoveInProgress',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AllocationId': 'string',
        'Status': 'MoveInProgress'|'InVpc'|'InClassic'
    }
    
    
    """
    pass

def provision_byoip_cidr(Cidr=None, CidrAuthorizationContext=None, PubliclyAdvertisable=None, Description=None, DryRun=None, PoolTagSpecifications=None):
    """
    Provisions an IPv4 or IPv6 address range for use with your AWS resources through bring your own IP addresses (BYOIP) and creates a corresponding address pool. After the address range is provisioned, it is ready to be advertised using  AdvertiseByoipCidr .
    AWS verifies that you own the address range and are authorized to advertise it. You must ensure that the address range is registered to you and that you created an RPKI ROA to authorize Amazon ASNs 16509 and 14618 to advertise the address range. For more information, see Bring Your Own IP Addresses (BYOIP) in the Amazon Elastic Compute Cloud User Guide .
    Provisioning an address range is an asynchronous operation, so the call returns immediately, but the address range is not ready to use until its status changes from pending-provision to provisioned . To monitor the status of an address range, use  DescribeByoipCidrs . To allocate an Elastic IP address from your IPv4 address pool, use  AllocateAddress with either the specific address from the address pool or the ID of the address pool.
    See also: AWS API Documentation
    
    
    :example: response = client.provision_byoip_cidr(
        Cidr='string',
        CidrAuthorizationContext={
            'Message': 'string',
            'Signature': 'string'
        },
        PubliclyAdvertisable=True|False,
        Description='string',
        DryRun=True|False,
        PoolTagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type Cidr: string
    :param Cidr: [REQUIRED]\nThe public IPv4 or IPv6 address range, in CIDR notation. The most specific IPv4 prefix that you can specify is /24. The most specific IPv6 prefix you can specify is /56. The address range cannot overlap with another address range that you\'ve brought to this or another Region.\n

    :type CidrAuthorizationContext: dict
    :param CidrAuthorizationContext: A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP.\n\nMessage (string) -- [REQUIRED]The plain-text authorization message for the prefix and account.\n\nSignature (string) -- [REQUIRED]The signed authorization message for the prefix and account.\n\n\n

    :type PubliclyAdvertisable: boolean
    :param PubliclyAdvertisable: (IPv6 only) Indicate whether the address range will be publicly advertised to the internet.\nDefault: true\n

    :type Description: string
    :param Description: A description for the address range and the address pool.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type PoolTagSpecifications: list
    :param PoolTagSpecifications: The tags to apply to the address pool.\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ByoipCidr': {
        'Cidr': 'string',
        'Description': 'string',
        'StatusMessage': 'string',
        'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
    }
}


Response Structure

(dict) --

ByoipCidr (dict) --
Information about the address range.

Cidr (string) --
The address range, in CIDR notation.

Description (string) --
The description of the address range.

StatusMessage (string) --
Upon success, contains the ID of the address pool. Otherwise, contains an error message.

State (string) --
The state of the address pool.










    :return: {
        'ByoipCidr': {
            'Cidr': 'string',
            'Description': 'string',
            'StatusMessage': 'string',
            'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
        }
    }
    
    
    """
    pass

def purchase_host_reservation(ClientToken=None, CurrencyCode=None, HostIdSet=None, LimitPrice=None, OfferingId=None):
    """
    Purchase a reservation with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation. This action results in the specified reservation being purchased and charged to your account.
    See also: AWS API Documentation
    
    
    :example: response = client.purchase_host_reservation(
        ClientToken='string',
        CurrencyCode='USD',
        HostIdSet=[
            'string',
        ],
        LimitPrice='string',
        OfferingId='string'
    )
    
    
    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .

    :type CurrencyCode: string
    :param CurrencyCode: The currency in which the totalUpfrontPrice , LimitPrice , and totalHourlyPrice amounts are specified. At this time, the only supported currency is USD .

    :type HostIdSet: list
    :param HostIdSet: [REQUIRED]\nThe IDs of the Dedicated Hosts with which the reservation will be associated.\n\n(string) --\n\n

    :type LimitPrice: string
    :param LimitPrice: The specified limit is checked against the total upfront cost of the reservation (calculated as the offering\'s upfront cost multiplied by the host count). If the total upfront cost is greater than the specified price limit, the request fails. This is used to ensure that the purchase does not exceed the expected upfront cost of the purchase. At this time, the only supported currency is USD . For example, to indicate a limit price of USD 100, specify 100.00.

    :type OfferingId: string
    :param OfferingId: [REQUIRED]\nThe ID of the offering.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ClientToken': 'string',
    'CurrencyCode': 'USD',
    'Purchase': [
        {
            'CurrencyCode': 'USD',
            'Duration': 123,
            'HostIdSet': [
                'string',
            ],
            'HostReservationId': 'string',
            'HourlyPrice': 'string',
            'InstanceFamily': 'string',
            'PaymentOption': 'AllUpfront'|'PartialUpfront'|'NoUpfront',
            'UpfrontPrice': 'string'
        },
    ],
    'TotalHourlyPrice': 'string',
    'TotalUpfrontPrice': 'string'
}


Response Structure

(dict) --

ClientToken (string) --
Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency .

CurrencyCode (string) --
The currency in which the totalUpfrontPrice and totalHourlyPrice amounts are specified. At this time, the only supported currency is USD .

Purchase (list) --
Describes the details of the purchase.

(dict) --
Describes the result of the purchase.

CurrencyCode (string) --
The currency in which the UpfrontPrice and HourlyPrice amounts are specified. At this time, the only supported currency is USD .

Duration (integer) --
The duration of the reservation\'s term in seconds.

HostIdSet (list) --
The IDs of the Dedicated Hosts associated with the reservation.

(string) --


HostReservationId (string) --
The ID of the reservation.

HourlyPrice (string) --
The hourly price of the reservation per hour.

InstanceFamily (string) --
The instance family on the Dedicated Host that the reservation can be associated with.

PaymentOption (string) --
The payment option for the reservation.

UpfrontPrice (string) --
The upfront price of the reservation.





TotalHourlyPrice (string) --
The total hourly price of the reservation calculated per hour.

TotalUpfrontPrice (string) --
The total amount charged to your account when you purchase the reservation.








    :return: {
        'ClientToken': 'string',
        'CurrencyCode': 'USD',
        'Purchase': [
            {
                'CurrencyCode': 'USD',
                'Duration': 123,
                'HostIdSet': [
                    'string',
                ],
                'HostReservationId': 'string',
                'HourlyPrice': 'string',
                'InstanceFamily': 'string',
                'PaymentOption': 'AllUpfront'|'PartialUpfront'|'NoUpfront',
                'UpfrontPrice': 'string'
            },
        ],
        'TotalHourlyPrice': 'string',
        'TotalUpfrontPrice': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def purchase_reserved_instances_offering(InstanceCount=None, ReservedInstancesOfferingId=None, DryRun=None, LimitPrice=None, PurchaseTime=None):
    """
    Purchases a Reserved Instance for use with your account. With Reserved Instances, you pay a lower hourly rate compared to On-Demand instance pricing.
    Use  DescribeReservedInstancesOfferings to get a list of Reserved Instance offerings that match your specifications. After you\'ve purchased a Reserved Instance, you can check for your new Reserved Instance with  DescribeReservedInstances .
    To queue a purchase for a future date and time, specify a purchase time. If you do not specify a purchase time, the default is the current time.
    For more information, see Reserved Instances and Reserved Instance Marketplace in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.purchase_reserved_instances_offering(
        InstanceCount=123,
        ReservedInstancesOfferingId='string',
        DryRun=True|False,
        LimitPrice={
            'Amount': 123.0,
            'CurrencyCode': 'USD'
        },
        PurchaseTime=datetime(2015, 1, 1)
    )
    
    
    :type InstanceCount: integer
    :param InstanceCount: [REQUIRED]\nThe number of Reserved Instances to purchase.\n

    :type ReservedInstancesOfferingId: string
    :param ReservedInstancesOfferingId: [REQUIRED]\nThe ID of the Reserved Instance offering to purchase.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type LimitPrice: dict
    :param LimitPrice: Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.\n\nAmount (float) --Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).\n\nCurrencyCode (string) --The currency in which the limitPrice amount is specified. At this time, the only supported currency is USD .\n\n\n

    :type PurchaseTime: datetime
    :param PurchaseTime: The time at which to purchase the Reserved Instance, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).

    :rtype: dict

ReturnsResponse Syntax
{
    'ReservedInstancesId': 'string'
}


Response Structure

(dict) --
Contains the output of PurchaseReservedInstancesOffering.

ReservedInstancesId (string) --
The IDs of the purchased Reserved Instances.








    :return: {
        'ReservedInstancesId': 'string'
    }
    
    
    """
    pass

def purchase_scheduled_instances(ClientToken=None, DryRun=None, PurchaseRequests=None):
    """
    Purchases the Scheduled Instances with the specified schedule.
    Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour for a one-year term. Before you can purchase a Scheduled Instance, you must call  DescribeScheduledInstanceAvailability to check for available schedules and obtain a purchase token. After you purchase a Scheduled Instance, you must call  RunScheduledInstances during each scheduled time period.
    After you purchase a Scheduled Instance, you can\'t cancel, modify, or resell your purchase.
    See also: AWS API Documentation
    
    Examples
    This example purchases a Scheduled Instance.
    Expected Output:
    
    :example: response = client.purchase_scheduled_instances(
        ClientToken='string',
        DryRun=True|False,
        PurchaseRequests=[
            {
                'InstanceCount': 123,
                'PurchaseToken': 'string'
            },
        ]
    )
    
    
    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see Ensuring Idempotency .\nThis field is autopopulated if not provided.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type PurchaseRequests: list
    :param PurchaseRequests: [REQUIRED]\nThe purchase requests.\n\n(dict) --Describes a request to purchase Scheduled Instances.\n\nInstanceCount (integer) -- [REQUIRED]The number of instances.\n\nPurchaseToken (string) -- [REQUIRED]The purchase token.\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ScheduledInstanceSet': [
        {
            'AvailabilityZone': 'string',
            'CreateDate': datetime(2015, 1, 1),
            'HourlyPrice': 'string',
            'InstanceCount': 123,
            'InstanceType': 'string',
            'NetworkPlatform': 'string',
            'NextSlotStartTime': datetime(2015, 1, 1),
            'Platform': 'string',
            'PreviousSlotEndTime': datetime(2015, 1, 1),
            'Recurrence': {
                'Frequency': 'string',
                'Interval': 123,
                'OccurrenceDaySet': [
                    123,
                ],
                'OccurrenceRelativeToEnd': True|False,
                'OccurrenceUnit': 'string'
            },
            'ScheduledInstanceId': 'string',
            'SlotDurationInHours': 123,
            'TermEndDate': datetime(2015, 1, 1),
            'TermStartDate': datetime(2015, 1, 1),
            'TotalScheduledInstanceHours': 123
        },
    ]
}


Response Structure

(dict) --
Contains the output of PurchaseScheduledInstances.

ScheduledInstanceSet (list) --
Information about the Scheduled Instances.

(dict) --
Describes a Scheduled Instance.

AvailabilityZone (string) --
The Availability Zone.

CreateDate (datetime) --
The date when the Scheduled Instance was purchased.

HourlyPrice (string) --
The hourly price for a single instance.

InstanceCount (integer) --
The number of instances.

InstanceType (string) --
The instance type.

NetworkPlatform (string) --
The network platform (EC2-Classic or EC2-VPC ).

NextSlotStartTime (datetime) --
The time for the next schedule to start.

Platform (string) --
The platform (Linux/UNIX or Windows ).

PreviousSlotEndTime (datetime) --
The time that the previous schedule ended or will end.

Recurrence (dict) --
The schedule recurrence.

Frequency (string) --
The frequency (Daily , Weekly , or Monthly ).

Interval (integer) --
The interval quantity. The interval unit depends on the value of frequency . For example, every 2 weeks or every 2 months.

OccurrenceDaySet (list) --
The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).

(integer) --


OccurrenceRelativeToEnd (boolean) --
Indicates whether the occurrence is relative to the end of the specified week or month.

OccurrenceUnit (string) --
The unit for occurrenceDaySet (DayOfWeek or DayOfMonth ).



ScheduledInstanceId (string) --
The Scheduled Instance ID.

SlotDurationInHours (integer) --
The number of hours in the schedule.

TermEndDate (datetime) --
The end date for the Scheduled Instance.

TermStartDate (datetime) --
The start date for the Scheduled Instance.

TotalScheduledInstanceHours (integer) --
The total number of hours for a single instance for the entire term.











Examples
This example purchases a Scheduled Instance.
response = client.purchase_scheduled_instances(
    PurchaseRequests=[
        {
            'InstanceCount': 1,
            'PurchaseToken': 'eyJ2IjoiMSIsInMiOjEsImMiOi...',
        },
    ],
)

print(response)


Expected Output:
{
    'ScheduledInstanceSet': [
        {
            'AvailabilityZone': 'us-west-2b',
            'CreateDate': datetime(2016, 1, 25, 21, 43, 38, 0, 25, 0),
            'HourlyPrice': '0.095',
            'InstanceCount': 1,
            'InstanceType': 'c4.large',
            'NetworkPlatform': 'EC2-VPC',
            'NextSlotStartTime': datetime(2016, 1, 31, 9, 0, 0, 6, 31, 0),
            'Platform': 'Linux/UNIX',
            'Recurrence': {
                'Frequency': 'Weekly',
                'Interval': 1,
                'OccurrenceDaySet': [
                    1,
                ],
                'OccurrenceRelativeToEnd': False,
                'OccurrenceUnit': '',
            },
            'ScheduledInstanceId': 'sci-1234-1234-1234-1234-123456789012',
            'SlotDurationInHours': 32,
            'TermEndDate': datetime(2017, 1, 31, 9, 0, 0, 1, 31, 0),
            'TermStartDate': datetime(2016, 1, 31, 9, 0, 0, 6, 31, 0),
            'TotalScheduledInstanceHours': 1696,
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'ScheduledInstanceSet': [
            {
                'AvailabilityZone': 'string',
                'CreateDate': datetime(2015, 1, 1),
                'HourlyPrice': 'string',
                'InstanceCount': 123,
                'InstanceType': 'string',
                'NetworkPlatform': 'string',
                'NextSlotStartTime': datetime(2015, 1, 1),
                'Platform': 'string',
                'PreviousSlotEndTime': datetime(2015, 1, 1),
                'Recurrence': {
                    'Frequency': 'string',
                    'Interval': 123,
                    'OccurrenceDaySet': [
                        123,
                    ],
                    'OccurrenceRelativeToEnd': True|False,
                    'OccurrenceUnit': 'string'
                },
                'ScheduledInstanceId': 'string',
                'SlotDurationInHours': 123,
                'TermEndDate': datetime(2015, 1, 1),
                'TermStartDate': datetime(2015, 1, 1),
                'TotalScheduledInstanceHours': 123
            },
        ]
    }
    
    
    :returns: 
    (integer) --
    
    """
    pass

def reboot_instances(InstanceIds=None, DryRun=None):
    """
    Requests a reboot of the specified instances. This operation is asynchronous; it only queues a request to reboot the specified instances. The operation succeeds if the instances are valid and belong to you. Requests to reboot terminated instances are ignored.
    If an instance does not cleanly shut down within four minutes, Amazon EC2 performs a hard reboot.
    For more information about troubleshooting, see Getting Console Output and Rebooting Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example reboots the specified EC2 instance.
    Expected Output:
    
    :example: response = client.reboot_instances(
        InstanceIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type InstanceIds: list
    :param InstanceIds: [REQUIRED]\nThe instance IDs.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.reboot_instances(
        InstanceIds=[
            'i-1234567890abcdef5',
        ],
    )
    
    print(response)
    
    
    """
    pass

def register_image(ImageLocation=None, Architecture=None, BlockDeviceMappings=None, Description=None, DryRun=None, EnaSupport=None, KernelId=None, Name=None, BillingProducts=None, RamdiskId=None, RootDeviceName=None, SriovNetSupport=None, VirtualizationType=None):
    """
    Registers an AMI. When you\'re creating an AMI, this is the final step you must complete before you can launch an instance from the AMI. For more information about creating AMIs, see Creating Your Own AMIs in the Amazon Elastic Compute Cloud User Guide .
    You can also use RegisterImage to create an Amazon EBS-backed Linux AMI from a snapshot of a root device volume. You specify the snapshot using the block device mapping. For more information, see Launching a Linux Instance from a Backup in the Amazon Elastic Compute Cloud User Guide .
    You can\'t register an image where a secondary (non-root) snapshot has AWS Marketplace product codes.
    Windows and some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise Server (SLES), use the EC2 billing product code associated with an AMI to verify the subscription status for package updates. To create a new AMI for operating systems that require a billing product code, instead of registering the AMI, do the following to preserve the billing product code association:
    If you purchase a Reserved Instance to apply to an On-Demand Instance that was launched from an AMI with a billing product code, make sure that the Reserved Instance has the matching billing product code. If you purchase a Reserved Instance without the matching billing product code, the Reserved Instance will not be applied to the On-Demand Instance. For information about how to obtain the platform details and billing information of an AMI, see Obtaining Billing Information in the Amazon Elastic Compute Cloud User Guide .
    If needed, you can deregister an AMI at any time. Any modifications you make to an AMI backed by an instance store volume invalidates its registration. If you make changes to an image, deregister the previous image and register the new image.
    See also: AWS API Documentation
    
    
    :example: response = client.register_image(
        ImageLocation='string',
        Architecture='i386'|'x86_64'|'arm64',
        BlockDeviceMappings=[
            {
                'DeviceName': 'string',
                'VirtualName': 'string',
                'Ebs': {
                    'DeleteOnTermination': True|False,
                    'Iops': 123,
                    'SnapshotId': 'string',
                    'VolumeSize': 123,
                    'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                    'KmsKeyId': 'string',
                    'Encrypted': True|False
                },
                'NoDevice': 'string'
            },
        ],
        Description='string',
        DryRun=True|False,
        EnaSupport=True|False,
        KernelId='string',
        Name='string',
        BillingProducts=[
            'string',
        ],
        RamdiskId='string',
        RootDeviceName='string',
        SriovNetSupport='string',
        VirtualizationType='string'
    )
    
    
    :type ImageLocation: string
    :param ImageLocation: The full path to your AMI manifest in Amazon S3 storage. The specified bucket must have the aws-exec-read canned access control list (ACL) to ensure that it can be accessed by Amazon EC2. For more information, see Canned ACLs in the Amazon S3 Service Developer Guide .

    :type Architecture: string
    :param Architecture: The architecture of the AMI.\nDefault: For Amazon EBS-backed AMIs, i386 . For instance store-backed AMIs, the architecture specified in the manifest file.\n

    :type BlockDeviceMappings: list
    :param BlockDeviceMappings: The block device mapping entries.\n\n(dict) --Describes a block device mapping.\n\nDeviceName (string) --The device name (for example, /dev/sdh or xvdh ).\n\nVirtualName (string) --The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\nNVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.\nConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\n\nEbs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.\n\nDeleteOnTermination (boolean) --Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.\n\nIops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nConstraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nCondition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.\n\nSnapshotId (string) --The ID of the snapshot.\n\nVolumeSize (integer) --The size of the volume, in GiB.\nDefault: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.\nConstraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.\n\nVolumeType (string) --The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.\nDefault: gp2\n\nKmsKeyId (string) --Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\nThis parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .\n\nEncrypted (boolean) --Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .\nIn no case can you remove encryption from an encrypted volume.\nEncrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .\nThis parameter is not returned by .\n\n\n\nNoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.\n\n\n\n\n

    :type Description: string
    :param Description: A description for your AMI.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EnaSupport: boolean
    :param EnaSupport: Set to true to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.\nThis option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.\n

    :type KernelId: string
    :param KernelId: The ID of the kernel.

    :type Name: string
    :param Name: [REQUIRED]\nA name for your AMI.\nConstraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes (\'), at-signs (@), or underscores(_)\n

    :type BillingProducts: list
    :param BillingProducts: The billing product codes. Your account must be authorized to specify billing product codes. Otherwise, you can use the AWS Marketplace to bill for the use of an AMI.\n\n(string) --\n\n

    :type RamdiskId: string
    :param RamdiskId: The ID of the RAM disk.

    :type RootDeviceName: string
    :param RootDeviceName: The device name of the root device volume (for example, /dev/sda1 ).

    :type SriovNetSupport: string
    :param SriovNetSupport: Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.\nThere is no way to disable sriovNetSupport at this time.\nThis option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.\n

    :type VirtualizationType: string
    :param VirtualizationType: The type of virtualization (hvm | paravirtual ).\nDefault: paravirtual\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ImageId': 'string'
}


Response Structure

(dict) --
Contains the output of RegisterImage.

ImageId (string) --
The ID of the newly registered AMI.








    :return: {
        'ImageId': 'string'
    }
    
    
    :returns: 
    ImageLocation (string) -- The full path to your AMI manifest in Amazon S3 storage. The specified bucket must have the aws-exec-read canned access control list (ACL) to ensure that it can be accessed by Amazon EC2. For more information, see Canned ACLs in the Amazon S3 Service Developer Guide .
    Architecture (string) -- The architecture of the AMI.
    Default: For Amazon EBS-backed AMIs, i386 . For instance store-backed AMIs, the architecture specified in the manifest file.
    
    BlockDeviceMappings (list) -- The block device mapping entries.
    
    (dict) --Describes a block device mapping.
    
    DeviceName (string) --The device name (for example, /dev/sdh or xvdh ).
    
    VirtualName (string) --The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.
    NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.
    Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.
    
    Ebs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.
    
    DeleteOnTermination (boolean) --Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.
    
    Iops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
    Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
    Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.
    
    SnapshotId (string) --The ID of the snapshot.
    
    VolumeSize (integer) --The size of the volume, in GiB.
    Default: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.
    Constraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.
    
    VolumeType (string) --The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.
    Default: gp2
    
    KmsKeyId (string) --Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.
    This parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .
    
    Encrypted (boolean) --Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    In no case can you remove encryption from an encrypted volume.
    Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .
    This parameter is not returned by .
    
    
    
    NoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.
    
    
    
    
    
    Description (string) -- A description for your AMI.
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    EnaSupport (boolean) -- Set to true to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.
    This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.
    
    KernelId (string) -- The ID of the kernel.
    Name (string) -- [REQUIRED]
    A name for your AMI.
    Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes (\'), at-signs (@), or underscores(_)
    
    BillingProducts (list) -- The billing product codes. Your account must be authorized to specify billing product codes. Otherwise, you can use the AWS Marketplace to bill for the use of an AMI.
    
    (string) --
    
    
    RamdiskId (string) -- The ID of the RAM disk.
    RootDeviceName (string) -- The device name of the root device volume (for example, /dev/sda1 ).
    SriovNetSupport (string) -- Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.
    There is no way to disable sriovNetSupport at this time.
    This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.
    
    VirtualizationType (string) -- The type of virtualization (hvm | paravirtual ).
    Default: paravirtual
    
    
    """
    pass

def register_instance_event_notification_attributes(DryRun=None, InstanceTagAttribute=None):
    """
    Registers a set of tag keys to include in scheduled event notifications for your resources.
    To remove tags, use .
    See also: AWS API Documentation
    
    
    :example: response = client.register_instance_event_notification_attributes(
        DryRun=True|False,
        InstanceTagAttribute={
            'IncludeAllTagsOfInstance': True|False,
            'InstanceTagKeys': [
                'string',
            ]
        }
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceTagAttribute: dict
    :param InstanceTagAttribute: Information about the tag keys to register.\n\nIncludeAllTagsOfInstance (boolean) --Indicates whether to register all tag keys in the current Region. Specify true to register all tag keys.\n\nInstanceTagKeys (list) --The tag keys to register.\n\n(string) --\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceTagAttribute': {
        'InstanceTagKeys': [
            'string',
        ],
        'IncludeAllTagsOfInstance': True|False
    }
}


Response Structure

(dict) --

InstanceTagAttribute (dict) --
The resulting set of tag keys.

InstanceTagKeys (list) --
The registered tag keys.

(string) --


IncludeAllTagsOfInstance (boolean) --
Indicates wheter all tag keys in the current Region are registered to appear in scheduled event notifications. true indicates that all tag keys in the current Region are registered.










    :return: {
        'InstanceTagAttribute': {
            'InstanceTagKeys': [
                'string',
            ],
            'IncludeAllTagsOfInstance': True|False
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def register_transit_gateway_multicast_group_members(TransitGatewayMulticastDomainId=None, GroupIpAddress=None, NetworkInterfaceIds=None, DryRun=None):
    """
    Registers members (network interfaces) with the transit gateway multicast group. A member is a network interface associated with a supported EC2 instance that receives multicast traffic. For information about supported instances, see Multicast Consideration in Amazon VPC Transit Gateways .
    After you add the members, use SearchTransitGatewayMulticastGroups to verify that the members were added to the transit gateway multicast group.
    See also: AWS API Documentation
    
    
    :example: response = client.register_transit_gateway_multicast_group_members(
        TransitGatewayMulticastDomainId='string',
        GroupIpAddress='string',
        NetworkInterfaceIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainId: string
    :param TransitGatewayMulticastDomainId: The ID of the transit gateway multicast domain.

    :type GroupIpAddress: string
    :param GroupIpAddress: The IP address assigned to the transit gateway multicast group.

    :type NetworkInterfaceIds: list
    :param NetworkInterfaceIds: The group members\' network interface IDs to register with the transit gateway multicast group.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'RegisteredMulticastGroupMembers': {
        'TransitGatewayMulticastDomainId': 'string',
        'RegisteredNetworkInterfaceIds': [
            'string',
        ],
        'GroupIpAddress': 'string'
    }
}


Response Structure

(dict) --

RegisteredMulticastGroupMembers (dict) --
Information about the registered transit gateway multicast group members.

TransitGatewayMulticastDomainId (string) --
The ID of the transit gateway multicast domain.

RegisteredNetworkInterfaceIds (list) --
The ID of the registered network interfaces.

(string) --


GroupIpAddress (string) --
The IP address assigned to the transit gateway multicast group.










    :return: {
        'RegisteredMulticastGroupMembers': {
            'TransitGatewayMulticastDomainId': 'string',
            'RegisteredNetworkInterfaceIds': [
                'string',
            ],
            'GroupIpAddress': 'string'
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def register_transit_gateway_multicast_group_sources(TransitGatewayMulticastDomainId=None, GroupIpAddress=None, NetworkInterfaceIds=None, DryRun=None):
    """
    Registers sources (network interfaces) with the specified transit gateway multicast group.
    A multicast source is a network interface attached to a supported instance that sends multicast traffic. For information about supported instances, see Multicast Considerations in Amazon VPC Transit Gateways .
    After you add the source, use SearchTransitGatewayMulticastGroups to verify that the source was added to the multicast group.
    See also: AWS API Documentation
    
    
    :example: response = client.register_transit_gateway_multicast_group_sources(
        TransitGatewayMulticastDomainId='string',
        GroupIpAddress='string',
        NetworkInterfaceIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainId: string
    :param TransitGatewayMulticastDomainId: The ID of the transit gateway multicast domain.

    :type GroupIpAddress: string
    :param GroupIpAddress: The IP address assigned to the transit gateway multicast group.

    :type NetworkInterfaceIds: list
    :param NetworkInterfaceIds: The group sources\' network interface IDs to register with the transit gateway multicast group.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'RegisteredMulticastGroupSources': {
        'TransitGatewayMulticastDomainId': 'string',
        'RegisteredNetworkInterfaceIds': [
            'string',
        ],
        'GroupIpAddress': 'string'
    }
}


Response Structure

(dict) --

RegisteredMulticastGroupSources (dict) --
Information about the transit gateway multicast group sources.

TransitGatewayMulticastDomainId (string) --
The ID of the transit gateway multicast domain.

RegisteredNetworkInterfaceIds (list) --
The IDs of the network interfaces members registered with the transit gateway multicast group.

(string) --


GroupIpAddress (string) --
The IP address assigned to the transit gateway multicast group.










    :return: {
        'RegisteredMulticastGroupSources': {
            'TransitGatewayMulticastDomainId': 'string',
            'RegisteredNetworkInterfaceIds': [
                'string',
            ],
            'GroupIpAddress': 'string'
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def reject_transit_gateway_peering_attachment(TransitGatewayAttachmentId=None, DryRun=None):
    """
    Rejects a transit gateway peering attachment request.
    See also: AWS API Documentation
    
    
    :example: response = client.reject_transit_gateway_peering_attachment(
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the transit gateway peering attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayPeeringAttachment': {
        'TransitGatewayAttachmentId': 'string',
        'RequesterTgwInfo': {
            'TransitGatewayId': 'string',
            'OwnerId': 'string',
            'Region': 'string'
        },
        'AccepterTgwInfo': {
            'TransitGatewayId': 'string',
            'OwnerId': 'string',
            'Region': 'string'
        },
        'Status': {
            'Code': 'string',
            'Message': 'string'
        },
        'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
        'CreationTime': datetime(2015, 1, 1),
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayPeeringAttachment (dict) --
The transit gateway peering attachment.

TransitGatewayAttachmentId (string) --
The ID of the transit gateway peering attachment.

RequesterTgwInfo (dict) --
Information about the requester transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



AccepterTgwInfo (dict) --
Information about the accepter transit gateway.

TransitGatewayId (string) --
The ID of the transit gateway.

OwnerId (string) --
The AWS account ID of the owner of the transit gateway.

Region (string) --
The Region of the transit gateway.



Status (dict) --
The status of the transit gateway peering attachment.

Code (string) --
The status code.

Message (string) --
The status message, if applicable.



State (string) --
The state of the transit gateway peering attachment.

CreationTime (datetime) --
The time the transit gateway peering attachment was created.

Tags (list) --
The tags for the transit gateway peering attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayPeeringAttachment': {
            'TransitGatewayAttachmentId': 'string',
            'RequesterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'AccepterTgwInfo': {
                'TransitGatewayId': 'string',
                'OwnerId': 'string',
                'Region': 'string'
            },
            'Status': {
                'Code': 'string',
                'Message': 'string'
            },
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'CreationTime': datetime(2015, 1, 1),
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def reject_transit_gateway_vpc_attachment(TransitGatewayAttachmentId=None, DryRun=None):
    """
    Rejects a request to attach a VPC to a transit gateway.
    The VPC attachment must be in the pendingAcceptance state. Use  DescribeTransitGatewayVpcAttachments to view your pending VPC attachment requests. Use  AcceptTransitGatewayVpcAttachment to accept a VPC attachment request.
    See also: AWS API Documentation
    
    
    :example: response = client.reject_transit_gateway_vpc_attachment(
        TransitGatewayAttachmentId='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: [REQUIRED]\nThe ID of the attachment.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TransitGatewayVpcAttachment': {
        'TransitGatewayAttachmentId': 'string',
        'TransitGatewayId': 'string',
        'VpcId': 'string',
        'VpcOwnerId': 'string',
        'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
        'SubnetIds': [
            'string',
        ],
        'CreationTime': datetime(2015, 1, 1),
        'Options': {
            'DnsSupport': 'enable'|'disable',
            'Ipv6Support': 'enable'|'disable'
        },
        'Tags': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

TransitGatewayVpcAttachment (dict) --
Information about the attachment.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

TransitGatewayId (string) --
The ID of the transit gateway.

VpcId (string) --
The ID of the VPC.

VpcOwnerId (string) --
The ID of the AWS account that owns the VPC.

State (string) --
The state of the VPC attachment.

SubnetIds (list) --
The IDs of the subnets.

(string) --


CreationTime (datetime) --
The creation time.

Options (dict) --
The VPC attachment options.

DnsSupport (string) --
Indicates whether DNS support is enabled.

Ipv6Support (string) --
Indicates whether IPv6 support is disabled.



Tags (list) --
The tags for the VPC attachment.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.














    :return: {
        'TransitGatewayVpcAttachment': {
            'TransitGatewayAttachmentId': 'string',
            'TransitGatewayId': 'string',
            'VpcId': 'string',
            'VpcOwnerId': 'string',
            'State': 'initiating'|'pendingAcceptance'|'rollingBack'|'pending'|'available'|'modifying'|'deleting'|'deleted'|'failed'|'rejected'|'rejecting'|'failing',
            'SubnetIds': [
                'string',
            ],
            'CreationTime': datetime(2015, 1, 1),
            'Options': {
                'DnsSupport': 'enable'|'disable',
                'Ipv6Support': 'enable'|'disable'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def reject_vpc_endpoint_connections(DryRun=None, ServiceId=None, VpcEndpointIds=None):
    """
    Rejects one or more VPC endpoint connection requests to your VPC endpoint service.
    See also: AWS API Documentation
    
    
    :example: response = client.reject_vpc_endpoint_connections(
        DryRun=True|False,
        ServiceId='string',
        VpcEndpointIds=[
            'string',
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceId: string
    :param ServiceId: [REQUIRED]\nThe ID of the service.\n

    :type VpcEndpointIds: list
    :param VpcEndpointIds: [REQUIRED]\nThe IDs of one or more VPC endpoints.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Unsuccessful': [
        {
            'Error': {
                'Code': 'string',
                'Message': 'string'
            },
            'ResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --

Unsuccessful (list) --
Information about the endpoints that were not rejected, if applicable.

(dict) --
Information about items that were not successfully processed in a batch call.

Error (dict) --
Information about the error.

Code (string) --
The error code.

Message (string) --
The error message accompanying the error code.



ResourceId (string) --
The ID of the resource.












    :return: {
        'Unsuccessful': [
            {
                'Error': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'ResourceId': 'string'
            },
        ]
    }
    
    
    """
    pass

def reject_vpc_peering_connection(DryRun=None, VpcPeeringConnectionId=None):
    """
    Rejects a VPC peering connection request. The VPC peering connection must be in the pending-acceptance state. Use the  DescribeVpcPeeringConnections request to view your outstanding VPC peering connection requests. To delete an active VPC peering connection, or to delete a VPC peering connection request that you initiated, use  DeleteVpcPeeringConnection .
    See also: AWS API Documentation
    
    
    :example: response = client.reject_vpc_peering_connection(
        DryRun=True|False,
        VpcPeeringConnectionId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type VpcPeeringConnectionId: string
    :param VpcPeeringConnectionId: [REQUIRED]\nThe ID of the VPC peering connection.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def release_address(AllocationId=None, PublicIp=None, NetworkBorderGroup=None, DryRun=None):
    """
    Releases the specified Elastic IP address.
    [EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates it from any instance that it\'s associated with. To disassociate an Elastic IP address without releasing it, use  DisassociateAddress .
    [Nondefault VPC] You must use  DisassociateAddress to disassociate the Elastic IP address before you can release it. Otherwise, Amazon EC2 returns an error (InvalidIPAddress.InUse ).
    After releasing an Elastic IP address, it is released to the IP address pool. Be sure to update your DNS records and any servers or devices that communicate with the address. If you attempt to release an Elastic IP address that you already released, you\'ll get an AuthFailure error if the address is already allocated to another AWS account.
    [EC2-VPC] After you release an Elastic IP address for use in a VPC, you might be able to recover it. For more information, see  AllocateAddress .
    See also: AWS API Documentation
    
    Examples
    This example releases an Elastic IP address for use with instances in a VPC.
    Expected Output:
    This example releases an Elastic IP address for use with instances in EC2-Classic.
    Expected Output:
    
    :example: response = client.release_address(
        AllocationId='string',
        PublicIp='string',
        NetworkBorderGroup='string',
        DryRun=True|False
    )
    
    
    :type AllocationId: string
    :param AllocationId: [EC2-VPC] The allocation ID. Required for EC2-VPC.

    :type PublicIp: string
    :param PublicIp: [EC2-Classic] The Elastic IP address. Required for EC2-Classic.

    :type NetworkBorderGroup: string
    :param NetworkBorderGroup: The location that the IP address is released from.\nIf you provide an incorrect network border group, you will receive an InvalidAddress.NotFound error. For more information, see Error Codes .\n\nNote\nYou cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you will receive an InvalidParameterCombination error. For more information, see Error Codes .\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.release_address(
        AllocationId='eipalloc-64d5890a',
    )
    
    print(response)
    
    
    """
    pass

def release_hosts(HostIds=None):
    """
    When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand billing is stopped and the host goes into released state. The host ID of Dedicated Hosts that have been released can no longer be specified in another request, for example, to modify the host. You must stop or terminate all instances on a host before it can be released.
    When Dedicated Hosts are released, it may take some time for them to stop counting toward your limit and you may receive capacity errors when trying to allocate new Dedicated Hosts. Wait a few minutes and then try again.
    Released hosts still appear in a  DescribeHosts response.
    See also: AWS API Documentation
    
    
    :example: response = client.release_hosts(
        HostIds=[
            'string',
        ]
    )
    
    
    :type HostIds: list
    :param HostIds: [REQUIRED]\nThe IDs of the Dedicated Hosts to release.\n\n(string) --\n\n

    :rtype: dict
ReturnsResponse Syntax{
    'Successful': [
        'string',
    ],
    'Unsuccessful': [
        {
            'Error': {
                'Code': 'string',
                'Message': 'string'
            },
            'ResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --
Successful (list) --The IDs of the Dedicated Hosts that were successfully released.

(string) --


Unsuccessful (list) --The IDs of the Dedicated Hosts that could not be released, including an error message.

(dict) --Information about items that were not successfully processed in a batch call.

Error (dict) --Information about the error.

Code (string) --The error code.

Message (string) --The error message accompanying the error code.



ResourceId (string) --The ID of the resource.











    :return: {
        'Successful': [
            'string',
        ],
        'Unsuccessful': [
            {
                'Error': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'ResourceId': 'string'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def replace_iam_instance_profile_association(IamInstanceProfile=None, AssociationId=None):
    """
    Replaces an IAM instance profile for the specified running instance. You can use this action to change the IAM instance profile that\'s associated with an instance without having to disassociate the existing IAM instance profile first.
    Use  DescribeIamInstanceProfileAssociations to get the association ID.
    See also: AWS API Documentation
    
    
    :example: response = client.replace_iam_instance_profile_association(
        IamInstanceProfile={
            'Arn': 'string',
            'Name': 'string'
        },
        AssociationId='string'
    )
    
    
    :type IamInstanceProfile: dict
    :param IamInstanceProfile: [REQUIRED]\nThe IAM instance profile.\n\nArn (string) --The Amazon Resource Name (ARN) of the instance profile.\n\nName (string) --The name of the instance profile.\n\n\n

    :type AssociationId: string
    :param AssociationId: [REQUIRED]\nThe ID of the existing IAM instance profile association.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'IamInstanceProfileAssociation': {
        'AssociationId': 'string',
        'InstanceId': 'string',
        'IamInstanceProfile': {
            'Arn': 'string',
            'Id': 'string'
        },
        'State': 'associating'|'associated'|'disassociating'|'disassociated',
        'Timestamp': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --

IamInstanceProfileAssociation (dict) --
Information about the IAM instance profile association.

AssociationId (string) --
The ID of the association.

InstanceId (string) --
The ID of the instance.

IamInstanceProfile (dict) --
The IAM instance profile.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Id (string) --
The ID of the instance profile.



State (string) --
The state of the association.

Timestamp (datetime) --
The time the IAM instance profile was associated with the instance.










    :return: {
        'IamInstanceProfileAssociation': {
            'AssociationId': 'string',
            'InstanceId': 'string',
            'IamInstanceProfile': {
                'Arn': 'string',
                'Id': 'string'
            },
            'State': 'associating'|'associated'|'disassociating'|'disassociated',
            'Timestamp': datetime(2015, 1, 1)
        }
    }
    
    
    """
    pass

def replace_network_acl_association(AssociationId=None, DryRun=None, NetworkAclId=None):
    """
    Changes which network ACL a subnet is associated with. By default when you create a subnet, it\'s automatically associated with the default network ACL. For more information, see Network ACLs in the Amazon Virtual Private Cloud User Guide .
    This is an idempotent operation.
    See also: AWS API Documentation
    
    Examples
    This example associates the specified network ACL with the subnet for the specified network ACL association.
    Expected Output:
    
    :example: response = client.replace_network_acl_association(
        AssociationId='string',
        DryRun=True|False,
        NetworkAclId='string'
    )
    
    
    :type AssociationId: string
    :param AssociationId: [REQUIRED]\nThe ID of the current association between the original network ACL and the subnet.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NetworkAclId: string
    :param NetworkAclId: [REQUIRED]\nThe ID of the new network ACL to associate with the subnet.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NewAssociationId': 'string'
}


Response Structure

(dict) --

NewAssociationId (string) --
The ID of the new association.







Examples
This example associates the specified network ACL with the subnet for the specified network ACL association.
response = client.replace_network_acl_association(
    AssociationId='aclassoc-e5b95c8c',
    NetworkAclId='acl-5fb85d36',
)

print(response)


Expected Output:
{
    'NewAssociationId': 'aclassoc-3999875b',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NewAssociationId': 'string'
    }
    
    
    """
    pass

def replace_network_acl_entry(CidrBlock=None, DryRun=None, Egress=None, IcmpTypeCode=None, Ipv6CidrBlock=None, NetworkAclId=None, PortRange=None, Protocol=None, RuleAction=None, RuleNumber=None):
    """
    Replaces an entry (rule) in a network ACL. For more information, see Network ACLs in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example replaces an entry for the specified network ACL. The new rule 100 allows ingress traffic from 203.0.113.12/24 on UDP port 53 (DNS) into any associated subnet.
    Expected Output:
    
    :example: response = client.replace_network_acl_entry(
        CidrBlock='string',
        DryRun=True|False,
        Egress=True|False,
        IcmpTypeCode={
            'Code': 123,
            'Type': 123
        },
        Ipv6CidrBlock='string',
        NetworkAclId='string',
        PortRange={
            'From': 123,
            'To': 123
        },
        Protocol='string',
        RuleAction='allow'|'deny',
        RuleNumber=123
    )
    
    
    :type CidrBlock: string
    :param CidrBlock: The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Egress: boolean
    :param Egress: [REQUIRED]\nIndicates whether to replace the egress rule.\nDefault: If no value is specified, we replace the ingress rule.\n

    :type IcmpTypeCode: dict
    :param IcmpTypeCode: ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.\n\nCode (integer) --The ICMP code. A value of -1 means all codes for the specified ICMP type.\n\nType (integer) --The ICMP type. A value of -1 means all types.\n\n\n

    :type Ipv6CidrBlock: string
    :param Ipv6CidrBlock: The IPv6 network range to allow or deny, in CIDR notation (for example 2001:bd8:1234:1a00::/64 ).

    :type NetworkAclId: string
    :param NetworkAclId: [REQUIRED]\nThe ID of the ACL.\n

    :type PortRange: dict
    :param PortRange: TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).\n\nFrom (integer) --The first port in the range.\n\nTo (integer) --The last port in the range.\n\n\n

    :type Protocol: string
    :param Protocol: [REQUIRED]\nThe protocol number. A value of '-1' means all protocols. If you specify '-1' or a protocol number other than '6' (TCP), '17' (UDP), or '1' (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol '58' (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol '58' (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.\n

    :type RuleAction: string
    :param RuleAction: [REQUIRED]\nIndicates whether to allow or deny the traffic that matches the rule.\n

    :type RuleNumber: integer
    :param RuleNumber: [REQUIRED]\nThe rule number of the entry to replace.\n

    :return: response = client.replace_network_acl_entry(
        CidrBlock='203.0.113.12/24',
        Egress=False,
        NetworkAclId='acl-5fb85d36',
        PortRange={
            'From': 53,
            'To': 53,
        },
        Protocol='udp',
        RuleAction='allow',
        RuleNumber=100,
    )
    
    print(response)
    
    
    """
    pass

def replace_route(DestinationCidrBlock=None, DestinationIpv6CidrBlock=None, DryRun=None, EgressOnlyInternetGatewayId=None, GatewayId=None, InstanceId=None, LocalTarget=None, NatGatewayId=None, TransitGatewayId=None, LocalGatewayId=None, NetworkInterfaceId=None, RouteTableId=None, VpcPeeringConnectionId=None):
    """
    Replaces an existing route within a route table in a VPC. You must provide only one of the following: internet gateway, virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, egress-only internet gateway, or transit gateway.
    For more information, see Route Tables in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example replaces the specified route in the specified table table. The new route matches the specified CIDR and sends the traffic to the specified virtual private gateway.
    Expected Output:
    
    :example: response = client.replace_route(
        DestinationCidrBlock='string',
        DestinationIpv6CidrBlock='string',
        DryRun=True|False,
        EgressOnlyInternetGatewayId='string',
        GatewayId='string',
        InstanceId='string',
        LocalTarget=True|False,
        NatGatewayId='string',
        TransitGatewayId='string',
        LocalGatewayId='string',
        NetworkInterfaceId='string',
        RouteTableId='string',
        VpcPeeringConnectionId='string'
    )
    
    
    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: The IPv4 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.

    :type DestinationIpv6CidrBlock: string
    :param DestinationIpv6CidrBlock: The IPv6 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EgressOnlyInternetGatewayId: string
    :param EgressOnlyInternetGatewayId: [IPv6 traffic only] The ID of an egress-only internet gateway.

    :type GatewayId: string
    :param GatewayId: The ID of an internet gateway or virtual private gateway.

    :type InstanceId: string
    :param InstanceId: The ID of a NAT instance in your VPC.

    :type LocalTarget: boolean
    :param LocalTarget: Specifies whether to reset the local route to its default target (local ).

    :type NatGatewayId: string
    :param NatGatewayId: [IPv4 traffic only] The ID of a NAT gateway.

    :type TransitGatewayId: string
    :param TransitGatewayId: The ID of a transit gateway.

    :type LocalGatewayId: string
    :param LocalGatewayId: The ID of the local gateway.

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: The ID of a network interface.

    :type RouteTableId: string
    :param RouteTableId: [REQUIRED]\nThe ID of the route table.\n

    :type VpcPeeringConnectionId: string
    :param VpcPeeringConnectionId: The ID of a VPC peering connection.

    :return: response = client.replace_route(
        DestinationCidrBlock='10.0.0.0/16',
        GatewayId='vgw-9a4cacf3',
        RouteTableId='rtb-22574640',
    )
    
    print(response)
    
    
    """
    pass

def replace_route_table_association(AssociationId=None, DryRun=None, RouteTableId=None):
    """
    Changes the route table associated with a given subnet, internet gateway, or virtual private gateway in a VPC. After the operation completes, the subnet or gateway uses the routes in the new route table. For more information about route tables, see Route Tables in the Amazon Virtual Private Cloud User Guide .
    You can also use this operation to change which table is the main route table in the VPC. Specify the main route table\'s association ID and the route table ID of the new main route table.
    See also: AWS API Documentation
    
    Examples
    This example associates the specified route table with the subnet for the specified route table association.
    Expected Output:
    
    :example: response = client.replace_route_table_association(
        AssociationId='string',
        DryRun=True|False,
        RouteTableId='string'
    )
    
    
    :type AssociationId: string
    :param AssociationId: [REQUIRED]\nThe association ID.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type RouteTableId: string
    :param RouteTableId: [REQUIRED]\nThe ID of the new route table to associate with the subnet.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NewAssociationId': 'string',
    'AssociationState': {
        'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failed',
        'StatusMessage': 'string'
    }
}


Response Structure

(dict) --

NewAssociationId (string) --
The ID of the new association.

AssociationState (dict) --
The state of the association.

State (string) --
The state of the association.

StatusMessage (string) --
The status message, if applicable.









Examples
This example associates the specified route table with the subnet for the specified route table association.
response = client.replace_route_table_association(
    AssociationId='rtbassoc-781d0d1a',
    RouteTableId='rtb-22574640',
)

print(response)


Expected Output:
{
    'NewAssociationId': 'rtbassoc-3a1f0f58',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'NewAssociationId': 'string',
        'AssociationState': {
            'State': 'associating'|'associated'|'disassociating'|'disassociated'|'failed',
            'StatusMessage': 'string'
        }
    }
    
    
    """
    pass

def replace_transit_gateway_route(DestinationCidrBlock=None, TransitGatewayRouteTableId=None, TransitGatewayAttachmentId=None, Blackhole=None, DryRun=None):
    """
    Replaces the specified route in the specified transit gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.replace_transit_gateway_route(
        DestinationCidrBlock='string',
        TransitGatewayRouteTableId='string',
        TransitGatewayAttachmentId='string',
        Blackhole=True|False,
        DryRun=True|False
    )
    
    
    :type DestinationCidrBlock: string
    :param DestinationCidrBlock: [REQUIRED]\nThe CIDR range used for the destination match. Routing decisions are based on the most specific match.\n

    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the route table.\n

    :type TransitGatewayAttachmentId: string
    :param TransitGatewayAttachmentId: The ID of the attachment.

    :type Blackhole: boolean
    :param Blackhole: Indicates whether traffic matching this route is to be dropped.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Route': {
        'DestinationCidrBlock': 'string',
        'TransitGatewayAttachments': [
            {
                'ResourceId': 'string',
                'TransitGatewayAttachmentId': 'string',
                'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering'
            },
        ],
        'Type': 'static'|'propagated',
        'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted'
    }
}


Response Structure

(dict) --

Route (dict) --
Information about the modified route.

DestinationCidrBlock (string) --
The CIDR block used for destination matches.

TransitGatewayAttachments (list) --
The attachments.

(dict) --
Describes a route attachment.

ResourceId (string) --
The ID of the resource.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceType (string) --
The resource type.





Type (string) --
The route type.

State (string) --
The state of the route.










    :return: {
        'Route': {
            'DestinationCidrBlock': 'string',
            'TransitGatewayAttachments': [
                {
                    'ResourceId': 'string',
                    'TransitGatewayAttachmentId': 'string',
                    'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering'
                },
            ],
            'Type': 'static'|'propagated',
            'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted'
        }
    }
    
    
    """
    pass

def report_instance_status(Description=None, DryRun=None, EndTime=None, Instances=None, ReasonCodes=None, StartTime=None, Status=None):
    """
    Submits feedback about the status of an instance. The instance must be in the running state. If your experience with the instance differs from the instance status returned by  DescribeInstanceStatus , use  ReportInstanceStatus to report your experience with the instance. Amazon EC2 collects this information to improve the accuracy of status checks.
    Use of this action does not change the value returned by  DescribeInstanceStatus .
    See also: AWS API Documentation
    
    
    :example: response = client.report_instance_status(
        Description='string',
        DryRun=True|False,
        EndTime=datetime(2015, 1, 1),
        Instances=[
            'string',
        ],
        ReasonCodes=[
            'instance-stuck-in-state'|'unresponsive'|'not-accepting-credentials'|'password-not-available'|'performance-network'|'performance-instance-store'|'performance-ebs-volume'|'performance-other'|'other',
        ],
        StartTime=datetime(2015, 1, 1),
        Status='ok'|'impaired'
    )
    
    
    :type Description: string
    :param Description: Descriptive text about the health state of your instance.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EndTime: datetime
    :param EndTime: The time at which the reported instance health state ended.

    :type Instances: list
    :param Instances: [REQUIRED]\nThe instances.\n\n(string) --\n\n

    :type ReasonCodes: list
    :param ReasonCodes: [REQUIRED]\nThe reason codes that describe the health state of your instance.\n\ninstance-stuck-in-state : My instance is stuck in a state.\nunresponsive : My instance is unresponsive.\nnot-accepting-credentials : My instance is not accepting my credentials.\npassword-not-available : A password is not available for my instance.\nperformance-network : My instance is experiencing performance problems that I believe are network related.\nperformance-instance-store : My instance is experiencing performance problems that I believe are related to the instance stores.\nperformance-ebs-volume : My instance is experiencing performance problems that I believe are related to an EBS volume.\nperformance-other : My instance is experiencing performance problems.\nother : [explain using the description parameter]\n\n\n(string) --\n\n

    :type StartTime: datetime
    :param StartTime: The time at which the reported instance health state began.

    :type Status: string
    :param Status: [REQUIRED]\nThe status of all instances listed.\n

    """
    pass

def request_spot_fleet(DryRun=None, SpotFleetRequestConfig=None):
    """
    Creates a Spot Fleet request.
    The Spot Fleet request specifies the total target capacity and the On-Demand target capacity. Amazon EC2 calculates the difference between the total capacity and On-Demand capacity, and launches the difference as Spot capacity.
    You can submit a single request that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.
    By default, the Spot Fleet requests Spot Instances in the Spot Instance pool where the price per unit is the lowest. Each launch specification can include its own instance weighting that reflects the value of the instance type to your application workload.
    Alternatively, you can specify that the Spot Fleet distribute the target capacity across the Spot pools included in its launch specifications. By ensuring that the Spot Instances in your Spot Fleet are in different Spot pools, you can improve the availability of your fleet.
    You can specify tags for the Spot Fleet request and instances launched by the fleet. You cannot tag other resource types in a Spot Fleet request because only the spot-fleet-request and instance resource types are supported.
    For more information, see Spot Fleet Requests in the Amazon EC2 User Guide for Linux Instances .
    See also: AWS API Documentation
    
    Examples
    This example creates a Spot fleet request with two launch specifications that differ only by subnet. The Spot fleet launches the instances in the specified subnet with the lowest price. If the instances are launched in a default VPC, they receive a public IP address by default. If the instances are launched in a nondefault VPC, they do not receive a public IP address by default. Note that you can\'t specify different subnets from the same Availability Zone in a Spot fleet request.
    Expected Output:
    This example creates a Spot fleet request with two launch specifications that differ only by Availability Zone. The Spot fleet launches the instances in the specified Availability Zone with the lowest price. If your account supports EC2-VPC only, Amazon EC2 launches the Spot instances in the default subnet of the Availability Zone. If your account supports EC2-Classic, Amazon EC2 launches the instances in EC2-Classic in the Availability Zone.
    Expected Output:
    This example assigns public addresses to instances launched in a nondefault VPC. Note that when you specify a network interface, you must include the subnet ID and security group ID using the network interface.
    Expected Output:
    This example creates a Spot fleet request that launches 30 instances using the diversified allocation strategy. The launch specifications differ by instance type. The Spot fleet distributes the instances across the launch specifications such that there are 10 instances of each type.
    Expected Output:
    
    :example: response = client.request_spot_fleet(
        DryRun=True|False,
        SpotFleetRequestConfig={
            'AllocationStrategy': 'lowestPrice'|'diversified'|'capacityOptimized',
            'OnDemandAllocationStrategy': 'lowestPrice'|'prioritized',
            'ClientToken': 'string',
            'ExcessCapacityTerminationPolicy': 'noTermination'|'default',
            'FulfilledCapacity': 123.0,
            'OnDemandFulfilledCapacity': 123.0,
            'IamFleetRole': 'string',
            'LaunchSpecifications': [
                {
                    'SecurityGroups': [
                        {
                            'GroupName': 'string',
                            'GroupId': 'string'
                        },
                    ],
                    'AddressingType': 'string',
                    'BlockDeviceMappings': [
                        {
                            'DeviceName': 'string',
                            'VirtualName': 'string',
                            'Ebs': {
                                'DeleteOnTermination': True|False,
                                'Iops': 123,
                                'SnapshotId': 'string',
                                'VolumeSize': 123,
                                'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                                'KmsKeyId': 'string',
                                'Encrypted': True|False
                            },
                            'NoDevice': 'string'
                        },
                    ],
                    'EbsOptimized': True|False,
                    'IamInstanceProfile': {
                        'Arn': 'string',
                        'Name': 'string'
                    },
                    'ImageId': 'string',
                    'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                    'KernelId': 'string',
                    'KeyName': 'string',
                    'Monitoring': {
                        'Enabled': True|False
                    },
                    'NetworkInterfaces': [
                        {
                            'AssociatePublicIpAddress': True|False,
                            'DeleteOnTermination': True|False,
                            'Description': 'string',
                            'DeviceIndex': 123,
                            'Groups': [
                                'string',
                            ],
                            'Ipv6AddressCount': 123,
                            'Ipv6Addresses': [
                                {
                                    'Ipv6Address': 'string'
                                },
                            ],
                            'NetworkInterfaceId': 'string',
                            'PrivateIpAddress': 'string',
                            'PrivateIpAddresses': [
                                {
                                    'Primary': True|False,
                                    'PrivateIpAddress': 'string'
                                },
                            ],
                            'SecondaryPrivateIpAddressCount': 123,
                            'SubnetId': 'string',
                            'InterfaceType': 'string'
                        },
                    ],
                    'Placement': {
                        'AvailabilityZone': 'string',
                        'GroupName': 'string',
                        'Tenancy': 'default'|'dedicated'|'host'
                    },
                    'RamdiskId': 'string',
                    'SpotPrice': 'string',
                    'SubnetId': 'string',
                    'UserData': 'string',
                    'WeightedCapacity': 123.0,
                    'TagSpecifications': [
                        {
                            'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                            'Tags': [
                                {
                                    'Key': 'string',
                                    'Value': 'string'
                                },
                            ]
                        },
                    ]
                },
            ],
            'LaunchTemplateConfigs': [
                {
                    'LaunchTemplateSpecification': {
                        'LaunchTemplateId': 'string',
                        'LaunchTemplateName': 'string',
                        'Version': 'string'
                    },
                    'Overrides': [
                        {
                            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                            'SpotPrice': 'string',
                            'SubnetId': 'string',
                            'AvailabilityZone': 'string',
                            'WeightedCapacity': 123.0,
                            'Priority': 123.0
                        },
                    ]
                },
            ],
            'SpotPrice': 'string',
            'TargetCapacity': 123,
            'OnDemandTargetCapacity': 123,
            'OnDemandMaxTotalPrice': 'string',
            'SpotMaxTotalPrice': 'string',
            'TerminateInstancesWithExpiration': True|False,
            'Type': 'request'|'maintain'|'instant',
            'ValidFrom': datetime(2015, 1, 1),
            'ValidUntil': datetime(2015, 1, 1),
            'ReplaceUnhealthyInstances': True|False,
            'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate',
            'LoadBalancersConfig': {
                'ClassicLoadBalancersConfig': {
                    'ClassicLoadBalancers': [
                        {
                            'Name': 'string'
                        },
                    ]
                },
                'TargetGroupsConfig': {
                    'TargetGroups': [
                        {
                            'Arn': 'string'
                        },
                    ]
                }
            },
            'InstancePoolsToUseCount': 123,
            'TagSpecifications': [
                {
                    'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                    'Tags': [
                        {
                            'Key': 'string',
                            'Value': 'string'
                        },
                    ]
                },
            ]
        }
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type SpotFleetRequestConfig: dict
    :param SpotFleetRequestConfig: [REQUIRED]\nThe configuration for the Spot Fleet request.\n\nAllocationStrategy (string) --Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the Spot Fleet request.\nIf the allocation strategy is lowestPrice , Spot Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.\nIf the allocation strategy is diversified , Spot Fleet launches instances from all the Spot Instance pools that you specify.\nIf the allocation strategy is capacityOptimized , Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.\n\nOnDemandAllocationStrategy (string) --The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify lowestPrice , Spot Fleet uses price to determine the order, launching the lowest price first. If you specify prioritized , Spot Fleet uses the priority that you assign to each Spot Fleet launch template override, launching the highest priority first. If you do not specify a value, Spot Fleet defaults to lowestPrice .\n\nClientToken (string) --A unique, case-sensitive identifier that you provide to ensure the idempotency of your listings. This helps to avoid duplicate listings. For more information, see Ensuring Idempotency .\n\nExcessCapacityTerminationPolicy (string) --Indicates whether running Spot Instances should be terminated if you decrease the target capacity of the Spot Fleet request below the current size of the Spot Fleet.\n\nFulfilledCapacity (float) --The number of units fulfilled by this request compared to the set target capacity. You cannot set this value.\n\nOnDemandFulfilledCapacity (float) --The number of On-Demand units fulfilled by this request compared to the set target On-Demand capacity.\n\nIamFleetRole (string) -- [REQUIRED]The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that grants the Spot Fleet the permission to request, launch, terminate, and tag instances on your behalf. For more information, see Spot Fleet Prerequisites in the Amazon EC2 User Guide for Linux Instances . Spot Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request using CancelSpotFleetRequests or when the Spot Fleet request expires, if you set TerminateInstancesWithExpiration .\n\nLaunchSpecifications (list) --The launch specifications for the Spot Fleet request. If you specify LaunchSpecifications , you can\'t specify LaunchTemplateConfigs . If you include On-Demand capacity in your request, you must use LaunchTemplateConfigs .\n\n(dict) --Describes the launch specification for one or more Spot Instances. If you include On-Demand capacity in your fleet request, you can\'t use SpotFleetLaunchSpecification ; you must use LaunchTemplateConfig .\n\nSecurityGroups (list) --One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.\n\n(dict) --Describes a security group.\n\nGroupName (string) --The name of the security group.\n\nGroupId (string) --The ID of the security group.\n\n\n\n\n\nAddressingType (string) --Deprecated.\n\nBlockDeviceMappings (list) --One or more block devices that are mapped to the Spot Instances. You can\'t specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.\n\n(dict) --Describes a block device mapping.\n\nDeviceName (string) --The device name (for example, /dev/sdh or xvdh ).\n\nVirtualName (string) --The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\nNVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.\nConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\n\nEbs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.\n\nDeleteOnTermination (boolean) --Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.\n\nIops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nConstraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nCondition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.\n\nSnapshotId (string) --The ID of the snapshot.\n\nVolumeSize (integer) --The size of the volume, in GiB.\nDefault: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.\nConstraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.\n\nVolumeType (string) --The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.\nDefault: gp2\n\nKmsKeyId (string) --Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\nThis parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .\n\nEncrypted (boolean) --Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .\nIn no case can you remove encryption from an encrypted volume.\nEncrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .\nThis parameter is not returned by .\n\n\n\nNoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.\n\n\n\n\n\nEbsOptimized (boolean) --Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\nDefault: false\n\nIamInstanceProfile (dict) --The IAM instance profile.\n\nArn (string) --The Amazon Resource Name (ARN) of the instance profile.\n\nName (string) --The name of the instance profile.\n\n\n\nImageId (string) --The ID of the AMI.\n\nInstanceType (string) --The instance type.\n\nKernelId (string) --The ID of the kernel.\n\nKeyName (string) --The name of the key pair.\n\nMonitoring (dict) --Enable or disable monitoring for the instances.\n\nEnabled (boolean) --Enables monitoring for the instance.\nDefault: false\n\n\n\nNetworkInterfaces (list) --One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.\n\n(dict) --Describes a network interface.\n\nAssociatePublicIpAddress (boolean) --Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true .\n\nDeleteOnTermination (boolean) --If set to true , the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.\n\nDescription (string) --The description of the network interface. Applies only if creating a network interface when launching an instance.\n\nDeviceIndex (integer) --The position of the network interface in the attachment order. A primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.\n\nGroups (list) --The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.\n\n(string) --\n\n\nIpv6AddressCount (integer) --A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you\'ve specified a minimum number of instances to launch.\n\nIpv6Addresses (list) --One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you\'ve specified a minimum number of instances to launch.\n\n(dict) --Describes an IPv6 address.\n\nIpv6Address (string) --The IPv6 address.\n\n\n\n\n\nNetworkInterfaceId (string) --The ID of the network interface.\nIf you are creating a Spot Fleet, omit this parameter because you can\xe2\x80\x99t specify a network interface ID in a launch specification.\n\nPrivateIpAddress (string) --The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.\n\nPrivateIpAddresses (list) --One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.\n\n(dict) --Describes a secondary private IPv4 address for a network interface.\n\nPrimary (boolean) --Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n\nPrivateIpAddress (string) --The private IPv4 addresses.\n\n\n\n\n\nSecondaryPrivateIpAddressCount (integer) --The number of secondary private IPv4 addresses. You can\'t specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.\n\nSubnetId (string) --The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.\n\nInterfaceType (string) --The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .\nIf you are not creating an EFA, specify interface or omit this parameter.\nValid values: interface | efa\n\n\n\n\n\nPlacement (dict) --The placement information.\n\nAvailabilityZone (string) --The Availability Zone.\n[Spot Fleet only] To specify multiple Availability Zones, separate them using commas; for example, 'us-west-2a, us-west-2b'.\n\nGroupName (string) --The name of the placement group.\n\nTenancy (string) --The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for Spot Instances.\n\n\n\nRamdiskId (string) --The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.\n\nSpotPrice (string) --The maximum price per unit hour that you are willing to pay for a Spot Instance. If this value is not specified, the default is the Spot price specified for the fleet. To determine the Spot price per unit hour, divide the Spot price by the value of WeightedCapacity .\n\nSubnetId (string) --The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, 'subnet-1234abcdeexample1, subnet-0987cdef6example2'.\n\nUserData (string) --The Base64-encoded user data that instances use when starting up.\n\nWeightedCapacity (float) --The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.\nIf the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.\n\nTagSpecifications (list) --The tags to apply during creation.\n\n(dict) --The tags for a Spot Fleet resource.\n\nResourceType (string) --The type of resource. Currently, the only resource type that is supported is instance . To tag the Spot Fleet request on creation, use the TagSpecifications parameter in ` SpotFleetRequestConfigData https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetRequestConfigData.html`__ .\n\nTags (list) --The tags.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaunchTemplateConfigs (list) --The launch template and overrides. If you specify LaunchTemplateConfigs , you can\'t specify LaunchSpecifications . If you include On-Demand capacity in your request, you must use LaunchTemplateConfigs .\n\n(dict) --Describes a launch template and overrides.\n\nLaunchTemplateSpecification (dict) --The launch template.\n\nLaunchTemplateId (string) --The ID of the launch template. If you specify the template ID, you can\'t specify the template name.\n\nLaunchTemplateName (string) --The name of the launch template. If you specify the template name, you can\'t specify the template ID.\n\nVersion (string) --The launch template version number, $Latest , or $Default . You must specify a value, otherwise the request fails.\nIf the value is $Latest , Amazon EC2 uses the latest version of the launch template.\nIf the value is $Default , Amazon EC2 uses the default version of the launch template.\n\n\n\nOverrides (list) --Any parameters that you specify override the same parameters in the launch template.\n\n(dict) --Describes overrides for a launch template.\n\nInstanceType (string) --The instance type.\n\nSpotPrice (string) --The maximum price per unit hour that you are willing to pay for a Spot Instance.\n\nSubnetId (string) --The ID of the subnet in which to launch the instances.\n\nAvailabilityZone (string) --The Availability Zone in which to launch the instances.\n\nWeightedCapacity (float) --The number of units provided by the specified instance type.\n\nPriority (float) --The priority for the launch template override. If OnDemandAllocationStrategy is set to prioritized , Spot Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at 0 . The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.\n\n\n\n\n\n\n\n\n\nSpotPrice (string) --The maximum price per unit hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.\n\nTargetCapacity (integer) -- [REQUIRED]The number of units to request for the Spot Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is maintain , you can specify a target capacity of 0 and add capacity later.\n\nOnDemandTargetCapacity (integer) --The number of On-Demand units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is maintain , you can specify a target capacity of 0 and add capacity later.\n\nOnDemandMaxTotalPrice (string) --The maximum amount per hour for On-Demand Instances that you\'re willing to pay. You can use the onDemandMaxTotalPrice parameter, the spotMaxTotalPrice parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you\'re willing to pay. When the maximum amount you\'re willing to pay is reached, the fleet stops launching instances even if it hasn\xe2\x80\x99t met the target capacity.\n\nSpotMaxTotalPrice (string) --The maximum amount per hour for Spot Instances that you\'re willing to pay. You can use the spotdMaxTotalPrice parameter, the onDemandMaxTotalPrice parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you\'re willing to pay. When the maximum amount you\'re willing to pay is reached, the fleet stops launching instances even if it hasn\xe2\x80\x99t met the target capacity.\n\nTerminateInstancesWithExpiration (boolean) --Indicates whether running Spot Instances are terminated when the Spot Fleet request expires.\n\nType (string) --The type of request. Indicates whether the Spot Fleet only requests the target capacity or also attempts to maintain it. When this value is request , the Spot Fleet only places the required requests. It does not attempt to replenish Spot Instances if capacity is diminished, nor does it submit requests in alternative Spot pools if capacity is not available. When this value is maintain , the Spot Fleet maintains the target capacity. The Spot Fleet places the required requests to meet capacity and automatically replenishes any interrupted instances. Default: maintain . instant is listed but is not used by Spot Fleet.\n\nValidFrom (datetime) --The start date and time of the request, in UTC format (YYYY -MM -DD T*HH* :MM :SS Z). By default, Amazon EC2 starts fulfilling the request immediately.\n\nValidUntil (datetime) --The end date and time of the request, in UTC format (YYYY -MM -DD T*HH* :MM :SS Z). After the end date and time, no new Spot Instance requests are placed or able to fulfill the request. If no value is specified, the Spot Fleet request remains until you cancel it.\n\nReplaceUnhealthyInstances (boolean) --Indicates whether Spot Fleet should replace unhealthy instances.\n\nInstanceInterruptionBehavior (string) --The behavior when a Spot Instance is interrupted. The default is terminate .\n\nLoadBalancersConfig (dict) --One or more Classic Load Balancers and target groups to attach to the Spot Fleet request. Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.\nWith Network Load Balancers, Spot Fleet cannot register instances that have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.\n\nClassicLoadBalancersConfig (dict) --The Classic Load Balancers.\n\nClassicLoadBalancers (list) --One or more Classic Load Balancers.\n\n(dict) --Describes a Classic Load Balancer.\n\nName (string) --The name of the load balancer.\n\n\n\n\n\n\n\nTargetGroupsConfig (dict) --The target groups.\n\nTargetGroups (list) --One or more target groups.\n\n(dict) --Describes a load balancer target group.\n\nArn (string) --The Amazon Resource Name (ARN) of the target group.\n\n\n\n\n\n\n\n\n\nInstancePoolsToUseCount (integer) --The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot AllocationStrategy is set to lowest-price . Spot Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.\n\nTagSpecifications (list) --The key-value pair for tagging the Spot Fleet request on creation. The value for ResourceType must be spot-fleet-request , otherwise the Spot Fleet request fails. To tag instances at launch, specify the tags in the launch template (valid only if you use LaunchTemplateConfigs ) or in the ` SpotFleetTagSpecification https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetTagSpecification.html`__ (valid only if you use LaunchSpecifications ). For information about tagging after launch, see Tagging Your Resources .\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'SpotFleetRequestId': 'string'
}


Response Structure

(dict) --
Contains the output of RequestSpotFleet.

SpotFleetRequestId (string) --
The ID of the Spot Fleet request.







Examples
This example creates a Spot fleet request with two launch specifications that differ only by subnet. The Spot fleet launches the instances in the specified subnet with the lowest price. If the instances are launched in a default VPC, they receive a public IP address by default. If the instances are launched in a nondefault VPC, they do not receive a public IP address by default. Note that you can\'t specify different subnets from the same Availability Zone in a Spot fleet request.
response = client.request_spot_fleet(
    SpotFleetRequestConfig={
        'IamFleetRole': 'arn:aws:iam::123456789012:role/my-spot-fleet-role',
        'LaunchSpecifications': [
            {
                'IamInstanceProfile': {
                    'Arn': 'arn:aws:iam::123456789012:instance-profile/my-iam-role',
                },
                'ImageId': 'ami-1a2b3c4d',
                'InstanceType': 'm3.medium',
                'KeyName': 'my-key-pair',
                'SecurityGroups': [
                    {
                        'GroupId': 'sg-1a2b3c4d',
                    },
                ],
                'SubnetId': 'subnet-1a2b3c4d, subnet-3c4d5e6f',
            },
        ],
        'SpotPrice': '0.04',
        'TargetCapacity': 2,
    },
)

print(response)


Expected Output:
{
    'SpotFleetRequestId': 'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example creates a Spot fleet request with two launch specifications that differ only by Availability Zone. The Spot fleet launches the instances in the specified Availability Zone with the lowest price. If your account supports EC2-VPC only, Amazon EC2 launches the Spot instances in the default subnet of the Availability Zone. If your account supports EC2-Classic, Amazon EC2 launches the instances in EC2-Classic in the Availability Zone.
response = client.request_spot_fleet(
    SpotFleetRequestConfig={
        'IamFleetRole': 'arn:aws:iam::123456789012:role/my-spot-fleet-role',
        'LaunchSpecifications': [
            {
                'IamInstanceProfile': {
                    'Arn': 'arn:aws:iam::123456789012:instance-profile/my-iam-role',
                },
                'ImageId': 'ami-1a2b3c4d',
                'InstanceType': 'm3.medium',
                'KeyName': 'my-key-pair',
                'Placement': {
                    'AvailabilityZone': 'us-west-2a, us-west-2b',
                },
                'SecurityGroups': [
                    {
                        'GroupId': 'sg-1a2b3c4d',
                    },
                ],
            },
        ],
        'SpotPrice': '0.04',
        'TargetCapacity': 2,
    },
)

print(response)


Expected Output:
{
    'SpotFleetRequestId': 'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example assigns public addresses to instances launched in a nondefault VPC. Note that when you specify a network interface, you must include the subnet ID and security group ID using the network interface.
response = client.request_spot_fleet(
    SpotFleetRequestConfig={
        'IamFleetRole': 'arn:aws:iam::123456789012:role/my-spot-fleet-role',
        'LaunchSpecifications': [
            {
                'IamInstanceProfile': {
                    'Arn': 'arn:aws:iam::880185128111:instance-profile/my-iam-role',
                },
                'ImageId': 'ami-1a2b3c4d',
                'InstanceType': 'm3.medium',
                'KeyName': 'my-key-pair',
                'NetworkInterfaces': [
                    {
                        'AssociatePublicIpAddress': True,
                        'DeviceIndex': 0,
                        'Groups': [
                            'sg-1a2b3c4d',
                        ],
                        'SubnetId': 'subnet-1a2b3c4d',
                    },
                ],
            },
        ],
        'SpotPrice': '0.04',
        'TargetCapacity': 2,
    },
)

print(response)


Expected Output:
{
    'SpotFleetRequestId': 'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    'ResponseMetadata': {
        '...': '...',
    },
}


This example creates a Spot fleet request that launches 30 instances using the diversified allocation strategy. The launch specifications differ by instance type. The Spot fleet distributes the instances across the launch specifications such that there are 10 instances of each type.
response = client.request_spot_fleet(
    SpotFleetRequestConfig={
        'AllocationStrategy': 'diversified',
        'IamFleetRole': 'arn:aws:iam::123456789012:role/my-spot-fleet-role',
        'LaunchSpecifications': [
            {
                'ImageId': 'ami-1a2b3c4d',
                'InstanceType': 'c4.2xlarge',
                'SubnetId': 'subnet-1a2b3c4d',
            },
            {
                'ImageId': 'ami-1a2b3c4d',
                'InstanceType': 'm3.2xlarge',
                'SubnetId': 'subnet-1a2b3c4d',
            },
            {
                'ImageId': 'ami-1a2b3c4d',
                'InstanceType': 'r3.2xlarge',
                'SubnetId': 'subnet-1a2b3c4d',
            },
        ],
        'SpotPrice': '0.70',
        'TargetCapacity': 30,
    },
)

print(response)


Expected Output:
{
    'SpotFleetRequestId': 'sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SpotFleetRequestId': 'string'
    }
    
    
    """
    pass

def request_spot_instances(AvailabilityZoneGroup=None, BlockDurationMinutes=None, ClientToken=None, DryRun=None, InstanceCount=None, LaunchGroup=None, LaunchSpecification=None, SpotPrice=None, Type=None, ValidFrom=None, ValidUntil=None, InstanceInterruptionBehavior=None):
    """
    Creates a Spot Instance request.
    For more information, see Spot Instance Requests in the Amazon EC2 User Guide for Linux Instances .
    See also: AWS API Documentation
    
    Examples
    This example creates a one-time Spot Instance request for five instances in the specified Availability Zone. If your account supports EC2-VPC only, Amazon EC2 launches the instances in the default subnet of the specified Availability Zone. If your account supports EC2-Classic, Amazon EC2 launches the instances in EC2-Classic in the specified Availability Zone.
    Expected Output:
    This example command creates a one-time Spot Instance request for five instances in the specified subnet. Amazon EC2 launches the instances in the specified subnet. If the VPC is a nondefault VPC, the instances do not receive a public IP address by default.
    Expected Output:
    
    :example: response = client.request_spot_instances(
        AvailabilityZoneGroup='string',
        BlockDurationMinutes=123,
        ClientToken='string',
        DryRun=True|False,
        InstanceCount=123,
        LaunchGroup='string',
        LaunchSpecification={
            'SecurityGroupIds': [
                'string',
            ],
            'SecurityGroups': [
                'string',
            ],
            'AddressingType': 'string',
            'BlockDeviceMappings': [
                {
                    'DeviceName': 'string',
                    'VirtualName': 'string',
                    'Ebs': {
                        'DeleteOnTermination': True|False,
                        'Iops': 123,
                        'SnapshotId': 'string',
                        'VolumeSize': 123,
                        'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                        'KmsKeyId': 'string',
                        'Encrypted': True|False
                    },
                    'NoDevice': 'string'
                },
            ],
            'EbsOptimized': True|False,
            'IamInstanceProfile': {
                'Arn': 'string',
                'Name': 'string'
            },
            'ImageId': 'string',
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'KernelId': 'string',
            'KeyName': 'string',
            'Monitoring': {
                'Enabled': True|False
            },
            'NetworkInterfaces': [
                {
                    'AssociatePublicIpAddress': True|False,
                    'DeleteOnTermination': True|False,
                    'Description': 'string',
                    'DeviceIndex': 123,
                    'Groups': [
                        'string',
                    ],
                    'Ipv6AddressCount': 123,
                    'Ipv6Addresses': [
                        {
                            'Ipv6Address': 'string'
                        },
                    ],
                    'NetworkInterfaceId': 'string',
                    'PrivateIpAddress': 'string',
                    'PrivateIpAddresses': [
                        {
                            'Primary': True|False,
                            'PrivateIpAddress': 'string'
                        },
                    ],
                    'SecondaryPrivateIpAddressCount': 123,
                    'SubnetId': 'string',
                    'InterfaceType': 'string'
                },
            ],
            'Placement': {
                'AvailabilityZone': 'string',
                'GroupName': 'string',
                'Tenancy': 'default'|'dedicated'|'host'
            },
            'RamdiskId': 'string',
            'SubnetId': 'string',
            'UserData': 'string'
        },
        SpotPrice='string',
        Type='one-time'|'persistent',
        ValidFrom=datetime(2015, 1, 1),
        ValidUntil=datetime(2015, 1, 1),
        InstanceInterruptionBehavior='hibernate'|'stop'|'terminate'
    )
    
    
    :type AvailabilityZoneGroup: string
    :param AvailabilityZoneGroup: The user-specified name for a logical grouping of requests.\nWhen you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to requests for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.\nIf there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the request is expired, or the maximum price you specified falls below current Spot price), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.\nDefault: Instances are launched in any available Availability Zone.\n

    :type BlockDurationMinutes: integer
    :param BlockDurationMinutes: The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).\nThe duration period starts as soon as your Spot Instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot Instance for termination and provides a Spot Instance termination notice, which gives the instance a two-minute warning before it terminates.\nYou can\'t specify an Availability Zone group or a launch group if you specify a duration.\n

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see How to Ensure Idempotency in the Amazon EC2 User Guide for Linux Instances .

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceCount: integer
    :param InstanceCount: The maximum number of Spot Instances to launch.\nDefault: 1\n

    :type LaunchGroup: string
    :param LaunchGroup: The instance launch group. Launch groups are Spot Instances that launch together and terminate together.\nDefault: Instances are launched and terminated individually\n

    :type LaunchSpecification: dict
    :param LaunchSpecification: The launch specification.\n\nSecurityGroupIds (list) --One or more security group IDs.\n\n(string) --\n\n\nSecurityGroups (list) --One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.\n\n(string) --\n\n\nAddressingType (string) --Deprecated.\n\nBlockDeviceMappings (list) --One or more block device mapping entries. You can\'t specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.\n\n(dict) --Describes a block device mapping.\n\nDeviceName (string) --The device name (for example, /dev/sdh or xvdh ).\n\nVirtualName (string) --The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\nNVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.\nConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\n\nEbs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.\n\nDeleteOnTermination (boolean) --Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.\n\nIops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nConstraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nCondition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.\n\nSnapshotId (string) --The ID of the snapshot.\n\nVolumeSize (integer) --The size of the volume, in GiB.\nDefault: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.\nConstraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.\n\nVolumeType (string) --The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.\nDefault: gp2\n\nKmsKeyId (string) --Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\nThis parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .\n\nEncrypted (boolean) --Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .\nIn no case can you remove encryption from an encrypted volume.\nEncrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .\nThis parameter is not returned by .\n\n\n\nNoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.\n\n\n\n\n\nEbsOptimized (boolean) --Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\nDefault: false\n\nIamInstanceProfile (dict) --The IAM instance profile.\n\nArn (string) --The Amazon Resource Name (ARN) of the instance profile.\n\nName (string) --The name of the instance profile.\n\n\n\nImageId (string) --The ID of the AMI.\n\nInstanceType (string) --The instance type.\n\nKernelId (string) --The ID of the kernel.\n\nKeyName (string) --The name of the key pair.\n\nMonitoring (dict) --Indicates whether basic or detailed monitoring is enabled for the instance.\nDefault: Disabled\n\nEnabled (boolean) -- [REQUIRED]Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.\n\n\n\nNetworkInterfaces (list) --One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.\n\n(dict) --Describes a network interface.\n\nAssociatePublicIpAddress (boolean) --Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true .\n\nDeleteOnTermination (boolean) --If set to true , the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.\n\nDescription (string) --The description of the network interface. Applies only if creating a network interface when launching an instance.\n\nDeviceIndex (integer) --The position of the network interface in the attachment order. A primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.\n\nGroups (list) --The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.\n\n(string) --\n\n\nIpv6AddressCount (integer) --A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you\'ve specified a minimum number of instances to launch.\n\nIpv6Addresses (list) --One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you\'ve specified a minimum number of instances to launch.\n\n(dict) --Describes an IPv6 address.\n\nIpv6Address (string) --The IPv6 address.\n\n\n\n\n\nNetworkInterfaceId (string) --The ID of the network interface.\nIf you are creating a Spot Fleet, omit this parameter because you can\xe2\x80\x99t specify a network interface ID in a launch specification.\n\nPrivateIpAddress (string) --The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.\n\nPrivateIpAddresses (list) --One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.\n\n(dict) --Describes a secondary private IPv4 address for a network interface.\n\nPrimary (boolean) --Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n\nPrivateIpAddress (string) --The private IPv4 addresses.\n\n\n\n\n\nSecondaryPrivateIpAddressCount (integer) --The number of secondary private IPv4 addresses. You can\'t specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.\n\nSubnetId (string) --The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.\n\nInterfaceType (string) --The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .\nIf you are not creating an EFA, specify interface or omit this parameter.\nValid values: interface | efa\n\n\n\n\n\nPlacement (dict) --The placement information for the instance.\n\nAvailabilityZone (string) --The Availability Zone.\n[Spot Fleet only] To specify multiple Availability Zones, separate them using commas; for example, 'us-west-2a, us-west-2b'.\n\nGroupName (string) --The name of the placement group.\n\nTenancy (string) --The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for Spot Instances.\n\n\n\nRamdiskId (string) --The ID of the RAM disk.\n\nSubnetId (string) --The IDs of the subnets in which to launch the instance. To specify multiple subnets, separate them using commas; for example, 'subnet-1234abcdeexample1, subnet-0987cdef6example2'.\n\nUserData (string) --The Base64-encoded user data for the instance. User data is limited to 16 KB.\n\n\n

    :type SpotPrice: string
    :param SpotPrice: The maximum price per hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.

    :type Type: string
    :param Type: The Spot Instance request type.\nDefault: one-time\n

    :type ValidFrom: datetime
    :param ValidFrom: The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.\nThe specified start date and time cannot be equal to the current date and time. You must specify a start date and time that occurs after the current date and time.\n

    :type ValidUntil: datetime
    :param ValidUntil: The end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached. The default end date is 7 days from the current date.

    :type InstanceInterruptionBehavior: string
    :param InstanceInterruptionBehavior: The behavior when a Spot Instance is interrupted. The default is terminate .

    :rtype: dict

ReturnsResponse Syntax
{
    'SpotInstanceRequests': [
        {
            'ActualBlockHourlyPrice': 'string',
            'AvailabilityZoneGroup': 'string',
            'BlockDurationMinutes': 123,
            'CreateTime': datetime(2015, 1, 1),
            'Fault': {
                'Code': 'string',
                'Message': 'string'
            },
            'InstanceId': 'string',
            'LaunchGroup': 'string',
            'LaunchSpecification': {
                'UserData': 'string',
                'SecurityGroups': [
                    {
                        'GroupName': 'string',
                        'GroupId': 'string'
                    },
                ],
                'AddressingType': 'string',
                'BlockDeviceMappings': [
                    {
                        'DeviceName': 'string',
                        'VirtualName': 'string',
                        'Ebs': {
                            'DeleteOnTermination': True|False,
                            'Iops': 123,
                            'SnapshotId': 'string',
                            'VolumeSize': 123,
                            'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                            'KmsKeyId': 'string',
                            'Encrypted': True|False
                        },
                        'NoDevice': 'string'
                    },
                ],
                'EbsOptimized': True|False,
                'IamInstanceProfile': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'ImageId': 'string',
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'KernelId': 'string',
                'KeyName': 'string',
                'NetworkInterfaces': [
                    {
                        'AssociatePublicIpAddress': True|False,
                        'DeleteOnTermination': True|False,
                        'Description': 'string',
                        'DeviceIndex': 123,
                        'Groups': [
                            'string',
                        ],
                        'Ipv6AddressCount': 123,
                        'Ipv6Addresses': [
                            {
                                'Ipv6Address': 'string'
                            },
                        ],
                        'NetworkInterfaceId': 'string',
                        'PrivateIpAddress': 'string',
                        'PrivateIpAddresses': [
                            {
                                'Primary': True|False,
                                'PrivateIpAddress': 'string'
                            },
                        ],
                        'SecondaryPrivateIpAddressCount': 123,
                        'SubnetId': 'string',
                        'InterfaceType': 'string'
                    },
                ],
                'Placement': {
                    'AvailabilityZone': 'string',
                    'GroupName': 'string',
                    'Tenancy': 'default'|'dedicated'|'host'
                },
                'RamdiskId': 'string',
                'SubnetId': 'string',
                'Monitoring': {
                    'Enabled': True|False
                }
            },
            'LaunchedAvailabilityZone': 'string',
            'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
            'SpotInstanceRequestId': 'string',
            'SpotPrice': 'string',
            'State': 'open'|'active'|'closed'|'cancelled'|'failed',
            'Status': {
                'Code': 'string',
                'Message': 'string',
                'UpdateTime': datetime(2015, 1, 1)
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'Type': 'one-time'|'persistent',
            'ValidFrom': datetime(2015, 1, 1),
            'ValidUntil': datetime(2015, 1, 1),
            'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
        },
    ]
}


Response Structure

(dict) --
Contains the output of RequestSpotInstances.

SpotInstanceRequests (list) --
One or more Spot Instance requests.

(dict) --
Describes a Spot Instance request.

ActualBlockHourlyPrice (string) --
If you specified a duration and your Spot Instance request was fulfilled, this is the fixed hourly price in effect for the Spot Instance while it runs.

AvailabilityZoneGroup (string) --
The Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.

BlockDurationMinutes (integer) --
The duration for the Spot Instance, in minutes.

CreateTime (datetime) --
The date and time when the Spot Instance request was created, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).

Fault (dict) --
The fault codes for the Spot Instance request, if any.

Code (string) --
The reason code for the Spot Instance state change.

Message (string) --
The message for the Spot Instance state change.



InstanceId (string) --
The instance ID, if an instance has been launched to fulfill the Spot Instance request.

LaunchGroup (string) --
The instance launch group. Launch groups are Spot Instances that launch together and terminate together.

LaunchSpecification (dict) --
Additional information for launching instances.

UserData (string) --
The Base64-encoded user data for the instance.

SecurityGroups (list) --
One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





AddressingType (string) --
Deprecated.

BlockDeviceMappings (list) --
One or more block device mapping entries.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name (for example, /dev/sdh or xvdh ).

VirtualName (string) --
The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.
NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.
Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.

Ebs (dict) --
Parameters used to automatically set up EBS volumes when the instance is launched.

DeleteOnTermination (boolean) --
Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.

Iops (integer) --
The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.

SnapshotId (string) --
The ID of the snapshot.

VolumeSize (integer) --
The size of the volume, in GiB.
Default: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.
Constraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.

VolumeType (string) --
The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.
Default: gp2

KmsKeyId (string) --
Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.
This parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .

Encrypted (boolean) --
Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
In no case can you remove encryption from an encrypted volume.
Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .
This parameter is not returned by .



NoDevice (string) --
Suppresses the specified device included in the block device mapping of the AMI.





EbsOptimized (boolean) --
Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
Default: false

IamInstanceProfile (dict) --
The IAM instance profile.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Name (string) --
The name of the instance profile.



ImageId (string) --
The ID of the AMI.

InstanceType (string) --
The instance type.

KernelId (string) --
The ID of the kernel.

KeyName (string) --
The name of the key pair.

NetworkInterfaces (list) --
One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.

(dict) --
Describes a network interface.

AssociatePublicIpAddress (boolean) --
Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true .

DeleteOnTermination (boolean) --
If set to true , the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.

Description (string) --
The description of the network interface. Applies only if creating a network interface when launching an instance.

DeviceIndex (integer) --
The position of the network interface in the attachment order. A primary network interface has a device index of 0.
If you specify a network interface when launching an instance, you must specify the device index.

Groups (list) --
The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.

(string) --


Ipv6AddressCount (integer) --
A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you\'ve specified a minimum number of instances to launch.

Ipv6Addresses (list) --
One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you\'ve specified a minimum number of instances to launch.

(dict) --
Describes an IPv6 address.

Ipv6Address (string) --
The IPv6 address.





NetworkInterfaceId (string) --
The ID of the network interface.
If you are creating a Spot Fleet, omit this parameter because you can\xe2\x80\x99t specify a network interface ID in a launch specification.

PrivateIpAddress (string) --
The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.

PrivateIpAddresses (list) --
One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.

(dict) --
Describes a secondary private IPv4 address for a network interface.

Primary (boolean) --
Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.

PrivateIpAddress (string) --
The private IPv4 addresses.





SecondaryPrivateIpAddressCount (integer) --
The number of secondary private IPv4 addresses. You can\'t specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.

SubnetId (string) --
The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.

InterfaceType (string) --
The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .
If you are not creating an EFA, specify interface or omit this parameter.
Valid values: interface | efa





Placement (dict) --
The placement information for the instance.

AvailabilityZone (string) --
The Availability Zone.
[Spot Fleet only] To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".

GroupName (string) --
The name of the placement group.

Tenancy (string) --
The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for Spot Instances.



RamdiskId (string) --
The ID of the RAM disk.

SubnetId (string) --
The ID of the subnet in which to launch the instance.

Monitoring (dict) --
Describes the monitoring of an instance.

Enabled (boolean) --
Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.





LaunchedAvailabilityZone (string) --
The Availability Zone in which the request is launched.

ProductDescription (string) --
The product description associated with the Spot Instance.

SpotInstanceRequestId (string) --
The ID of the Spot Instance request.

SpotPrice (string) --
The maximum price per hour that you are willing to pay for a Spot Instance.

State (string) --
The state of the Spot Instance request. Spot status information helps track your Spot Instance requests. For more information, see Spot Status in the Amazon EC2 User Guide for Linux Instances .

Status (dict) --
The status code and status message describing the Spot Instance request.

Code (string) --
The status code. For a list of status codes, see Spot Status Codes in the Amazon EC2 User Guide for Linux Instances .

Message (string) --
The description for the status code.

UpdateTime (datetime) --
The date and time of the most recent status update, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z).



Tags (list) --
Any tags assigned to the resource.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





Type (string) --
The Spot Instance request type.

ValidFrom (datetime) --
The start date of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). The request becomes active at this date and time.

ValidUntil (datetime) --
The end date of the request, in UTC format (for example, YYYY -MM -DD T*HH* :MM :SS Z). If this is a one-time request, it remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached. The default end date is 7 days from the current date.

InstanceInterruptionBehavior (string) --
The behavior when a Spot Instance is interrupted.











Examples
This example creates a one-time Spot Instance request for five instances in the specified Availability Zone. If your account supports EC2-VPC only, Amazon EC2 launches the instances in the default subnet of the specified Availability Zone. If your account supports EC2-Classic, Amazon EC2 launches the instances in EC2-Classic in the specified Availability Zone.
response = client.request_spot_instances(
    InstanceCount=5,
    LaunchSpecification={
        'IamInstanceProfile': {
            'Arn': 'arn:aws:iam::123456789012:instance-profile/my-iam-role',
        },
        'ImageId': 'ami-1a2b3c4d',
        'InstanceType': 'm3.medium',
        'KeyName': 'my-key-pair',
        'Placement': {
            'AvailabilityZone': 'us-west-2a',
        },
        'SecurityGroupIds': [
            'sg-1a2b3c4d',
        ],
    },
    SpotPrice='0.03',
    Type='one-time',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}


This example command creates a one-time Spot Instance request for five instances in the specified subnet. Amazon EC2 launches the instances in the specified subnet. If the VPC is a nondefault VPC, the instances do not receive a public IP address by default.
response = client.request_spot_instances(
    InstanceCount=5,
    LaunchSpecification={
        'IamInstanceProfile': {
            'Arn': 'arn:aws:iam::123456789012:instance-profile/my-iam-role',
        },
        'ImageId': 'ami-1a2b3c4d',
        'InstanceType': 'm3.medium',
        'SecurityGroupIds': [
            'sg-1a2b3c4d',
        ],
        'SubnetId': 'subnet-1a2b3c4d',
    },
    SpotPrice='0.050',
    Type='one-time',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'SpotInstanceRequests': [
            {
                'ActualBlockHourlyPrice': 'string',
                'AvailabilityZoneGroup': 'string',
                'BlockDurationMinutes': 123,
                'CreateTime': datetime(2015, 1, 1),
                'Fault': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'InstanceId': 'string',
                'LaunchGroup': 'string',
                'LaunchSpecification': {
                    'UserData': 'string',
                    'SecurityGroups': [
                        {
                            'GroupName': 'string',
                            'GroupId': 'string'
                        },
                    ],
                    'AddressingType': 'string',
                    'BlockDeviceMappings': [
                        {
                            'DeviceName': 'string',
                            'VirtualName': 'string',
                            'Ebs': {
                                'DeleteOnTermination': True|False,
                                'Iops': 123,
                                'SnapshotId': 'string',
                                'VolumeSize': 123,
                                'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                                'KmsKeyId': 'string',
                                'Encrypted': True|False
                            },
                            'NoDevice': 'string'
                        },
                    ],
                    'EbsOptimized': True|False,
                    'IamInstanceProfile': {
                        'Arn': 'string',
                        'Name': 'string'
                    },
                    'ImageId': 'string',
                    'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                    'KernelId': 'string',
                    'KeyName': 'string',
                    'NetworkInterfaces': [
                        {
                            'AssociatePublicIpAddress': True|False,
                            'DeleteOnTermination': True|False,
                            'Description': 'string',
                            'DeviceIndex': 123,
                            'Groups': [
                                'string',
                            ],
                            'Ipv6AddressCount': 123,
                            'Ipv6Addresses': [
                                {
                                    'Ipv6Address': 'string'
                                },
                            ],
                            'NetworkInterfaceId': 'string',
                            'PrivateIpAddress': 'string',
                            'PrivateIpAddresses': [
                                {
                                    'Primary': True|False,
                                    'PrivateIpAddress': 'string'
                                },
                            ],
                            'SecondaryPrivateIpAddressCount': 123,
                            'SubnetId': 'string',
                            'InterfaceType': 'string'
                        },
                    ],
                    'Placement': {
                        'AvailabilityZone': 'string',
                        'GroupName': 'string',
                        'Tenancy': 'default'|'dedicated'|'host'
                    },
                    'RamdiskId': 'string',
                    'SubnetId': 'string',
                    'Monitoring': {
                        'Enabled': True|False
                    }
                },
                'LaunchedAvailabilityZone': 'string',
                'ProductDescription': 'Linux/UNIX'|'Linux/UNIX (Amazon VPC)'|'Windows'|'Windows (Amazon VPC)',
                'SpotInstanceRequestId': 'string',
                'SpotPrice': 'string',
                'State': 'open'|'active'|'closed'|'cancelled'|'failed',
                'Status': {
                    'Code': 'string',
                    'Message': 'string',
                    'UpdateTime': datetime(2015, 1, 1)
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'Type': 'one-time'|'persistent',
                'ValidFrom': datetime(2015, 1, 1),
                'ValidUntil': datetime(2015, 1, 1),
                'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def reset_ebs_default_kms_key_id(DryRun=None):
    """
    Resets the default customer master key (CMK) for EBS encryption for your account in this Region to the AWS managed CMK for EBS.
    After resetting the default CMK to the AWS managed CMK, you can continue to encrypt by a customer managed CMK by specifying it when you create the volume. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.reset_ebs_default_kms_key_id(
        DryRun=True|False
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict
ReturnsResponse Syntax{
    'KmsKeyId': 'string'
}


Response Structure

(dict) --
KmsKeyId (string) --The Amazon Resource Name (ARN) of the default CMK for EBS encryption by default.







    :return: {
        'KmsKeyId': 'string'
    }
    
    
    """
    pass

def reset_fpga_image_attribute(DryRun=None, FpgaImageId=None, Attribute=None):
    """
    Resets the specified attribute of the specified Amazon FPGA Image (AFI) to its default value. You can only reset the load permission attribute.
    See also: AWS API Documentation
    
    
    :example: response = client.reset_fpga_image_attribute(
        DryRun=True|False,
        FpgaImageId='string',
        Attribute='loadPermission'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type FpgaImageId: string
    :param FpgaImageId: [REQUIRED]\nThe ID of the AFI.\n

    :type Attribute: string
    :param Attribute: The attribute.

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Is true if the request succeeds, and an error otherwise.








    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def reset_image_attribute(Attribute=None, ImageId=None, DryRun=None):
    """
    Resets an attribute of an AMI to its default value.
    See also: AWS API Documentation
    
    Examples
    This example resets the launchPermission attribute for the specified AMI. By default, AMIs are private.
    Expected Output:
    
    :example: response = client.reset_image_attribute(
        Attribute='launchPermission',
        ImageId='string',
        DryRun=True|False
    )
    
    
    :type Attribute: string
    :param Attribute: [REQUIRED]\nThe attribute to reset (currently you can only reset the launch permission attribute).\n

    :type ImageId: string
    :param ImageId: [REQUIRED]\nThe ID of the AMI.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.reset_image_attribute(
        Attribute='launchPermission',
        ImageId='ami-5731123e',
    )
    
    print(response)
    
    
    """
    pass

def reset_instance_attribute(Attribute=None, DryRun=None, InstanceId=None):
    """
    Resets an attribute of an instance to its default value. To reset the kernel or ramdisk , the instance must be in a stopped state. To reset the sourceDestCheck , the instance can be either running or stopped.
    The sourceDestCheck attribute controls whether source/destination checking is enabled. The default value is true , which means checking is enabled. This value must be false for a NAT instance to perform NAT. For more information, see NAT Instances in the Amazon Virtual Private Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example resets the sourceDestCheck attribute for the specified instance.
    Expected Output:
    
    :example: response = client.reset_instance_attribute(
        Attribute='instanceType'|'kernel'|'ramdisk'|'userData'|'disableApiTermination'|'instanceInitiatedShutdownBehavior'|'rootDeviceName'|'blockDeviceMapping'|'productCodes'|'sourceDestCheck'|'groupSet'|'ebsOptimized'|'sriovNetSupport'|'enaSupport',
        DryRun=True|False,
        InstanceId='string'
    )
    
    
    :type Attribute: string
    :param Attribute: [REQUIRED]\nThe attribute to reset.\n\nWarning\nYou can only reset the following attributes: kernel | ramdisk | sourceDestCheck . To change an instance attribute, use ModifyInstanceAttribute .\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :return: response = client.reset_instance_attribute(
        Attribute='sourceDestCheck',
        InstanceId='i-1234567890abcdef0',
    )
    
    print(response)
    
    
    """
    pass

def reset_network_interface_attribute(DryRun=None, NetworkInterfaceId=None, SourceDestCheck=None):
    """
    Resets a network interface attribute. You can specify only one attribute at a time.
    See also: AWS API Documentation
    
    
    :example: response = client.reset_network_interface_attribute(
        DryRun=True|False,
        NetworkInterfaceId='string',
        SourceDestCheck='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :type SourceDestCheck: string
    :param SourceDestCheck: The source/destination checking attribute. Resets the value to true .

    """
    pass

def reset_snapshot_attribute(Attribute=None, SnapshotId=None, DryRun=None):
    """
    Resets permission settings for the specified snapshot.
    For more information about modifying snapshot permissions, see Sharing Snapshots in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example resets the create volume permissions for snapshot snap-1234567890abcdef0. If the command succeeds, no output is returned.
    Expected Output:
    
    :example: response = client.reset_snapshot_attribute(
        Attribute='productCodes'|'createVolumePermission',
        SnapshotId='string',
        DryRun=True|False
    )
    
    
    :type Attribute: string
    :param Attribute: [REQUIRED]\nThe attribute to reset. Currently, only the attribute for permission to create volumes can be reset.\n

    :type SnapshotId: string
    :param SnapshotId: [REQUIRED]\nThe ID of the snapshot.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :return: response = client.reset_snapshot_attribute(
        Attribute='createVolumePermission',
        SnapshotId='snap-1234567890abcdef0',
    )
    
    print(response)
    
    
    """
    pass

def restore_address_to_classic(DryRun=None, PublicIp=None):
    """
    Restores an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform. You cannot move an Elastic IP address that was originally allocated for use in EC2-VPC. The Elastic IP address must not be associated with an instance or network interface.
    See also: AWS API Documentation
    
    Examples
    This example restores the specified Elastic IP address to the EC2-Classic platform.
    Expected Output:
    
    :example: response = client.restore_address_to_classic(
        DryRun=True|False,
        PublicIp='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type PublicIp: string
    :param PublicIp: [REQUIRED]\nThe Elastic IP address.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'PublicIp': 'string',
    'Status': 'MoveInProgress'|'InVpc'|'InClassic'
}


Response Structure

(dict) --

PublicIp (string) --
The Elastic IP address.

Status (string) --
The move status for the IP address.







Examples
This example restores the specified Elastic IP address to the EC2-Classic platform.
response = client.restore_address_to_classic(
    PublicIp='198.51.100.0',
)

print(response)


Expected Output:
{
    'PublicIp': '198.51.100.0',
    'Status': 'MoveInProgress',
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'PublicIp': 'string',
        'Status': 'MoveInProgress'|'InVpc'|'InClassic'
    }
    
    
    """
    pass

def revoke_client_vpn_ingress(ClientVpnEndpointId=None, TargetNetworkCidr=None, AccessGroupId=None, RevokeAllGroups=None, DryRun=None):
    """
    Removes an ingress authorization rule from a Client VPN endpoint.
    See also: AWS API Documentation
    
    
    :example: response = client.revoke_client_vpn_ingress(
        ClientVpnEndpointId='string',
        TargetNetworkCidr='string',
        AccessGroupId='string',
        RevokeAllGroups=True|False,
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint with which the authorization rule is associated.\n

    :type TargetNetworkCidr: string
    :param TargetNetworkCidr: [REQUIRED]\nThe IPv4 address range, in CIDR notation, of the network for which access is being removed.\n

    :type AccessGroupId: string
    :param AccessGroupId: The ID of the Active Directory group for which to revoke access.

    :type RevokeAllGroups: boolean
    :param RevokeAllGroups: Indicates whether access should be revoked for all clients.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Status': {
        'Code': 'authorizing'|'active'|'failed'|'revoking',
        'Message': 'string'
    }
}


Response Structure

(dict) --

Status (dict) --
The current state of the authorization rule.

Code (string) --
The state of the authorization rule.

Message (string) --
A message about the status of the authorization rule, if applicable.










    :return: {
        'Status': {
            'Code': 'authorizing'|'active'|'failed'|'revoking',
            'Message': 'string'
        }
    }
    
    
    """
    pass

def revoke_security_group_egress(DryRun=None, GroupId=None, IpPermissions=None, CidrIp=None, FromPort=None, IpProtocol=None, ToPort=None, SourceSecurityGroupName=None, SourceSecurityGroupOwnerId=None):
    """
    [VPC only] Removes the specified egress rules from a security group for EC2-VPC. This action doesn\'t apply to security groups for use in EC2-Classic. To remove a rule, the values that you specify (for example, ports) must match the existing rule\'s values exactly.
    Each rule consists of the protocol and the IPv4 or IPv6 CIDR range or source security group. For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not have to specify the description to revoke the rule.
    Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.
    See also: AWS API Documentation
    
    
    :example: response = client.revoke_security_group_egress(
        DryRun=True|False,
        GroupId='string',
        IpPermissions=[
            {
                'FromPort': 123,
                'IpProtocol': 'string',
                'IpRanges': [
                    {
                        'CidrIp': 'string',
                        'Description': 'string'
                    },
                ],
                'Ipv6Ranges': [
                    {
                        'CidrIpv6': 'string',
                        'Description': 'string'
                    },
                ],
                'PrefixListIds': [
                    {
                        'Description': 'string',
                        'PrefixListId': 'string'
                    },
                ],
                'ToPort': 123,
                'UserIdGroupPairs': [
                    {
                        'Description': 'string',
                        'GroupId': 'string',
                        'GroupName': 'string',
                        'PeeringStatus': 'string',
                        'UserId': 'string',
                        'VpcId': 'string',
                        'VpcPeeringConnectionId': 'string'
                    },
                ]
            },
        ],
        CidrIp='string',
        FromPort=123,
        IpProtocol='string',
        ToPort=123,
        SourceSecurityGroupName='string',
        SourceSecurityGroupOwnerId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type GroupId: string
    :param GroupId: [REQUIRED]\nThe ID of the security group.\n

    :type IpPermissions: list
    :param IpPermissions: The sets of IP permissions. You can\'t specify a destination security group and a CIDR IP address range in the same set of permissions.\n\n(dict) --Describes a set of permissions for a security group rule.\n\nFromPort (integer) --The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nIpProtocol (string) --The IP protocol name (tcp , udp , icmp , icmpv6 ) or number (see Protocol Numbers ).\n[VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp , udp , icmp , or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp , udp , and icmp , you must specify a port range. For icmpv6 , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n\nIpRanges (list) --The IPv4 ranges.\n\n(dict) --Describes an IPv4 range.\n\nCidrIp (string) --The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv4 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nIpv6Ranges (list) --[VPC only] The IPv6 ranges.\n\n(dict) --[EC2-VPC only] Describes an IPv6 range.\n\nCidrIpv6 (string) --The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv6 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nPrefixListIds (list) --[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group.\n\n(dict) --Describes a prefix list ID.\n\nDescription (string) --A description for the security group rule that references this prefix list ID.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nPrefixListId (string) --The ID of the prefix.\n\n\n\n\n\nToPort (integer) --The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUserIdGroupPairs (list) --The security group and AWS account ID pairs.\n\n(dict) --Describes a security group and AWS account ID pair.\n\nDescription (string) --A description for the security group rule that references this user ID group pair.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nGroupId (string) --The ID of the security group.\n\nGroupName (string) --The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.\nFor a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.\n\nPeeringStatus (string) --The status of a VPC peering connection, if applicable.\n\nUserId (string) --The ID of an AWS account.\nFor a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.\n[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.\n\nVpcId (string) --The ID of the VPC for the referenced security group, if applicable.\n\nVpcPeeringConnectionId (string) --The ID of the VPC peering connection, if applicable.\n\n\n\n\n\n\n\n\n

    :type CidrIp: string
    :param CidrIp: Not supported. Use a set of IP permissions to specify the CIDR.

    :type FromPort: integer
    :param FromPort: Not supported. Use a set of IP permissions to specify the port.

    :type IpProtocol: string
    :param IpProtocol: Not supported. Use a set of IP permissions to specify the protocol name or number.

    :type ToPort: integer
    :param ToPort: Not supported. Use a set of IP permissions to specify the port.

    :type SourceSecurityGroupName: string
    :param SourceSecurityGroupName: Not supported. Use a set of IP permissions to specify a destination security group.

    :type SourceSecurityGroupOwnerId: string
    :param SourceSecurityGroupOwnerId: Not supported. Use a set of IP permissions to specify a destination security group.

    """
    pass

def revoke_security_group_ingress(CidrIp=None, FromPort=None, GroupId=None, GroupName=None, IpPermissions=None, IpProtocol=None, SourceSecurityGroupName=None, SourceSecurityGroupOwnerId=None, ToPort=None, DryRun=None):
    """
    Removes the specified ingress rules from a security group. To remove a rule, the values that you specify (for example, ports) must match the existing rule\'s values exactly.
    Each rule consists of the protocol and the CIDR range or source security group. For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not have to specify the description to revoke the rule.
    Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.
    See also: AWS API Documentation
    
    
    :example: response = client.revoke_security_group_ingress(
        CidrIp='string',
        FromPort=123,
        GroupId='string',
        GroupName='string',
        IpPermissions=[
            {
                'FromPort': 123,
                'IpProtocol': 'string',
                'IpRanges': [
                    {
                        'CidrIp': 'string',
                        'Description': 'string'
                    },
                ],
                'Ipv6Ranges': [
                    {
                        'CidrIpv6': 'string',
                        'Description': 'string'
                    },
                ],
                'PrefixListIds': [
                    {
                        'Description': 'string',
                        'PrefixListId': 'string'
                    },
                ],
                'ToPort': 123,
                'UserIdGroupPairs': [
                    {
                        'Description': 'string',
                        'GroupId': 'string',
                        'GroupName': 'string',
                        'PeeringStatus': 'string',
                        'UserId': 'string',
                        'VpcId': 'string',
                        'VpcPeeringConnectionId': 'string'
                    },
                ]
            },
        ],
        IpProtocol='string',
        SourceSecurityGroupName='string',
        SourceSecurityGroupOwnerId='string',
        ToPort=123,
        DryRun=True|False
    )
    
    
    :type CidrIp: string
    :param CidrIp: The CIDR IP address range. You can\'t specify this parameter when specifying a source security group.

    :type FromPort: integer
    :param FromPort: The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use -1 to specify all ICMP types.

    :type GroupId: string
    :param GroupId: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.

    :type GroupName: string
    :param GroupName: [EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.

    :type IpPermissions: list
    :param IpPermissions: The sets of IP permissions. You can\'t specify a source security group and a CIDR IP address range in the same set of permissions.\n\n(dict) --Describes a set of permissions for a security group rule.\n\nFromPort (integer) --The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nIpProtocol (string) --The IP protocol name (tcp , udp , icmp , icmpv6 ) or number (see Protocol Numbers ).\n[VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp , udp , icmp , or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp , udp , and icmp , you must specify a port range. For icmpv6 , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n\nIpRanges (list) --The IPv4 ranges.\n\n(dict) --Describes an IPv4 range.\n\nCidrIp (string) --The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv4 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nIpv6Ranges (list) --[VPC only] The IPv6 ranges.\n\n(dict) --[EC2-VPC only] Describes an IPv6 range.\n\nCidrIpv6 (string) --The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv6 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nPrefixListIds (list) --[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group.\n\n(dict) --Describes a prefix list ID.\n\nDescription (string) --A description for the security group rule that references this prefix list ID.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nPrefixListId (string) --The ID of the prefix.\n\n\n\n\n\nToPort (integer) --The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUserIdGroupPairs (list) --The security group and AWS account ID pairs.\n\n(dict) --Describes a security group and AWS account ID pair.\n\nDescription (string) --A description for the security group rule that references this user ID group pair.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nGroupId (string) --The ID of the security group.\n\nGroupName (string) --The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.\nFor a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.\n\nPeeringStatus (string) --The status of a VPC peering connection, if applicable.\n\nUserId (string) --The ID of an AWS account.\nFor a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.\n[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.\n\nVpcId (string) --The ID of the VPC for the referenced security group, if applicable.\n\nVpcPeeringConnectionId (string) --The ID of the VPC peering connection, if applicable.\n\n\n\n\n\n\n\n\n

    :type IpProtocol: string
    :param IpProtocol: The IP protocol name (tcp , udp , icmp ) or number (see Protocol Numbers ). Use -1 to specify all.

    :type SourceSecurityGroupName: string
    :param SourceSecurityGroupName: [EC2-Classic, default VPC] The name of the source security group. You can\'t specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.

    :type SourceSecurityGroupOwnerId: string
    :param SourceSecurityGroupOwnerId: [EC2-Classic] The AWS account ID of the source security group, if the source security group is in a different account. You can\'t specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.

    :type ToPort: integer
    :param ToPort: The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use -1 to specify all ICMP codes for the ICMP type.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    """
    pass

def run_instances(BlockDeviceMappings=None, ImageId=None, InstanceType=None, Ipv6AddressCount=None, Ipv6Addresses=None, KernelId=None, KeyName=None, MaxCount=None, MinCount=None, Monitoring=None, Placement=None, RamdiskId=None, SecurityGroupIds=None, SecurityGroups=None, SubnetId=None, UserData=None, AdditionalInfo=None, ClientToken=None, DisableApiTermination=None, DryRun=None, EbsOptimized=None, IamInstanceProfile=None, InstanceInitiatedShutdownBehavior=None, NetworkInterfaces=None, PrivateIpAddress=None, ElasticGpuSpecification=None, ElasticInferenceAccelerators=None, TagSpecifications=None, LaunchTemplate=None, InstanceMarketOptions=None, CreditSpecification=None, CpuOptions=None, CapacityReservationSpecification=None, HibernationOptions=None, LicenseSpecifications=None, MetadataOptions=None):
    """
    Launches the specified number of instances using an AMI for which you have permissions.
    You can specify a number of options, or leave the default options. The following rules apply:
    You can create a launch template , which is a resource that contains the parameters to launch an instance. When you launch an instance using  RunInstances , you can specify the launch template instead of specifying the launch parameters.
    To ensure faster instance launches, break up large requests into smaller batches. For example, create five separate launch requests for 100 instances each instead of one launch request for 500 instances.
    An instance is ready for you to use when it\'s in the running state. You can check the state of your instance using  DescribeInstances . You can tag instances and EBS volumes during launch, after launch, or both. For more information, see  CreateTags and Tagging Your Amazon EC2 Resources .
    Linux instances have access to the public key of the key pair at boot. You can use this key to provide secure access to the instance. Amazon EC2 public images use this feature to provide secure access without passwords. For more information, see Key Pairs in the Amazon Elastic Compute Cloud User Guide .
    For troubleshooting, see What To Do If An Instance Immediately Terminates , and Troubleshooting Connecting to Your Instance in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example launches an instance using the specified AMI, instance type, security group, subnet, block device mapping, and tags.
    Expected Output:
    
    :example: response = client.run_instances(
        BlockDeviceMappings=[
            {
                'DeviceName': 'string',
                'VirtualName': 'string',
                'Ebs': {
                    'DeleteOnTermination': True|False,
                    'Iops': 123,
                    'SnapshotId': 'string',
                    'VolumeSize': 123,
                    'VolumeType': 'standard'|'io1'|'gp2'|'sc1'|'st1',
                    'KmsKeyId': 'string',
                    'Encrypted': True|False
                },
                'NoDevice': 'string'
            },
        ],
        ImageId='string',
        InstanceType='t1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
        Ipv6AddressCount=123,
        Ipv6Addresses=[
            {
                'Ipv6Address': 'string'
            },
        ],
        KernelId='string',
        KeyName='string',
        MaxCount=123,
        MinCount=123,
        Monitoring={
            'Enabled': True|False
        },
        Placement={
            'AvailabilityZone': 'string',
            'Affinity': 'string',
            'GroupName': 'string',
            'PartitionNumber': 123,
            'HostId': 'string',
            'Tenancy': 'default'|'dedicated'|'host',
            'SpreadDomain': 'string',
            'HostResourceGroupArn': 'string'
        },
        RamdiskId='string',
        SecurityGroupIds=[
            'string',
        ],
        SecurityGroups=[
            'string',
        ],
        SubnetId='string',
        UserData='string',
        AdditionalInfo='string',
        ClientToken='string',
        DisableApiTermination=True|False,
        DryRun=True|False,
        EbsOptimized=True|False,
        IamInstanceProfile={
            'Arn': 'string',
            'Name': 'string'
        },
        InstanceInitiatedShutdownBehavior='stop'|'terminate',
        NetworkInterfaces=[
            {
                'AssociatePublicIpAddress': True|False,
                'DeleteOnTermination': True|False,
                'Description': 'string',
                'DeviceIndex': 123,
                'Groups': [
                    'string',
                ],
                'Ipv6AddressCount': 123,
                'Ipv6Addresses': [
                    {
                        'Ipv6Address': 'string'
                    },
                ],
                'NetworkInterfaceId': 'string',
                'PrivateIpAddress': 'string',
                'PrivateIpAddresses': [
                    {
                        'Primary': True|False,
                        'PrivateIpAddress': 'string'
                    },
                ],
                'SecondaryPrivateIpAddressCount': 123,
                'SubnetId': 'string',
                'InterfaceType': 'string'
            },
        ],
        PrivateIpAddress='string',
        ElasticGpuSpecification=[
            {
                'Type': 'string'
            },
        ],
        ElasticInferenceAccelerators=[
            {
                'Type': 'string',
                'Count': 123
            },
        ],
        TagSpecifications=[
            {
                'ResourceType': 'client-vpn-endpoint'|'customer-gateway'|'dedicated-host'|'dhcp-options'|'elastic-ip'|'fleet'|'fpga-image'|'host-reservation'|'image'|'instance'|'internet-gateway'|'key-pair'|'launch-template'|'natgateway'|'network-acl'|'network-interface'|'placement-group'|'reserved-instances'|'route-table'|'security-group'|'snapshot'|'spot-fleet-request'|'spot-instances-request'|'subnet'|'traffic-mirror-filter'|'traffic-mirror-session'|'traffic-mirror-target'|'transit-gateway'|'transit-gateway-attachment'|'transit-gateway-multicast-domain'|'transit-gateway-route-table'|'volume'|'vpc'|'vpc-peering-connection'|'vpn-connection'|'vpn-gateway'|'vpc-flow-log',
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ]
            },
        ],
        LaunchTemplate={
            'LaunchTemplateId': 'string',
            'LaunchTemplateName': 'string',
            'Version': 'string'
        },
        InstanceMarketOptions={
            'MarketType': 'spot',
            'SpotOptions': {
                'MaxPrice': 'string',
                'SpotInstanceType': 'one-time'|'persistent',
                'BlockDurationMinutes': 123,
                'ValidUntil': datetime(2015, 1, 1),
                'InstanceInterruptionBehavior': 'hibernate'|'stop'|'terminate'
            }
        },
        CreditSpecification={
            'CpuCredits': 'string'
        },
        CpuOptions={
            'CoreCount': 123,
            'ThreadsPerCore': 123
        },
        CapacityReservationSpecification={
            'CapacityReservationPreference': 'open'|'none',
            'CapacityReservationTarget': {
                'CapacityReservationId': 'string'
            }
        },
        HibernationOptions={
            'Configured': True|False
        },
        LicenseSpecifications=[
            {
                'LicenseConfigurationArn': 'string'
            },
        ],
        MetadataOptions={
            'HttpTokens': 'optional'|'required',
            'HttpPutResponseHopLimit': 123,
            'HttpEndpoint': 'disabled'|'enabled'
        }
    )
    
    
    :type BlockDeviceMappings: list
    :param BlockDeviceMappings: The block device mapping entries.\n\n(dict) --Describes a block device mapping.\n\nDeviceName (string) --The device name (for example, /dev/sdh or xvdh ).\n\nVirtualName (string) --The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\nNVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.\nConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\n\nEbs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.\n\nDeleteOnTermination (boolean) --Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.\n\nIops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nConstraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nCondition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.\n\nSnapshotId (string) --The ID of the snapshot.\n\nVolumeSize (integer) --The size of the volume, in GiB.\nDefault: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.\nConstraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.\n\nVolumeType (string) --The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.\nDefault: gp2\n\nKmsKeyId (string) --Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\nThis parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .\n\nEncrypted (boolean) --Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .\nIn no case can you remove encryption from an encrypted volume.\nEncrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .\nThis parameter is not returned by .\n\n\n\nNoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.\n\n\n\n\n

    :type ImageId: string
    :param ImageId: The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.

    :type InstanceType: string
    :param InstanceType: The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .\nDefault: m1.small\n

    :type Ipv6AddressCount: integer
    :param Ipv6AddressCount: [EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you\'ve specified a minimum number of instances to launch.\nYou cannot specify this option and the network interfaces option in the same request.\n

    :type Ipv6Addresses: list
    :param Ipv6Addresses: [EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you\'ve specified a minimum number of instances to launch.\nYou cannot specify this option and the network interfaces option in the same request.\n\n(dict) --Describes an IPv6 address.\n\nIpv6Address (string) --The IPv6 address.\n\n\n\n\n

    :type KernelId: string
    :param KernelId: The ID of the kernel.\n\nWarning\nWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB in the Amazon Elastic Compute Cloud User Guide .\n\n

    :type KeyName: string
    :param KeyName: The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair .\n\nWarning\nIf you do not specify a key pair, you can\'t connect to the instance unless you choose an AMI that is configured to allow users another way to log in.\n\n

    :type MaxCount: integer
    :param MaxCount: [REQUIRED]\nThe maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above MinCount .\nConstraints: Between 1 and the maximum number you\'re allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 in the Amazon EC2 FAQ.\n

    :type MinCount: integer
    :param MinCount: [REQUIRED]\nThe minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.\nConstraints: Between 1 and the maximum number you\'re allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 in the Amazon EC2 General FAQ.\n

    :type Monitoring: dict
    :param Monitoring: Specifies whether detailed monitoring is enabled for the instance.\n\nEnabled (boolean) -- [REQUIRED]Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.\n\n\n

    :type Placement: dict
    :param Placement: The placement for the instance.\n\nAvailabilityZone (string) --The Availability Zone of the instance.\nIf not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.\nThis parameter is not supported by CreateFleet .\n\nAffinity (string) --The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance command.\nThis parameter is not supported by CreateFleet .\n\nGroupName (string) --The name of the placement group the instance is in.\n\nPartitionNumber (integer) --The number of the partition the instance is in. Valid only if the placement group strategy is set to partition .\nThis parameter is not supported by CreateFleet .\n\nHostId (string) --The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance command.\nThis parameter is not supported by CreateFleet .\n\nTenancy (string) --The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance command.\nThis parameter is not supported by CreateFleet .\n\nSpreadDomain (string) --Reserved for future use.\nThis parameter is not supported by CreateFleet .\n\nHostResourceGroupArn (string) --The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host .\nThis parameter is not supported by CreateFleet .\n\n\n

    :type RamdiskId: string
    :param RamdiskId: The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.\n\nWarning\nWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB in the Amazon Elastic Compute Cloud User Guide .\n\n

    :type SecurityGroupIds: list
    :param SecurityGroupIds: The IDs of the security groups. You can create a security group using CreateSecurityGroup .\nIf you specify a network interface, you must specify any security groups as part of the network interface.\n\n(string) --\n\n

    :type SecurityGroups: list
    :param SecurityGroups: [EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.\nIf you specify a network interface, you must specify any security groups as part of the network interface.\nDefault: Amazon EC2 uses the default security group.\n\n(string) --\n\n

    :type SubnetId: string
    :param SubnetId: [EC2-VPC] The ID of the subnet to launch the instance into.\nIf you specify a network interface, you must specify any subnets as part of the network interface.\n

    :type UserData: string
    :param UserData: The user data to make available to the instance. For more information, see Running Commands on Your Linux Instance at Launch (Linux) and Adding User Data (Windows). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.\n\nThis value will be base64 encoded automatically. Do not base64 encode this value prior to performing the operation.\n

    :type AdditionalInfo: string
    :param AdditionalInfo: Reserved.

    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.\nFor more information, see Ensuring Idempotency .\nConstraints: Maximum 64 ASCII characters\nThis field is autopopulated if not provided.\n

    :type DisableApiTermination: boolean
    :param DisableApiTermination: If you set this parameter to true , you can\'t terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute . Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate , you can terminate the instance by running the shutdown command from the instance.\nDefault: false\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type EbsOptimized: boolean
    :param EbsOptimized: Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\nDefault: false\n

    :type IamInstanceProfile: dict
    :param IamInstanceProfile: The IAM instance profile.\n\nArn (string) --The Amazon Resource Name (ARN) of the instance profile.\n\nName (string) --The name of the instance profile.\n\n\n

    :type InstanceInitiatedShutdownBehavior: string
    :param InstanceInitiatedShutdownBehavior: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\nDefault: stop\n

    :type NetworkInterfaces: list
    :param NetworkInterfaces: The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.\n\n(dict) --Describes a network interface.\n\nAssociatePublicIpAddress (boolean) --Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true .\n\nDeleteOnTermination (boolean) --If set to true , the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.\n\nDescription (string) --The description of the network interface. Applies only if creating a network interface when launching an instance.\n\nDeviceIndex (integer) --The position of the network interface in the attachment order. A primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.\n\nGroups (list) --The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.\n\n(string) --\n\n\nIpv6AddressCount (integer) --A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you\'ve specified a minimum number of instances to launch.\n\nIpv6Addresses (list) --One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you\'ve specified a minimum number of instances to launch.\n\n(dict) --Describes an IPv6 address.\n\nIpv6Address (string) --The IPv6 address.\n\n\n\n\n\nNetworkInterfaceId (string) --The ID of the network interface.\nIf you are creating a Spot Fleet, omit this parameter because you can\xe2\x80\x99t specify a network interface ID in a launch specification.\n\nPrivateIpAddress (string) --The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.\n\nPrivateIpAddresses (list) --One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.\n\n(dict) --Describes a secondary private IPv4 address for a network interface.\n\nPrimary (boolean) --Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n\nPrivateIpAddress (string) --The private IPv4 addresses.\n\n\n\n\n\nSecondaryPrivateIpAddressCount (integer) --The number of secondary private IPv4 addresses. You can\'t specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.\n\nSubnetId (string) --The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.\n\nInterfaceType (string) --The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .\nIf you are not creating an EFA, specify interface or omit this parameter.\nValid values: interface | efa\n\n\n\n\n

    :type PrivateIpAddress: string
    :param PrivateIpAddress: [EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.\nOnly one private IP address can be designated as primary. You can\'t specify this option if you\'ve specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you\'re launching more than one instance in the request.\nYou cannot specify this option and the network interfaces option in the same request.\n

    :type ElasticGpuSpecification: list
    :param ElasticGpuSpecification: An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs in the Amazon Elastic Compute Cloud User Guide .\n\n(dict) --A specification for an Elastic Graphics accelerator.\n\nType (string) -- [REQUIRED]The type of Elastic Graphics accelerator. For more information about the values to specify for Type , see Elastic Graphics Basics , specifically the Elastic Graphics accelerator column, in the Amazon Elastic Compute Cloud User Guide for Windows Instances .\n\n\n\n\n

    :type ElasticInferenceAccelerators: list
    :param ElasticInferenceAccelerators: An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.\nYou cannot specify accelerators from different generations in the same request.\n\n(dict) --Describes an elastic inference accelerator.\n\nType (string) -- [REQUIRED]The type of elastic inference accelerator. The possible values are eia1.medium , eia1.large , and eia1.xlarge .\n\nCount (integer) --The number of elastic inference accelerators to attach to the instance.\nDefault: 1\n\n\n\n\n

    :type TagSpecifications: list
    :param TagSpecifications: The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .\n\n(dict) --The tags to apply to a resource when the resource is being created.\n\nResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .\nTo tag a resource after it has been created, see CreateTags .\n\nTags (list) --The tags to apply to the resource.\n\n(dict) --Describes a tag.\n\nKey (string) --The key of the tag.\nConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .\n\nValue (string) --The value of the tag.\nConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n\n\n\n\n\n\n\n\n

    :type LaunchTemplate: dict
    :param LaunchTemplate: The launch template to use to launch the instances. Any parameters that you specify in RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.\n\nLaunchTemplateId (string) --The ID of the launch template.\n\nLaunchTemplateName (string) --The name of the launch template.\n\nVersion (string) --The version number of the launch template.\nDefault: The default version for the launch template.\n\n\n

    :type InstanceMarketOptions: dict
    :param InstanceMarketOptions: The market (purchasing) option for the instances.\nFor RunInstances , persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop .\n\nMarketType (string) --The market type.\n\nSpotOptions (dict) --The options for Spot Instances.\n\nMaxPrice (string) --The maximum hourly price you\'re willing to pay for the Spot Instances. The default is the On-Demand price.\n\nSpotInstanceType (string) --The Spot Instance request type. For RunInstances , persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop .\n\nBlockDurationMinutes (integer) --The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).\n\nValidUntil (datetime) --The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date.\n\nInstanceInterruptionBehavior (string) --The behavior when a Spot Instance is interrupted. The default is terminate .\n\n\n\n\n

    :type CreditSpecification: dict
    :param CreditSpecification: The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited . To change this attribute after launch, use ModifyInstanceCreditSpecification . For more information, see Burstable Performance Instances in the Amazon Elastic Compute Cloud User Guide .\nDefault: standard (T2 instances) or unlimited (T3/T3a instances)\n\nCpuCredits (string) -- [REQUIRED]The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited .\n\n\n

    :type CpuOptions: dict
    :param CpuOptions: The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide .\n\nCoreCount (integer) --The number of CPU cores for the instance.\n\nThreadsPerCore (integer) --The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1 . Otherwise, specify the default value of 2 .\n\n\n

    :type CapacityReservationSpecification: dict
    :param CapacityReservationSpecification: Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance\'s Capacity Reservation preference defaults to open , which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\n\nCapacityReservationPreference (string) --Indicates the instance\'s Capacity Reservation preferences. Possible preferences include:\n\nopen - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).\nnone - The instance avoids running in a Capacity Reservation even if one is available. The instance runs as an On-Demand Instance.\n\n\nCapacityReservationTarget (dict) --Information about the target Capacity Reservation.\n\nCapacityReservationId (string) --The ID of the Capacity Reservation.\n\n\n\n\n

    :type HibernationOptions: dict
    :param HibernationOptions: Indicates whether an instance is enabled for hibernation. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide .\n\nConfigured (boolean) --If you set this parameter to true , your instance is enabled for hibernation.\nDefault: false\n\n\n

    :type LicenseSpecifications: list
    :param LicenseSpecifications: The license configurations.\n\n(dict) --Describes a license configuration.\n\nLicenseConfigurationArn (string) --The Amazon Resource Name (ARN) of the license configuration.\n\n\n\n\n

    :type MetadataOptions: dict
    :param MetadataOptions: The metadata options for the instance. For more information, see Instance Metadata and User Data .\n\nHttpTokens (string) --The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .\nIf the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.\nIf the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.\n\nHttpPutResponseHopLimit (integer) --The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.\nDefault: 1\nPossible values: Integers from 1 to 64\n\nHttpEndpoint (string) --This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .\n\nNote\nIf you specify a value of disabled , you will not be able to access your instance metadata.\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Groups': [
        {
            'GroupName': 'string',
            'GroupId': 'string'
        },
    ],
    'Instances': [
        {
            'AmiLaunchIndex': 123,
            'ImageId': 'string',
            'InstanceId': 'string',
            'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
            'KernelId': 'string',
            'KeyName': 'string',
            'LaunchTime': datetime(2015, 1, 1),
            'Monitoring': {
                'State': 'disabled'|'disabling'|'enabled'|'pending'
            },
            'Placement': {
                'AvailabilityZone': 'string',
                'Affinity': 'string',
                'GroupName': 'string',
                'PartitionNumber': 123,
                'HostId': 'string',
                'Tenancy': 'default'|'dedicated'|'host',
                'SpreadDomain': 'string',
                'HostResourceGroupArn': 'string'
            },
            'Platform': 'Windows',
            'PrivateDnsName': 'string',
            'PrivateIpAddress': 'string',
            'ProductCodes': [
                {
                    'ProductCodeId': 'string',
                    'ProductCodeType': 'devpay'|'marketplace'
                },
            ],
            'PublicDnsName': 'string',
            'PublicIpAddress': 'string',
            'RamdiskId': 'string',
            'State': {
                'Code': 123,
                'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
            },
            'StateTransitionReason': 'string',
            'SubnetId': 'string',
            'VpcId': 'string',
            'Architecture': 'i386'|'x86_64'|'arm64',
            'BlockDeviceMappings': [
                {
                    'DeviceName': 'string',
                    'Ebs': {
                        'AttachTime': datetime(2015, 1, 1),
                        'DeleteOnTermination': True|False,
                        'Status': 'attaching'|'attached'|'detaching'|'detached',
                        'VolumeId': 'string'
                    }
                },
            ],
            'ClientToken': 'string',
            'EbsOptimized': True|False,
            'EnaSupport': True|False,
            'Hypervisor': 'ovm'|'xen',
            'IamInstanceProfile': {
                'Arn': 'string',
                'Id': 'string'
            },
            'InstanceLifecycle': 'spot'|'scheduled',
            'ElasticGpuAssociations': [
                {
                    'ElasticGpuId': 'string',
                    'ElasticGpuAssociationId': 'string',
                    'ElasticGpuAssociationState': 'string',
                    'ElasticGpuAssociationTime': 'string'
                },
            ],
            'ElasticInferenceAcceleratorAssociations': [
                {
                    'ElasticInferenceAcceleratorArn': 'string',
                    'ElasticInferenceAcceleratorAssociationId': 'string',
                    'ElasticInferenceAcceleratorAssociationState': 'string',
                    'ElasticInferenceAcceleratorAssociationTime': datetime(2015, 1, 1)
                },
            ],
            'NetworkInterfaces': [
                {
                    'Association': {
                        'IpOwnerId': 'string',
                        'PublicDnsName': 'string',
                        'PublicIp': 'string'
                    },
                    'Attachment': {
                        'AttachTime': datetime(2015, 1, 1),
                        'AttachmentId': 'string',
                        'DeleteOnTermination': True|False,
                        'DeviceIndex': 123,
                        'Status': 'attaching'|'attached'|'detaching'|'detached'
                    },
                    'Description': 'string',
                    'Groups': [
                        {
                            'GroupName': 'string',
                            'GroupId': 'string'
                        },
                    ],
                    'Ipv6Addresses': [
                        {
                            'Ipv6Address': 'string'
                        },
                    ],
                    'MacAddress': 'string',
                    'NetworkInterfaceId': 'string',
                    'OwnerId': 'string',
                    'PrivateDnsName': 'string',
                    'PrivateIpAddress': 'string',
                    'PrivateIpAddresses': [
                        {
                            'Association': {
                                'IpOwnerId': 'string',
                                'PublicDnsName': 'string',
                                'PublicIp': 'string'
                            },
                            'Primary': True|False,
                            'PrivateDnsName': 'string',
                            'PrivateIpAddress': 'string'
                        },
                    ],
                    'SourceDestCheck': True|False,
                    'Status': 'available'|'associated'|'attaching'|'in-use'|'detaching',
                    'SubnetId': 'string',
                    'VpcId': 'string',
                    'InterfaceType': 'string'
                },
            ],
            'OutpostArn': 'string',
            'RootDeviceName': 'string',
            'RootDeviceType': 'ebs'|'instance-store',
            'SecurityGroups': [
                {
                    'GroupName': 'string',
                    'GroupId': 'string'
                },
            ],
            'SourceDestCheck': True|False,
            'SpotInstanceRequestId': 'string',
            'SriovNetSupport': 'string',
            'StateReason': {
                'Code': 'string',
                'Message': 'string'
            },
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ],
            'VirtualizationType': 'hvm'|'paravirtual',
            'CpuOptions': {
                'CoreCount': 123,
                'ThreadsPerCore': 123
            },
            'CapacityReservationId': 'string',
            'CapacityReservationSpecification': {
                'CapacityReservationPreference': 'open'|'none',
                'CapacityReservationTarget': {
                    'CapacityReservationId': 'string'
                }
            },
            'HibernationOptions': {
                'Configured': True|False
            },
            'Licenses': [
                {
                    'LicenseConfigurationArn': 'string'
                },
            ],
            'MetadataOptions': {
                'State': 'pending'|'applied',
                'HttpTokens': 'optional'|'required',
                'HttpPutResponseHopLimit': 123,
                'HttpEndpoint': 'disabled'|'enabled'
            }
        },
    ],
    'OwnerId': 'string',
    'RequesterId': 'string',
    'ReservationId': 'string'
}


Response Structure

(dict) --
Describes a reservation.

Groups (list) --
[EC2-Classic only] The security groups.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





Instances (list) --
The instances.

(dict) --
Describes an instance.

AmiLaunchIndex (integer) --
The AMI launch index, which can be used to find this instance in the launch group.

ImageId (string) --
The ID of the AMI used to launch the instance.

InstanceId (string) --
The ID of the instance.

InstanceType (string) --
The instance type.

KernelId (string) --
The kernel associated with this instance, if applicable.

KeyName (string) --
The name of the key pair, if this instance was launched with an associated key pair.

LaunchTime (datetime) --
The time the instance was launched.

Monitoring (dict) --
The monitoring for the instance.

State (string) --
Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.



Placement (dict) --
The location where the instance launched, if applicable.

AvailabilityZone (string) --
The Availability Zone of the instance.
If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.
This parameter is not supported by CreateFleet .

Affinity (string) --
The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance command.
This parameter is not supported by CreateFleet .

GroupName (string) --
The name of the placement group the instance is in.

PartitionNumber (integer) --
The number of the partition the instance is in. Valid only if the placement group strategy is set to partition .
This parameter is not supported by CreateFleet .

HostId (string) --
The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance command.
This parameter is not supported by CreateFleet .

Tenancy (string) --
The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance command.
This parameter is not supported by CreateFleet .

SpreadDomain (string) --
Reserved for future use.
This parameter is not supported by CreateFleet .

HostResourceGroupArn (string) --
The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host .
This parameter is not supported by CreateFleet .



Platform (string) --
The value is Windows for Windows instances; otherwise blank.

PrivateDnsName (string) --
(IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the running state.
[EC2-VPC] The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames if you\'ve enabled DNS resolution and DNS hostnames in your VPC. If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname as appropriate.

PrivateIpAddress (string) --
The private IPv4 address assigned to the instance.

ProductCodes (list) --
The product codes attached to this instance, if applicable.

(dict) --
Describes a product code.

ProductCodeId (string) --
The product code.

ProductCodeType (string) --
The type of product code.





PublicDnsName (string) --
(IPv4 only) The public DNS name assigned to the instance. This name is not available until the instance enters the running state. For EC2-VPC, this name is only available if you\'ve enabled DNS hostnames for your VPC.

PublicIpAddress (string) --
The public IPv4 address assigned to the instance, if applicable.

RamdiskId (string) --
The RAM disk associated with this instance, if applicable.

State (dict) --
The current state of the instance.

Code (integer) --
The state of the instance as a 16-bit unsigned integer.
The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.
The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
The valid values for instance-state-code will all be in the range of the low byte and they are:

0 : pending
16 : running
32 : shutting-down
48 : terminated
64 : stopping
80 : stopped

You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.

Name (string) --
The current state of the instance.



StateTransitionReason (string) --
The reason for the most recent state transition. This might be an empty string.

SubnetId (string) --
[EC2-VPC] The ID of the subnet in which the instance is running.

VpcId (string) --
[EC2-VPC] The ID of the VPC in which the instance is running.

Architecture (string) --
The architecture of the image.

BlockDeviceMappings (list) --
Any block device mapping entries for the instance.

(dict) --
Describes a block device mapping.

DeviceName (string) --
The device name (for example, /dev/sdh or xvdh ).

Ebs (dict) --
Parameters used to automatically set up EBS volumes when the instance is launched.

AttachTime (datetime) --
The time stamp when the attachment initiated.

DeleteOnTermination (boolean) --
Indicates whether the volume is deleted on instance termination.

Status (string) --
The attachment state.

VolumeId (string) --
The ID of the EBS volume.







ClientToken (string) --
The idempotency token you provided when you launched the instance, if applicable.

EbsOptimized (boolean) --
Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.

EnaSupport (boolean) --
Specifies whether enhanced networking with ENA is enabled.

Hypervisor (string) --
The hypervisor type of the instance. The value xen is used for both Xen and Nitro hypervisors.

IamInstanceProfile (dict) --
The IAM instance profile associated with the instance, if applicable.

Arn (string) --
The Amazon Resource Name (ARN) of the instance profile.

Id (string) --
The ID of the instance profile.



InstanceLifecycle (string) --
Indicates whether this is a Spot Instance or a Scheduled Instance.

ElasticGpuAssociations (list) --
The Elastic GPU associated with the instance.

(dict) --
Describes the association between an instance and an Elastic Graphics accelerator.

ElasticGpuId (string) --
The ID of the Elastic Graphics accelerator.

ElasticGpuAssociationId (string) --
The ID of the association.

ElasticGpuAssociationState (string) --
The state of the association between the instance and the Elastic Graphics accelerator.

ElasticGpuAssociationTime (string) --
The time the Elastic Graphics accelerator was associated with the instance.





ElasticInferenceAcceleratorAssociations (list) --
The elastic inference accelerator associated with the instance.

(dict) --
Describes the association between an instance and an elastic inference accelerator.

ElasticInferenceAcceleratorArn (string) --
The Amazon Resource Name (ARN) of the elastic inference accelerator.

ElasticInferenceAcceleratorAssociationId (string) --
The ID of the association.

ElasticInferenceAcceleratorAssociationState (string) --
The state of the elastic inference accelerator.

ElasticInferenceAcceleratorAssociationTime (datetime) --
The time at which the elastic inference accelerator is associated with an instance.





NetworkInterfaces (list) --
[EC2-VPC] The network interfaces for the instance.

(dict) --
Describes a network interface.

Association (dict) --
The association information for an Elastic IPv4 associated with the network interface.

IpOwnerId (string) --
The ID of the owner of the Elastic IP address.

PublicDnsName (string) --
The public DNS name.

PublicIp (string) --
The public IP address or Elastic IP address bound to the network interface.



Attachment (dict) --
The network interface attachment.

AttachTime (datetime) --
The time stamp when the attachment initiated.

AttachmentId (string) --
The ID of the network interface attachment.

DeleteOnTermination (boolean) --
Indicates whether the network interface is deleted when the instance is terminated.

DeviceIndex (integer) --
The index of the device on the instance for the network interface attachment.

Status (string) --
The attachment state.



Description (string) --
The description.

Groups (list) --
One or more security groups.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





Ipv6Addresses (list) --
One or more IPv6 addresses associated with the network interface.

(dict) --
Describes an IPv6 address.

Ipv6Address (string) --
The IPv6 address.





MacAddress (string) --
The MAC address.

NetworkInterfaceId (string) --
The ID of the network interface.

OwnerId (string) --
The ID of the AWS account that created the network interface.

PrivateDnsName (string) --
The private DNS name.

PrivateIpAddress (string) --
The IPv4 address of the network interface within the subnet.

PrivateIpAddresses (list) --
One or more private IPv4 addresses associated with the network interface.

(dict) --
Describes a private IPv4 address.

Association (dict) --
The association information for an Elastic IP address for the network interface.

IpOwnerId (string) --
The ID of the owner of the Elastic IP address.

PublicDnsName (string) --
The public DNS name.

PublicIp (string) --
The public IP address or Elastic IP address bound to the network interface.



Primary (boolean) --
Indicates whether this IPv4 address is the primary private IP address of the network interface.

PrivateDnsName (string) --
The private IPv4 DNS name.

PrivateIpAddress (string) --
The private IPv4 address of the network interface.





SourceDestCheck (boolean) --
Indicates whether to validate network traffic to or from this network interface.

Status (string) --
The status of the network interface.

SubnetId (string) --
The ID of the subnet.

VpcId (string) --
The ID of the VPC.

InterfaceType (string) --
Describes the type of network interface.
Valid values: interface | efa





OutpostArn (string) --
The Amazon Resource Name (ARN) of the Outpost.

RootDeviceName (string) --
The device name of the root device volume (for example, /dev/sda1 ).

RootDeviceType (string) --
The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.

SecurityGroups (list) --
The security groups for the instance.

(dict) --
Describes a security group.

GroupName (string) --
The name of the security group.

GroupId (string) --
The ID of the security group.





SourceDestCheck (boolean) --
Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of true means that checking is enabled, and false means that checking is disabled. The value must be false for the instance to perform NAT. For more information, see NAT Instances in the Amazon Virtual Private Cloud User Guide .

SpotInstanceRequestId (string) --
If the request is a Spot Instance request, the ID of the request.

SriovNetSupport (string) --
Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.

StateReason (dict) --
The reason for the most recent state transition.

Code (string) --
The reason code for the state change.

Message (string) --
The message for the state change.

Server.InsufficientInstanceCapacity : There was insufficient capacity available to satisfy the launch request.
Server.InternalError : An internal error caused the instance to terminate during launch.
Server.ScheduledStop : The instance was stopped due to a scheduled retirement.
Server.SpotInstanceShutdown : The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.
Server.SpotInstanceTermination : The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.
Client.InstanceInitiatedShutdown : The instance was shut down using the shutdown -h command from the instance.
Client.InstanceTerminated : The instance was terminated or rebooted during AMI creation.
Client.InternalError : A client error caused the instance to terminate during launch.
Client.InvalidSnapshot.NotFound : The specified snapshot was not found.
Client.UserInitiatedHibernate : Hibernation was initiated on the instance.
Client.UserInitiatedShutdown : The instance was shut down using the Amazon EC2 API.
Client.VolumeLimitExceeded : The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.




Tags (list) --
Any tags assigned to the instance.

(dict) --
Describes a tag.

Key (string) --
The key of the tag.
Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .

Value (string) --
The value of the tag.
Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.





VirtualizationType (string) --
The virtualization type of the instance.

CpuOptions (dict) --
The CPU options for the instance.

CoreCount (integer) --
The number of CPU cores for the instance.

ThreadsPerCore (integer) --
The number of threads per CPU core.



CapacityReservationId (string) --
The ID of the Capacity Reservation.

CapacityReservationSpecification (dict) --
Information about the Capacity Reservation targeting option.

CapacityReservationPreference (string) --
Describes the instance\'s Capacity Reservation preferences. Possible preferences include:

open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.


CapacityReservationTarget (dict) --
Information about the targeted Capacity Reservation.

CapacityReservationId (string) --
The ID of the Capacity Reservation.





HibernationOptions (dict) --
Indicates whether the instance is enabled for hibernation.

Configured (boolean) --
If this parameter is set to true , your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.



Licenses (list) --
The license configurations.

(dict) --
Describes a license configuration.

LicenseConfigurationArn (string) --
The Amazon Resource Name (ARN) of the license configuration.





MetadataOptions (dict) --
The metadata options for the instance.

State (string) --
The state of the metadata option changes.

pending - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.
applied - The metadata options have been successfully applied on the instance.


HttpTokens (string) --
The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .
If the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.
If the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.

HttpPutResponseHopLimit (integer) --
The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
Default: 1
Possible values: Integers from 1 to 64

HttpEndpoint (string) --
This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .

Note
If you specify a value of disabled , you will not be able to access your instance metadata.








OwnerId (string) --
The ID of the AWS account that owns the reservation.

RequesterId (string) --
The ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling).

ReservationId (string) --
The ID of the reservation.







Examples
This example launches an instance using the specified AMI, instance type, security group, subnet, block device mapping, and tags.
response = client.run_instances(
    BlockDeviceMappings=[
        {
            'DeviceName': '/dev/sdh',
            'Ebs': {
                'VolumeSize': 100,
            },
        },
    ],
    ImageId='ami-abc12345',
    InstanceType='t2.micro',
    KeyName='my-key-pair',
    MaxCount=1,
    MinCount=1,
    SecurityGroupIds=[
        'sg-1a2b3c4d',
    ],
    SubnetId='subnet-6e7f829e',
    TagSpecifications=[
        {
            'ResourceType': 'instance',
            'Tags': [
                {
                    'Key': 'Purpose',
                    'Value': 'test',
                },
            ],
        },
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Groups': [
            {
                'GroupName': 'string',
                'GroupId': 'string'
            },
        ],
        'Instances': [
            {
                'AmiLaunchIndex': 123,
                'ImageId': 'string',
                'InstanceId': 'string',
                'InstanceType': 't1.micro'|'t2.nano'|'t2.micro'|'t2.small'|'t2.medium'|'t2.large'|'t2.xlarge'|'t2.2xlarge'|'t3.nano'|'t3.micro'|'t3.small'|'t3.medium'|'t3.large'|'t3.xlarge'|'t3.2xlarge'|'t3a.nano'|'t3a.micro'|'t3a.small'|'t3a.medium'|'t3a.large'|'t3a.xlarge'|'t3a.2xlarge'|'m1.small'|'m1.medium'|'m1.large'|'m1.xlarge'|'m3.medium'|'m3.large'|'m3.xlarge'|'m3.2xlarge'|'m4.large'|'m4.xlarge'|'m4.2xlarge'|'m4.4xlarge'|'m4.10xlarge'|'m4.16xlarge'|'m2.xlarge'|'m2.2xlarge'|'m2.4xlarge'|'cr1.8xlarge'|'r3.large'|'r3.xlarge'|'r3.2xlarge'|'r3.4xlarge'|'r3.8xlarge'|'r4.large'|'r4.xlarge'|'r4.2xlarge'|'r4.4xlarge'|'r4.8xlarge'|'r4.16xlarge'|'r5.large'|'r5.xlarge'|'r5.2xlarge'|'r5.4xlarge'|'r5.8xlarge'|'r5.12xlarge'|'r5.16xlarge'|'r5.24xlarge'|'r5.metal'|'r5a.large'|'r5a.xlarge'|'r5a.2xlarge'|'r5a.4xlarge'|'r5a.8xlarge'|'r5a.12xlarge'|'r5a.16xlarge'|'r5a.24xlarge'|'r5d.large'|'r5d.xlarge'|'r5d.2xlarge'|'r5d.4xlarge'|'r5d.8xlarge'|'r5d.12xlarge'|'r5d.16xlarge'|'r5d.24xlarge'|'r5d.metal'|'r5ad.large'|'r5ad.xlarge'|'r5ad.2xlarge'|'r5ad.4xlarge'|'r5ad.8xlarge'|'r5ad.12xlarge'|'r5ad.16xlarge'|'r5ad.24xlarge'|'x1.16xlarge'|'x1.32xlarge'|'x1e.xlarge'|'x1e.2xlarge'|'x1e.4xlarge'|'x1e.8xlarge'|'x1e.16xlarge'|'x1e.32xlarge'|'i2.xlarge'|'i2.2xlarge'|'i2.4xlarge'|'i2.8xlarge'|'i3.large'|'i3.xlarge'|'i3.2xlarge'|'i3.4xlarge'|'i3.8xlarge'|'i3.16xlarge'|'i3.metal'|'i3en.large'|'i3en.xlarge'|'i3en.2xlarge'|'i3en.3xlarge'|'i3en.6xlarge'|'i3en.12xlarge'|'i3en.24xlarge'|'i3en.metal'|'hi1.4xlarge'|'hs1.8xlarge'|'c1.medium'|'c1.xlarge'|'c3.large'|'c3.xlarge'|'c3.2xlarge'|'c3.4xlarge'|'c3.8xlarge'|'c4.large'|'c4.xlarge'|'c4.2xlarge'|'c4.4xlarge'|'c4.8xlarge'|'c5.large'|'c5.xlarge'|'c5.2xlarge'|'c5.4xlarge'|'c5.9xlarge'|'c5.12xlarge'|'c5.18xlarge'|'c5.24xlarge'|'c5.metal'|'c5d.large'|'c5d.xlarge'|'c5d.2xlarge'|'c5d.4xlarge'|'c5d.9xlarge'|'c5d.12xlarge'|'c5d.18xlarge'|'c5d.24xlarge'|'c5d.metal'|'c5n.large'|'c5n.xlarge'|'c5n.2xlarge'|'c5n.4xlarge'|'c5n.9xlarge'|'c5n.18xlarge'|'cc1.4xlarge'|'cc2.8xlarge'|'g2.2xlarge'|'g2.8xlarge'|'g3.4xlarge'|'g3.8xlarge'|'g3.16xlarge'|'g3s.xlarge'|'g4dn.xlarge'|'g4dn.2xlarge'|'g4dn.4xlarge'|'g4dn.8xlarge'|'g4dn.12xlarge'|'g4dn.16xlarge'|'cg1.4xlarge'|'p2.xlarge'|'p2.8xlarge'|'p2.16xlarge'|'p3.2xlarge'|'p3.8xlarge'|'p3.16xlarge'|'p3dn.24xlarge'|'d2.xlarge'|'d2.2xlarge'|'d2.4xlarge'|'d2.8xlarge'|'f1.2xlarge'|'f1.4xlarge'|'f1.16xlarge'|'m5.large'|'m5.xlarge'|'m5.2xlarge'|'m5.4xlarge'|'m5.8xlarge'|'m5.12xlarge'|'m5.16xlarge'|'m5.24xlarge'|'m5.metal'|'m5a.large'|'m5a.xlarge'|'m5a.2xlarge'|'m5a.4xlarge'|'m5a.8xlarge'|'m5a.12xlarge'|'m5a.16xlarge'|'m5a.24xlarge'|'m5d.large'|'m5d.xlarge'|'m5d.2xlarge'|'m5d.4xlarge'|'m5d.8xlarge'|'m5d.12xlarge'|'m5d.16xlarge'|'m5d.24xlarge'|'m5d.metal'|'m5ad.large'|'m5ad.xlarge'|'m5ad.2xlarge'|'m5ad.4xlarge'|'m5ad.8xlarge'|'m5ad.12xlarge'|'m5ad.16xlarge'|'m5ad.24xlarge'|'h1.2xlarge'|'h1.4xlarge'|'h1.8xlarge'|'h1.16xlarge'|'z1d.large'|'z1d.xlarge'|'z1d.2xlarge'|'z1d.3xlarge'|'z1d.6xlarge'|'z1d.12xlarge'|'z1d.metal'|'u-6tb1.metal'|'u-9tb1.metal'|'u-12tb1.metal'|'u-18tb1.metal'|'u-24tb1.metal'|'a1.medium'|'a1.large'|'a1.xlarge'|'a1.2xlarge'|'a1.4xlarge'|'a1.metal'|'m5dn.large'|'m5dn.xlarge'|'m5dn.2xlarge'|'m5dn.4xlarge'|'m5dn.8xlarge'|'m5dn.12xlarge'|'m5dn.16xlarge'|'m5dn.24xlarge'|'m5n.large'|'m5n.xlarge'|'m5n.2xlarge'|'m5n.4xlarge'|'m5n.8xlarge'|'m5n.12xlarge'|'m5n.16xlarge'|'m5n.24xlarge'|'r5dn.large'|'r5dn.xlarge'|'r5dn.2xlarge'|'r5dn.4xlarge'|'r5dn.8xlarge'|'r5dn.12xlarge'|'r5dn.16xlarge'|'r5dn.24xlarge'|'r5n.large'|'r5n.xlarge'|'r5n.2xlarge'|'r5n.4xlarge'|'r5n.8xlarge'|'r5n.12xlarge'|'r5n.16xlarge'|'r5n.24xlarge'|'inf1.xlarge'|'inf1.2xlarge'|'inf1.6xlarge'|'inf1.24xlarge'|'m6g.metal'|'m6g.medium'|'m6g.large'|'m6g.xlarge'|'m6g.2xlarge'|'m6g.4xlarge'|'m6g.8xlarge'|'m6g.12xlarge'|'m6g.16xlarge',
                'KernelId': 'string',
                'KeyName': 'string',
                'LaunchTime': datetime(2015, 1, 1),
                'Monitoring': {
                    'State': 'disabled'|'disabling'|'enabled'|'pending'
                },
                'Placement': {
                    'AvailabilityZone': 'string',
                    'Affinity': 'string',
                    'GroupName': 'string',
                    'PartitionNumber': 123,
                    'HostId': 'string',
                    'Tenancy': 'default'|'dedicated'|'host',
                    'SpreadDomain': 'string',
                    'HostResourceGroupArn': 'string'
                },
                'Platform': 'Windows',
                'PrivateDnsName': 'string',
                'PrivateIpAddress': 'string',
                'ProductCodes': [
                    {
                        'ProductCodeId': 'string',
                        'ProductCodeType': 'devpay'|'marketplace'
                    },
                ],
                'PublicDnsName': 'string',
                'PublicIpAddress': 'string',
                'RamdiskId': 'string',
                'State': {
                    'Code': 123,
                    'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                },
                'StateTransitionReason': 'string',
                'SubnetId': 'string',
                'VpcId': 'string',
                'Architecture': 'i386'|'x86_64'|'arm64',
                'BlockDeviceMappings': [
                    {
                        'DeviceName': 'string',
                        'Ebs': {
                            'AttachTime': datetime(2015, 1, 1),
                            'DeleteOnTermination': True|False,
                            'Status': 'attaching'|'attached'|'detaching'|'detached',
                            'VolumeId': 'string'
                        }
                    },
                ],
                'ClientToken': 'string',
                'EbsOptimized': True|False,
                'EnaSupport': True|False,
                'Hypervisor': 'ovm'|'xen',
                'IamInstanceProfile': {
                    'Arn': 'string',
                    'Id': 'string'
                },
                'InstanceLifecycle': 'spot'|'scheduled',
                'ElasticGpuAssociations': [
                    {
                        'ElasticGpuId': 'string',
                        'ElasticGpuAssociationId': 'string',
                        'ElasticGpuAssociationState': 'string',
                        'ElasticGpuAssociationTime': 'string'
                    },
                ],
                'ElasticInferenceAcceleratorAssociations': [
                    {
                        'ElasticInferenceAcceleratorArn': 'string',
                        'ElasticInferenceAcceleratorAssociationId': 'string',
                        'ElasticInferenceAcceleratorAssociationState': 'string',
                        'ElasticInferenceAcceleratorAssociationTime': datetime(2015, 1, 1)
                    },
                ],
                'NetworkInterfaces': [
                    {
                        'Association': {
                            'IpOwnerId': 'string',
                            'PublicDnsName': 'string',
                            'PublicIp': 'string'
                        },
                        'Attachment': {
                            'AttachTime': datetime(2015, 1, 1),
                            'AttachmentId': 'string',
                            'DeleteOnTermination': True|False,
                            'DeviceIndex': 123,
                            'Status': 'attaching'|'attached'|'detaching'|'detached'
                        },
                        'Description': 'string',
                        'Groups': [
                            {
                                'GroupName': 'string',
                                'GroupId': 'string'
                            },
                        ],
                        'Ipv6Addresses': [
                            {
                                'Ipv6Address': 'string'
                            },
                        ],
                        'MacAddress': 'string',
                        'NetworkInterfaceId': 'string',
                        'OwnerId': 'string',
                        'PrivateDnsName': 'string',
                        'PrivateIpAddress': 'string',
                        'PrivateIpAddresses': [
                            {
                                'Association': {
                                    'IpOwnerId': 'string',
                                    'PublicDnsName': 'string',
                                    'PublicIp': 'string'
                                },
                                'Primary': True|False,
                                'PrivateDnsName': 'string',
                                'PrivateIpAddress': 'string'
                            },
                        ],
                        'SourceDestCheck': True|False,
                        'Status': 'available'|'associated'|'attaching'|'in-use'|'detaching',
                        'SubnetId': 'string',
                        'VpcId': 'string',
                        'InterfaceType': 'string'
                    },
                ],
                'OutpostArn': 'string',
                'RootDeviceName': 'string',
                'RootDeviceType': 'ebs'|'instance-store',
                'SecurityGroups': [
                    {
                        'GroupName': 'string',
                        'GroupId': 'string'
                    },
                ],
                'SourceDestCheck': True|False,
                'SpotInstanceRequestId': 'string',
                'SriovNetSupport': 'string',
                'StateReason': {
                    'Code': 'string',
                    'Message': 'string'
                },
                'Tags': [
                    {
                        'Key': 'string',
                        'Value': 'string'
                    },
                ],
                'VirtualizationType': 'hvm'|'paravirtual',
                'CpuOptions': {
                    'CoreCount': 123,
                    'ThreadsPerCore': 123
                },
                'CapacityReservationId': 'string',
                'CapacityReservationSpecification': {
                    'CapacityReservationPreference': 'open'|'none',
                    'CapacityReservationTarget': {
                        'CapacityReservationId': 'string'
                    }
                },
                'HibernationOptions': {
                    'Configured': True|False
                },
                'Licenses': [
                    {
                        'LicenseConfigurationArn': 'string'
                    },
                ],
                'MetadataOptions': {
                    'State': 'pending'|'applied',
                    'HttpTokens': 'optional'|'required',
                    'HttpPutResponseHopLimit': 123,
                    'HttpEndpoint': 'disabled'|'enabled'
                }
            },
        ],
        'OwnerId': 'string',
        'RequesterId': 'string',
        'ReservationId': 'string'
    }
    
    
    :returns: 
    BlockDeviceMappings (list) -- The block device mapping entries.
    
    (dict) --Describes a block device mapping.
    
    DeviceName (string) --The device name (for example, /dev/sdh or xvdh ).
    
    VirtualName (string) --The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.
    NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.
    Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.
    
    Ebs (dict) --Parameters used to automatically set up EBS volumes when the instance is launched.
    
    DeleteOnTermination (boolean) --Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination in the Amazon Elastic Compute Cloud User Guide.
    
    Iops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
    Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .
    Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.
    
    SnapshotId (string) --The ID of the snapshot.
    
    VolumeSize (integer) --The size of the volume, in GiB.
    Default: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.
    Constraints: 1-16384 for General Purpose SSD (gp2 ), 4-16384 for Provisioned IOPS SSD (io1 ), 500-16384 for Throughput Optimized HDD (st1 ), 500-16384 for Cold HDD (sc1 ), and 1-1024 for Magnetic (standard ) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.
    
    VolumeType (string) --The volume type. If you set the type to io1 , you must also specify the Iops parameter. If you set the type to gp2 , st1 , sc1 , or standard , you must omit the Iops parameter.
    Default: gp2
    
    KmsKeyId (string) --Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.
    This parameter is only supported on BlockDeviceMapping objects called by RunInstances , RequestSpotFleet , and RequestSpotInstances .
    
    Encrypted (boolean) --Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption in the Amazon Elastic Compute Cloud User Guide .
    In no case can you remove encryption from an encrypted volume.
    Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types .
    This parameter is not returned by .
    
    
    
    NoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.
    
    
    
    
    
    ImageId (string) -- The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.
    InstanceType (string) -- The instance type. For more information, see Instance Types in the Amazon Elastic Compute Cloud User Guide .
    Default: m1.small
    
    Ipv6AddressCount (integer) -- [EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you\'ve specified a minimum number of instances to launch.
    You cannot specify this option and the network interfaces option in the same request.
    
    Ipv6Addresses (list) -- [EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you\'ve specified a minimum number of instances to launch.
    You cannot specify this option and the network interfaces option in the same request.
    
    (dict) --Describes an IPv6 address.
    
    Ipv6Address (string) --The IPv6 address.
    
    
    
    
    
    KernelId (string) -- The ID of the kernel.
    
    Warning
    We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB in the Amazon Elastic Compute Cloud User Guide .
    
    
    KeyName (string) -- The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair .
    
    Warning
    If you do not specify a key pair, you can\'t connect to the instance unless you choose an AMI that is configured to allow users another way to log in.
    
    
    MaxCount (integer) -- [REQUIRED]
    The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above MinCount .
    Constraints: Between 1 and the maximum number you\'re allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 in the Amazon EC2 FAQ.
    
    MinCount (integer) -- [REQUIRED]
    The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.
    Constraints: Between 1 and the maximum number you\'re allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 in the Amazon EC2 General FAQ.
    
    Monitoring (dict) -- Specifies whether detailed monitoring is enabled for the instance.
    
    Enabled (boolean) -- [REQUIRED]Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
    
    
    
    Placement (dict) -- The placement for the instance.
    
    AvailabilityZone (string) --The Availability Zone of the instance.
    If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.
    This parameter is not supported by CreateFleet .
    
    Affinity (string) --The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance command.
    This parameter is not supported by CreateFleet .
    
    GroupName (string) --The name of the placement group the instance is in.
    
    PartitionNumber (integer) --The number of the partition the instance is in. Valid only if the placement group strategy is set to partition .
    This parameter is not supported by CreateFleet .
    
    HostId (string) --The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance command.
    This parameter is not supported by CreateFleet .
    
    Tenancy (string) --The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance command.
    This parameter is not supported by CreateFleet .
    
    SpreadDomain (string) --Reserved for future use.
    This parameter is not supported by CreateFleet .
    
    HostResourceGroupArn (string) --The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host .
    This parameter is not supported by CreateFleet .
    
    
    
    RamdiskId (string) -- The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.
    
    Warning
    We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB in the Amazon Elastic Compute Cloud User Guide .
    
    
    SecurityGroupIds (list) -- The IDs of the security groups. You can create a security group using CreateSecurityGroup .
    If you specify a network interface, you must specify any security groups as part of the network interface.
    
    (string) --
    
    
    SecurityGroups (list) -- [EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.
    If you specify a network interface, you must specify any security groups as part of the network interface.
    Default: Amazon EC2 uses the default security group.
    
    (string) --
    
    
    SubnetId (string) -- [EC2-VPC] The ID of the subnet to launch the instance into.
    If you specify a network interface, you must specify any subnets as part of the network interface.
    
    UserData (string) -- The user data to make available to the instance. For more information, see Running Commands on Your Linux Instance at Launch (Linux) and Adding User Data (Windows). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.
    
    This value will be base64 encoded automatically. Do not base64 encode this value prior to performing the operation.
    
    AdditionalInfo (string) -- Reserved.
    ClientToken (string) -- Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.
    For more information, see Ensuring Idempotency .
    Constraints: Maximum 64 ASCII characters
    This field is autopopulated if not provided.
    
    DisableApiTermination (boolean) -- If you set this parameter to true , you can\'t terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute . Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate , you can terminate the instance by running the shutdown command from the instance.
    Default: false
    
    DryRun (boolean) -- Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .
    EbsOptimized (boolean) -- Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS-optimized instance.
    Default: false
    
    IamInstanceProfile (dict) -- The IAM instance profile.
    
    Arn (string) --The Amazon Resource Name (ARN) of the instance profile.
    
    Name (string) --The name of the instance profile.
    
    
    
    InstanceInitiatedShutdownBehavior (string) -- Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
    Default: stop
    
    NetworkInterfaces (list) -- The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.
    
    (dict) --Describes a network interface.
    
    AssociatePublicIpAddress (boolean) --Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true .
    
    DeleteOnTermination (boolean) --If set to true , the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance.
    
    Description (string) --The description of the network interface. Applies only if creating a network interface when launching an instance.
    
    DeviceIndex (integer) --The position of the network interface in the attachment order. A primary network interface has a device index of 0.
    If you specify a network interface when launching an instance, you must specify the device index.
    
    Groups (list) --The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.
    
    (string) --
    
    
    Ipv6AddressCount (integer) --A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you\'ve specified a minimum number of instances to launch.
    
    Ipv6Addresses (list) --One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you\'ve specified a minimum number of instances to launch.
    
    (dict) --Describes an IPv6 address.
    
    Ipv6Address (string) --The IPv6 address.
    
    
    
    
    
    NetworkInterfaceId (string) --The ID of the network interface.
    If you are creating a Spot Fleet, omit this parameter because you can\xe2\x80\x99t specify a network interface ID in a launch specification.
    
    PrivateIpAddress (string) --The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.
    
    PrivateIpAddresses (list) --One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.
    
    (dict) --Describes a secondary private IPv4 address for a network interface.
    
    Primary (boolean) --Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.
    
    PrivateIpAddress (string) --The private IPv4 addresses.
    
    
    
    
    
    SecondaryPrivateIpAddressCount (integer) --The number of secondary private IPv4 addresses. You can\'t specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you\'re launching more than one instance in a RunInstances request.
    
    SubnetId (string) --The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.
    
    InterfaceType (string) --The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide .
    If you are not creating an EFA, specify interface or omit this parameter.
    Valid values: interface | efa
    
    
    
    
    
    PrivateIpAddress (string) -- [EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.
    Only one private IP address can be designated as primary. You can\'t specify this option if you\'ve specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you\'re launching more than one instance in the request.
    You cannot specify this option and the network interfaces option in the same request.
    
    ElasticGpuSpecification (list) -- An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs in the Amazon Elastic Compute Cloud User Guide .
    
    (dict) --A specification for an Elastic Graphics accelerator.
    
    Type (string) -- [REQUIRED]The type of Elastic Graphics accelerator. For more information about the values to specify for Type , see Elastic Graphics Basics , specifically the Elastic Graphics accelerator column, in the Amazon Elastic Compute Cloud User Guide for Windows Instances .
    
    
    
    
    
    ElasticInferenceAccelerators (list) -- An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.
    You cannot specify accelerators from different generations in the same request.
    
    (dict) --Describes an elastic inference accelerator.
    
    Type (string) -- [REQUIRED]The type of elastic inference accelerator. The possible values are eia1.medium , eia1.large , and eia1.xlarge .
    
    Count (integer) --The number of elastic inference accelerators to attach to the instance.
    Default: 1
    
    
    
    
    
    TagSpecifications (list) -- The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags .
    
    (dict) --The tags to apply to a resource when the resource is being created.
    
    ResourceType (string) --The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log .
    To tag a resource after it has been created, see CreateTags .
    
    Tags (list) --The tags to apply to the resource.
    
    (dict) --Describes a tag.
    
    Key (string) --The key of the tag.
    Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with aws: .
    
    Value (string) --The value of the tag.
    Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
    
    
    
    
    
    
    
    
    
    LaunchTemplate (dict) -- The launch template to use to launch the instances. Any parameters that you specify in  RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.
    
    LaunchTemplateId (string) --The ID of the launch template.
    
    LaunchTemplateName (string) --The name of the launch template.
    
    Version (string) --The version number of the launch template.
    Default: The default version for the launch template.
    
    
    
    InstanceMarketOptions (dict) -- The market (purchasing) option for the instances.
    For  RunInstances , persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop .
    
    MarketType (string) --The market type.
    
    SpotOptions (dict) --The options for Spot Instances.
    
    MaxPrice (string) --The maximum hourly price you\'re willing to pay for the Spot Instances. The default is the On-Demand price.
    
    SpotInstanceType (string) --The Spot Instance request type. For RunInstances , persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop .
    
    BlockDurationMinutes (integer) --The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
    
    ValidUntil (datetime) --The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date.
    
    InstanceInterruptionBehavior (string) --The behavior when a Spot Instance is interrupted. The default is terminate .
    
    
    
    
    
    CreditSpecification (dict) -- The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited . To change this attribute after launch, use ModifyInstanceCreditSpecification . For more information, see Burstable Performance Instances in the Amazon Elastic Compute Cloud User Guide .
    Default: standard (T2 instances) or unlimited (T3/T3a instances)
    
    CpuCredits (string) -- [REQUIRED]The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited .
    
    
    
    CpuOptions (dict) -- The CPU options for the instance. For more information, see Optimizing CPU Options in the Amazon Elastic Compute Cloud User Guide .
    
    CoreCount (integer) --The number of CPU cores for the instance.
    
    ThreadsPerCore (integer) --The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1 . Otherwise, specify the default value of 2 .
    
    
    
    CapacityReservationSpecification (dict) -- Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance\'s Capacity Reservation preference defaults to open , which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
    
    CapacityReservationPreference (string) --Indicates the instance\'s Capacity Reservation preferences. Possible preferences include:
    
    open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
    none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs as an On-Demand Instance.
    
    
    CapacityReservationTarget (dict) --Information about the target Capacity Reservation.
    
    CapacityReservationId (string) --The ID of the Capacity Reservation.
    
    
    
    
    
    HibernationOptions (dict) -- Indicates whether an instance is enabled for hibernation. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide .
    
    Configured (boolean) --If you set this parameter to true , your instance is enabled for hibernation.
    Default: false
    
    
    
    LicenseSpecifications (list) -- The license configurations.
    
    (dict) --Describes a license configuration.
    
    LicenseConfigurationArn (string) --The Amazon Resource Name (ARN) of the license configuration.
    
    
    
    
    
    MetadataOptions (dict) -- The metadata options for the instance. For more information, see Instance Metadata and User Data .
    
    HttpTokens (string) --The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional .
    If the state is optional , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.
    If the state is required , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.
    
    HttpPutResponseHopLimit (integer) --The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
    Default: 1
    Possible values: Integers from 1 to 64
    
    HttpEndpoint (string) --This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled .
    
    Note
    If you specify a value of disabled , you will not be able to access your instance metadata.
    
    
    
    
    
    """
    pass

def run_scheduled_instances(ClientToken=None, DryRun=None, InstanceCount=None, LaunchSpecification=None, ScheduledInstanceId=None):
    """
    Launches the specified Scheduled Instances.
    Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier using  PurchaseScheduledInstances .
    You must launch a Scheduled Instance during its scheduled time period. You can\'t stop or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate a Scheduled Instance before the current scheduled time period ends, you can launch it again after a few minutes. For more information, see Scheduled Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example launches the specified Scheduled Instance in a VPC.
    Expected Output:
    This example launches the specified Scheduled Instance in EC2-Classic.
    Expected Output:
    
    :example: response = client.run_scheduled_instances(
        ClientToken='string',
        DryRun=True|False,
        InstanceCount=123,
        LaunchSpecification={
            'BlockDeviceMappings': [
                {
                    'DeviceName': 'string',
                    'Ebs': {
                        'DeleteOnTermination': True|False,
                        'Encrypted': True|False,
                        'Iops': 123,
                        'SnapshotId': 'string',
                        'VolumeSize': 123,
                        'VolumeType': 'string'
                    },
                    'NoDevice': 'string',
                    'VirtualName': 'string'
                },
            ],
            'EbsOptimized': True|False,
            'IamInstanceProfile': {
                'Arn': 'string',
                'Name': 'string'
            },
            'ImageId': 'string',
            'InstanceType': 'string',
            'KernelId': 'string',
            'KeyName': 'string',
            'Monitoring': {
                'Enabled': True|False
            },
            'NetworkInterfaces': [
                {
                    'AssociatePublicIpAddress': True|False,
                    'DeleteOnTermination': True|False,
                    'Description': 'string',
                    'DeviceIndex': 123,
                    'Groups': [
                        'string',
                    ],
                    'Ipv6AddressCount': 123,
                    'Ipv6Addresses': [
                        {
                            'Ipv6Address': 'string'
                        },
                    ],
                    'NetworkInterfaceId': 'string',
                    'PrivateIpAddress': 'string',
                    'PrivateIpAddressConfigs': [
                        {
                            'Primary': True|False,
                            'PrivateIpAddress': 'string'
                        },
                    ],
                    'SecondaryPrivateIpAddressCount': 123,
                    'SubnetId': 'string'
                },
            ],
            'Placement': {
                'AvailabilityZone': 'string',
                'GroupName': 'string'
            },
            'RamdiskId': 'string',
            'SecurityGroupIds': [
                'string',
            ],
            'SubnetId': 'string',
            'UserData': 'string'
        },
        ScheduledInstanceId='string'
    )
    
    
    :type ClientToken: string
    :param ClientToken: Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see Ensuring Idempotency .\nThis field is autopopulated if not provided.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type InstanceCount: integer
    :param InstanceCount: The number of instances.\nDefault: 1\n

    :type LaunchSpecification: dict
    :param LaunchSpecification: [REQUIRED]\nThe launch specification. You must match the instance type, Availability Zone, network, and platform of the schedule that you purchased.\n\nBlockDeviceMappings (list) --The block device mapping entries.\n\n(dict) --Describes a block device mapping for a Scheduled Instance.\n\nDeviceName (string) --The device name (for example, /dev/sdh or xvdh ).\n\nEbs (dict) --Parameters used to set up EBS volumes automatically when the instance is launched.\n\nDeleteOnTermination (boolean) --Indicates whether the volume is deleted on instance termination.\n\nEncrypted (boolean) --Indicates whether the volume is encrypted. You can attached encrypted volumes only to instances that support them.\n\nIops (integer) --The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about gp2 baseline performance, I/O credits, and bursting, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide .\nConstraint: Range is 100-20000 IOPS for io1 volumes and 100-10000 IOPS for gp2 volumes.\nCondition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2 , st1 , sc1 , or standard volumes.\n\nSnapshotId (string) --The ID of the snapshot.\n\nVolumeSize (integer) --The size of the volume, in GiB.\nDefault: If you\'re creating the volume from a snapshot and don\'t specify a volume size, the default is the snapshot size.\n\nVolumeType (string) --The volume type. gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, Throughput Optimized HDD for st1 , Cold HDD for sc1 , or standard for Magnetic.\nDefault: gp2\n\n\n\nNoDevice (string) --Suppresses the specified device included in the block device mapping of the AMI.\n\nVirtualName (string) --The virtual device name (ephemeral N). Instance store volumes are numbered starting from 0. An instance type with two available instance store volumes can specify mappings for ephemeral0 and ephemeral1 . The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\nConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\n\n\n\n\n\nEbsOptimized (boolean) --Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn\'t available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\nDefault: false\n\nIamInstanceProfile (dict) --The IAM instance profile.\n\nArn (string) --The Amazon Resource Name (ARN).\n\nName (string) --The name.\n\n\n\nImageId (string) -- [REQUIRED]The ID of the Amazon Machine Image (AMI).\n\nInstanceType (string) --The instance type.\n\nKernelId (string) --The ID of the kernel.\n\nKeyName (string) --The name of the key pair.\n\nMonitoring (dict) --Enable or disable monitoring for the instances.\n\nEnabled (boolean) --Indicates whether monitoring is enabled.\n\n\n\nNetworkInterfaces (list) --The network interfaces.\n\n(dict) --Describes a network interface for a Scheduled Instance.\n\nAssociatePublicIpAddress (boolean) --Indicates whether to assign a public IPv4 address to instances launched in a VPC. The public IPv4 address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true .\n\nDeleteOnTermination (boolean) --Indicates whether to delete the interface when the instance is terminated.\n\nDescription (string) --The description.\n\nDeviceIndex (integer) --The index of the device for the network interface attachment.\n\nGroups (list) --The IDs of the security groups.\n\n(string) --\n\n\nIpv6AddressCount (integer) --The number of IPv6 addresses to assign to the network interface. The IPv6 addresses are automatically selected from the subnet range.\n\nIpv6Addresses (list) --The specific IPv6 addresses from the subnet range.\n\n(dict) --Describes an IPv6 address.\n\nIpv6Address (string) --The IPv6 address.\n\n\n\n\n\nNetworkInterfaceId (string) --The ID of the network interface.\n\nPrivateIpAddress (string) --The IPv4 address of the network interface within the subnet.\n\nPrivateIpAddressConfigs (list) --The private IPv4 addresses.\n\n(dict) --Describes a private IPv4 address for a Scheduled Instance.\n\nPrimary (boolean) --Indicates whether this is a primary IPv4 address. Otherwise, this is a secondary IPv4 address.\n\nPrivateIpAddress (string) --The IPv4 address.\n\n\n\n\n\nSecondaryPrivateIpAddressCount (integer) --The number of secondary private IPv4 addresses.\n\nSubnetId (string) --The ID of the subnet.\n\n\n\n\n\nPlacement (dict) --The placement information.\n\nAvailabilityZone (string) --The Availability Zone.\n\nGroupName (string) --The name of the placement group.\n\n\n\nRamdiskId (string) --The ID of the RAM disk.\n\nSecurityGroupIds (list) --The IDs of the security groups.\n\n(string) --\n\n\nSubnetId (string) --The ID of the subnet in which to launch the instances.\n\nUserData (string) --The base64-encoded MIME user data.\n\n\n

    :type ScheduledInstanceId: string
    :param ScheduledInstanceId: [REQUIRED]\nThe Scheduled Instance ID.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceIdSet': [
        'string',
    ]
}


Response Structure

(dict) --
Contains the output of RunScheduledInstances.

InstanceIdSet (list) --
The IDs of the newly launched instances.

(string) --








Examples
This example launches the specified Scheduled Instance in a VPC.
response = client.run_scheduled_instances(
    InstanceCount=1,
    LaunchSpecification={
        'IamInstanceProfile': {
            'Name': 'my-iam-role',
        },
        'ImageId': 'ami-12345678',
        'InstanceType': 'c4.large',
        'KeyName': 'my-key-pair',
        'NetworkInterfaces': [
            {
                'AssociatePublicIpAddress': True,
                'DeviceIndex': 0,
                'Groups': [
                    'sg-12345678',
                ],
                'SubnetId': 'subnet-12345678',
            },
        ],
    },
    ScheduledInstanceId='sci-1234-1234-1234-1234-123456789012',
)

print(response)


Expected Output:
{
    'InstanceIdSet': [
        'i-1234567890abcdef0',
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}


This example launches the specified Scheduled Instance in EC2-Classic.
response = client.run_scheduled_instances(
    InstanceCount=1,
    LaunchSpecification={
        'IamInstanceProfile': {
            'Name': 'my-iam-role',
        },
        'ImageId': 'ami-12345678',
        'InstanceType': 'c4.large',
        'KeyName': 'my-key-pair',
        'Placement': {
            'AvailabilityZone': 'us-west-2b',
        },
        'SecurityGroupIds': [
            'sg-12345678',
        ],
    },
    ScheduledInstanceId='sci-1234-1234-1234-1234-123456789012',
)

print(response)


Expected Output:
{
    'InstanceIdSet': [
        'i-1234567890abcdef0',
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'InstanceIdSet': [
            'string',
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def search_local_gateway_routes(LocalGatewayRouteTableId=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Searches for routes in the specified local gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.search_local_gateway_routes(
        LocalGatewayRouteTableId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type LocalGatewayRouteTableId: string
    :param LocalGatewayRouteTableId: [REQUIRED]\nThe ID of the local gateway route table.\n

    :type Filters: list
    :param Filters: [REQUIRED]\nOne or more filters.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Routes': [
        {
            'DestinationCidrBlock': 'string',
            'LocalGatewayVirtualInterfaceGroupId': 'string',
            'Type': 'static'|'propagated',
            'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted',
            'LocalGatewayRouteTableId': 'string'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

Routes (list) --
Information about the routes.

(dict) --
Describes a route for a local gateway route table.

DestinationCidrBlock (string) --
The CIDR block used for destination matches.

LocalGatewayVirtualInterfaceGroupId (string) --
The ID of the virtual interface group.

Type (string) --
The route type.

State (string) --
The state of the route.

LocalGatewayRouteTableId (string) --
The ID of the local gateway route table.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'Routes': [
            {
                'DestinationCidrBlock': 'string',
                'LocalGatewayVirtualInterfaceGroupId': 'string',
                'Type': 'static'|'propagated',
                'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted',
                'LocalGatewayRouteTableId': 'string'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def search_transit_gateway_multicast_groups(TransitGatewayMulticastDomainId=None, Filters=None, MaxResults=None, NextToken=None, DryRun=None):
    """
    Searches one or more transit gateway multicast groups and returns the group membership information.
    See also: AWS API Documentation
    
    
    :example: response = client.search_transit_gateway_multicast_groups(
        TransitGatewayMulticastDomainId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        NextToken='string',
        DryRun=True|False
    )
    
    
    :type TransitGatewayMulticastDomainId: string
    :param TransitGatewayMulticastDomainId: The ID of the transit gateway multicast domain.

    :type Filters: list
    :param Filters: One or more filters. The possible values are:\n\ngroup-ip-address - The IP address of the transit gateway multicast group.\nis-group-member - The resource is a group member. Valid values are true | false .\nis-group-source - The resource is a group source. Valid values are true | false .\nmember-type - The member type. Valid values are igmp | static .\nresource-id - The ID of the resource.\nresource-type - The type of resource. Valid values are vpc | vpn | direct-connect-gateway | tgw-peering .\nsource-type - The source type. Valid values are igmp | static .\nstate - The state of the subnet association. Valid values are associated | associated | disassociated | disassociating .\nsubnet-id - The ID of the subnet.\ntransit-gateway-attachment-id - The id of the transit gateway attachment.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.

    :type NextToken: string
    :param NextToken: The token for the next page of results.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'MulticastGroups': [
        {
            'GroupIpAddress': 'string',
            'TransitGatewayAttachmentId': 'string',
            'SubnetId': 'string',
            'ResourceId': 'string',
            'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
            'NetworkInterfaceId': 'string',
            'GroupMember': True|False,
            'GroupSource': True|False,
            'MemberType': 'static'|'igmp',
            'SourceType': 'static'|'igmp'
        },
    ],
    'NextToken': 'string'
}


Response Structure

(dict) --

MulticastGroups (list) --
Information about the transit gateway multicast group.

(dict) --
Describes the transit gateway multicast group resources.

GroupIpAddress (string) --
The IP address assigned to the transit gateway multicast group.

TransitGatewayAttachmentId (string) --
The ID of the transit gateway attachment.

SubnetId (string) --
The ID of the subnet.

ResourceId (string) --
The ID of the resource.

ResourceType (string) --
The type of resource, for example a VPC attachment.

NetworkInterfaceId (string) --
The ID of the transit gateway attachment.

GroupMember (boolean) --
Indicates that the resource is a transit gateway multicast group member.

GroupSource (boolean) --
Indicates that the resource is a transit gateway multicast group member.

MemberType (string) --
The member type (for example, static ).

SourceType (string) --
The source type.





NextToken (string) --
The token to use to retrieve the next page of results. This value is null when there are no more results to return.








    :return: {
        'MulticastGroups': [
            {
                'GroupIpAddress': 'string',
                'TransitGatewayAttachmentId': 'string',
                'SubnetId': 'string',
                'ResourceId': 'string',
                'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering',
                'NetworkInterfaceId': 'string',
                'GroupMember': True|False,
                'GroupSource': True|False,
                'MemberType': 'static'|'igmp',
                'SourceType': 'static'|'igmp'
            },
        ],
        'NextToken': 'string'
    }
    
    
    """
    pass

def search_transit_gateway_routes(TransitGatewayRouteTableId=None, Filters=None, MaxResults=None, DryRun=None):
    """
    Searches for routes in the specified transit gateway route table.
    See also: AWS API Documentation
    
    
    :example: response = client.search_transit_gateway_routes(
        TransitGatewayRouteTableId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxResults=123,
        DryRun=True|False
    )
    
    
    :type TransitGatewayRouteTableId: string
    :param TransitGatewayRouteTableId: [REQUIRED]\nThe ID of the transit gateway route table.\n

    :type Filters: list
    :param Filters: [REQUIRED]\nOne or more filters. The possible values are:\n\nattachment.transit-gateway-attachment-id - The id of the transit gateway attachment.\nattachment.resource-id - The resource id of the transit gateway attachment.\nattachment.resource-type - The attachment resource type (vpc | vpn ).\nroute-search.exact-match - The exact match of the specified filter.\nroute-search.longest-prefix-match - The longest prefix that matches the route.\nroute-search.subnet-of-match - The routes with a subnet that match the specified CIDR filter.\nroute-search.supernet-of-match - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns 10.0.1.0/29.\nstate - The state of the route (active | blackhole ).\ntype - The type of route (propagated | static ).\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. The filters supported by a describe operation are documented with the describe operation. For example:\n\nDescribeAvailabilityZones\nDescribeImages\nDescribeInstances\nDescribeKeyPairs\nDescribeSecurityGroups\nDescribeSnapshots\nDescribeSubnets\nDescribeTags\nDescribeVolumes\nDescribeVpcs\n\n\nName (string) --The name of the filter. Filter names are case-sensitive.\n\nValues (list) --The filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxResults: integer
    :param MaxResults: The maximum number of routes to return.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'Routes': [
        {
            'DestinationCidrBlock': 'string',
            'TransitGatewayAttachments': [
                {
                    'ResourceId': 'string',
                    'TransitGatewayAttachmentId': 'string',
                    'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering'
                },
            ],
            'Type': 'static'|'propagated',
            'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted'
        },
    ],
    'AdditionalRoutesAvailable': True|False
}


Response Structure

(dict) --

Routes (list) --
Information about the routes.

(dict) --
Describes a route for a transit gateway route table.

DestinationCidrBlock (string) --
The CIDR block used for destination matches.

TransitGatewayAttachments (list) --
The attachments.

(dict) --
Describes a route attachment.

ResourceId (string) --
The ID of the resource.

TransitGatewayAttachmentId (string) --
The ID of the attachment.

ResourceType (string) --
The resource type.





Type (string) --
The route type.

State (string) --
The state of the route.





AdditionalRoutesAvailable (boolean) --
Indicates whether there are additional routes available.








    :return: {
        'Routes': [
            {
                'DestinationCidrBlock': 'string',
                'TransitGatewayAttachments': [
                    {
                        'ResourceId': 'string',
                        'TransitGatewayAttachmentId': 'string',
                        'ResourceType': 'vpc'|'vpn'|'direct-connect-gateway'|'tgw-peering'
                    },
                ],
                'Type': 'static'|'propagated',
                'State': 'pending'|'active'|'blackhole'|'deleting'|'deleted'
            },
        ],
        'AdditionalRoutesAvailable': True|False
    }
    
    
    """
    pass

def send_diagnostic_interrupt(InstanceId=None, DryRun=None):
    """
    Sends a diagnostic interrupt to the specified Amazon EC2 instance to trigger a kernel panic (on Linux instances), or a blue screen /stop error (on Windows instances). For instances based on Intel and AMD processors, the interrupt is received as a non-maskable interrupt (NMI).
    In general, the operating system crashes and reboots when a kernel panic or stop error is triggered. The operating system can also be configured to perform diagnostic tasks, such as generating a memory dump file, loading a secondary kernel, or obtaining a call trace.
    Before sending a diagnostic interrupt to your instance, ensure that its operating system is configured to perform the required diagnostic tasks.
    For more information about configuring your operating system to generate a crash dump when a kernel panic or stop error occurs, see Send a Diagnostic Interrupt (Linux instances) or Send a Diagnostic Interrupt (Windows instances).
    See also: AWS API Documentation
    
    
    :example: response = client.send_diagnostic_interrupt(
        InstanceId='string',
        DryRun=True|False
    )
    
    
    :type InstanceId: string
    :param InstanceId: [REQUIRED]\nThe ID of the instance.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    """
    pass

def start_instances(InstanceIds=None, AdditionalInfo=None, DryRun=None):
    """
    Starts an Amazon EBS-backed instance that you\'ve previously stopped.
    Instances that use Amazon EBS volumes as their root devices can be quickly stopped and started. When an instance is stopped, the compute resources are released and you are not billed for instance usage. However, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. You can restart your instance at any time. Every time you start your Windows instance, Amazon EC2 charges you for a full instance hour. If you stop and restart your Windows instance, a new instance hour begins and Amazon EC2 charges you for another full instance hour even if you are still within the same 60-minute period when it was stopped. Every time you start your Linux instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.
    Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.
    Performing this operation on an instance that uses an instance store as its root device returns an error.
    For more information, see Stopping Instances in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example starts the specified EC2 instance.
    Expected Output:
    
    :example: response = client.start_instances(
        InstanceIds=[
            'string',
        ],
        AdditionalInfo='string',
        DryRun=True|False
    )
    
    
    :type InstanceIds: list
    :param InstanceIds: [REQUIRED]\nThe IDs of the instances.\n\n(string) --\n\n

    :type AdditionalInfo: string
    :param AdditionalInfo: Reserved.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'StartingInstances': [
        {
            'CurrentState': {
                'Code': 123,
                'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
            },
            'InstanceId': 'string',
            'PreviousState': {
                'Code': 123,
                'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
            }
        },
    ]
}


Response Structure

(dict) --

StartingInstances (list) --
Information about the started instances.

(dict) --
Describes an instance state change.

CurrentState (dict) --
The current state of the instance.

Code (integer) --
The state of the instance as a 16-bit unsigned integer.
The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.
The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
The valid values for instance-state-code will all be in the range of the low byte and they are:

0 : pending
16 : running
32 : shutting-down
48 : terminated
64 : stopping
80 : stopped

You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.

Name (string) --
The current state of the instance.



InstanceId (string) --
The ID of the instance.

PreviousState (dict) --
The previous state of the instance.

Code (integer) --
The state of the instance as a 16-bit unsigned integer.
The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.
The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
The valid values for instance-state-code will all be in the range of the low byte and they are:

0 : pending
16 : running
32 : shutting-down
48 : terminated
64 : stopping
80 : stopped

You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.

Name (string) --
The current state of the instance.













Examples
This example starts the specified EC2 instance.
response = client.start_instances(
    InstanceIds=[
        'i-1234567890abcdef0',
    ],
)

print(response)


Expected Output:
{
    'StartingInstances': [
        {
            'CurrentState': {
                'Code': 0,
                'Name': 'pending',
            },
            'InstanceId': 'i-1234567890abcdef0',
            'PreviousState': {
                'Code': 80,
                'Name': 'stopped',
            },
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'StartingInstances': [
            {
                'CurrentState': {
                    'Code': 123,
                    'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                },
                'InstanceId': 'string',
                'PreviousState': {
                    'Code': 123,
                    'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                }
            },
        ]
    }
    
    
    :returns: 
    0 : pending
    16 : running
    32 : shutting-down
    48 : terminated
    64 : stopping
    80 : stopped
    
    """
    pass

def start_vpc_endpoint_service_private_dns_verification(DryRun=None, ServiceId=None):
    """
    Initiates the verification process to prove that the service provider owns the private DNS name domain for the endpoint service.
    The service provider must successfully perform the verification before the consumer can use the name to access the service.
    Before the service provider runs this command, they must add a record to the DNS server. For more information, see Adding a TXT Record to Your Domain\'s DNS Server in the Amazon VPC User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.start_vpc_endpoint_service_private_dns_verification(
        DryRun=True|False,
        ServiceId='string'
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type ServiceId: string
    :param ServiceId: [REQUIRED]\nThe ID of the endpoint service.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ReturnValue': True|False
}


Response Structure

(dict) --

ReturnValue (boolean) --
Returns true if the request succeeds; otherwise, it returns an error.








    :return: {
        'ReturnValue': True|False
    }
    
    
    """
    pass

def stop_instances(InstanceIds=None, Hibernate=None, DryRun=None, Force=None):
    """
    Stops an Amazon EBS-backed instance.
    You can use the Stop action to hibernate an instance if the instance is enabled for hibernation and it meets the hibernation prerequisites . For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide .
    We don\'t charge usage for a stopped instance, or data transfer fees; however, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. Every time you start your Windows instance, Amazon EC2 charges you for a full instance hour. If you stop and restart your Windows instance, a new instance hour begins and Amazon EC2 charges you for another full instance hour even if you are still within the same 60-minute period when it was stopped. Every time you start your Linux instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.
    You can\'t stop or hibernate instance store-backed instances. You can\'t use the Stop action to hibernate Spot Instances, but you can specify that Amazon EC2 should hibernate Spot Instances when they are interrupted. For more information, see Hibernating Interrupted Spot Instances in the Amazon Elastic Compute Cloud User Guide .
    When you stop or hibernate an instance, we shut it down. You can restart your instance at any time. Before stopping or hibernating an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM, but hibernating an instance does preserve data stored in RAM. If an instance cannot hibernate successfully, a normal shutdown occurs.
    Stopping and hibernating an instance is different to rebooting or terminating it. For example, when you stop or hibernate an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, the root device and any other devices attached during the instance launch are automatically deleted. For more information about the differences between rebooting, stopping, hibernating, and terminating instances, see Instance Lifecycle in the Amazon Elastic Compute Cloud User Guide .
    When you stop an instance, we attempt to shut it down forcibly after a short while. If your instance appears stuck in the stopping state after a period of time, there may be an issue with the underlying host computer. For more information, see Troubleshooting Stopping Your Instance in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example stops the specified EC2 instance.
    Expected Output:
    
    :example: response = client.stop_instances(
        InstanceIds=[
            'string',
        ],
        Hibernate=True|False,
        DryRun=True|False,
        Force=True|False
    )
    
    
    :type InstanceIds: list
    :param InstanceIds: [REQUIRED]\nThe IDs of the instances.\n\n(string) --\n\n

    :type Hibernate: boolean
    :param Hibernate: Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs. For more information, see Hibernate Your Instance in the Amazon Elastic Compute Cloud User Guide .\nDefault: false\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type Force: boolean
    :param Force: Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.\nDefault: false\n

    :rtype: dict

ReturnsResponse Syntax
{
    'StoppingInstances': [
        {
            'CurrentState': {
                'Code': 123,
                'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
            },
            'InstanceId': 'string',
            'PreviousState': {
                'Code': 123,
                'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
            }
        },
    ]
}


Response Structure

(dict) --

StoppingInstances (list) --
Information about the stopped instances.

(dict) --
Describes an instance state change.

CurrentState (dict) --
The current state of the instance.

Code (integer) --
The state of the instance as a 16-bit unsigned integer.
The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.
The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
The valid values for instance-state-code will all be in the range of the low byte and they are:

0 : pending
16 : running
32 : shutting-down
48 : terminated
64 : stopping
80 : stopped

You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.

Name (string) --
The current state of the instance.



InstanceId (string) --
The ID of the instance.

PreviousState (dict) --
The previous state of the instance.

Code (integer) --
The state of the instance as a 16-bit unsigned integer.
The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.
The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
The valid values for instance-state-code will all be in the range of the low byte and they are:

0 : pending
16 : running
32 : shutting-down
48 : terminated
64 : stopping
80 : stopped

You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.

Name (string) --
The current state of the instance.













Examples
This example stops the specified EC2 instance.
response = client.stop_instances(
    InstanceIds=[
        'i-1234567890abcdef0',
    ],
)

print(response)


Expected Output:
{
    'StoppingInstances': [
        {
            'CurrentState': {
                'Code': 64,
                'Name': 'stopping',
            },
            'InstanceId': 'i-1234567890abcdef0',
            'PreviousState': {
                'Code': 16,
                'Name': 'running',
            },
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'StoppingInstances': [
            {
                'CurrentState': {
                    'Code': 123,
                    'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                },
                'InstanceId': 'string',
                'PreviousState': {
                    'Code': 123,
                    'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                }
            },
        ]
    }
    
    
    :returns: 
    0 : pending
    16 : running
    32 : shutting-down
    48 : terminated
    64 : stopping
    80 : stopped
    
    """
    pass

def terminate_client_vpn_connections(ClientVpnEndpointId=None, ConnectionId=None, Username=None, DryRun=None):
    """
    Terminates active Client VPN endpoint connections. This action can be used to terminate a specific client connection, or up to five connections established by a specific user.
    See also: AWS API Documentation
    
    
    :example: response = client.terminate_client_vpn_connections(
        ClientVpnEndpointId='string',
        ConnectionId='string',
        Username='string',
        DryRun=True|False
    )
    
    
    :type ClientVpnEndpointId: string
    :param ClientVpnEndpointId: [REQUIRED]\nThe ID of the Client VPN endpoint to which the client is connected.\n

    :type ConnectionId: string
    :param ConnectionId: The ID of the client connection to be terminated.

    :type Username: string
    :param Username: The name of the user who initiated the connection. Use this option to terminate all active connections for the specified user. This option can only be used if the user has established up to five connections.

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ClientVpnEndpointId': 'string',
    'Username': 'string',
    'ConnectionStatuses': [
        {
            'ConnectionId': 'string',
            'PreviousStatus': {
                'Code': 'active'|'failed-to-terminate'|'terminating'|'terminated',
                'Message': 'string'
            },
            'CurrentStatus': {
                'Code': 'active'|'failed-to-terminate'|'terminating'|'terminated',
                'Message': 'string'
            }
        },
    ]
}


Response Structure

(dict) --

ClientVpnEndpointId (string) --
The ID of the Client VPN endpoint.

Username (string) --
The user who established the terminated client connections.

ConnectionStatuses (list) --
The current state of the client connections.

(dict) --
Information about a terminated Client VPN endpoint client connection.

ConnectionId (string) --
The ID of the client connection.

PreviousStatus (dict) --
The state of the client connection.

Code (string) --
The state of the client connection.

Message (string) --
A message about the status of the client connection, if applicable.



CurrentStatus (dict) --
A message about the status of the client connection, if applicable.

Code (string) --
The state of the client connection.

Message (string) --
A message about the status of the client connection, if applicable.














    :return: {
        'ClientVpnEndpointId': 'string',
        'Username': 'string',
        'ConnectionStatuses': [
            {
                'ConnectionId': 'string',
                'PreviousStatus': {
                    'Code': 'active'|'failed-to-terminate'|'terminating'|'terminated',
                    'Message': 'string'
                },
                'CurrentStatus': {
                    'Code': 'active'|'failed-to-terminate'|'terminating'|'terminated',
                    'Message': 'string'
                }
            },
        ]
    }
    
    
    """
    pass

def terminate_instances(InstanceIds=None, DryRun=None):
    """
    Shuts down the specified instances. This operation is idempotent; if you terminate an instance more than once, each call succeeds.
    If you specify multiple instances and the request fails (for example, because of a single incorrect instance ID), none of the instances are terminated.
    Terminated instances remain visible after termination (for approximately one hour).
    By default, Amazon EC2 deletes all EBS volumes that were attached when the instance launched. Volumes attached after instance launch continue running.
    You can stop, start, and terminate EBS-backed instances. You can only terminate instance store-backed instances. What happens to an instance differs if you stop it or terminate it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, any attached EBS volumes with the DeleteOnTermination block device mapping parameter set to true are automatically deleted. For more information about the differences between stopping and terminating instances, see Instance Lifecycle in the Amazon Elastic Compute Cloud User Guide .
    For more information about troubleshooting, see Troubleshooting Terminating Your Instance in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    Examples
    This example terminates the specified EC2 instance.
    Expected Output:
    
    :example: response = client.terminate_instances(
        InstanceIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type InstanceIds: list
    :param InstanceIds: [REQUIRED]\nThe IDs of the instances.\nConstraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller batches.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'TerminatingInstances': [
        {
            'CurrentState': {
                'Code': 123,
                'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
            },
            'InstanceId': 'string',
            'PreviousState': {
                'Code': 123,
                'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
            }
        },
    ]
}


Response Structure

(dict) --

TerminatingInstances (list) --
Information about the terminated instances.

(dict) --
Describes an instance state change.

CurrentState (dict) --
The current state of the instance.

Code (integer) --
The state of the instance as a 16-bit unsigned integer.
The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.
The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
The valid values for instance-state-code will all be in the range of the low byte and they are:

0 : pending
16 : running
32 : shutting-down
48 : terminated
64 : stopping
80 : stopped

You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.

Name (string) --
The current state of the instance.



InstanceId (string) --
The ID of the instance.

PreviousState (dict) --
The previous state of the instance.

Code (integer) --
The state of the instance as a 16-bit unsigned integer.
The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.
The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
The valid values for instance-state-code will all be in the range of the low byte and they are:

0 : pending
16 : running
32 : shutting-down
48 : terminated
64 : stopping
80 : stopped

You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.

Name (string) --
The current state of the instance.













Examples
This example terminates the specified EC2 instance.
response = client.terminate_instances(
    InstanceIds=[
        'i-1234567890abcdef0',
    ],
)

print(response)


Expected Output:
{
    'TerminatingInstances': [
        {
            'CurrentState': {
                'Code': 32,
                'Name': 'shutting-down',
            },
            'InstanceId': 'i-1234567890abcdef0',
            'PreviousState': {
                'Code': 16,
                'Name': 'running',
            },
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'TerminatingInstances': [
            {
                'CurrentState': {
                    'Code': 123,
                    'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                },
                'InstanceId': 'string',
                'PreviousState': {
                    'Code': 123,
                    'Name': 'pending'|'running'|'shutting-down'|'terminated'|'stopping'|'stopped'
                }
            },
        ]
    }
    
    
    :returns: 
    0 : pending
    16 : running
    32 : shutting-down
    48 : terminated
    64 : stopping
    80 : stopped
    
    """
    pass

def unassign_ipv6_addresses(Ipv6Addresses=None, NetworkInterfaceId=None):
    """
    Unassigns one or more IPv6 addresses from a network interface.
    See also: AWS API Documentation
    
    
    :example: response = client.unassign_ipv6_addresses(
        Ipv6Addresses=[
            'string',
        ],
        NetworkInterfaceId='string'
    )
    
    
    :type Ipv6Addresses: list
    :param Ipv6Addresses: [REQUIRED]\nThe IPv6 addresses to unassign from the network interface.\n\n(string) --\n\n

    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'NetworkInterfaceId': 'string',
    'UnassignedIpv6Addresses': [
        'string',
    ]
}


Response Structure

(dict) --

NetworkInterfaceId (string) --
The ID of the network interface.

UnassignedIpv6Addresses (list) --
The IPv6 addresses that have been unassigned from the network interface.

(string) --









    :return: {
        'NetworkInterfaceId': 'string',
        'UnassignedIpv6Addresses': [
            'string',
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def unassign_private_ip_addresses(NetworkInterfaceId=None, PrivateIpAddresses=None):
    """
    Unassigns one or more secondary private IP addresses from a network interface.
    See also: AWS API Documentation
    
    Examples
    This example unassigns the specified private IP address from the specified network interface.
    Expected Output:
    
    :example: response = client.unassign_private_ip_addresses(
        NetworkInterfaceId='string',
        PrivateIpAddresses=[
            'string',
        ]
    )
    
    
    :type NetworkInterfaceId: string
    :param NetworkInterfaceId: [REQUIRED]\nThe ID of the network interface.\n

    :type PrivateIpAddresses: list
    :param PrivateIpAddresses: [REQUIRED]\nThe secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.\n\n(string) --\n\n

    :return: response = client.unassign_private_ip_addresses(
        NetworkInterfaceId='eni-e5aa89a3',
        PrivateIpAddresses=[
            '10.0.0.82',
        ],
    )
    
    print(response)
    
    
    """
    pass

def unmonitor_instances(InstanceIds=None, DryRun=None):
    """
    Disables detailed monitoring for a running instance. For more information, see Monitoring Your Instances and Volumes in the Amazon Elastic Compute Cloud User Guide .
    See also: AWS API Documentation
    
    
    :example: response = client.unmonitor_instances(
        InstanceIds=[
            'string',
        ],
        DryRun=True|False
    )
    
    
    :type InstanceIds: list
    :param InstanceIds: [REQUIRED]\nThe IDs of the instances.\n\n(string) --\n\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'InstanceMonitorings': [
        {
            'InstanceId': 'string',
            'Monitoring': {
                'State': 'disabled'|'disabling'|'enabled'|'pending'
            }
        },
    ]
}


Response Structure

(dict) --

InstanceMonitorings (list) --
The monitoring information.

(dict) --
Describes the monitoring of an instance.

InstanceId (string) --
The ID of the instance.

Monitoring (dict) --
The monitoring for the instance.

State (string) --
Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.














    :return: {
        'InstanceMonitorings': [
            {
                'InstanceId': 'string',
                'Monitoring': {
                    'State': 'disabled'|'disabling'|'enabled'|'pending'
                }
            },
        ]
    }
    
    
    """
    pass

def update_security_group_rule_descriptions_egress(DryRun=None, GroupId=None, GroupName=None, IpPermissions=None):
    """
    [VPC only] Updates the description of an egress (outbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.
    You specify the description as part of the IP permissions structure. You can remove a description for a security group rule by omitting the description parameter in the request.
    See also: AWS API Documentation
    
    Examples
    This example updates the description for the specified security group rule.
    Expected Output:
    
    :example: response = client.update_security_group_rule_descriptions_egress(
        DryRun=True|False,
        GroupId='string',
        GroupName='string',
        IpPermissions=[
            {
                'FromPort': 123,
                'IpProtocol': 'string',
                'IpRanges': [
                    {
                        'CidrIp': 'string',
                        'Description': 'string'
                    },
                ],
                'Ipv6Ranges': [
                    {
                        'CidrIpv6': 'string',
                        'Description': 'string'
                    },
                ],
                'PrefixListIds': [
                    {
                        'Description': 'string',
                        'PrefixListId': 'string'
                    },
                ],
                'ToPort': 123,
                'UserIdGroupPairs': [
                    {
                        'Description': 'string',
                        'GroupId': 'string',
                        'GroupName': 'string',
                        'PeeringStatus': 'string',
                        'UserId': 'string',
                        'VpcId': 'string',
                        'VpcPeeringConnectionId': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type GroupId: string
    :param GroupId: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.

    :type GroupName: string
    :param GroupName: [Default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.

    :type IpPermissions: list
    :param IpPermissions: [REQUIRED]\nThe IP permissions for the security group rule.\n\n(dict) --Describes a set of permissions for a security group rule.\n\nFromPort (integer) --The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nIpProtocol (string) --The IP protocol name (tcp , udp , icmp , icmpv6 ) or number (see Protocol Numbers ).\n[VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp , udp , icmp , or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp , udp , and icmp , you must specify a port range. For icmpv6 , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n\nIpRanges (list) --The IPv4 ranges.\n\n(dict) --Describes an IPv4 range.\n\nCidrIp (string) --The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv4 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nIpv6Ranges (list) --[VPC only] The IPv6 ranges.\n\n(dict) --[EC2-VPC only] Describes an IPv6 range.\n\nCidrIpv6 (string) --The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv6 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nPrefixListIds (list) --[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group.\n\n(dict) --Describes a prefix list ID.\n\nDescription (string) --A description for the security group rule that references this prefix list ID.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nPrefixListId (string) --The ID of the prefix.\n\n\n\n\n\nToPort (integer) --The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUserIdGroupPairs (list) --The security group and AWS account ID pairs.\n\n(dict) --Describes a security group and AWS account ID pair.\n\nDescription (string) --A description for the security group rule that references this user ID group pair.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nGroupId (string) --The ID of the security group.\n\nGroupName (string) --The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.\nFor a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.\n\nPeeringStatus (string) --The status of a VPC peering connection, if applicable.\n\nUserId (string) --The ID of an AWS account.\nFor a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.\n[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.\n\nVpcId (string) --The ID of the VPC for the referenced security group, if applicable.\n\nVpcPeeringConnectionId (string) --The ID of the VPC peering connection, if applicable.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, returns an error.







Examples
This example updates the description for the specified security group rule.
response = client.update_security_group_rule_descriptions_egress(
    GroupId='sg-123abc12',
    IpPermissions=[
        {
            'FromPort': 80,
            'IpProtocol': 'tcp',
            'IpRanges': [
                {
                    'CidrIp': '203.0.113.0/24',
                    'Description': 'Outbound HTTP access to server 2',
                },
            ],
            'ToPort': 80,
        },
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def update_security_group_rule_descriptions_ingress(DryRun=None, GroupId=None, GroupName=None, IpPermissions=None):
    """
    Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.
    You specify the description as part of the IP permissions structure. You can remove a description for a security group rule by omitting the description parameter in the request.
    See also: AWS API Documentation
    
    Examples
    This example updates the description for the specified security group rule.
    Expected Output:
    
    :example: response = client.update_security_group_rule_descriptions_ingress(
        DryRun=True|False,
        GroupId='string',
        GroupName='string',
        IpPermissions=[
            {
                'FromPort': 123,
                'IpProtocol': 'string',
                'IpRanges': [
                    {
                        'CidrIp': 'string',
                        'Description': 'string'
                    },
                ],
                'Ipv6Ranges': [
                    {
                        'CidrIpv6': 'string',
                        'Description': 'string'
                    },
                ],
                'PrefixListIds': [
                    {
                        'Description': 'string',
                        'PrefixListId': 'string'
                    },
                ],
                'ToPort': 123,
                'UserIdGroupPairs': [
                    {
                        'Description': 'string',
                        'GroupId': 'string',
                        'GroupName': 'string',
                        'PeeringStatus': 'string',
                        'UserId': 'string',
                        'VpcId': 'string',
                        'VpcPeeringConnectionId': 'string'
                    },
                ]
            },
        ]
    )
    
    
    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :type GroupId: string
    :param GroupId: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.

    :type GroupName: string
    :param GroupName: [EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.

    :type IpPermissions: list
    :param IpPermissions: [REQUIRED]\nThe IP permissions for the security group rule.\n\n(dict) --Describes a set of permissions for a security group rule.\n\nFromPort (integer) --The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nIpProtocol (string) --The IP protocol name (tcp , udp , icmp , icmpv6 ) or number (see Protocol Numbers ).\n[VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp , udp , icmp , or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp , udp , and icmp , you must specify a port range. For icmpv6 , the port range is optional; if you omit the port range, traffic for all types and codes is allowed.\n\nIpRanges (list) --The IPv4 ranges.\n\n(dict) --Describes an IPv4 range.\n\nCidrIp (string) --The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv4 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nIpv6Ranges (list) --[VPC only] The IPv6 ranges.\n\n(dict) --[EC2-VPC only] Describes an IPv6 range.\n\nCidrIpv6 (string) --The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.\n\nDescription (string) --A description for the security group rule that references this IPv6 address range.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*\n\n\n\n\n\nPrefixListIds (list) --[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group.\n\n(dict) --Describes a prefix list ID.\n\nDescription (string) --A description for the security group rule that references this prefix list ID.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nPrefixListId (string) --The ID of the prefix.\n\n\n\n\n\nToPort (integer) --The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.\n\nUserIdGroupPairs (list) --The security group and AWS account ID pairs.\n\n(dict) --Describes a security group and AWS account ID pair.\n\nDescription (string) --A description for the security group rule that references this user ID group pair.\nConstraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*\n\nGroupId (string) --The ID of the security group.\n\nGroupName (string) --The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.\nFor a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.\n\nPeeringStatus (string) --The status of a VPC peering connection, if applicable.\n\nUserId (string) --The ID of an AWS account.\nFor a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.\n[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.\n\nVpcId (string) --The ID of the VPC for the referenced security group, if applicable.\n\nVpcPeeringConnectionId (string) --The ID of the VPC peering connection, if applicable.\n\n\n\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Return': True|False
}


Response Structure

(dict) --

Return (boolean) --
Returns true if the request succeeds; otherwise, returns an error.







Examples
This example updates the description for the specified security group rule.
response = client.update_security_group_rule_descriptions_ingress(
    GroupId='sg-123abc12',
    IpPermissions=[
        {
            'FromPort': 22,
            'IpProtocol': 'tcp',
            'IpRanges': [
                {
                    'CidrIp': '203.0.113.0/16',
                    'Description': 'SSH access from the LA office',
                },
            ],
            'ToPort': 22,
        },
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Return': True|False
    }
    
    
    """
    pass

def withdraw_byoip_cidr(Cidr=None, DryRun=None):
    """
    Stops advertising an address range that is provisioned as an address pool.
    You can perform this operation at most once every 10 seconds, even if you specify different address ranges each time.
    It can take a few minutes before traffic to the specified addresses stops routing to AWS because of BGP propagation delays.
    See also: AWS API Documentation
    
    
    :example: response = client.withdraw_byoip_cidr(
        Cidr='string',
        DryRun=True|False
    )
    
    
    :type Cidr: string
    :param Cidr: [REQUIRED]\nThe address range, in CIDR notation.\n

    :type DryRun: boolean
    :param DryRun: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation .

    :rtype: dict

ReturnsResponse Syntax
{
    'ByoipCidr': {
        'Cidr': 'string',
        'Description': 'string',
        'StatusMessage': 'string',
        'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
    }
}


Response Structure

(dict) --

ByoipCidr (dict) --
Information about the address pool.

Cidr (string) --
The address range, in CIDR notation.

Description (string) --
The description of the address range.

StatusMessage (string) --
Upon success, contains the ID of the address pool. Otherwise, contains an error message.

State (string) --
The state of the address pool.










    :return: {
        'ByoipCidr': {
            'Cidr': 'string',
            'Description': 'string',
            'StatusMessage': 'string',
            'State': 'advertised'|'deprovisioned'|'failed-deprovision'|'failed-provision'|'pending-deprovision'|'pending-provision'|'provisioned'|'provisioned-not-publicly-advertisable'
        }
    }
    
    
    """
    pass

