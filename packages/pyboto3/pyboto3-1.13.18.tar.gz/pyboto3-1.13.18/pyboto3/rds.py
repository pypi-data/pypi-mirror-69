'''

The MIT License (MIT)

Copyright (c) 2016 WavyCloud

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

'''

def add_role_to_db_cluster(DBClusterIdentifier=None, RoleArn=None, FeatureName=None):
    """
    Associates an Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see Authorizing Amazon Aurora MySQL to Access Other AWS Services on Your Behalf in the Amazon Aurora User Guide .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.add_role_to_db_cluster(
        DBClusterIdentifier='string',
        RoleArn='string',
        FeatureName='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe name of the DB cluster to associate the IAM role with.\n

    :type RoleArn: string
    :param RoleArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the IAM role to associate with the Aurora DB cluster, for example arn:aws:iam::123456789012:role/AuroraAccessRole .\n

    :type FeatureName: string
    :param FeatureName: The name of the feature for the DB cluster that the IAM role is to be associated with. For the list of supported feature names, see DBEngineVersion .

    :returns: 
    RDS.Client.exceptions.DBClusterNotFoundFault
    RDS.Client.exceptions.DBClusterRoleAlreadyExistsFault
    RDS.Client.exceptions.InvalidDBClusterStateFault
    RDS.Client.exceptions.DBClusterRoleQuotaExceededFault
    
    """
    pass

def add_role_to_db_instance(DBInstanceIdentifier=None, RoleArn=None, FeatureName=None):
    """
    Associates an AWS Identity and Access Management (IAM) role with a DB instance.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.add_role_to_db_instance(
        DBInstanceIdentifier='string',
        RoleArn='string',
        FeatureName='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe name of the DB instance to associate the IAM role with.\n

    :type RoleArn: string
    :param RoleArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the IAM role to associate with the DB instance, for example arn:aws:iam::123456789012:role/AccessRole .\n

    :type FeatureName: string
    :param FeatureName: [REQUIRED]\nThe name of the feature for the DB instance that the IAM role is to be associated with. For the list of supported feature names, see DBEngineVersion .\n

    :returns: 
    RDS.Client.exceptions.DBInstanceNotFoundFault
    RDS.Client.exceptions.DBInstanceRoleAlreadyExistsFault
    RDS.Client.exceptions.InvalidDBInstanceStateFault
    RDS.Client.exceptions.DBInstanceRoleQuotaExceededFault
    
    """
    pass

def add_source_identifier_to_subscription(SubscriptionName=None, SourceIdentifier=None):
    """
    Adds a source identifier to an existing RDS event notification subscription.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example add a source identifier to an event notification subscription.
    Expected Output:
    
    :example: response = client.add_source_identifier_to_subscription(
        SubscriptionName='string',
        SourceIdentifier='string'
    )
    
    
    :type SubscriptionName: string
    :param SubscriptionName: [REQUIRED]\nThe name of the RDS event notification subscription you want to add a source identifier to.\n

    :type SourceIdentifier: string
    :param SourceIdentifier: [REQUIRED]\nThe identifier of the event source to be added.\nConstraints:\n\nIf the source type is a DB instance, then a DBInstanceIdentifier must be supplied.\nIf the source type is a DB security group, a DBSecurityGroupName must be supplied.\nIf the source type is a DB parameter group, a DBParameterGroupName must be supplied.\nIf the source type is a DB snapshot, a DBSnapshotIdentifier must be supplied.\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'EventSubscription': {
        'CustomerAwsId': 'string',
        'CustSubscriptionId': 'string',
        'SnsTopicArn': 'string',
        'Status': 'string',
        'SubscriptionCreationTime': 'string',
        'SourceType': 'string',
        'SourceIdsList': [
            'string',
        ],
        'EventCategoriesList': [
            'string',
        ],
        'Enabled': True|False,
        'EventSubscriptionArn': 'string'
    }
}


Response Structure

(dict) --

EventSubscription (dict) --
Contains the results of a successful invocation of the DescribeEventSubscriptions action.

CustomerAwsId (string) --
The AWS customer account associated with the RDS event notification subscription.

CustSubscriptionId (string) --
The RDS event notification subscription Id.

SnsTopicArn (string) --
The topic ARN of the RDS event notification subscription.

Status (string) --
The status of the RDS event notification subscription.
Constraints:
Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist
The status "no-permission" indicates that RDS no longer has permission to post to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.

SubscriptionCreationTime (string) --
The time the RDS event notification subscription was created.

SourceType (string) --
The source type for the RDS event notification subscription.

SourceIdsList (list) --
A list of source IDs for the RDS event notification subscription.

(string) --


EventCategoriesList (list) --
A list of event categories for the RDS event notification subscription.

(string) --


Enabled (boolean) --
A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.

EventSubscriptionArn (string) --
The Amazon Resource Name (ARN) for the event subscription.









Exceptions

RDS.Client.exceptions.SubscriptionNotFoundFault
RDS.Client.exceptions.SourceNotFoundFault

Examples
This example add a source identifier to an event notification subscription.
response = client.add_source_identifier_to_subscription(
    SourceIdentifier='mymysqlinstance',
    SubscriptionName='mymysqleventsubscription',
)

print(response)


Expected Output:
{
    'EventSubscription': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'EventSubscription': {
            'CustomerAwsId': 'string',
            'CustSubscriptionId': 'string',
            'SnsTopicArn': 'string',
            'Status': 'string',
            'SubscriptionCreationTime': 'string',
            'SourceType': 'string',
            'SourceIdsList': [
                'string',
            ],
            'EventCategoriesList': [
                'string',
            ],
            'Enabled': True|False,
            'EventSubscriptionArn': 'string'
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def add_tags_to_resource(ResourceName=None, Tags=None):
    """
    Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.
    For an overview on tagging Amazon RDS resources, see Tagging Amazon RDS Resources .
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example adds a tag to an option group.
    Expected Output:
    
    :example: response = client.add_tags_to_resource(
        ResourceName='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type ResourceName: string
    :param ResourceName: [REQUIRED]\nThe Amazon RDS resource that the tags are added to. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see Constructing an RDS Amazon Resource Name (ARN) .\n

    :type Tags: list
    :param Tags: [REQUIRED]\nThe tags to be assigned to the Amazon RDS resource.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :return: response = client.add_tags_to_resource(
        ResourceName='arn:aws:rds:us-east-1:992648334831:og:mymysqloptiongroup',
        Tags=[
            {
                'Key': 'Staging',
                'Value': 'LocationDB',
            },
        ],
    )
    
    print(response)
    
    
    :returns: 
    RDS.Client.exceptions.DBInstanceNotFoundFault
    RDS.Client.exceptions.DBClusterNotFoundFault
    RDS.Client.exceptions.DBSnapshotNotFoundFault
    RDS.Client.exceptions.DBProxyNotFoundFault
    RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
    
    """
    pass

def apply_pending_maintenance_action(ResourceIdentifier=None, ApplyAction=None, OptInType=None):
    """
    Applies a pending maintenance action to a resource (for example, to a DB instance).
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example immediately applies a pending system update to a DB instance.
    Expected Output:
    
    :example: response = client.apply_pending_maintenance_action(
        ResourceIdentifier='string',
        ApplyAction='string',
        OptInType='string'
    )
    
    
    :type ResourceIdentifier: string
    :param ResourceIdentifier: [REQUIRED]\nThe RDS Amazon Resource Name (ARN) of the resource that the pending maintenance action applies to. For information about creating an ARN, see Constructing an RDS Amazon Resource Name (ARN) .\n

    :type ApplyAction: string
    :param ApplyAction: [REQUIRED]\nThe pending maintenance action to apply to this resource.\nValid values: system-update , db-upgrade , hardware-maintenance , ca-certificate-rotation\n

    :type OptInType: string
    :param OptInType: [REQUIRED]\nA value that specifies the type of opt-in request, or undoes an opt-in request. An opt-in request of type immediate can\'t be undone.\nValid values:\n\nimmediate - Apply the maintenance action immediately.\nnext-maintenance - Apply the maintenance action during the next maintenance window for the resource.\nundo-opt-in - Cancel any existing next-maintenance opt-in requests.\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ResourcePendingMaintenanceActions': {
        'ResourceIdentifier': 'string',
        'PendingMaintenanceActionDetails': [
            {
                'Action': 'string',
                'AutoAppliedAfterDate': datetime(2015, 1, 1),
                'ForcedApplyDate': datetime(2015, 1, 1),
                'OptInStatus': 'string',
                'CurrentApplyDate': datetime(2015, 1, 1),
                'Description': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

ResourcePendingMaintenanceActions (dict) --
Describes the pending maintenance actions for a resource.

ResourceIdentifier (string) --
The ARN of the resource that has pending maintenance actions.

PendingMaintenanceActionDetails (list) --
A list that provides details about the pending maintenance actions for the resource.

(dict) --
Provides information about a pending maintenance action for a resource.

Action (string) --
The type of pending maintenance action that is available for the resource. Valid actions are system-update , db-upgrade , hardware-maintenance , and ca-certificate-rotation .

AutoAppliedAfterDate (datetime) --
The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date.

ForcedApplyDate (datetime) --
The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource.

OptInStatus (string) --
Indicates the type of opt-in request that has been received for the resource.

CurrentApplyDate (datetime) --
The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the ApplyPendingMaintenanceAction API, the AutoAppliedAfterDate , and the ForcedApplyDate . This value is blank if an opt-in request has not been received and nothing has been specified as AutoAppliedAfterDate or ForcedApplyDate .

Description (string) --
A description providing more detail about the maintenance action.













Exceptions

RDS.Client.exceptions.ResourceNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBInstanceStateFault

Examples
This example immediately applies a pending system update to a DB instance.
response = client.apply_pending_maintenance_action(
    ApplyAction='system-update',
    OptInType='immediate',
    ResourceIdentifier='arn:aws:rds:us-east-1:992648334831:db:mymysqlinstance',
)

print(response)


Expected Output:
{
    'ResourcePendingMaintenanceActions': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'ResourcePendingMaintenanceActions': {
            'ResourceIdentifier': 'string',
            'PendingMaintenanceActionDetails': [
                {
                    'Action': 'string',
                    'AutoAppliedAfterDate': datetime(2015, 1, 1),
                    'ForcedApplyDate': datetime(2015, 1, 1),
                    'OptInStatus': 'string',
                    'CurrentApplyDate': datetime(2015, 1, 1),
                    'Description': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.ResourceNotFoundFault
    RDS.Client.exceptions.InvalidDBClusterStateFault
    RDS.Client.exceptions.InvalidDBInstanceStateFault
    
    """
    pass

def authorize_db_security_group_ingress(DBSecurityGroupName=None, CIDRIP=None, EC2SecurityGroupName=None, EC2SecurityGroupId=None, EC2SecurityGroupOwnerId=None):
    """
    Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).
    For an overview of CIDR ranges, go to the Wikipedia Tutorial .
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example authorizes access to the specified security group by the specified CIDR block.
    Expected Output:
    
    :example: response = client.authorize_db_security_group_ingress(
        DBSecurityGroupName='string',
        CIDRIP='string',
        EC2SecurityGroupName='string',
        EC2SecurityGroupId='string',
        EC2SecurityGroupOwnerId='string'
    )
    
    
    :type DBSecurityGroupName: string
    :param DBSecurityGroupName: [REQUIRED]\nThe name of the DB security group to add authorization to.\n

    :type CIDRIP: string
    :param CIDRIP: The IP range to authorize.

    :type EC2SecurityGroupName: string
    :param EC2SecurityGroupName: Name of the EC2 security group to authorize. For VPC DB security groups, EC2SecurityGroupId must be provided. Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.

    :type EC2SecurityGroupId: string
    :param EC2SecurityGroupId: Id of the EC2 security group to authorize. For VPC DB security groups, EC2SecurityGroupId must be provided. Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.

    :type EC2SecurityGroupOwnerId: string
    :param EC2SecurityGroupOwnerId: AWS account number of the owner of the EC2 security group specified in the EC2SecurityGroupName parameter. The AWS access key ID isn\'t an acceptable value. For VPC DB security groups, EC2SecurityGroupId must be provided. Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBSecurityGroup': {
        'OwnerId': 'string',
        'DBSecurityGroupName': 'string',
        'DBSecurityGroupDescription': 'string',
        'VpcId': 'string',
        'EC2SecurityGroups': [
            {
                'Status': 'string',
                'EC2SecurityGroupName': 'string',
                'EC2SecurityGroupId': 'string',
                'EC2SecurityGroupOwnerId': 'string'
            },
        ],
        'IPRanges': [
            {
                'Status': 'string',
                'CIDRIP': 'string'
            },
        ],
        'DBSecurityGroupArn': 'string'
    }
}


Response Structure

(dict) --

DBSecurityGroup (dict) --
Contains the details for an Amazon RDS DB security group.
This data type is used as a response element in the DescribeDBSecurityGroups action.

OwnerId (string) --
Provides the AWS ID of the owner of a specific DB security group.

DBSecurityGroupName (string) --
Specifies the name of the DB security group.

DBSecurityGroupDescription (string) --
Provides the description of the DB security group.

VpcId (string) --
Provides the VpcId of the DB security group.

EC2SecurityGroups (list) --
Contains a list of EC2SecurityGroup elements.

(dict) --
This data type is used as a response element in the following actions:

AuthorizeDBSecurityGroupIngress
DescribeDBSecurityGroups
RevokeDBSecurityGroupIngress


Status (string) --
Provides the status of the EC2 security group. Status can be "authorizing", "authorized", "revoking", and "revoked".

EC2SecurityGroupName (string) --
Specifies the name of the EC2 security group.

EC2SecurityGroupId (string) --
Specifies the id of the EC2 security group.

EC2SecurityGroupOwnerId (string) --
Specifies the AWS ID of the owner of the EC2 security group specified in the EC2SecurityGroupName field.





IPRanges (list) --
Contains a list of IPRange elements.

(dict) --
This data type is used as a response element in the DescribeDBSecurityGroups action.

Status (string) --
Specifies the status of the IP range. Status can be "authorizing", "authorized", "revoking", and "revoked".

CIDRIP (string) --
Specifies the IP range.





DBSecurityGroupArn (string) --
The Amazon Resource Name (ARN) for the DB security group.









Exceptions

RDS.Client.exceptions.DBSecurityGroupNotFoundFault
RDS.Client.exceptions.InvalidDBSecurityGroupStateFault
RDS.Client.exceptions.AuthorizationAlreadyExistsFault
RDS.Client.exceptions.AuthorizationQuotaExceededFault

Examples
This example authorizes access to the specified security group by the specified CIDR block.
response = client.authorize_db_security_group_ingress(
    CIDRIP='203.0.113.5/32',
    DBSecurityGroupName='mydbsecuritygroup',
)

print(response)


Expected Output:
{
    'DBSecurityGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSecurityGroup': {
            'OwnerId': 'string',
            'DBSecurityGroupName': 'string',
            'DBSecurityGroupDescription': 'string',
            'VpcId': 'string',
            'EC2SecurityGroups': [
                {
                    'Status': 'string',
                    'EC2SecurityGroupName': 'string',
                    'EC2SecurityGroupId': 'string',
                    'EC2SecurityGroupOwnerId': 'string'
                },
            ],
            'IPRanges': [
                {
                    'Status': 'string',
                    'CIDRIP': 'string'
                },
            ],
            'DBSecurityGroupArn': 'string'
        }
    }
    
    
    :returns: 
    AuthorizeDBSecurityGroupIngress
    DescribeDBSecurityGroups
    RevokeDBSecurityGroupIngress
    
    """
    pass

def backtrack_db_cluster(DBClusterIdentifier=None, BacktrackTo=None, Force=None, UseEarliestTimeOnPointInTimeUnavailable=None):
    """
    Backtracks a DB cluster to a specific time, without creating a new DB cluster.
    For more information on backtracking, see Backtracking an Aurora DB Cluster in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.backtrack_db_cluster(
        DBClusterIdentifier='string',
        BacktrackTo=datetime(2015, 1, 1),
        Force=True|False,
        UseEarliestTimeOnPointInTimeUnavailable=True|False
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe DB cluster identifier of the DB cluster to be backtracked. This parameter is stored as a lowercase string.\nConstraints:\n\nMust contain from 1 to 63 alphanumeric characters or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\nExample: my-cluster1\n

    :type BacktrackTo: datetime
    :param BacktrackTo: [REQUIRED]\nThe timestamp of the time to backtrack the DB cluster to, specified in ISO 8601 format. For more information about ISO 8601, see the ISO8601 Wikipedia page.\n\nNote\nIf the specified time isn\'t a consistent time for the DB cluster, Aurora automatically chooses the nearest possible consistent time for the DB cluster.\n\nConstraints:\n\nMust contain a valid ISO 8601 timestamp.\nCan\'t contain a timestamp set in the future.\n\nExample: 2017-07-08T18:00Z\n

    :type Force: boolean
    :param Force: A value that indicates whether to force the DB cluster to backtrack when binary logging is enabled. Otherwise, an error occurs when binary logging is enabled.

    :type UseEarliestTimeOnPointInTimeUnavailable: boolean
    :param UseEarliestTimeOnPointInTimeUnavailable: A value that indicates whether to backtrack the DB cluster to the earliest possible backtrack time when BacktrackTo is set to a timestamp earlier than the earliest backtrack time. When this parameter is disabled and BacktrackTo is set to a timestamp earlier than the earliest backtrack time, an error occurs.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterIdentifier': 'string',
    'BacktrackIdentifier': 'string',
    'BacktrackTo': datetime(2015, 1, 1),
    'BacktrackedFrom': datetime(2015, 1, 1),
    'BacktrackRequestCreationTime': datetime(2015, 1, 1),
    'Status': 'string'
}


Response Structure

(dict) --
This data type is used as a response element in the DescribeDBClusterBacktracks action.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

BacktrackIdentifier (string) --
Contains the backtrack identifier.

BacktrackTo (datetime) --
The timestamp of the time to which the DB cluster was backtracked.

BacktrackedFrom (datetime) --
The timestamp of the time from which the DB cluster was backtracked.

BacktrackRequestCreationTime (datetime) --
The timestamp of the time at which the backtrack was requested.

Status (string) --
The status of the backtrack. This property returns one of the following values:

applying - The backtrack is currently being applied to or rolled back from the DB cluster.
completed - The backtrack has successfully been applied to or rolled back from the DB cluster.
failed - An error occurred while the backtrack was applied to or rolled back from the DB cluster.
pending - The backtrack is currently pending application to or rollback from the DB cluster.








Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault


    :return: {
        'DBClusterIdentifier': 'string',
        'BacktrackIdentifier': 'string',
        'BacktrackTo': datetime(2015, 1, 1),
        'BacktrackedFrom': datetime(2015, 1, 1),
        'BacktrackRequestCreationTime': datetime(2015, 1, 1),
        'Status': 'string'
    }
    
    
    :returns: 
    applying - The backtrack is currently being applied to or rolled back from the DB cluster.
    completed - The backtrack has successfully been applied to or rolled back from the DB cluster.
    failed - An error occurred while the backtrack was applied to or rolled back from the DB cluster.
    pending - The backtrack is currently pending application to or rollback from the DB cluster.
    
    """
    pass

def can_paginate(operation_name=None):
    """
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name. This is the same name\nas the method name on the client. For example, if the\nmethod name is create_foo, and you\'d normally invoke the\noperation as client.create_foo(**kwargs), if the\ncreate_foo operation can be paginated, you can use the\ncall client.get_paginator('create_foo').

    """
    pass

def cancel_export_task(ExportTaskIdentifier=None):
    """
    Cancels an export task in progress that is exporting a snapshot to Amazon S3. Any data that has already been written to the S3 bucket isn\'t removed.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.cancel_export_task(
        ExportTaskIdentifier='string'
    )
    
    
    :type ExportTaskIdentifier: string
    :param ExportTaskIdentifier: [REQUIRED]\nThe identifier of the snapshot export task to cancel.\n

    :rtype: dict
ReturnsResponse Syntax{
    'ExportTaskIdentifier': 'string',
    'SourceArn': 'string',
    'ExportOnly': [
        'string',
    ],
    'SnapshotTime': datetime(2015, 1, 1),
    'TaskStartTime': datetime(2015, 1, 1),
    'TaskEndTime': datetime(2015, 1, 1),
    'S3Bucket': 'string',
    'S3Prefix': 'string',
    'IamRoleArn': 'string',
    'KmsKeyId': 'string',
    'Status': 'string',
    'PercentProgress': 123,
    'TotalExtractedDataInGB': 123,
    'FailureCause': 'string',
    'WarningMessage': 'string'
}


Response Structure

(dict) --Contains the details of a snapshot export to Amazon S3.
This data type is used as a response element in the DescribeExportTasks action.

ExportTaskIdentifier (string) --A unique identifier for the snapshot export task. This ID isn\'t an identifier for the Amazon S3 bucket where the snapshot is exported to.

SourceArn (string) --The Amazon Resource Name (ARN) of the snapshot exported to Amazon S3.

ExportOnly (list) --The data exported from the snapshot. Valid values are the following:

database - Export all the data from a specified database.
database.table table-name - Export a table of the snapshot. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.
database.schema schema-name - Export a database schema of the snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.
database.schema.table table-name - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.


(string) --


SnapshotTime (datetime) --The time that the snapshot was created.

TaskStartTime (datetime) --The time that the snapshot export task started.

TaskEndTime (datetime) --The time that the snapshot export task completed.

S3Bucket (string) --The Amazon S3 bucket that the snapshot is exported to.

S3Prefix (string) --The Amazon S3 bucket prefix that is the file name and path of the exported snapshot.

IamRoleArn (string) --The name of the IAM role that is used to write to Amazon S3 when exporting a snapshot.

KmsKeyId (string) --The ID of the AWS KMS key that is used to encrypt the snapshot when it\'s exported to Amazon S3. The KMS key ID is the Amazon Resource Name (ARN), the KMS key identifier, or the KMS key alias for the KMS encryption key. The IAM role used for the snapshot export must have encryption and decryption permissions to use this KMS key.

Status (string) --The progress status of the export task.

PercentProgress (integer) --The progress of the snapshot export task as a percentage.

TotalExtractedDataInGB (integer) --The total amount of data exported, in gigabytes.

FailureCause (string) --The reason the export failed, if it failed.

WarningMessage (string) --A warning about the snapshot export task.






Exceptions

RDS.Client.exceptions.ExportTaskNotFoundFault
RDS.Client.exceptions.InvalidExportTaskStateFault


    :return: {
        'ExportTaskIdentifier': 'string',
        'SourceArn': 'string',
        'ExportOnly': [
            'string',
        ],
        'SnapshotTime': datetime(2015, 1, 1),
        'TaskStartTime': datetime(2015, 1, 1),
        'TaskEndTime': datetime(2015, 1, 1),
        'S3Bucket': 'string',
        'S3Prefix': 'string',
        'IamRoleArn': 'string',
        'KmsKeyId': 'string',
        'Status': 'string',
        'PercentProgress': 123,
        'TotalExtractedDataInGB': 123,
        'FailureCause': 'string',
        'WarningMessage': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def copy_db_cluster_parameter_group(SourceDBClusterParameterGroupIdentifier=None, TargetDBClusterParameterGroupIdentifier=None, TargetDBClusterParameterGroupDescription=None, Tags=None):
    """
    Copies the specified DB cluster parameter group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example copies a DB cluster parameter group.
    Expected Output:
    
    :example: response = client.copy_db_cluster_parameter_group(
        SourceDBClusterParameterGroupIdentifier='string',
        TargetDBClusterParameterGroupIdentifier='string',
        TargetDBClusterParameterGroupDescription='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type SourceDBClusterParameterGroupIdentifier: string
    :param SourceDBClusterParameterGroupIdentifier: [REQUIRED]\nThe identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group. For information about creating an ARN, see Constructing an ARN for Amazon RDS in the Amazon Aurora User Guide .\nConstraints:\n\nMust specify a valid DB cluster parameter group.\nIf the source DB cluster parameter group is in the same AWS Region as the copy, specify a valid DB parameter group identifier, for example my-db-cluster-param-group , or a valid ARN.\nIf the source DB parameter group is in a different AWS Region than the copy, specify a valid DB cluster parameter group ARN, for example arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1 .\n\n

    :type TargetDBClusterParameterGroupIdentifier: string
    :param TargetDBClusterParameterGroupIdentifier: [REQUIRED]\nThe identifier for the copied DB cluster parameter group.\nConstraints:\n\nCan\'t be null, empty, or blank\nMust contain from 1 to 255 letters, numbers, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: my-cluster-param-group1\n

    :type TargetDBClusterParameterGroupDescription: string
    :param TargetDBClusterParameterGroupDescription: [REQUIRED]\nA description for the copied DB cluster parameter group.\n

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterParameterGroup': {
        'DBClusterParameterGroupName': 'string',
        'DBParameterGroupFamily': 'string',
        'Description': 'string',
        'DBClusterParameterGroupArn': 'string'
    }
}


Response Structure

(dict) --

DBClusterParameterGroup (dict) --
Contains the details of an Amazon RDS DB cluster parameter group.
This data type is used as a response element in the DescribeDBClusterParameterGroups action.

DBClusterParameterGroupName (string) --
Provides the name of the DB cluster parameter group.

DBParameterGroupFamily (string) --
Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.

Description (string) --
Provides the customer-specified description for this DB cluster parameter group.

DBClusterParameterGroupArn (string) --
The Amazon Resource Name (ARN) for the DB cluster parameter group.









Exceptions

RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.DBParameterGroupQuotaExceededFault
RDS.Client.exceptions.DBParameterGroupAlreadyExistsFault

Examples
This example copies a DB cluster parameter group.
response = client.copy_db_cluster_parameter_group(
    SourceDBClusterParameterGroupIdentifier='mydbclusterparametergroup',
    TargetDBClusterParameterGroupDescription='My DB cluster parameter group copy',
    TargetDBClusterParameterGroupIdentifier='mydbclusterparametergroup-copy',
)

print(response)


Expected Output:
{
    'DBClusterParameterGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBClusterParameterGroup': {
            'DBClusterParameterGroupName': 'string',
            'DBParameterGroupFamily': 'string',
            'Description': 'string',
            'DBClusterParameterGroupArn': 'string'
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBParameterGroupNotFoundFault
    RDS.Client.exceptions.DBParameterGroupQuotaExceededFault
    RDS.Client.exceptions.DBParameterGroupAlreadyExistsFault
    
    """
    pass

def copy_db_cluster_snapshot(SourceDBClusterSnapshotIdentifier=None, TargetDBClusterSnapshotIdentifier=None, KmsKeyId=None, PreSignedUrl=None, CopyTags=None, Tags=None, SourceRegion=None):
    """
    Copies a snapshot of a DB cluster.
    To copy a DB cluster snapshot from a shared manual DB cluster snapshot, SourceDBClusterSnapshotIdentifier must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.
    You can copy an encrypted DB cluster snapshot from another AWS Region. In that case, the AWS Region where you call the CopyDBClusterSnapshot action is the destination AWS Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another AWS Region, you must provide the following values:
    To learn how to generate a Signature Version 4 signed request, see Authenticating Requests: Using Query Parameters (AWS Signature Version 4) and Signature Version 4 Signing Process .
    To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by TargetDBClusterSnapshotIdentifier while that DB cluster snapshot is in "copying" status.
    For more information on copying encrypted DB cluster snapshots from one AWS Region to another, see Copying a Snapshot in the Amazon Aurora User Guide.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    The following example copies an automated snapshot of a DB cluster to a new DB cluster snapshot.
    Expected Output:
    
    :example: response = client.copy_db_cluster_snapshot(
        SourceDBClusterSnapshotIdentifier='string',
        TargetDBClusterSnapshotIdentifier='string',
        KmsKeyId='string',
        CopyTags=True|False,
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        SourceRegion='string'
    )
    
    
    :type SourceDBClusterSnapshotIdentifier: string
    :param SourceDBClusterSnapshotIdentifier: [REQUIRED]\nThe identifier of the DB cluster snapshot to copy. This parameter isn\'t case-sensitive.\nYou can\'t copy an encrypted, shared DB cluster snapshot from one AWS Region to another.\nConstraints:\n\nMust specify a valid system snapshot in the 'available' state.\nIf the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot identifier.\nIf the source snapshot is in a different AWS Region than the copy, specify a valid DB cluster snapshot ARN. For more information, go to Copying Snapshots Across AWS Regions in the Amazon Aurora User Guide.\n\nExample: my-cluster-snapshot1\n

    :type TargetDBClusterSnapshotIdentifier: string
    :param TargetDBClusterSnapshotIdentifier: [REQUIRED]\nThe identifier of the new DB cluster snapshot to create from the source DB cluster snapshot. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\nExample: my-cluster-snapshot2\n

    :type KmsKeyId: string
    :param KmsKeyId: The AWS KMS key ID for an encrypted DB cluster snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.\nIf you copy an encrypted DB cluster snapshot from your AWS account, you can specify a value for KmsKeyId to encrypt the copy with a new KMS encryption key. If you don\'t specify a value for KmsKeyId , then the copy of the DB cluster snapshot is encrypted with the same KMS key as the source DB cluster snapshot.\nIf you copy an encrypted DB cluster snapshot that is shared from another AWS account, then you must specify a value for KmsKeyId .\nTo copy an encrypted DB cluster snapshot to another AWS Region, you must set KmsKeyId to the KMS key ID you want to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you can\'t use encryption keys from one AWS Region in another AWS Region.\nIf you copy an unencrypted DB cluster snapshot and specify a value for the KmsKeyId parameter, an error is returned.\n

    :type PreSignedUrl: string
    :param PreSignedUrl: The URL that contains a Signature Version 4 signed request for the CopyDBClusterSnapshot API action in the AWS Region that contains the source DB cluster snapshot to copy. The PreSignedUrl parameter must be used when copying an encrypted DB cluster snapshot from another AWS Region. Don\'t specify PreSignedUrl when you are copying an encrypted DB cluster snapshot in the same AWS Region.\nThe pre-signed URL must be a valid request for the CopyDBClusterSnapshot API action that can be executed in the source AWS Region that contains the encrypted DB cluster snapshot to be copied. The pre-signed URL request must contain the following parameter values:\n\nKmsKeyId - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. This is the same identifier for both the CopyDBClusterSnapshot action that is called in the destination AWS Region, and the action contained in the pre-signed URL.\nDestinationRegion - The name of the AWS Region that the DB cluster snapshot is to be created in.\nSourceDBClusterSnapshotIdentifier - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 AWS Region, then your SourceDBClusterSnapshotIdentifier looks like the following example: arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115 .\n\nTo learn how to generate a Signature Version 4 signed request, see Authenticating Requests: Using Query Parameters (AWS Signature Version 4) and Signature Version 4 Signing Process .\n\nNote\nIf you are using an AWS SDK tool or the AWS CLI, you can specify SourceRegion (or --source-region for the AWS CLI) instead of specifying PreSignedUrl manually. Specifying SourceRegion autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source AWS Region.\n\nPlease note that this parameter is automatically populated if it is not provided. Including this parameter is not required\n\n

    :type CopyTags: boolean
    :param CopyTags: A value that indicates whether to copy all tags from the source DB cluster snapshot to the target DB cluster snapshot. By default, tags are not copied.

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type SourceRegion: string
    :param SourceRegion: The ID of the region that contains the snapshot to be copied.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterSnapshot': {
        'AvailabilityZones': [
            'string',
        ],
        'DBClusterSnapshotIdentifier': 'string',
        'DBClusterIdentifier': 'string',
        'SnapshotCreateTime': datetime(2015, 1, 1),
        'Engine': 'string',
        'AllocatedStorage': 123,
        'Status': 'string',
        'Port': 123,
        'VpcId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'MasterUsername': 'string',
        'EngineVersion': 'string',
        'LicenseModel': 'string',
        'SnapshotType': 'string',
        'PercentProgress': 123,
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DBClusterSnapshotArn': 'string',
        'SourceDBClusterSnapshotArn': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False
    }
}


Response Structure

(dict) --

DBClusterSnapshot (dict) --
Contains the details for an Amazon RDS DB cluster snapshot
This data type is used as a response element in the DescribeDBClusterSnapshots action.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot can be restored.

(string) --


DBClusterSnapshotIdentifier (string) --
Specifies the identifier for the DB cluster snapshot.

DBClusterIdentifier (string) --
Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.

SnapshotCreateTime (datetime) --
Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

Engine (string) --
Specifies the name of the database engine.

AllocatedStorage (integer) --
Specifies the allocated storage size in gibibytes (GiB).

Status (string) --
Specifies the status of this DB cluster snapshot.

Port (integer) --
Specifies the port that the DB cluster was listening on at the time of the snapshot.

VpcId (string) --
Provides the VPC ID associated with the DB cluster snapshot.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

MasterUsername (string) --
Provides the master username for the DB cluster snapshot.

EngineVersion (string) --
Provides the version of the database engine for this DB cluster snapshot.

LicenseModel (string) --
Provides the license model information for this DB cluster snapshot.

SnapshotType (string) --
Provides the type of the DB cluster snapshot.

PercentProgress (integer) --
Specifies the percentage of the estimated data that has been transferred.

StorageEncrypted (boolean) --
Specifies whether the DB cluster snapshot is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.

DBClusterSnapshotArn (string) --
The Amazon Resource Name (ARN) for the DB cluster snapshot.

SourceDBClusterSnapshotArn (string) --
If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.









Exceptions

RDS.Client.exceptions.DBClusterSnapshotAlreadyExistsFault
RDS.Client.exceptions.DBClusterSnapshotNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBClusterSnapshotStateFault
RDS.Client.exceptions.SnapshotQuotaExceededFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault

Examples
The following example copies an automated snapshot of a DB cluster to a new DB cluster snapshot.
response = client.copy_db_cluster_snapshot(
    SourceDBClusterSnapshotIdentifier='rds:sample-cluster-2016-09-14-10-38',
    TargetDBClusterSnapshotIdentifier='cluster-snapshot-copy-1',
)

print(response)


Expected Output:
{
    'DBClusterSnapshot': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBClusterSnapshot': {
            'AvailabilityZones': [
                'string',
            ],
            'DBClusterSnapshotIdentifier': 'string',
            'DBClusterIdentifier': 'string',
            'SnapshotCreateTime': datetime(2015, 1, 1),
            'Engine': 'string',
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'VpcId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'SnapshotType': 'string',
            'PercentProgress': 123,
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DBClusterSnapshotArn': 'string',
            'SourceDBClusterSnapshotArn': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False
        }
    }
    
    
    :returns: 
    TargetDBClusterSnapshotIdentifier - The identifier for the new copy of the DB cluster snapshot in the destination AWS Region.
    SourceDBClusterSnapshotIdentifier - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source AWS Region and is the same value as the SourceDBClusterSnapshotIdentifier in the pre-signed URL.
    
    """
    pass

def copy_db_parameter_group(SourceDBParameterGroupIdentifier=None, TargetDBParameterGroupIdentifier=None, TargetDBParameterGroupDescription=None, Tags=None):
    """
    Copies the specified DB parameter group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example copies a DB parameter group.
    Expected Output:
    
    :example: response = client.copy_db_parameter_group(
        SourceDBParameterGroupIdentifier='string',
        TargetDBParameterGroupIdentifier='string',
        TargetDBParameterGroupDescription='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type SourceDBParameterGroupIdentifier: string
    :param SourceDBParameterGroupIdentifier: [REQUIRED]\nThe identifier or ARN for the source DB parameter group. For information about creating an ARN, see Constructing an ARN for Amazon RDS in the Amazon RDS User Guide .\nConstraints:\n\nMust specify a valid DB parameter group.\nMust specify a valid DB parameter group identifier, for example my-db-param-group , or a valid ARN.\n\n

    :type TargetDBParameterGroupIdentifier: string
    :param TargetDBParameterGroupIdentifier: [REQUIRED]\nThe identifier for the copied DB parameter group.\nConstraints:\n\nCan\'t be null, empty, or blank\nMust contain from 1 to 255 letters, numbers, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: my-db-parameter-group\n

    :type TargetDBParameterGroupDescription: string
    :param TargetDBParameterGroupDescription: [REQUIRED]\nA description for the copied DB parameter group.\n

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBParameterGroup': {
        'DBParameterGroupName': 'string',
        'DBParameterGroupFamily': 'string',
        'Description': 'string',
        'DBParameterGroupArn': 'string'
    }
}


Response Structure

(dict) --

DBParameterGroup (dict) --
Contains the details of an Amazon RDS DB parameter group.
This data type is used as a response element in the DescribeDBParameterGroups action.

DBParameterGroupName (string) --
Provides the name of the DB parameter group.

DBParameterGroupFamily (string) --
Provides the name of the DB parameter group family that this DB parameter group is compatible with.

Description (string) --
Provides the customer-specified description for this DB parameter group.

DBParameterGroupArn (string) --
The Amazon Resource Name (ARN) for the DB parameter group.









Exceptions

RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.DBParameterGroupAlreadyExistsFault
RDS.Client.exceptions.DBParameterGroupQuotaExceededFault

Examples
This example copies a DB parameter group.
response = client.copy_db_parameter_group(
    SourceDBParameterGroupIdentifier='mymysqlparametergroup',
    TargetDBParameterGroupDescription='My MySQL parameter group copy',
    TargetDBParameterGroupIdentifier='mymysqlparametergroup-copy',
)

print(response)


Expected Output:
{
    'DBParameterGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBParameterGroup': {
            'DBParameterGroupName': 'string',
            'DBParameterGroupFamily': 'string',
            'Description': 'string',
            'DBParameterGroupArn': 'string'
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBParameterGroupNotFoundFault
    RDS.Client.exceptions.DBParameterGroupAlreadyExistsFault
    RDS.Client.exceptions.DBParameterGroupQuotaExceededFault
    
    """
    pass

def copy_db_snapshot(SourceDBSnapshotIdentifier=None, TargetDBSnapshotIdentifier=None, KmsKeyId=None, Tags=None, CopyTags=None, PreSignedUrl=None, OptionGroupName=None, SourceRegion=None):
    """
    Copies the specified DB snapshot. The source DB snapshot must be in the "available" state.
    You can copy a snapshot from one AWS Region to another. In that case, the AWS Region where you call the CopyDBSnapshot action is the destination AWS Region for the DB snapshot copy.
    For more information about copying snapshots, see Copying a DB Snapshot in the Amazon RDS User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example copies a DB snapshot.
    Expected Output:
    
    :example: response = client.copy_db_snapshot(
        SourceDBSnapshotIdentifier='string',
        TargetDBSnapshotIdentifier='string',
        KmsKeyId='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        CopyTags=True|False,
        OptionGroupName='string',
        SourceRegion='string'
    )
    
    
    :type SourceDBSnapshotIdentifier: string
    :param SourceDBSnapshotIdentifier: [REQUIRED]\nThe identifier for the source DB snapshot.\nIf the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot identifier. For example, you might specify rds:mysql-instance1-snapshot-20130805 .\nIf the source snapshot is in a different AWS Region than the copy, specify a valid DB snapshot ARN. For example, you might specify arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805 .\nIf you are copying from a shared manual DB snapshot, this parameter must be the Amazon Resource Name (ARN) of the shared DB snapshot.\nIf you are copying an encrypted snapshot this parameter must be in the ARN format for the source AWS Region, and must match the SourceDBSnapshotIdentifier in the PreSignedUrl parameter.\nConstraints:\n\nMust specify a valid system snapshot in the 'available' state.\n\nExample: rds:mydb-2012-04-02-00-01\nExample: arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805\n

    :type TargetDBSnapshotIdentifier: string
    :param TargetDBSnapshotIdentifier: [REQUIRED]\nThe identifier for the copy of the snapshot.\nConstraints:\n\nCan\'t be null, empty, or blank\nMust contain from 1 to 255 letters, numbers, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: my-db-snapshot\n

    :type KmsKeyId: string
    :param KmsKeyId: The AWS KMS key ID for an encrypted DB snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.\nIf you copy an encrypted DB snapshot from your AWS account, you can specify a value for this parameter to encrypt the copy with a new KMS encryption key. If you don\'t specify a value for this parameter, then the copy of the DB snapshot is encrypted with the same KMS key as the source DB snapshot.\nIf you copy an encrypted DB snapshot that is shared from another AWS account, then you must specify a value for this parameter.\nIf you specify this parameter when you copy an unencrypted snapshot, the copy is encrypted.\nIf you copy an encrypted snapshot to a different AWS Region, then you must specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you can\'t use encryption keys from one AWS Region in another AWS Region.\n

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type CopyTags: boolean
    :param CopyTags: A value that indicates whether to copy all tags from the source DB snapshot to the target DB snapshot. By default, tags are not copied.

    :type PreSignedUrl: string
    :param PreSignedUrl: The URL that contains a Signature Version 4 signed request for the CopyDBSnapshot API action in the source AWS Region that contains the source DB snapshot to copy.\nYou must specify this parameter when you copy an encrypted DB snapshot from another AWS Region by using the Amazon RDS API. Don\'t specify PreSignedUrl when you are copying an encrypted DB snapshot in the same AWS Region.\nThe presigned URL must be a valid request for the CopyDBSnapshot API action that can be executed in the source AWS Region that contains the encrypted DB snapshot to be copied. The presigned URL request must contain the following parameter values:\n\nDestinationRegion - The AWS Region that the encrypted DB snapshot is copied to. This AWS Region is the same one where the CopyDBSnapshot action is called that contains this presigned URL. For example, if you copy an encrypted DB snapshot from the us-west-2 AWS Region to the us-east-1 AWS Region, then you call the CopyDBSnapshot action in the us-east-1 AWS Region and provide a presigned URL that contains a call to the CopyDBSnapshot action in the us-west-2 AWS Region. For this example, the DestinationRegion in the presigned URL must be set to the us-east-1 AWS Region.\nKmsKeyId - The AWS KMS key identifier for the key to use to encrypt the copy of the DB snapshot in the destination AWS Region. This is the same identifier for both the CopyDBSnapshot action that is called in the destination AWS Region, and the action contained in the presigned URL.\nSourceDBSnapshotIdentifier - The DB snapshot identifier for the encrypted snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB snapshot from the us-west-2 AWS Region, then your SourceDBSnapshotIdentifier looks like the following example: arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20161115 .\n\nTo learn how to generate a Signature Version 4 signed request, see Authenticating Requests: Using Query Parameters (AWS Signature Version 4) and Signature Version 4 Signing Process .\n\nNote\nIf you are using an AWS SDK tool or the AWS CLI, you can specify SourceRegion (or --source-region for the AWS CLI) instead of specifying PreSignedUrl manually. Specifying SourceRegion autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source AWS Region.\n\nPlease note that this parameter is automatically populated if it is not provided. Including this parameter is not required\n\n

    :type OptionGroupName: string
    :param OptionGroupName: The name of an option group to associate with the copy of the snapshot.\nSpecify this option if you are copying a snapshot from one AWS Region to another, and your DB instance uses a nondefault option group. If your source DB instance uses Transparent Data Encryption for Oracle or Microsoft SQL Server, you must specify this option when copying across AWS Regions. For more information, see Option Group Considerations in the Amazon RDS User Guide.\n

    :type SourceRegion: string
    :param SourceRegion: The ID of the region that contains the snapshot to be copied.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBSnapshot': {
        'DBSnapshotIdentifier': 'string',
        'DBInstanceIdentifier': 'string',
        'SnapshotCreateTime': datetime(2015, 1, 1),
        'Engine': 'string',
        'AllocatedStorage': 123,
        'Status': 'string',
        'Port': 123,
        'AvailabilityZone': 'string',
        'VpcId': 'string',
        'InstanceCreateTime': datetime(2015, 1, 1),
        'MasterUsername': 'string',
        'EngineVersion': 'string',
        'LicenseModel': 'string',
        'SnapshotType': 'string',
        'Iops': 123,
        'OptionGroupName': 'string',
        'PercentProgress': 123,
        'SourceRegion': 'string',
        'SourceDBSnapshotIdentifier': 'string',
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'Encrypted': True|False,
        'KmsKeyId': 'string',
        'DBSnapshotArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DbiResourceId': 'string'
    }
}


Response Structure

(dict) --

DBSnapshot (dict) --
Contains the details of an Amazon RDS DB snapshot.
This data type is used as a response element in the DescribeDBSnapshots action.

DBSnapshotIdentifier (string) --
Specifies the identifier for the DB snapshot.

DBInstanceIdentifier (string) --
Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

SnapshotCreateTime (datetime) --
Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

Engine (string) --
Specifies the name of the database engine.

AllocatedStorage (integer) --
Specifies the allocated storage size in gibibytes (GiB).

Status (string) --
Specifies the status of this DB snapshot.

Port (integer) --
Specifies the port that the database engine was listening on at the time of the snapshot.

AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.

VpcId (string) --
Provides the VPC ID associated with the DB snapshot.

InstanceCreateTime (datetime) --
Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

MasterUsername (string) --
Provides the master username for the DB snapshot.

EngineVersion (string) --
Specifies the version of the database engine.

LicenseModel (string) --
License model information for the restored DB instance.

SnapshotType (string) --
Provides the type of the DB snapshot.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.

OptionGroupName (string) --
Provides the option group name for the DB snapshot.

PercentProgress (integer) --
The percentage of the estimated data that has been transferred.

SourceRegion (string) --
The AWS Region that the DB snapshot was created in or copied from.

SourceDBSnapshotIdentifier (string) --
The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has value in case of cross-customer or cross-region copy.

StorageType (string) --
Specifies the storage type associated with DB snapshot.

TdeCredentialArn (string) --
The ARN from the key store with which to associate the instance for TDE encryption.

Encrypted (boolean) --
Specifies whether the DB snapshot is encrypted.

KmsKeyId (string) --
If Encrypted is true, the AWS KMS key identifier for the encrypted DB snapshot.

DBSnapshotArn (string) --
The Amazon Resource Name (ARN) for the DB snapshot.

Timezone (string) --
The time zone of the DB snapshot. In most cases, the Timezone element is empty. Timezone content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.

ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB snapshot was created.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DbiResourceId (string) --
The identifier for the source DB instance, which can\'t be changed and which is unique to an AWS Region.









Exceptions

RDS.Client.exceptions.DBSnapshotAlreadyExistsFault
RDS.Client.exceptions.DBSnapshotNotFoundFault
RDS.Client.exceptions.InvalidDBSnapshotStateFault
RDS.Client.exceptions.SnapshotQuotaExceededFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault

Examples
This example copies a DB snapshot.
response = client.copy_db_snapshot(
    SourceDBSnapshotIdentifier='mydbsnapshot',
    TargetDBSnapshotIdentifier='mydbsnapshot-copy',
)

print(response)


Expected Output:
{
    'DBSnapshot': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSnapshot': {
            'DBSnapshotIdentifier': 'string',
            'DBInstanceIdentifier': 'string',
            'SnapshotCreateTime': datetime(2015, 1, 1),
            'Engine': 'string',
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'AvailabilityZone': 'string',
            'VpcId': 'string',
            'InstanceCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'SnapshotType': 'string',
            'Iops': 123,
            'OptionGroupName': 'string',
            'PercentProgress': 123,
            'SourceRegion': 'string',
            'SourceDBSnapshotIdentifier': 'string',
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'Encrypted': True|False,
            'KmsKeyId': 'string',
            'DBSnapshotArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DbiResourceId': 'string'
        }
    }
    
    
    :returns: 
    CreateDBInstance
    ModifyDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceFromS3
    RestoreDBInstanceToPointInTime
    
    """
    pass

def copy_option_group(SourceOptionGroupIdentifier=None, TargetOptionGroupIdentifier=None, TargetOptionGroupDescription=None, Tags=None):
    """
    Copies the specified option group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example copies an option group.
    Expected Output:
    
    :example: response = client.copy_option_group(
        SourceOptionGroupIdentifier='string',
        TargetOptionGroupIdentifier='string',
        TargetOptionGroupDescription='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type SourceOptionGroupIdentifier: string
    :param SourceOptionGroupIdentifier: [REQUIRED]\nThe identifier or ARN for the source option group. For information about creating an ARN, see Constructing an ARN for Amazon RDS in the Amazon RDS User Guide .\nConstraints:\n\nMust specify a valid option group.\nIf the source option group is in the same AWS Region as the copy, specify a valid option group identifier, for example my-option-group , or a valid ARN.\nIf the source option group is in a different AWS Region than the copy, specify a valid option group ARN, for example arn:aws:rds:us-west-2:123456789012:og:special-options .\n\n

    :type TargetOptionGroupIdentifier: string
    :param TargetOptionGroupIdentifier: [REQUIRED]\nThe identifier for the copied option group.\nConstraints:\n\nCan\'t be null, empty, or blank\nMust contain from 1 to 255 letters, numbers, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: my-option-group\n

    :type TargetOptionGroupDescription: string
    :param TargetOptionGroupDescription: [REQUIRED]\nThe description for the copied option group.\n

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'OptionGroup': {
        'OptionGroupName': 'string',
        'OptionGroupDescription': 'string',
        'EngineName': 'string',
        'MajorEngineVersion': 'string',
        'Options': [
            {
                'OptionName': 'string',
                'OptionDescription': 'string',
                'Persistent': True|False,
                'Permanent': True|False,
                'Port': 123,
                'OptionVersion': 'string',
                'OptionSettings': [
                    {
                        'Name': 'string',
                        'Value': 'string',
                        'DefaultValue': 'string',
                        'Description': 'string',
                        'ApplyType': 'string',
                        'DataType': 'string',
                        'AllowedValues': 'string',
                        'IsModifiable': True|False,
                        'IsCollection': True|False
                    },
                ],
                'DBSecurityGroupMemberships': [
                    {
                        'DBSecurityGroupName': 'string',
                        'Status': 'string'
                    },
                ],
                'VpcSecurityGroupMemberships': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ]
            },
        ],
        'AllowsVpcAndNonVpcInstanceMemberships': True|False,
        'VpcId': 'string',
        'OptionGroupArn': 'string'
    }
}


Response Structure

(dict) --

OptionGroup (dict) --

OptionGroupName (string) --
Specifies the name of the option group.

OptionGroupDescription (string) --
Provides a description of the option group.

EngineName (string) --
Indicates the name of the engine that this option group can be applied to.

MajorEngineVersion (string) --
Indicates the major engine version associated with this option group.

Options (list) --
Indicates what options are available in the option group.

(dict) --
Option details.

OptionName (string) --
The name of the option.

OptionDescription (string) --
The description of the option.

Persistent (boolean) --
Indicate if this option is persistent.

Permanent (boolean) --
Indicate if this option is permanent.

Port (integer) --
If required, the port configured for this option to use.

OptionVersion (string) --
The version of the option.

OptionSettings (list) --
The option settings for this option.

(dict) --
Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.

Name (string) --
The name of the option that has settings that you can set.

Value (string) --
The current value of the option setting.

DefaultValue (string) --
The default value of the option setting.

Description (string) --
The description of the option setting.

ApplyType (string) --
The DB engine specific parameter type.

DataType (string) --
The data type of the option setting.

AllowedValues (string) --
The allowed values of the option setting.

IsModifiable (boolean) --
A Boolean value that, when true, indicates the option setting can be modified from the default.

IsCollection (boolean) --
Indicates if the option setting is part of a collection.





DBSecurityGroupMemberships (list) --
If the option requires access to a port, then this DB security group allows access to the port.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroupMemberships (list) --
If the option requires access to a port, then this VPC security group allows access to the port.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.









AllowsVpcAndNonVpcInstanceMemberships (boolean) --
Indicates whether this option group can be applied to both VPC and non-VPC instances. The value true indicates the option group can be applied to both VPC and non-VPC instances.

VpcId (string) --
If AllowsVpcAndNonVpcInstanceMemberships is false , this field is blank. If AllowsVpcAndNonVpcInstanceMemberships is true and this field is blank, then this option group can be applied to both VPC and non-VPC instances. If this field contains a value, then this option group can only be applied to instances that are in the VPC indicated by this field.

OptionGroupArn (string) --
The Amazon Resource Name (ARN) for the option group.









Exceptions

RDS.Client.exceptions.OptionGroupAlreadyExistsFault
RDS.Client.exceptions.OptionGroupNotFoundFault
RDS.Client.exceptions.OptionGroupQuotaExceededFault

Examples
This example copies an option group.
response = client.copy_option_group(
    SourceOptionGroupIdentifier='mymysqloptiongroup',
    TargetOptionGroupDescription='My MySQL option group copy',
    TargetOptionGroupIdentifier='mymysqloptiongroup-copy',
)

print(response)


Expected Output:
{
    'OptionGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'OptionGroup': {
            'OptionGroupName': 'string',
            'OptionGroupDescription': 'string',
            'EngineName': 'string',
            'MajorEngineVersion': 'string',
            'Options': [
                {
                    'OptionName': 'string',
                    'OptionDescription': 'string',
                    'Persistent': True|False,
                    'Permanent': True|False,
                    'Port': 123,
                    'OptionVersion': 'string',
                    'OptionSettings': [
                        {
                            'Name': 'string',
                            'Value': 'string',
                            'DefaultValue': 'string',
                            'Description': 'string',
                            'ApplyType': 'string',
                            'DataType': 'string',
                            'AllowedValues': 'string',
                            'IsModifiable': True|False,
                            'IsCollection': True|False
                        },
                    ],
                    'DBSecurityGroupMemberships': [
                        {
                            'DBSecurityGroupName': 'string',
                            'Status': 'string'
                        },
                    ],
                    'VpcSecurityGroupMemberships': [
                        {
                            'VpcSecurityGroupId': 'string',
                            'Status': 'string'
                        },
                    ]
                },
            ],
            'AllowsVpcAndNonVpcInstanceMemberships': True|False,
            'VpcId': 'string',
            'OptionGroupArn': 'string'
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def create_custom_availability_zone(CustomAvailabilityZoneName=None, ExistingVpnId=None, NewVpnTunnelName=None, VpnTunnelOriginatorIP=None):
    """
    Creates a custom Availability Zone (AZ).
    A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.
    For more information about RDS on VMware, see the ` RDS on VMware User Guide. https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.create_custom_availability_zone(
        CustomAvailabilityZoneName='string',
        ExistingVpnId='string',
        NewVpnTunnelName='string',
        VpnTunnelOriginatorIP='string'
    )
    
    
    :type CustomAvailabilityZoneName: string
    :param CustomAvailabilityZoneName: [REQUIRED]\nThe name of the custom Availability Zone (AZ).\n

    :type ExistingVpnId: string
    :param ExistingVpnId: The ID of an existing virtual private network (VPN) between the Amazon RDS website and the VMware vSphere cluster.

    :type NewVpnTunnelName: string
    :param NewVpnTunnelName: The name of a new VPN tunnel between the Amazon RDS website and the VMware vSphere cluster.\nSpecify this parameter only if ExistingVpnId isn\'t specified.\n

    :type VpnTunnelOriginatorIP: string
    :param VpnTunnelOriginatorIP: The IP address of network traffic from your on-premises data center. A custom AZ receives the network traffic.\nSpecify this parameter only if ExistingVpnId isn\'t specified.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'CustomAvailabilityZone': {
        'CustomAvailabilityZoneId': 'string',
        'CustomAvailabilityZoneName': 'string',
        'CustomAvailabilityZoneStatus': 'string',
        'VpnDetails': {
            'VpnId': 'string',
            'VpnTunnelOriginatorIP': 'string',
            'VpnGatewayIp': 'string',
            'VpnPSK': 'string',
            'VpnName': 'string',
            'VpnState': 'string'
        }
    }
}


Response Structure

(dict) --

CustomAvailabilityZone (dict) --
A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere cluster.
For more information about RDS on VMware, see the ` RDS on VMware User Guide. https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

CustomAvailabilityZoneId (string) --
The identifier of the custom AZ.
Amazon RDS generates a unique identifier when a custom AZ is created.

CustomAvailabilityZoneName (string) --
The name of the custom AZ.

CustomAvailabilityZoneStatus (string) --
The status of the custom AZ.

VpnDetails (dict) --
Information about the virtual private network (VPN) between the VMware vSphere cluster and the AWS website.

VpnId (string) --
The ID of the VPN.

VpnTunnelOriginatorIP (string) --
The IP address of network traffic from your on-premises data center. A custom AZ receives the network traffic.

VpnGatewayIp (string) --
The IP address of network traffic from AWS to your on-premises data center.

VpnPSK (string) --
The preshared key (PSK) for the VPN.

VpnName (string) --
The name of the VPN.

VpnState (string) --
The state of the VPN.











Exceptions

RDS.Client.exceptions.CustomAvailabilityZoneAlreadyExistsFault
RDS.Client.exceptions.CustomAvailabilityZoneQuotaExceededFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault


    :return: {
        'CustomAvailabilityZone': {
            'CustomAvailabilityZoneId': 'string',
            'CustomAvailabilityZoneName': 'string',
            'CustomAvailabilityZoneStatus': 'string',
            'VpnDetails': {
                'VpnId': 'string',
                'VpnTunnelOriginatorIP': 'string',
                'VpnGatewayIp': 'string',
                'VpnPSK': 'string',
                'VpnName': 'string',
                'VpnState': 'string'
            }
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.CustomAvailabilityZoneAlreadyExistsFault
    RDS.Client.exceptions.CustomAvailabilityZoneQuotaExceededFault
    RDS.Client.exceptions.KMSKeyNotAccessibleFault
    
    """
    pass

def create_db_cluster(AvailabilityZones=None, BackupRetentionPeriod=None, CharacterSetName=None, DatabaseName=None, DBClusterIdentifier=None, DBClusterParameterGroupName=None, VpcSecurityGroupIds=None, DBSubnetGroupName=None, Engine=None, EngineVersion=None, Port=None, MasterUsername=None, MasterUserPassword=None, OptionGroupName=None, PreferredBackupWindow=None, PreferredMaintenanceWindow=None, ReplicationSourceIdentifier=None, Tags=None, StorageEncrypted=None, KmsKeyId=None, PreSignedUrl=None, EnableIAMDatabaseAuthentication=None, BacktrackWindow=None, EnableCloudwatchLogsExports=None, EngineMode=None, ScalingConfiguration=None, DeletionProtection=None, GlobalClusterIdentifier=None, EnableHttpEndpoint=None, CopyTagsToSnapshot=None, Domain=None, DomainIAMRoleName=None, SourceRegion=None):
    """
    Creates a new Amazon Aurora DB cluster.
    You can use the ReplicationSourceIdentifier parameter to create the DB cluster as a read replica of another DB cluster or Amazon RDS MySQL DB instance. For cross-region replication where the DB cluster identified by ReplicationSourceIdentifier is encrypted, you must also specify the PreSignedUrl parameter.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates a DB cluster.
    Expected Output:
    
    :example: response = client.create_db_cluster(
        AvailabilityZones=[
            'string',
        ],
        BackupRetentionPeriod=123,
        CharacterSetName='string',
        DatabaseName='string',
        DBClusterIdentifier='string',
        DBClusterParameterGroupName='string',
        VpcSecurityGroupIds=[
            'string',
        ],
        DBSubnetGroupName='string',
        Engine='string',
        EngineVersion='string',
        Port=123,
        MasterUsername='string',
        MasterUserPassword='string',
        OptionGroupName='string',
        PreferredBackupWindow='string',
        PreferredMaintenanceWindow='string',
        ReplicationSourceIdentifier='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        StorageEncrypted=True|False,
        KmsKeyId='string',
        EnableIAMDatabaseAuthentication=True|False,
        BacktrackWindow=123,
        EnableCloudwatchLogsExports=[
            'string',
        ],
        EngineMode='string',
        ScalingConfiguration={
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        DeletionProtection=True|False,
        GlobalClusterIdentifier='string',
        EnableHttpEndpoint=True|False,
        CopyTagsToSnapshot=True|False,
        Domain='string',
        DomainIAMRoleName='string',
        SourceRegion='string'
    )
    
    
    :type AvailabilityZones: list
    :param AvailabilityZones: A list of Availability Zones (AZs) where instances in the DB cluster can be created. For information on AWS Regions and Availability Zones, see Choosing the Regions and Availability Zones in the Amazon Aurora User Guide .\n\n(string) --\n\n

    :type BackupRetentionPeriod: integer
    :param BackupRetentionPeriod: The number of days for which automated backups are retained.\nDefault: 1\nConstraints:\n\nMust be a value from 1 to 35\n\n

    :type CharacterSetName: string
    :param CharacterSetName: A value that indicates that the DB cluster should be associated with the specified CharacterSet.

    :type DatabaseName: string
    :param DatabaseName: The name for your database of up to 64 alphanumeric characters. If you do not provide a name, Amazon RDS doesn\'t create a database in the DB cluster you are creating.

    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe DB cluster identifier. This parameter is stored as a lowercase string.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\nExample: my-cluster1\n

    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: The name of the DB cluster parameter group to associate with this DB cluster. If you do not specify a value, then the default DB cluster parameter group for the specified DB engine and version is used.\nConstraints:\n\nIf supplied, must match the name of an existing DB cluster parameter group.\n\n

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of EC2 VPC security groups to associate with this DB cluster.\n\n(string) --\n\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: A DB subnet group to associate with this DB cluster.\nConstraints: Must match the name of an existing DBSubnetGroup. Must not be default.\nExample: mySubnetgroup\n

    :type Engine: string
    :param Engine: [REQUIRED]\nThe name of the database engine to be used for this DB cluster.\nValid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora), and aurora-postgresql\n

    :type EngineVersion: string
    :param EngineVersion: The version number of the database engine to use.\nTo list all of the available engine versions for aurora (for MySQL 5.6-compatible Aurora), use the following command:\n\naws rds describe-db-engine-versions --engine aurora --query 'DBEngineVersions[].EngineVersion'\nTo list all of the available engine versions for aurora-mysql (for MySQL 5.7-compatible Aurora), use the following command:\n\naws rds describe-db-engine-versions --engine aurora-mysql --query 'DBEngineVersions[].EngineVersion'\nTo list all of the available engine versions for aurora-postgresql , use the following command:\n\naws rds describe-db-engine-versions --engine aurora-postgresql --query 'DBEngineVersions[].EngineVersion'Aurora MySQL\n\nExample: 5.6.10a , 5.6.mysql_aurora.1.19.2 , 5.7.12 , 5.7.mysql_aurora.2.04.5\n\nAurora PostgreSQL\nExample: 9.6.3 , 10.7\n

    :type Port: integer
    :param Port: The port number on which the instances in the DB cluster accept connections.\nDefault: 3306 if engine is set as aurora or 5432 if set to aurora-postgresql.\n

    :type MasterUsername: string
    :param MasterUsername: The name of the master user for the DB cluster.\nConstraints:\n\nMust be 1 to 16 letters or numbers.\nFirst character must be a letter.\nCan\'t be a reserved word for the chosen database engine.\n\n

    :type MasterUserPassword: string
    :param MasterUserPassword: The password for the master database user. This password can contain any printable ASCII character except '/', ''', or '@'.\nConstraints: Must contain from 8 to 41 characters.\n

    :type OptionGroupName: string
    :param OptionGroupName: A value that indicates that the DB cluster should be associated with the specified option group.\nPermanent options can\'t be removed from an option group. The option group can\'t be removed from a DB cluster once it is associated with a DB cluster.\n

    :type PreferredBackupWindow: string
    :param PreferredBackupWindow: The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window in the Amazon Aurora User Guide.\nConstraints:\n\nMust be in the format hh24:mi-hh24:mi .\nMust be in Universal Coordinated Time (UTC).\nMust not conflict with the preferred maintenance window.\nMust be at least 30 minutes.\n\n

    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).\nFormat: ddd:hh24:mi-ddd:hh24:mi\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window in the Amazon Aurora User Guide.\nValid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.\nConstraints: Minimum 30-minute window.\n

    :type ReplicationSourceIdentifier: string
    :param ReplicationSourceIdentifier: The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.

    :type Tags: list
    :param Tags: Tags to assign to the DB cluster.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type StorageEncrypted: boolean
    :param StorageEncrypted: A value that indicates whether the DB cluster is encrypted.

    :type KmsKeyId: string
    :param KmsKeyId: The AWS KMS key identifier for an encrypted DB cluster.\nThe KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.\nIf an encryption key isn\'t specified in KmsKeyId :\n\nIf ReplicationSourceIdentifier identifies an encrypted source, then Amazon RDS will use the encryption key used to encrypt the source. Otherwise, Amazon RDS will use your default encryption key.\nIf the StorageEncrypted parameter is enabled and ReplicationSourceIdentifier isn\'t specified, then Amazon RDS will use your default encryption key.\n\nAWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.\nIf you create a read replica of an encrypted DB cluster in another AWS Region, you must set KmsKeyId to a KMS key ID that is valid in the destination AWS Region. This key is used to encrypt the read replica in that AWS Region.\n

    :type PreSignedUrl: string
    :param PreSignedUrl: A URL that contains a Signature Version 4 signed request for the CreateDBCluster action to be called in the source AWS Region where the DB cluster is replicated from. You only need to specify PreSignedUrl when you are performing cross-region replication from an encrypted DB cluster.\nThe pre-signed URL must be a valid request for the CreateDBCluster API action that can be executed in the source AWS Region that contains the encrypted DB cluster to be copied.\nThe pre-signed URL request must contain the following parameter values:\n\nKmsKeyId - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster in the destination AWS Region. This should refer to the same KMS key for both the CreateDBCluster action that is called in the destination AWS Region, and the action contained in the pre-signed URL.\nDestinationRegion - The name of the AWS Region that Aurora read replica will be created in.\nReplicationSourceIdentifier - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster from the us-west-2 AWS Region, then your ReplicationSourceIdentifier would look like Example: arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1 .\n\nTo learn how to generate a Signature Version 4 signed request, see Authenticating Requests: Using Query Parameters (AWS Signature Version 4) and Signature Version 4 Signing Process .\n\nNote\nIf you are using an AWS SDK tool or the AWS CLI, you can specify SourceRegion (or --source-region for the AWS CLI) instead of specifying PreSignedUrl manually. Specifying SourceRegion autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source AWS Region.\n\nPlease note that this parameter is automatically populated if it is not provided. Including this parameter is not required\n\n

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.\nFor more information, see IAM Database Authentication in the Amazon Aurora User Guide.\n

    :type BacktrackWindow: integer
    :param BacktrackWindow: The target backtrack window, in seconds. To disable backtracking, set this value to 0.\nDefault: 0\nConstraints:\n\nIf specified, this value must be set to a number from 0 to 259,200 (72 hours).\n\n

    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon Aurora User Guide .\n\n(string) --\n\n

    :type EngineMode: string
    :param EngineMode: The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .\n\nNote\nglobal engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode.\n\nLimitations and requirements apply to some DB engine modes. For more information, see the following sections in the Amazon Aurora User Guide :\n\nLimitations of Aurora Serverless\nLimitations of Parallel Query\nRequirements for Aurora Global Databases\nLimitations of Multi-Master Clusters\n\n

    :type ScalingConfiguration: dict
    :param ScalingConfiguration: For DB clusters in serverless DB engine mode, the scaling properties of the DB cluster.\n\nMinCapacity (integer) --The minimum capacity for an Aurora DB cluster in serverless DB engine mode.\nFor Aurora MySQL, valid capacity values are 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , and 256 .\nFor Aurora PostgreSQL, valid capacity values are 2 , 4 , 8 , 16 , 32 , 64 , 192 , and 384 .\nThe minimum capacity must be less than or equal to the maximum capacity.\n\nMaxCapacity (integer) --The maximum capacity for an Aurora DB cluster in serverless DB engine mode.\nFor Aurora MySQL, valid capacity values are 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , and 256 .\nFor Aurora PostgreSQL, valid capacity values are 2 , 4 , 8 , 16 , 32 , 64 , 192 , and 384 .\nThe maximum capacity must be greater than or equal to the minimum capacity.\n\nAutoPause (boolean) --A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it\'s idle (it has no connections).\n\nNote\nIf a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it.\n\n\nSecondsUntilAutoPause (integer) --The time, in seconds, before an Aurora DB cluster in serverless mode is paused.\n\nTimeoutAction (string) --The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange .\n\nForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange , the default, ignores the capacity change if a scaling point isn\'t found in the timeout period.\n\n\nWarning\nIf you specify ForceApplyCapacityChange , connections that prevent Aurora Serverless from finding a scaling point might be dropped.\n\nFor more information, see Autoscaling for Aurora Serverless in the Amazon Aurora User Guide .\n\n\n

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled.

    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: The global cluster ID of an Aurora cluster that becomes the primary cluster in the new global database cluster.

    :type EnableHttpEndpoint: boolean
    :param EnableHttpEndpoint: A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster. By default, the HTTP endpoint is disabled.\nWhen enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.\nFor more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .\n

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.

    :type Domain: string
    :param Domain: The Active Directory directory ID to create the DB cluster in.\nFor Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see Kerberos Authentication in the Amazon Aurora User Guide .\n

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: Specify the name of the IAM role to be used when making API calls to the Directory Service.

    :type SourceRegion: string
    :param SourceRegion: The ID of the region that contains the source for the db cluster.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

DBCluster (dict) --
Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --
For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --
If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --
Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --
Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --
Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --
Specifies the current state of this DB cluster.

PercentProgress (string) --
Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --
The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --
Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --
The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --
Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --
Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --
Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --
Indicates the database engine version.

LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --
Specifies the port that the database engine is listening on.

MasterUsername (string) --
Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --
Provides the list of option group memberships for this DB cluster.

(dict) --
Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --
Specifies the name of the DB cluster option group.

Status (string) --
Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --
Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --
Provides the list of instances that make up the DB cluster.

(dict) --
Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --
Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --
Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --
Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --
Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --
Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --
If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --
Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --
Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --
A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --
Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --
The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --
The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --
The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --
The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --
The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --
Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --
The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --
The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --
A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --
The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --
The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --
Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --
A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --
The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --
The status of the database activity stream.

ActivityStreamKmsKeyId (string) --
The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --
The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --
Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB cluster.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.













Exceptions

RDS.Client.exceptions.DBClusterAlreadyExistsFault
RDS.Client.exceptions.InsufficientStorageClusterCapacityFault
RDS.Client.exceptions.DBClusterQuotaExceededFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBSubnetGroupStateFault
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.DBClusterParameterGroupNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
RDS.Client.exceptions.GlobalClusterNotFoundFault
RDS.Client.exceptions.InvalidGlobalClusterStateFault
RDS.Client.exceptions.DomainNotFoundFault

Examples
This example creates a DB cluster.
response = client.create_db_cluster(
    AvailabilityZones=[
        'us-east-1a',
    ],
    BackupRetentionPeriod=1,
    DBClusterIdentifier='mydbcluster',
    DBClusterParameterGroupName='mydbclusterparametergroup',
    DatabaseName='myauroradb',
    Engine='aurora',
    EngineVersion='5.6.10a',
    MasterUserPassword='mypassword',
    MasterUsername='myuser',
    Port=3306,
    StorageEncrypted=True,
)

print(response)


Expected Output:
{
    'DBCluster': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_db_cluster_endpoint(DBClusterIdentifier=None, DBClusterEndpointIdentifier=None, EndpointType=None, StaticMembers=None, ExcludedMembers=None, Tags=None):
    """
    Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.create_db_cluster_endpoint(
        DBClusterIdentifier='string',
        DBClusterEndpointIdentifier='string',
        EndpointType='string',
        StaticMembers=[
            'string',
        ],
        ExcludedMembers=[
            'string',
        ],
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.\n

    :type DBClusterEndpointIdentifier: string
    :param DBClusterEndpointIdentifier: [REQUIRED]\nThe identifier to use for the new endpoint. This parameter is stored as a lowercase string.\n

    :type EndpointType: string
    :param EndpointType: [REQUIRED]\nThe type of the endpoint. One of: READER , WRITER , ANY .\n

    :type StaticMembers: list
    :param StaticMembers: List of DB instance identifiers that are part of the custom endpoint group.\n\n(string) --\n\n

    :type ExcludedMembers: list
    :param ExcludedMembers: List of DB instance identifiers that aren\'t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.\n\n(string) --\n\n

    :type Tags: list
    :param Tags: The tags to be assigned to the Amazon RDS resource.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterEndpointIdentifier': 'string',
    'DBClusterIdentifier': 'string',
    'DBClusterEndpointResourceIdentifier': 'string',
    'Endpoint': 'string',
    'Status': 'string',
    'EndpointType': 'string',
    'CustomEndpointType': 'string',
    'StaticMembers': [
        'string',
    ],
    'ExcludedMembers': [
        'string',
    ],
    'DBClusterEndpointArn': 'string'
}


Response Structure

(dict) --
This data type represents the information you need to connect to an Amazon Aurora DB cluster. This data type is used as a response element in the following actions:

CreateDBClusterEndpoint
DescribeDBClusterEndpoints
ModifyDBClusterEndpoint
DeleteDBClusterEndpoint

For the data structure that represents Amazon RDS DB instance endpoints, see Endpoint .

DBClusterEndpointIdentifier (string) --
The identifier associated with the endpoint. This parameter is stored as a lowercase string.

DBClusterIdentifier (string) --
The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.

DBClusterEndpointResourceIdentifier (string) --
A unique system-generated identifier for an endpoint. It remains the same for the whole life of the endpoint.

Endpoint (string) --
The DNS address of the endpoint.

Status (string) --
The current status of the endpoint. One of: creating , available , deleting , modifying .

EndpointType (string) --
The type of the endpoint. One of: READER , WRITER , CUSTOM .

CustomEndpointType (string) --
The type associated with a custom endpoint. One of: READER , WRITER , ANY .

StaticMembers (list) --
List of DB instance identifiers that are part of the custom endpoint group.

(string) --


ExcludedMembers (list) --
List of DB instance identifiers that aren\'t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.

(string) --


DBClusterEndpointArn (string) --
The Amazon Resource Name (ARN) for the endpoint.







Exceptions

RDS.Client.exceptions.DBClusterEndpointQuotaExceededFault
RDS.Client.exceptions.DBClusterEndpointAlreadyExistsFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.InvalidDBInstanceStateFault


    :return: {
        'DBClusterEndpointIdentifier': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterEndpointResourceIdentifier': 'string',
        'Endpoint': 'string',
        'Status': 'string',
        'EndpointType': 'string',
        'CustomEndpointType': 'string',
        'StaticMembers': [
            'string',
        ],
        'ExcludedMembers': [
            'string',
        ],
        'DBClusterEndpointArn': 'string'
    }
    
    
    :returns: 
    CreateDBClusterEndpoint
    DescribeDBClusterEndpoints
    ModifyDBClusterEndpoint
    DeleteDBClusterEndpoint
    
    """
    pass

def create_db_cluster_parameter_group(DBClusterParameterGroupName=None, DBParameterGroupFamily=None, Description=None, Tags=None):
    """
    Creates a new DB cluster parameter group.
    Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.
    A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using ModifyDBClusterParameterGroup . Once you\'ve created a DB cluster parameter group, you need to associate it with your DB cluster using ModifyDBCluster . When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates a DB cluster parameter group.
    Expected Output:
    
    :example: response = client.create_db_cluster_parameter_group(
        DBClusterParameterGroupName='string',
        DBParameterGroupFamily='string',
        Description='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: [REQUIRED]\nThe name of the DB cluster parameter group.\nConstraints:\n\nMust match the name of an existing DB cluster parameter group.\n\n\nNote\nThis value is stored as a lowercase string.\n\n

    :type DBParameterGroupFamily: string
    :param DBParameterGroupFamily: [REQUIRED]\nThe DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family.\n\nAurora MySQL\nExample: aurora5.6 , aurora-mysql5.7\n\nAurora PostgreSQL\nExample: aurora-postgresql9.6\n

    :type Description: string
    :param Description: [REQUIRED]\nThe description for the DB cluster parameter group.\n

    :type Tags: list
    :param Tags: Tags to assign to the DB cluster parameter group.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterParameterGroup': {
        'DBClusterParameterGroupName': 'string',
        'DBParameterGroupFamily': 'string',
        'Description': 'string',
        'DBClusterParameterGroupArn': 'string'
    }
}


Response Structure

(dict) --

DBClusterParameterGroup (dict) --
Contains the details of an Amazon RDS DB cluster parameter group.
This data type is used as a response element in the DescribeDBClusterParameterGroups action.

DBClusterParameterGroupName (string) --
Provides the name of the DB cluster parameter group.

DBParameterGroupFamily (string) --
Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.

Description (string) --
Provides the customer-specified description for this DB cluster parameter group.

DBClusterParameterGroupArn (string) --
The Amazon Resource Name (ARN) for the DB cluster parameter group.









Exceptions

RDS.Client.exceptions.DBParameterGroupQuotaExceededFault
RDS.Client.exceptions.DBParameterGroupAlreadyExistsFault

Examples
This example creates a DB cluster parameter group.
response = client.create_db_cluster_parameter_group(
    DBClusterParameterGroupName='mydbclusterparametergroup',
    DBParameterGroupFamily='aurora5.6',
    Description='My DB cluster parameter group',
)

print(response)


Expected Output:
{
    'DBClusterParameterGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBClusterParameterGroup': {
            'DBClusterParameterGroupName': 'string',
            'DBParameterGroupFamily': 'string',
            'Description': 'string',
            'DBClusterParameterGroupArn': 'string'
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBParameterGroupQuotaExceededFault
    RDS.Client.exceptions.DBParameterGroupAlreadyExistsFault
    
    """
    pass

def create_db_cluster_snapshot(DBClusterSnapshotIdentifier=None, DBClusterIdentifier=None, Tags=None):
    """
    Creates a snapshot of a DB cluster. For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates a DB cluster snapshot.
    Expected Output:
    
    :example: response = client.create_db_cluster_snapshot(
        DBClusterSnapshotIdentifier='string',
        DBClusterIdentifier='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: [REQUIRED]\nThe identifier of the DB cluster snapshot. This parameter is stored as a lowercase string.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\nExample: my-cluster1-snapshot1\n

    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe identifier of the DB cluster to create a snapshot for. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust match the identifier of an existing DBCluster.\n\nExample: my-cluster1\n

    :type Tags: list
    :param Tags: The tags to be assigned to the DB cluster snapshot.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterSnapshot': {
        'AvailabilityZones': [
            'string',
        ],
        'DBClusterSnapshotIdentifier': 'string',
        'DBClusterIdentifier': 'string',
        'SnapshotCreateTime': datetime(2015, 1, 1),
        'Engine': 'string',
        'AllocatedStorage': 123,
        'Status': 'string',
        'Port': 123,
        'VpcId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'MasterUsername': 'string',
        'EngineVersion': 'string',
        'LicenseModel': 'string',
        'SnapshotType': 'string',
        'PercentProgress': 123,
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DBClusterSnapshotArn': 'string',
        'SourceDBClusterSnapshotArn': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False
    }
}


Response Structure

(dict) --

DBClusterSnapshot (dict) --
Contains the details for an Amazon RDS DB cluster snapshot
This data type is used as a response element in the DescribeDBClusterSnapshots action.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot can be restored.

(string) --


DBClusterSnapshotIdentifier (string) --
Specifies the identifier for the DB cluster snapshot.

DBClusterIdentifier (string) --
Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.

SnapshotCreateTime (datetime) --
Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

Engine (string) --
Specifies the name of the database engine.

AllocatedStorage (integer) --
Specifies the allocated storage size in gibibytes (GiB).

Status (string) --
Specifies the status of this DB cluster snapshot.

Port (integer) --
Specifies the port that the DB cluster was listening on at the time of the snapshot.

VpcId (string) --
Provides the VPC ID associated with the DB cluster snapshot.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

MasterUsername (string) --
Provides the master username for the DB cluster snapshot.

EngineVersion (string) --
Provides the version of the database engine for this DB cluster snapshot.

LicenseModel (string) --
Provides the license model information for this DB cluster snapshot.

SnapshotType (string) --
Provides the type of the DB cluster snapshot.

PercentProgress (integer) --
Specifies the percentage of the estimated data that has been transferred.

StorageEncrypted (boolean) --
Specifies whether the DB cluster snapshot is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.

DBClusterSnapshotArn (string) --
The Amazon Resource Name (ARN) for the DB cluster snapshot.

SourceDBClusterSnapshotArn (string) --
If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.









Exceptions

RDS.Client.exceptions.DBClusterSnapshotAlreadyExistsFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.SnapshotQuotaExceededFault
RDS.Client.exceptions.InvalidDBClusterSnapshotStateFault

Examples
This example creates a DB cluster snapshot.
response = client.create_db_cluster_snapshot(
    DBClusterIdentifier='mydbcluster',
    DBClusterSnapshotIdentifier='mydbclustersnapshot',
)

print(response)


Expected Output:
{
    'DBClusterSnapshot': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBClusterSnapshot': {
            'AvailabilityZones': [
                'string',
            ],
            'DBClusterSnapshotIdentifier': 'string',
            'DBClusterIdentifier': 'string',
            'SnapshotCreateTime': datetime(2015, 1, 1),
            'Engine': 'string',
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'VpcId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'SnapshotType': 'string',
            'PercentProgress': 123,
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DBClusterSnapshotArn': 'string',
            'SourceDBClusterSnapshotArn': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_db_instance(DBName=None, DBInstanceIdentifier=None, AllocatedStorage=None, DBInstanceClass=None, Engine=None, MasterUsername=None, MasterUserPassword=None, DBSecurityGroups=None, VpcSecurityGroupIds=None, AvailabilityZone=None, DBSubnetGroupName=None, PreferredMaintenanceWindow=None, DBParameterGroupName=None, BackupRetentionPeriod=None, PreferredBackupWindow=None, Port=None, MultiAZ=None, EngineVersion=None, AutoMinorVersionUpgrade=None, LicenseModel=None, Iops=None, OptionGroupName=None, CharacterSetName=None, PubliclyAccessible=None, Tags=None, DBClusterIdentifier=None, StorageType=None, TdeCredentialArn=None, TdeCredentialPassword=None, StorageEncrypted=None, KmsKeyId=None, Domain=None, CopyTagsToSnapshot=None, MonitoringInterval=None, MonitoringRoleArn=None, DomainIAMRoleName=None, PromotionTier=None, Timezone=None, EnableIAMDatabaseAuthentication=None, EnablePerformanceInsights=None, PerformanceInsightsKMSKeyId=None, PerformanceInsightsRetentionPeriod=None, EnableCloudwatchLogsExports=None, ProcessorFeatures=None, DeletionProtection=None, MaxAllocatedStorage=None):
    """
    Creates a new DB instance.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates a DB instance.
    Expected Output:
    
    :example: response = client.create_db_instance(
        DBName='string',
        DBInstanceIdentifier='string',
        AllocatedStorage=123,
        DBInstanceClass='string',
        Engine='string',
        MasterUsername='string',
        MasterUserPassword='string',
        DBSecurityGroups=[
            'string',
        ],
        VpcSecurityGroupIds=[
            'string',
        ],
        AvailabilityZone='string',
        DBSubnetGroupName='string',
        PreferredMaintenanceWindow='string',
        DBParameterGroupName='string',
        BackupRetentionPeriod=123,
        PreferredBackupWindow='string',
        Port=123,
        MultiAZ=True|False,
        EngineVersion='string',
        AutoMinorVersionUpgrade=True|False,
        LicenseModel='string',
        Iops=123,
        OptionGroupName='string',
        CharacterSetName='string',
        PubliclyAccessible=True|False,
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        DBClusterIdentifier='string',
        StorageType='string',
        TdeCredentialArn='string',
        TdeCredentialPassword='string',
        StorageEncrypted=True|False,
        KmsKeyId='string',
        Domain='string',
        CopyTagsToSnapshot=True|False,
        MonitoringInterval=123,
        MonitoringRoleArn='string',
        DomainIAMRoleName='string',
        PromotionTier=123,
        Timezone='string',
        EnableIAMDatabaseAuthentication=True|False,
        EnablePerformanceInsights=True|False,
        PerformanceInsightsKMSKeyId='string',
        PerformanceInsightsRetentionPeriod=123,
        EnableCloudwatchLogsExports=[
            'string',
        ],
        ProcessorFeatures=[
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        DeletionProtection=True|False,
        MaxAllocatedStorage=123
    )
    
    
    :type DBName: string
    :param DBName: The meaning of this parameter differs according to the database engine you use.\n\nMySQL\nThe name of the database to create when the DB instance is created. If this parameter isn\'t specified, no database is created in the DB instance.\nConstraints:\n\nMust contain 1 to 64 letters or numbers.\nCan\'t be a word reserved by the specified database engine\n\n\nMariaDB\nThe name of the database to create when the DB instance is created. If this parameter isn\'t specified, no database is created in the DB instance.\nConstraints:\n\nMust contain 1 to 64 letters or numbers.\nCan\'t be a word reserved by the specified database engine\n\n\nPostgreSQL\nThe name of the database to create when the DB instance is created. If this parameter isn\'t specified, the default 'postgres' database is created in the DB instance.\nConstraints:\n\nMust contain 1 to 63 letters, numbers, or underscores.\nMust begin with a letter or an underscore. Subsequent characters can be letters, underscores, or digits (0-9).\nCan\'t be a word reserved by the specified database engine\n\n\nOracle\nThe Oracle System ID (SID) of the created DB instance. If you specify null , the default value ORCL is used. You can\'t specify the string NULL, or any other reserved word, for DBName .\nDefault: ORCL\nConstraints:\n\nCan\'t be longer than 8 characters\n\n\nSQL Server\nNot applicable. Must be null.\n\nAmazon Aurora\nThe name of the database to create when the primary instance of the DB cluster is created. If this parameter isn\'t specified, no database is created in the DB instance.\nConstraints:\n\nMust contain 1 to 64 letters or numbers.\nCan\'t be a word reserved by the specified database engine\n\n

    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe DB instance identifier. This parameter is stored as a lowercase string.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\nExample: mydbinstance\n

    :type AllocatedStorage: integer
    :param AllocatedStorage: The amount of storage (in gibibytes) to allocate for the DB instance.\nType: Integer\n\nAmazon Aurora\nNot applicable. Aurora cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in an Aurora cluster volume.\n\nMySQL\nConstraints to the amount of storage for each storage type are the following:\n\nGeneral Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.\nProvisioned IOPS storage (io1): Must be an integer from 100 to 65536.\nMagnetic storage (standard): Must be an integer from 5 to 3072.\n\n\nMariaDB\nConstraints to the amount of storage for each storage type are the following:\n\nGeneral Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.\nProvisioned IOPS storage (io1): Must be an integer from 100 to 65536.\nMagnetic storage (standard): Must be an integer from 5 to 3072.\n\n\nPostgreSQL\nConstraints to the amount of storage for each storage type are the following:\n\nGeneral Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.\nProvisioned IOPS storage (io1): Must be an integer from 100 to 65536.\nMagnetic storage (standard): Must be an integer from 5 to 3072.\n\n\nOracle\nConstraints to the amount of storage for each storage type are the following:\n\nGeneral Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536.\nProvisioned IOPS storage (io1): Must be an integer from 100 to 65536.\nMagnetic storage (standard): Must be an integer from 10 to 3072.\n\n\nSQL Server\nConstraints to the amount of storage for each storage type are the following:\n\nGeneral Purpose (SSD) storage (gp2):\nEnterprise and Standard editions: Must be an integer from 200 to 16384.\nWeb and Express editions: Must be an integer from 20 to 16384.\n\n\nProvisioned IOPS storage (io1):\nEnterprise and Standard editions: Must be an integer from 200 to 16384.\nWeb and Express editions: Must be an integer from 100 to 16384.\n\n\nMagnetic storage (standard):\nEnterprise and Standard editions: Must be an integer from 200 to 1024.\nWeb and Express editions: Must be an integer from 20 to 1024.\n\n\n\n

    :type DBInstanceClass: string
    :param DBInstanceClass: [REQUIRED]\nThe compute and memory capacity of the DB instance, for example, db.m4.large . Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see DB Instance Class in the Amazon RDS User Guide.\n

    :type Engine: string
    :param Engine: [REQUIRED]\nThe name of the database engine to be used for this instance.\nNot every database engine is available for every AWS Region.\nValid Values:\n\naurora (for MySQL 5.6-compatible Aurora)\naurora-mysql (for MySQL 5.7-compatible Aurora)\naurora-postgresql\nmariadb\nmysql\noracle-ee\noracle-se2\noracle-se1\noracle-se\npostgres\nsqlserver-ee\nsqlserver-se\nsqlserver-ex\nsqlserver-web\n\n

    :type MasterUsername: string
    :param MasterUsername: The name for the master user.\n\nAmazon Aurora\nNot applicable. The name for the master user is managed by the DB cluster.\n\nMariaDB\nConstraints:\n\nRequired for MariaDB.\nMust be 1 to 16 letters or numbers.\nCan\'t be a reserved word for the chosen database engine.\n\n\nMicrosoft SQL Server\nConstraints:\n\nRequired for SQL Server.\nMust be 1 to 128 letters or numbers.\nThe first character must be a letter.\nCan\'t be a reserved word for the chosen database engine.\n\n\nMySQL\nConstraints:\n\nRequired for MySQL.\nMust be 1 to 16 letters or numbers.\nFirst character must be a letter.\nCan\'t be a reserved word for the chosen database engine.\n\n\nOracle\nConstraints:\n\nRequired for Oracle.\nMust be 1 to 30 letters or numbers.\nFirst character must be a letter.\nCan\'t be a reserved word for the chosen database engine.\n\n\nPostgreSQL\nConstraints:\n\nRequired for PostgreSQL.\nMust be 1 to 63 letters or numbers.\nFirst character must be a letter.\nCan\'t be a reserved word for the chosen database engine.\n\n

    :type MasterUserPassword: string
    :param MasterUserPassword: The password for the master user. The password can include any printable ASCII character except '/', ''', or '@'.\n\nAmazon Aurora\nNot applicable. The password for the master user is managed by the DB cluster.\n\nMariaDB\nConstraints: Must contain from 8 to 41 characters.\n\nMicrosoft SQL Server\nConstraints: Must contain from 8 to 128 characters.\n\nMySQL\nConstraints: Must contain from 8 to 41 characters.\n\nOracle\nConstraints: Must contain from 8 to 30 characters.\n\nPostgreSQL\nConstraints: Must contain from 8 to 128 characters.\n

    :type DBSecurityGroups: list
    :param DBSecurityGroups: A list of DB security groups to associate with this DB instance.\nDefault: The default DB security group for the database engine.\n\n(string) --\n\n

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of Amazon EC2 VPC security groups to associate with this DB instance.\n\nAmazon Aurora\nNot applicable. The associated list of EC2 VPC security groups is managed by the DB cluster.\nDefault: The default EC2 VPC security group for the DB subnet group\'s VPC.\n\n(string) --\n\n

    :type AvailabilityZone: string
    :param AvailabilityZone: The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones, see Regions and Availability Zones .\nDefault: A random, system-chosen Availability Zone in the endpoint\'s AWS Region.\nExample: us-east-1d\nConstraint: The AvailabilityZone parameter can\'t be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same AWS Region as the current endpoint.\n\nNote\nIf you\'re creating a DB instance in an RDS on VMware environment, specify the identifier of the custom Availability Zone to create the DB instance in.\nFor more information about RDS on VMware, see the ` RDS on VMware User Guide. https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__\n\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: A DB subnet group to associate with this DB instance.\nIf there is no DB subnet group, then it is a non-VPC DB instance.\n

    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see Amazon RDS Maintenance Window .\nFormat: ddd:hh24:mi-ddd:hh24:mi\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week.\nValid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.\nConstraints: Minimum 30-minute window.\n

    :type DBParameterGroupName: string
    :param DBParameterGroupName: The name of the DB parameter group to associate with this DB instance. If you do not specify a value, then the default DB parameter group for the specified DB engine and version is used.\nConstraints:\n\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\n

    :type BackupRetentionPeriod: integer
    :param BackupRetentionPeriod: The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.\n\nAmazon Aurora\nNot applicable. The retention period for automated backups is managed by the DB cluster.\nDefault: 1\nConstraints:\n\nMust be a value from 0 to 35\nCan\'t be set to 0 if the DB instance is a source to read replicas\n\n

    :type PreferredBackupWindow: string
    :param PreferredBackupWindow: The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter. For more information, see The Backup Window in the Amazon RDS User Guide .\n\nAmazon Aurora\nNot applicable. The daily time range for creating automated backups is managed by the DB cluster.\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred DB Instance Maintenance Window in the Amazon RDS User Guide .\nConstraints:\n\nMust be in the format hh24:mi-hh24:mi .\nMust be in Universal Coordinated Time (UTC).\nMust not conflict with the preferred maintenance window.\nMust be at least 30 minutes.\n\n

    :type Port: integer
    :param Port: The port number on which the database accepts connections.\n\nMySQL\nDefault: 3306\nValid values: 1150-65535\nType: Integer\n\nMariaDB\nDefault: 3306\nValid values: 1150-65535\nType: Integer\n\nPostgreSQL\nDefault: 5432\nValid values: 1150-65535\nType: Integer\n\nOracle\nDefault: 1521\nValid values: 1150-65535\n\nSQL Server\nDefault: 1433\nValid values: 1150-65535 except 1234 , 1434 , 3260 , 3343 , 3389 , 47001 , and 49152-49156 .\n\nAmazon Aurora\nDefault: 3306\nValid values: 1150-65535\nType: Integer\n

    :type MultiAZ: boolean
    :param MultiAZ: A value that indicates whether the DB instance is a Multi-AZ deployment. You can\'t set the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment.

    :type EngineVersion: string
    :param EngineVersion: The version number of the database engine to use.\nFor a list of valid engine versions, use the DescribeDBEngineVersions action.\nThe following are the database engines and links to information about the major and minor versions that are available with Amazon RDS. Not every database engine is available for every AWS Region.\n\nAmazon Aurora\nNot applicable. The version number of the database engine to be used by the DB instance is managed by the DB cluster.\n\nMariaDB\nSee MariaDB on Amazon RDS Versions in the Amazon RDS User Guide.\n\nMicrosoft SQL Server\nSee Version and Feature Support on Amazon RDS in the Amazon RDS User Guide.\n\nMySQL\nSee MySQL on Amazon RDS Versions in the Amazon RDS User Guide.\n\nOracle\nSee Oracle Database Engine Release Notes in the Amazon RDS User Guide.\n\nPostgreSQL\nSee Supported PostgreSQL Database Versions in the Amazon RDS User Guide.\n

    :type AutoMinorVersionUpgrade: boolean
    :param AutoMinorVersionUpgrade: A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.

    :type LicenseModel: string
    :param LicenseModel: License model information for this DB instance.\nValid values: license-included | bring-your-own-license | general-public-license\n

    :type Iops: integer
    :param Iops: The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance. For information about valid Iops values, see Amazon RDS Provisioned IOPS Storage to Improve Performance in the Amazon RDS User Guide .\nConstraints: For MariaDB, MySQL, Oracle, and PostgreSQL DB instances, must be a multiple between .5 and 50 of the storage amount for the DB instance. For SQL Server DB instances, must be a multiple between 1 and 50 of the storage amount for the DB instance.\n

    :type OptionGroupName: string
    :param OptionGroupName: Indicates that the DB instance should be associated with the specified option group.\nPermanent options, such as the TDE option for Oracle Advanced Security TDE, can\'t be removed from an option group. Also, that option group can\'t be removed from a DB instance once it is associated with a DB instance\n

    :type CharacterSetName: string
    :param CharacterSetName: For supported engines, indicates that the DB instance should be associated with the specified CharacterSet.\n\nAmazon Aurora\nNot applicable. The character set is managed by the DB cluster. For more information, see CreateDBCluster .\n

    :type PubliclyAccessible: boolean
    :param PubliclyAccessible: A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn\'t publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address.\nDefault: The default behavior varies depending on whether DBSubnetGroupName is specified.\nIf DBSubnetGroupName isn\'t specified, and PubliclyAccessible isn\'t specified, the following applies:\n\nIf the default VPC in the target region doesn\xe2\x80\x99t have an Internet gateway attached to it, the DB instance is private.\nIf the default VPC in the target region has an Internet gateway attached to it, the DB instance is public.\n\nIf DBSubnetGroupName is specified, and PubliclyAccessible isn\'t specified, the following applies:\n\nIf the subnets are part of a VPC that doesn\xe2\x80\x99t have an Internet gateway attached to it, the DB instance is private.\nIf the subnets are part of a VPC that has an Internet gateway attached to it, the DB instance is public.\n\n

    :type Tags: list
    :param Tags: Tags to assign to the DB instance.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: The identifier of the DB cluster that the instance will belong to.

    :type StorageType: string
    :param StorageType: Specifies the storage type to be associated with the DB instance.\nValid values: standard | gp2 | io1\nIf you specify io1 , you must also include a value for the Iops parameter.\nDefault: io1 if the Iops parameter is specified, otherwise gp2\n

    :type TdeCredentialArn: string
    :param TdeCredentialArn: The ARN from the key store with which to associate the instance for TDE encryption.

    :type TdeCredentialPassword: string
    :param TdeCredentialPassword: The password for the given ARN from the key store in order to access the device.

    :type StorageEncrypted: boolean
    :param StorageEncrypted: A value that indicates whether the DB instance is encrypted. By default, it isn\'t encrypted.\n\nAmazon Aurora\nNot applicable. The encryption for DB instances is managed by the DB cluster.\n

    :type KmsKeyId: string
    :param KmsKeyId: The AWS KMS key identifier for an encrypted DB instance.\nThe KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB instance with the same AWS account that owns the KMS encryption key used to encrypt the new DB instance, then you can use the KMS key alias instead of the ARN for the KM encryption key.\n\nAmazon Aurora\nNot applicable. The KMS key identifier is managed by the DB cluster. For more information, see CreateDBCluster .\nIf StorageEncrypted is enabled, and you do not specify a value for the KmsKeyId parameter, then Amazon RDS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.\n

    :type Domain: string
    :param Domain: The Active Directory directory ID to create the DB instance in. Currently, only Microsoft SQL Server and Oracle DB instances can be created in an Active Directory Domain.\nFor Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server in the Amazon RDS User Guide .\nFor Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see Using Kerberos Authentication with Amazon RDS for Oracle in the Amazon RDS User Guide .\n

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.\n\nAmazon Aurora\nNot applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting.\n

    :type MonitoringInterval: integer
    :param MonitoringInterval: The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.\nIf MonitoringRoleArn is specified, then you must also set MonitoringInterval to a value other than 0.\nValid Values: 0, 1, 5, 10, 15, 30, 60\n

    :type MonitoringRoleArn: string
    :param MonitoringRoleArn: The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess . For information on creating a monitoring role, go to Setting Up and Enabling Enhanced Monitoring in the Amazon RDS User Guide .\nIf MonitoringInterval is set to a value other than 0, then you must supply a MonitoringRoleArn value.\n

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: Specify the name of the IAM role to be used when making API calls to the Directory Service.

    :type PromotionTier: integer
    :param PromotionTier: A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .\nDefault: 1\nValid Values: 0 - 15\n

    :type Timezone: string
    :param Timezone: The time zone of the DB instance. The time zone parameter is currently supported only by Microsoft SQL Server .

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.\nYou can enable IAM database authentication for the following database engines:\n\nAmazon Aurora\nNot applicable. Mapping AWS IAM accounts to database accounts is managed by the DB cluster.\n\nMySQL\n\nFor MySQL 5.6, minor version 5.6.34 or higher\nFor MySQL 5.7, minor version 5.7.16 or higher\nFor MySQL 8.0, minor version 8.0.16 or higher\n\n\nPostgreSQL\n\nFor PostgreSQL 9.5, minor version 9.5.15 or higher\nFor PostgreSQL 9.6, minor version 9.6.11 or higher\nPostgreSQL 10.6, 10.7, and 10.9\n\nFor more information, see IAM Database Authentication for MySQL and PostgreSQL in the Amazon RDS User Guide.\n

    :type EnablePerformanceInsights: boolean
    :param EnablePerformanceInsights: A value that indicates whether to enable Performance Insights for the DB instance.\nFor more information, see Using Amazon Performance Insights in the Amazon Relational Database Service User Guide .\n

    :type PerformanceInsightsKMSKeyId: string
    :param PerformanceInsightsKMSKeyId: The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.\nIf you do not specify a value for PerformanceInsightsKMSKeyId , then Amazon RDS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.\n

    :type PerformanceInsightsRetentionPeriod: integer
    :param PerformanceInsightsRetentionPeriod: The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon Relational Database Service User Guide .\n\n(string) --\n\n

    :type ProcessorFeatures: list
    :param ProcessorFeatures: The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.\n\n(dict) --Contains the processor features of a DB instance class.\nTo specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.\nYou can set the processor features of the DB instance class for a DB instance when you call one of the following actions:\n\nCreateDBInstance\nModifyDBInstance\nRestoreDBInstanceFromDBSnapshot\nRestoreDBInstanceFromS3\nRestoreDBInstanceToPointInTime\n\nYou can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.\nIn addition, you can use the following actions for DB instance class processor information:\n\nDescribeDBInstances\nDescribeDBSnapshots\nDescribeValidDBInstanceModifications\n\nFor more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.\n\nName (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .\n\nValue (string) --The value of a processor feature name.\n\n\n\n\n

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see Deleting a DB Instance .\n\nAmazon Aurora\nNot applicable. You can enable or disable deletion protection for the DB cluster. For more information, see CreateDBCluster . DB instances in a DB cluster can be deleted even when deletion protection is enabled for the DB cluster.\n

    :type MaxAllocatedStorage: integer
    :param MaxAllocatedStorage: The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.DBInstanceAlreadyExistsFault
RDS.Client.exceptions.InsufficientDBInstanceCapacityFault
RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.DBSecurityGroupNotFoundFault
RDS.Client.exceptions.InstanceQuotaExceededFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.ProvisionedIopsNotAvailableInAZFault
RDS.Client.exceptions.OptionGroupNotFoundFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.StorageTypeNotSupportedFault
RDS.Client.exceptions.AuthorizationNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.DomainNotFoundFault
RDS.Client.exceptions.BackupPolicyNotFoundFault

Examples
This example creates a DB instance.
response = client.create_db_instance(
    AllocatedStorage=5,
    DBInstanceClass='db.t2.micro',
    DBInstanceIdentifier='mymysqlinstance',
    Engine='MySQL',
    MasterUserPassword='MyPassword',
    MasterUsername='MyUser',
)

print(response)


Expected Output:
{
    'DBInstance': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def create_db_instance_read_replica(DBInstanceIdentifier=None, SourceDBInstanceIdentifier=None, DBInstanceClass=None, AvailabilityZone=None, Port=None, MultiAZ=None, AutoMinorVersionUpgrade=None, Iops=None, OptionGroupName=None, DBParameterGroupName=None, PubliclyAccessible=None, Tags=None, DBSubnetGroupName=None, VpcSecurityGroupIds=None, StorageType=None, CopyTagsToSnapshot=None, MonitoringInterval=None, MonitoringRoleArn=None, KmsKeyId=None, PreSignedUrl=None, EnableIAMDatabaseAuthentication=None, EnablePerformanceInsights=None, PerformanceInsightsKMSKeyId=None, PerformanceInsightsRetentionPeriod=None, EnableCloudwatchLogsExports=None, ProcessorFeatures=None, UseDefaultProcessorFeatures=None, DeletionProtection=None, Domain=None, DomainIAMRoleName=None, SourceRegion=None):
    """
    Creates a new DB instance that acts as a read replica for an existing source DB instance. You can create a read replica for a DB instance running MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server. For more information, see Working with Read Replicas in the Amazon RDS User Guide .
    Amazon Aurora doesn\'t support this action. Call the CreateDBInstance action to create a DB instance for an Aurora DB cluster.
    All read replica DB instances are created with backups disabled. All other DB instance attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance, except as specified.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates a DB instance read replica.
    Expected Output:
    
    :example: response = client.create_db_instance_read_replica(
        DBInstanceIdentifier='string',
        SourceDBInstanceIdentifier='string',
        DBInstanceClass='string',
        AvailabilityZone='string',
        Port=123,
        MultiAZ=True|False,
        AutoMinorVersionUpgrade=True|False,
        Iops=123,
        OptionGroupName='string',
        DBParameterGroupName='string',
        PubliclyAccessible=True|False,
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        DBSubnetGroupName='string',
        VpcSecurityGroupIds=[
            'string',
        ],
        StorageType='string',
        CopyTagsToSnapshot=True|False,
        MonitoringInterval=123,
        MonitoringRoleArn='string',
        KmsKeyId='string',
        EnableIAMDatabaseAuthentication=True|False,
        EnablePerformanceInsights=True|False,
        PerformanceInsightsKMSKeyId='string',
        PerformanceInsightsRetentionPeriod=123,
        EnableCloudwatchLogsExports=[
            'string',
        ],
        ProcessorFeatures=[
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        UseDefaultProcessorFeatures=True|False,
        DeletionProtection=True|False,
        Domain='string',
        DomainIAMRoleName='string',
        SourceRegion='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe DB instance identifier of the read replica. This identifier is the unique key that identifies a DB instance. This parameter is stored as a lowercase string.\n

    :type SourceDBInstanceIdentifier: string
    :param SourceDBInstanceIdentifier: [REQUIRED]\nThe identifier of the DB instance that will act as the source for the read replica. Each DB instance can have up to five read replicas.\nConstraints:\n\nMust be the identifier of an existing MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server DB instance.\nCan specify a DB instance that is a MySQL read replica only if the source is running MySQL 5.6 or later.\nFor the limitations of Oracle read replicas, see Read Replica Limitations with Oracle in the Amazon RDS User Guide .\nFor the limitations of SQL Server read replicas, see Read Replica Limitations with Microsoft SQL Server in the Amazon RDS User Guide .\nCan specify a PostgreSQL DB instance only if the source is running PostgreSQL 9.3.5 or later (9.4.7 and higher for cross-region replication).\nThe specified DB instance must have automatic backups enabled, that is, its backup retention period must be greater than 0.\nIf the source DB instance is in the same AWS Region as the read replica, specify a valid DB instance identifier.\nIf the source DB instance is in a different AWS Region from the read replica, specify a valid DB instance ARN. For more information, see Constructing an ARN for Amazon RDS in the Amazon RDS User Guide . This doesn\'t apply to SQL Server, which doesn\'t support cross-region replicas.\n\n

    :type DBInstanceClass: string
    :param DBInstanceClass: The compute and memory capacity of the read replica, for example, db.m4.large . Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see DB Instance Class in the Amazon RDS User Guide.\nDefault: Inherits from the source DB instance.\n

    :type AvailabilityZone: string
    :param AvailabilityZone: The Availability Zone (AZ) where the read replica will be created.\nDefault: A random, system-chosen Availability Zone in the endpoint\'s AWS Region.\nExample: us-east-1d\n

    :type Port: integer
    :param Port: The port number that the DB instance uses for connections.\nDefault: Inherits from the source DB instance\nValid Values: 1150-65535\n

    :type MultiAZ: boolean
    :param MultiAZ: A value that indicates whether the read replica is in a Multi-AZ deployment.\nYou can create a read replica as a Multi-AZ DB instance. RDS creates a standby of your replica in another Availability Zone for failover support for the replica. Creating your read replica as a Multi-AZ DB instance is independent of whether the source database is a Multi-AZ DB instance.\n

    :type AutoMinorVersionUpgrade: boolean
    :param AutoMinorVersionUpgrade: A value that indicates whether minor engine upgrades are applied automatically to the read replica during the maintenance window.\nDefault: Inherits from the source DB instance\n

    :type Iops: integer
    :param Iops: The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.

    :type OptionGroupName: string
    :param OptionGroupName: The option group the DB instance is associated with. If omitted, the option group associated with the source instance is used.\n\nNote\nFor SQL Server, you must use the option group associated with the source instance.\n\n

    :type DBParameterGroupName: string
    :param DBParameterGroupName: The name of the DB parameter group to associate with this DB instance.\nIf you do not specify a value for DBParameterGroupName , then Amazon RDS uses the DBParameterGroup of source DB instance for a same region read replica, or the default DBParameterGroup for the specified DB engine for a cross region read replica.\n\nNote\nCurrently, specifying a parameter group for this operation is only supported for Oracle DB instances.\n\nConstraints:\n\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\n

    :type PubliclyAccessible: boolean
    :param PubliclyAccessible: A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn\'t publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. For more information, see CreateDBInstance .

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: Specifies a DB subnet group for the DB instance. The new DB instance is created in the VPC associated with the DB subnet group. If no DB subnet group is specified, then the new DB instance isn\'t created in a VPC.\nConstraints:\n\nCan only be specified if the source DB instance identifier specifies a DB instance in another AWS Region.\nIf supplied, must match the name of an existing DBSubnetGroup.\nThe specified DB subnet group must be in the same AWS Region in which the operation is running.\nAll read replicas in one AWS Region that are created from the same source DB instance must either:>\nSpecify DB subnet groups from the same VPC. All these read replicas are created in the same VPC.\nNot specify a DB subnet group. All these read replicas are created outside of any VPC.\n\n\n\nExample: mySubnetgroup\n

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of EC2 VPC security groups to associate with the read replica.\nDefault: The default EC2 VPC security group for the DB subnet group\'s VPC.\n\n(string) --\n\n

    :type StorageType: string
    :param StorageType: Specifies the storage type to be associated with the read replica.\nValid values: standard | gp2 | io1\nIf you specify io1 , you must also include a value for the Iops parameter.\nDefault: io1 if the Iops parameter is specified, otherwise gp2\n

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the read replica to snapshots of the read replica. By default, tags are not copied.

    :type MonitoringInterval: integer
    :param MonitoringInterval: The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the read replica. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.\nIf MonitoringRoleArn is specified, then you must also set MonitoringInterval to a value other than 0.\nValid Values: 0, 1, 5, 10, 15, 30, 60\n

    :type MonitoringRoleArn: string
    :param MonitoringRoleArn: The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess . For information on creating a monitoring role, go to To create an IAM role for Amazon RDS Enhanced Monitoring in the Amazon RDS User Guide .\nIf MonitoringInterval is set to a value other than 0, then you must supply a MonitoringRoleArn value.\n

    :type KmsKeyId: string
    :param KmsKeyId: The AWS KMS key ID for an encrypted read replica. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.\nIf you create an encrypted read replica in the same AWS Region as the source DB instance, then you do not have to specify a value for this parameter. The read replica is encrypted with the same KMS key as the source DB instance.\nIf you create an encrypted read replica in a different AWS Region, then you must specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you can\'t use encryption keys from one AWS Region in another AWS Region.\nYou can\'t create an encrypted read replica from an unencrypted DB instance.\n

    :type PreSignedUrl: string
    :param PreSignedUrl: The URL that contains a Signature Version 4 signed request for the CreateDBInstanceReadReplica API action in the source AWS Region that contains the source DB instance.\nYou must specify this parameter when you create an encrypted read replica from another AWS Region by using the Amazon RDS API. Don\'t specify PreSignedUrl when you are creating an encrypted read replica in the same AWS Region.\nThe presigned URL must be a valid request for the CreateDBInstanceReadReplica API action that can be executed in the source AWS Region that contains the encrypted source DB instance. The presigned URL request must contain the following parameter values:\n\nDestinationRegion - The AWS Region that the encrypted read replica is created in. This AWS Region is the same one where the CreateDBInstanceReadReplica action is called that contains this presigned URL. For example, if you create an encrypted DB instance in the us-west-1 AWS Region, from a source DB instance in the us-east-2 AWS Region, then you call the CreateDBInstanceReadReplica action in the us-east-1 AWS Region and provide a presigned URL that contains a call to the CreateDBInstanceReadReplica action in the us-west-2 AWS Region. For this example, the DestinationRegion in the presigned URL must be set to the us-east-1 AWS Region.\nKmsKeyId - The AWS KMS key identifier for the key to use to encrypt the read replica in the destination AWS Region. This is the same identifier for both the CreateDBInstanceReadReplica action that is called in the destination AWS Region, and the action contained in the presigned URL.\nSourceDBInstanceIdentifier - The DB instance identifier for the encrypted DB instance to be replicated. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are creating an encrypted read replica from a DB instance in the us-west-2 AWS Region, then your SourceDBInstanceIdentifier looks like the following example: arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-20161115 .\n\nTo learn how to generate a Signature Version 4 signed request, see Authenticating Requests: Using Query Parameters (AWS Signature Version 4) and Signature Version 4 Signing Process .\n\nNote\nIf you are using an AWS SDK tool or the AWS CLI, you can specify SourceRegion (or --source-region for the AWS CLI) instead of specifying PreSignedUrl manually. Specifying SourceRegion autogenerates a presigned URL that is a valid request for the operation that can be executed in the source AWS Region.\n\nSourceRegion isn\'t supported for SQL Server, because SQL Server on Amazon RDS doesn\'t support cross-region read replicas.\nPlease note that this parameter is automatically populated if it is not provided. Including this parameter is not required\n\n\n

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see CreateDBInstance .\nFor more information about IAM database authentication, see IAM Database Authentication for MySQL and PostgreSQL in the Amazon RDS User Guide.\n

    :type EnablePerformanceInsights: boolean
    :param EnablePerformanceInsights: A value that indicates whether to enable Performance Insights for the read replica.\nFor more information, see Using Amazon Performance Insights in the Amazon RDS User Guide .\n

    :type PerformanceInsightsKMSKeyId: string
    :param PerformanceInsightsKMSKeyId: The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.\nIf you do not specify a value for PerformanceInsightsKMSKeyId , then Amazon RDS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.\n

    :type PerformanceInsightsRetentionPeriod: integer
    :param PerformanceInsightsRetentionPeriod: The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: The list of logs that the new DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon RDS User Guide .\n\n(string) --\n\n

    :type ProcessorFeatures: list
    :param ProcessorFeatures: The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.\n\n(dict) --Contains the processor features of a DB instance class.\nTo specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.\nYou can set the processor features of the DB instance class for a DB instance when you call one of the following actions:\n\nCreateDBInstance\nModifyDBInstance\nRestoreDBInstanceFromDBSnapshot\nRestoreDBInstanceFromS3\nRestoreDBInstanceToPointInTime\n\nYou can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.\nIn addition, you can use the following actions for DB instance class processor information:\n\nDescribeDBInstances\nDescribeDBSnapshots\nDescribeValidDBInstanceModifications\n\nFor more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.\n\nName (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .\n\nValue (string) --The value of a processor feature name.\n\n\n\n\n

    :type UseDefaultProcessorFeatures: boolean
    :param UseDefaultProcessorFeatures: A value that indicates whether the DB instance class of the DB instance uses its default processor features.

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see Deleting a DB Instance .

    :type Domain: string
    :param Domain: The Active Directory directory ID to create the DB instance in.\nFor Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see Using Kerberos Authentication with Amazon RDS for Oracle in the Amazon RDS User Guide .\nFor Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server in the Amazon RDS User Guide .\n

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: Specify the name of the IAM role to be used when making API calls to the Directory Service.

    :type SourceRegion: string
    :param SourceRegion: The ID of the region that contains the source for the read replica.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.DBInstanceAlreadyExistsFault
RDS.Client.exceptions.InsufficientDBInstanceCapacityFault
RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.DBSecurityGroupNotFoundFault
RDS.Client.exceptions.InstanceQuotaExceededFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.ProvisionedIopsNotAvailableInAZFault
RDS.Client.exceptions.OptionGroupNotFoundFault
RDS.Client.exceptions.DBSubnetGroupNotAllowedFault
RDS.Client.exceptions.InvalidDBSubnetGroupFault
RDS.Client.exceptions.StorageTypeNotSupportedFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.DomainNotFoundFault

Examples
This example creates a DB instance read replica.
response = client.create_db_instance_read_replica(
    AvailabilityZone='us-east-1a',
    CopyTagsToSnapshot=True,
    DBInstanceClass='db.t2.micro',
    DBInstanceIdentifier='mydbreadreplica',
    PubliclyAccessible=True,
    SourceDBInstanceIdentifier='mymysqlinstance',
    StorageType='gp2',
    Tags=[
        {
            'Key': 'mydbreadreplicakey',
            'Value': 'mydbreadreplicavalue',
        },
    ],
)

print(response)


Expected Output:
{
    'DBInstance': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def create_db_parameter_group(DBParameterGroupName=None, DBParameterGroupFamily=None, Description=None, Tags=None):
    """
    Creates a new DB parameter group.
    A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using ModifyDBParameterGroup . Once you\'ve created a DB parameter group, you need to associate it with your DB instance using ModifyDBInstance . When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates a DB parameter group.
    Expected Output:
    
    :example: response = client.create_db_parameter_group(
        DBParameterGroupName='string',
        DBParameterGroupFamily='string',
        Description='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DBParameterGroupName: string
    :param DBParameterGroupName: [REQUIRED]\nThe name of the DB parameter group.\nConstraints:\n\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\n\nNote\nThis value is stored as a lowercase string.\n\n

    :type DBParameterGroupFamily: string
    :param DBParameterGroupFamily: [REQUIRED]\nThe DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.\nTo list all of the available parameter group families, use the following command:\n\naws rds describe-db-engine-versions --query 'DBEngineVersions[].DBParameterGroupFamily'\n\nNote\nThe output contains duplicates.\n\n

    :type Description: string
    :param Description: [REQUIRED]\nThe description for the DB parameter group.\n

    :type Tags: list
    :param Tags: Tags to assign to the DB parameter group.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBParameterGroup': {
        'DBParameterGroupName': 'string',
        'DBParameterGroupFamily': 'string',
        'Description': 'string',
        'DBParameterGroupArn': 'string'
    }
}


Response Structure

(dict) --

DBParameterGroup (dict) --
Contains the details of an Amazon RDS DB parameter group.
This data type is used as a response element in the DescribeDBParameterGroups action.

DBParameterGroupName (string) --
Provides the name of the DB parameter group.

DBParameterGroupFamily (string) --
Provides the name of the DB parameter group family that this DB parameter group is compatible with.

Description (string) --
Provides the customer-specified description for this DB parameter group.

DBParameterGroupArn (string) --
The Amazon Resource Name (ARN) for the DB parameter group.









Exceptions

RDS.Client.exceptions.DBParameterGroupQuotaExceededFault
RDS.Client.exceptions.DBParameterGroupAlreadyExistsFault

Examples
This example creates a DB parameter group.
response = client.create_db_parameter_group(
    DBParameterGroupFamily='mysql5.6',
    DBParameterGroupName='mymysqlparametergroup',
    Description='My MySQL parameter group',
)

print(response)


Expected Output:
{
    'DBParameterGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBParameterGroup': {
            'DBParameterGroupName': 'string',
            'DBParameterGroupFamily': 'string',
            'Description': 'string',
            'DBParameterGroupArn': 'string'
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBParameterGroupQuotaExceededFault
    RDS.Client.exceptions.DBParameterGroupAlreadyExistsFault
    
    """
    pass

def create_db_proxy(DBProxyName=None, EngineFamily=None, Auth=None, RoleArn=None, VpcSubnetIds=None, VpcSecurityGroupIds=None, RequireTLS=None, IdleClientTimeout=None, DebugLogging=None, Tags=None):
    """
    Creates a new DB proxy.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.create_db_proxy(
        DBProxyName='string',
        EngineFamily='MYSQL'|'POSTGRESQL',
        Auth=[
            {
                'Description': 'string',
                'UserName': 'string',
                'AuthScheme': 'SECRETS',
                'SecretArn': 'string',
                'IAMAuth': 'DISABLED'|'REQUIRED'
            },
        ],
        RoleArn='string',
        VpcSubnetIds=[
            'string',
        ],
        VpcSecurityGroupIds=[
            'string',
        ],
        RequireTLS=True|False,
        IdleClientTimeout=123,
        DebugLogging=True|False,
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DBProxyName: string
    :param DBProxyName: [REQUIRED]\nThe identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can\'t end with a hyphen or contain two consecutive hyphens.\n

    :type EngineFamily: string
    :param EngineFamily: [REQUIRED]\nThe kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. The engine family applies to MySQL and PostgreSQL for both RDS and Aurora.\n

    :type Auth: list
    :param Auth: [REQUIRED]\nThe authorization mechanism that the proxy uses.\n\n(dict) --\nNote\nThis is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.\n\nSpecifies the details of authentication used by a proxy to log in as a specific database user.\n\nDescription (string) --A user-specified description about the authentication used by a proxy to log in as a specific database user.\n\nUserName (string) --The name of the database user to which the proxy connects.\n\nAuthScheme (string) --The type of authentication that the proxy uses for connections from the proxy to the underlying database.\n\nSecretArn (string) --The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.\n\nIAMAuth (string) --Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.\n\n\n\n\n

    :type RoleArn: string
    :param RoleArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.\n

    :type VpcSubnetIds: list
    :param VpcSubnetIds: [REQUIRED]\nOne or more VPC subnet IDs to associate with the new proxy.\n\n(string) --\n\n

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: One or more VPC security group IDs to associate with the new proxy.\n\n(string) --\n\n

    :type RequireTLS: boolean
    :param RequireTLS: A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.

    :type IdleClientTimeout: integer
    :param IdleClientTimeout: The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.

    :type DebugLogging: boolean
    :param DebugLogging: Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.

    :type Tags: list
    :param Tags: An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBProxy': {
        'DBProxyName': 'string',
        'DBProxyArn': 'string',
        'Status': 'available'|'modifying'|'incompatible-network'|'insufficient-resource-limits'|'creating'|'deleting'|'suspended'|'suspending'|'reactivating',
        'EngineFamily': 'string',
        'VpcSecurityGroupIds': [
            'string',
        ],
        'VpcSubnetIds': [
            'string',
        ],
        'Auth': [
            {
                'Description': 'string',
                'UserName': 'string',
                'AuthScheme': 'SECRETS',
                'SecretArn': 'string',
                'IAMAuth': 'DISABLED'|'REQUIRED'
            },
        ],
        'RoleArn': 'string',
        'Endpoint': 'string',
        'RequireTLS': True|False,
        'IdleClientTimeout': 123,
        'DebugLogging': True|False,
        'CreatedDate': datetime(2015, 1, 1),
        'UpdatedDate': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --

DBProxy (dict) --
The DBProxy structure corresponding to the new proxy.

DBProxyName (string) --
The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.

DBProxyArn (string) --
The Amazon Resource Name (ARN) for the proxy.

Status (string) --
The current status of this proxy. A status of available means the proxy is ready to handle requests. Other values indicate that you must wait for the proxy to be ready, or take some action to resolve an issue.

EngineFamily (string) --
The engine family applies to MySQL and PostgreSQL for both RDS and Aurora.

VpcSecurityGroupIds (list) --
Provides a list of VPC security groups that the proxy belongs to.

(string) --


VpcSubnetIds (list) --
The EC2 subnet IDs for the proxy.

(string) --


Auth (list) --
One or more data structures specifying the authorization mechanism to connect to the associated RDS DB instance or Aurora DB cluster.

(dict) --

Note
This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.

Returns the details of authentication used by a proxy to log in as a specific database user.

Description (string) --
A user-specified description about the authentication used by a proxy to log in as a specific database user.

UserName (string) --
The name of the database user to which the proxy connects.

AuthScheme (string) --
The type of authentication that the proxy uses for connections from the proxy to the underlying database.

SecretArn (string) --
The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.

IAMAuth (string) --
Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.





RoleArn (string) --
The Amazon Resource Name (ARN) for the IAM role that the proxy uses to access Amazon Secrets Manager.

Endpoint (string) --
The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.

RequireTLS (boolean) --
Indicates whether Transport Layer Security (TLS) encryption is required for connections to the proxy.

IdleClientTimeout (integer) --
The number of seconds a connection to the proxy can have no activity before the proxy drops the client connection. The proxy keeps the underlying database connection open and puts it back into the connection pool for reuse by later connection requests.
Default: 1800 (30 minutes)
Constraints: 1 to 28,800

DebugLogging (boolean) --
Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.

CreatedDate (datetime) --
The date and time when the proxy was first created.

UpdatedDate (datetime) --
The date and time when the proxy was last updated.









Exceptions

RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.DBProxyAlreadyExistsFault
RDS.Client.exceptions.DBProxyQuotaExceededFault


    :return: {
        'DBProxy': {
            'DBProxyName': 'string',
            'DBProxyArn': 'string',
            'Status': 'available'|'modifying'|'incompatible-network'|'insufficient-resource-limits'|'creating'|'deleting'|'suspended'|'suspending'|'reactivating',
            'EngineFamily': 'string',
            'VpcSecurityGroupIds': [
                'string',
            ],
            'VpcSubnetIds': [
                'string',
            ],
            'Auth': [
                {
                    'Description': 'string',
                    'UserName': 'string',
                    'AuthScheme': 'SECRETS',
                    'SecretArn': 'string',
                    'IAMAuth': 'DISABLED'|'REQUIRED'
                },
            ],
            'RoleArn': 'string',
            'Endpoint': 'string',
            'RequireTLS': True|False,
            'IdleClientTimeout': 123,
            'DebugLogging': True|False,
            'CreatedDate': datetime(2015, 1, 1),
            'UpdatedDate': datetime(2015, 1, 1)
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_db_security_group(DBSecurityGroupName=None, DBSecurityGroupDescription=None, Tags=None):
    """
    Creates a new DB security group. DB security groups control access to a DB instance.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates a DB security group.
    Expected Output:
    
    :example: response = client.create_db_security_group(
        DBSecurityGroupName='string',
        DBSecurityGroupDescription='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DBSecurityGroupName: string
    :param DBSecurityGroupName: [REQUIRED]\nThe name for the DB security group. This value is stored as a lowercase string.\nConstraints:\n\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\nMust not be 'Default'\n\nExample: mysecuritygroup\n

    :type DBSecurityGroupDescription: string
    :param DBSecurityGroupDescription: [REQUIRED]\nThe description for the DB security group.\n

    :type Tags: list
    :param Tags: Tags to assign to the DB security group.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBSecurityGroup': {
        'OwnerId': 'string',
        'DBSecurityGroupName': 'string',
        'DBSecurityGroupDescription': 'string',
        'VpcId': 'string',
        'EC2SecurityGroups': [
            {
                'Status': 'string',
                'EC2SecurityGroupName': 'string',
                'EC2SecurityGroupId': 'string',
                'EC2SecurityGroupOwnerId': 'string'
            },
        ],
        'IPRanges': [
            {
                'Status': 'string',
                'CIDRIP': 'string'
            },
        ],
        'DBSecurityGroupArn': 'string'
    }
}


Response Structure

(dict) --

DBSecurityGroup (dict) --
Contains the details for an Amazon RDS DB security group.
This data type is used as a response element in the DescribeDBSecurityGroups action.

OwnerId (string) --
Provides the AWS ID of the owner of a specific DB security group.

DBSecurityGroupName (string) --
Specifies the name of the DB security group.

DBSecurityGroupDescription (string) --
Provides the description of the DB security group.

VpcId (string) --
Provides the VpcId of the DB security group.

EC2SecurityGroups (list) --
Contains a list of EC2SecurityGroup elements.

(dict) --
This data type is used as a response element in the following actions:

AuthorizeDBSecurityGroupIngress
DescribeDBSecurityGroups
RevokeDBSecurityGroupIngress


Status (string) --
Provides the status of the EC2 security group. Status can be "authorizing", "authorized", "revoking", and "revoked".

EC2SecurityGroupName (string) --
Specifies the name of the EC2 security group.

EC2SecurityGroupId (string) --
Specifies the id of the EC2 security group.

EC2SecurityGroupOwnerId (string) --
Specifies the AWS ID of the owner of the EC2 security group specified in the EC2SecurityGroupName field.





IPRanges (list) --
Contains a list of IPRange elements.

(dict) --
This data type is used as a response element in the DescribeDBSecurityGroups action.

Status (string) --
Specifies the status of the IP range. Status can be "authorizing", "authorized", "revoking", and "revoked".

CIDRIP (string) --
Specifies the IP range.





DBSecurityGroupArn (string) --
The Amazon Resource Name (ARN) for the DB security group.









Exceptions

RDS.Client.exceptions.DBSecurityGroupAlreadyExistsFault
RDS.Client.exceptions.DBSecurityGroupQuotaExceededFault
RDS.Client.exceptions.DBSecurityGroupNotSupportedFault

Examples
This example creates a DB security group.
response = client.create_db_security_group(
    DBSecurityGroupDescription='My DB security group',
    DBSecurityGroupName='mydbsecuritygroup',
)

print(response)


Expected Output:
{
    'DBSecurityGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSecurityGroup': {
            'OwnerId': 'string',
            'DBSecurityGroupName': 'string',
            'DBSecurityGroupDescription': 'string',
            'VpcId': 'string',
            'EC2SecurityGroups': [
                {
                    'Status': 'string',
                    'EC2SecurityGroupName': 'string',
                    'EC2SecurityGroupId': 'string',
                    'EC2SecurityGroupOwnerId': 'string'
                },
            ],
            'IPRanges': [
                {
                    'Status': 'string',
                    'CIDRIP': 'string'
                },
            ],
            'DBSecurityGroupArn': 'string'
        }
    }
    
    
    :returns: 
    AuthorizeDBSecurityGroupIngress
    DescribeDBSecurityGroups
    RevokeDBSecurityGroupIngress
    
    """
    pass

def create_db_snapshot(DBSnapshotIdentifier=None, DBInstanceIdentifier=None, Tags=None):
    """
    Creates a DBSnapshot. The source DBInstance must be in "available" state.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates a DB snapshot.
    Expected Output:
    
    :example: response = client.create_db_snapshot(
        DBSnapshotIdentifier='string',
        DBInstanceIdentifier='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DBSnapshotIdentifier: string
    :param DBSnapshotIdentifier: [REQUIRED]\nThe identifier for the DB snapshot.\nConstraints:\n\nCan\'t be null, empty, or blank\nMust contain from 1 to 255 letters, numbers, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: my-snapshot-id\n

    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe identifier of the DB instance that you want to create the snapshot of.\nConstraints:\n\nMust match the identifier of an existing DBInstance.\n\n

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBSnapshot': {
        'DBSnapshotIdentifier': 'string',
        'DBInstanceIdentifier': 'string',
        'SnapshotCreateTime': datetime(2015, 1, 1),
        'Engine': 'string',
        'AllocatedStorage': 123,
        'Status': 'string',
        'Port': 123,
        'AvailabilityZone': 'string',
        'VpcId': 'string',
        'InstanceCreateTime': datetime(2015, 1, 1),
        'MasterUsername': 'string',
        'EngineVersion': 'string',
        'LicenseModel': 'string',
        'SnapshotType': 'string',
        'Iops': 123,
        'OptionGroupName': 'string',
        'PercentProgress': 123,
        'SourceRegion': 'string',
        'SourceDBSnapshotIdentifier': 'string',
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'Encrypted': True|False,
        'KmsKeyId': 'string',
        'DBSnapshotArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DbiResourceId': 'string'
    }
}


Response Structure

(dict) --

DBSnapshot (dict) --
Contains the details of an Amazon RDS DB snapshot.
This data type is used as a response element in the DescribeDBSnapshots action.

DBSnapshotIdentifier (string) --
Specifies the identifier for the DB snapshot.

DBInstanceIdentifier (string) --
Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

SnapshotCreateTime (datetime) --
Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

Engine (string) --
Specifies the name of the database engine.

AllocatedStorage (integer) --
Specifies the allocated storage size in gibibytes (GiB).

Status (string) --
Specifies the status of this DB snapshot.

Port (integer) --
Specifies the port that the database engine was listening on at the time of the snapshot.

AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.

VpcId (string) --
Provides the VPC ID associated with the DB snapshot.

InstanceCreateTime (datetime) --
Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

MasterUsername (string) --
Provides the master username for the DB snapshot.

EngineVersion (string) --
Specifies the version of the database engine.

LicenseModel (string) --
License model information for the restored DB instance.

SnapshotType (string) --
Provides the type of the DB snapshot.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.

OptionGroupName (string) --
Provides the option group name for the DB snapshot.

PercentProgress (integer) --
The percentage of the estimated data that has been transferred.

SourceRegion (string) --
The AWS Region that the DB snapshot was created in or copied from.

SourceDBSnapshotIdentifier (string) --
The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has value in case of cross-customer or cross-region copy.

StorageType (string) --
Specifies the storage type associated with DB snapshot.

TdeCredentialArn (string) --
The ARN from the key store with which to associate the instance for TDE encryption.

Encrypted (boolean) --
Specifies whether the DB snapshot is encrypted.

KmsKeyId (string) --
If Encrypted is true, the AWS KMS key identifier for the encrypted DB snapshot.

DBSnapshotArn (string) --
The Amazon Resource Name (ARN) for the DB snapshot.

Timezone (string) --
The time zone of the DB snapshot. In most cases, the Timezone element is empty. Timezone content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.

ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB snapshot was created.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DbiResourceId (string) --
The identifier for the source DB instance, which can\'t be changed and which is unique to an AWS Region.









Exceptions

RDS.Client.exceptions.DBSnapshotAlreadyExistsFault
RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.SnapshotQuotaExceededFault

Examples
This example creates a DB snapshot.
response = client.create_db_snapshot(
    DBInstanceIdentifier='mymysqlinstance',
    DBSnapshotIdentifier='mydbsnapshot',
)

print(response)


Expected Output:
{
    'DBSnapshot': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSnapshot': {
            'DBSnapshotIdentifier': 'string',
            'DBInstanceIdentifier': 'string',
            'SnapshotCreateTime': datetime(2015, 1, 1),
            'Engine': 'string',
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'AvailabilityZone': 'string',
            'VpcId': 'string',
            'InstanceCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'SnapshotType': 'string',
            'Iops': 123,
            'OptionGroupName': 'string',
            'PercentProgress': 123,
            'SourceRegion': 'string',
            'SourceDBSnapshotIdentifier': 'string',
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'Encrypted': True|False,
            'KmsKeyId': 'string',
            'DBSnapshotArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DbiResourceId': 'string'
        }
    }
    
    
    :returns: 
    CreateDBInstance
    ModifyDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceFromS3
    RestoreDBInstanceToPointInTime
    
    """
    pass

def create_db_subnet_group(DBSubnetGroupName=None, DBSubnetGroupDescription=None, SubnetIds=None, Tags=None):
    """
    Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates a DB subnet group.
    Expected Output:
    
    :example: response = client.create_db_subnet_group(
        DBSubnetGroupName='string',
        DBSubnetGroupDescription='string',
        SubnetIds=[
            'string',
        ],
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: [REQUIRED]\nThe name for the DB subnet group. This value is stored as a lowercase string.\nConstraints: Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens. Must not be default.\nExample: mySubnetgroup\n

    :type DBSubnetGroupDescription: string
    :param DBSubnetGroupDescription: [REQUIRED]\nThe description for the DB subnet group.\n

    :type SubnetIds: list
    :param SubnetIds: [REQUIRED]\nThe EC2 Subnet IDs for the DB subnet group.\n\n(string) --\n\n

    :type Tags: list
    :param Tags: Tags to assign to the DB subnet group.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBSubnetGroup': {
        'DBSubnetGroupName': 'string',
        'DBSubnetGroupDescription': 'string',
        'VpcId': 'string',
        'SubnetGroupStatus': 'string',
        'Subnets': [
            {
                'SubnetIdentifier': 'string',
                'SubnetAvailabilityZone': {
                    'Name': 'string'
                },
                'SubnetStatus': 'string'
            },
        ],
        'DBSubnetGroupArn': 'string'
    }
}


Response Structure

(dict) --

DBSubnetGroup (dict) --
Contains the details of an Amazon RDS DB subnet group.
This data type is used as a response element in the DescribeDBSubnetGroups action.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.









Exceptions

RDS.Client.exceptions.DBSubnetGroupAlreadyExistsFault
RDS.Client.exceptions.DBSubnetGroupQuotaExceededFault
RDS.Client.exceptions.DBSubnetQuotaExceededFault
RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
RDS.Client.exceptions.InvalidSubnet

Examples
This example creates a DB subnet group.
response = client.create_db_subnet_group(
    DBSubnetGroupDescription='My DB subnet group',
    DBSubnetGroupName='mydbsubnetgroup',
    SubnetIds=[
        'subnet-1fab8a69',
        'subnet-d43a468c',
    ],
)

print(response)


Expected Output:
{
    'DBSubnetGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBSubnetGroupAlreadyExistsFault
    RDS.Client.exceptions.DBSubnetGroupQuotaExceededFault
    RDS.Client.exceptions.DBSubnetQuotaExceededFault
    RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
    RDS.Client.exceptions.InvalidSubnet
    
    """
    pass

def create_event_subscription(SubscriptionName=None, SnsTopicArn=None, SourceType=None, EventCategories=None, SourceIds=None, Enabled=None, Tags=None):
    """
    Creates an RDS event notification subscription. This action requires a topic Amazon Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.
    You can specify the type of source (SourceType) you want to be notified of, provide a list of RDS sources (SourceIds) that triggers the events, and provide a list of event categories (EventCategories) for events you want to be notified of. For example, you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.
    If you specify both the SourceType and SourceIds, such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events for the specified source. If you specify a SourceType but do not specify a SourceIdentifier, you receive notice of the events for that source type for all your RDS sources. If you don\'t specify either the SourceType or the SourceIdentifier, you are notified of events generated from all RDS sources belonging to your customer account.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates an event notification subscription.
    Expected Output:
    
    :example: response = client.create_event_subscription(
        SubscriptionName='string',
        SnsTopicArn='string',
        SourceType='string',
        EventCategories=[
            'string',
        ],
        SourceIds=[
            'string',
        ],
        Enabled=True|False,
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type SubscriptionName: string
    :param SubscriptionName: [REQUIRED]\nThe name of the subscription.\nConstraints: The name must be less than 255 characters.\n

    :type SnsTopicArn: string
    :param SnsTopicArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.\n

    :type SourceType: string
    :param SourceType: The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value isn\'t specified, all events are returned.\nValid values: db-instance | db-cluster | db-parameter-group | db-security-group | db-snapshot | db-cluster-snapshot\n

    :type EventCategories: list
    :param EventCategories: A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType in the Events topic in the Amazon RDS User Guide or by using the DescribeEventCategories action.\n\n(string) --\n\n

    :type SourceIds: list
    :param SourceIds: The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It can\'t end with a hyphen or contain two consecutive hyphens.\nConstraints:\n\nIf SourceIds are supplied, SourceType must also be provided.\nIf the source type is a DB instance, then a DBInstanceIdentifier must be supplied.\nIf the source type is a DB security group, a DBSecurityGroupName must be supplied.\nIf the source type is a DB parameter group, a DBParameterGroupName must be supplied.\nIf the source type is a DB snapshot, a DBSnapshotIdentifier must be supplied.\n\n\n(string) --\n\n

    :type Enabled: boolean
    :param Enabled: A value that indicates whether to activate the subscription. If the event notification subscription isn\'t activated, the subscription is created but not active.

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'EventSubscription': {
        'CustomerAwsId': 'string',
        'CustSubscriptionId': 'string',
        'SnsTopicArn': 'string',
        'Status': 'string',
        'SubscriptionCreationTime': 'string',
        'SourceType': 'string',
        'SourceIdsList': [
            'string',
        ],
        'EventCategoriesList': [
            'string',
        ],
        'Enabled': True|False,
        'EventSubscriptionArn': 'string'
    }
}


Response Structure

(dict) --

EventSubscription (dict) --
Contains the results of a successful invocation of the DescribeEventSubscriptions action.

CustomerAwsId (string) --
The AWS customer account associated with the RDS event notification subscription.

CustSubscriptionId (string) --
The RDS event notification subscription Id.

SnsTopicArn (string) --
The topic ARN of the RDS event notification subscription.

Status (string) --
The status of the RDS event notification subscription.
Constraints:
Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist
The status "no-permission" indicates that RDS no longer has permission to post to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.

SubscriptionCreationTime (string) --
The time the RDS event notification subscription was created.

SourceType (string) --
The source type for the RDS event notification subscription.

SourceIdsList (list) --
A list of source IDs for the RDS event notification subscription.

(string) --


EventCategoriesList (list) --
A list of event categories for the RDS event notification subscription.

(string) --


Enabled (boolean) --
A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.

EventSubscriptionArn (string) --
The Amazon Resource Name (ARN) for the event subscription.









Exceptions

RDS.Client.exceptions.EventSubscriptionQuotaExceededFault
RDS.Client.exceptions.SubscriptionAlreadyExistFault
RDS.Client.exceptions.SNSInvalidTopicFault
RDS.Client.exceptions.SNSNoAuthorizationFault
RDS.Client.exceptions.SNSTopicArnNotFoundFault
RDS.Client.exceptions.SubscriptionCategoryNotFoundFault
RDS.Client.exceptions.SourceNotFoundFault

Examples
This example creates an event notification subscription.
response = client.create_event_subscription(
    Enabled=True,
    EventCategories=[
        'availability',
    ],
    SnsTopicArn='arn:aws:sns:us-east-1:992648334831:MyDemoSNSTopic',
    SourceIds=[
        'mymysqlinstance',
    ],
    SourceType='db-instance',
    SubscriptionName='mymysqleventsubscription',
)

print(response)


Expected Output:
{
    'EventSubscription': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'EventSubscription': {
            'CustomerAwsId': 'string',
            'CustSubscriptionId': 'string',
            'SnsTopicArn': 'string',
            'Status': 'string',
            'SubscriptionCreationTime': 'string',
            'SourceType': 'string',
            'SourceIdsList': [
                'string',
            ],
            'EventCategoriesList': [
                'string',
            ],
            'Enabled': True|False,
            'EventSubscriptionArn': 'string'
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_global_cluster(GlobalClusterIdentifier=None, SourceDBClusterIdentifier=None, Engine=None, EngineVersion=None, DeletionProtection=None, DatabaseName=None, StorageEncrypted=None):
    """
    Creates an Aurora global database spread across multiple regions. The global database contains a single primary cluster with read-write capability, and a read-only secondary cluster that receives data from the primary cluster through high-speed replication performed by the Aurora storage subsystem.
    You can create a global database that is initially empty, and then add a primary cluster and a secondary cluster to it. Or you can specify an existing Aurora cluster during the create operation, and this cluster becomes the primary cluster of the global database.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.create_global_cluster(
        GlobalClusterIdentifier='string',
        SourceDBClusterIdentifier='string',
        Engine='string',
        EngineVersion='string',
        DeletionProtection=True|False,
        DatabaseName='string',
        StorageEncrypted=True|False
    )
    
    
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: The cluster identifier of the new global database cluster.

    :type SourceDBClusterIdentifier: string
    :param SourceDBClusterIdentifier: The Amazon Resource Name (ARN) to use as the primary cluster of the global database. This parameter is optional.

    :type Engine: string
    :param Engine: Provides the name of the database engine to be used for this DB cluster.

    :type EngineVersion: string
    :param EngineVersion: The engine version of the Aurora global database.

    :type DeletionProtection: boolean
    :param DeletionProtection: The deletion protection setting for the new global database. The global database can\'t be deleted when deletion protection is enabled.

    :type DatabaseName: string
    :param DatabaseName: The name for your database of up to 64 alpha-numeric characters. If you do not provide a name, Amazon Aurora will not create a database in the global database cluster you are creating.

    :type StorageEncrypted: boolean
    :param StorageEncrypted: The storage encryption setting for the new global database cluster.

    :rtype: dict

ReturnsResponse Syntax
{
    'GlobalCluster': {
        'GlobalClusterIdentifier': 'string',
        'GlobalClusterResourceId': 'string',
        'GlobalClusterArn': 'string',
        'Status': 'string',
        'Engine': 'string',
        'EngineVersion': 'string',
        'DatabaseName': 'string',
        'StorageEncrypted': True|False,
        'DeletionProtection': True|False,
        'GlobalClusterMembers': [
            {
                'DBClusterArn': 'string',
                'Readers': [
                    'string',
                ],
                'IsWriter': True|False
            },
        ]
    }
}


Response Structure

(dict) --

GlobalCluster (dict) --
A data type representing an Aurora global database.

GlobalClusterIdentifier (string) --
Contains a user-supplied global database cluster identifier. This identifier is the unique key that identifies a global database cluster.

GlobalClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

GlobalClusterArn (string) --
The Amazon Resource Name (ARN) for the global database cluster.

Status (string) --
Specifies the current state of this global database cluster.

Engine (string) --
The Aurora database engine used by the global database cluster.

EngineVersion (string) --
Indicates the database engine version.

DatabaseName (string) --
The default database name within the new global database cluster.

StorageEncrypted (boolean) --
The storage encryption setting for the global database cluster.

DeletionProtection (boolean) --
The deletion protection setting for the new global database cluster.

GlobalClusterMembers (list) --
The list of cluster IDs for secondary clusters within the global database cluster. Currently limited to 1 item.

(dict) --
A data structure with information about any primary and secondary clusters associated with an Aurora global database.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for each Aurora cluster.

Readers (list) --
The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global database.

(string) --


IsWriter (boolean) --
Specifies whether the Aurora cluster is the primary cluster (that is, has read-write capability) for the Aurora global database with which it is associated.













Exceptions

RDS.Client.exceptions.GlobalClusterAlreadyExistsFault
RDS.Client.exceptions.GlobalClusterQuotaExceededFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.DBClusterNotFoundFault


    :return: {
        'GlobalCluster': {
            'GlobalClusterIdentifier': 'string',
            'GlobalClusterResourceId': 'string',
            'GlobalClusterArn': 'string',
            'Status': 'string',
            'Engine': 'string',
            'EngineVersion': 'string',
            'DatabaseName': 'string',
            'StorageEncrypted': True|False,
            'DeletionProtection': True|False,
            'GlobalClusterMembers': [
                {
                    'DBClusterArn': 'string',
                    'Readers': [
                        'string',
                    ],
                    'IsWriter': True|False
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def create_option_group(OptionGroupName=None, EngineName=None, MajorEngineVersion=None, OptionGroupDescription=None, Tags=None):
    """
    Creates a new option group. You can create up to 20 option groups.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example creates an option group.
    Expected Output:
    
    :example: response = client.create_option_group(
        OptionGroupName='string',
        EngineName='string',
        MajorEngineVersion='string',
        OptionGroupDescription='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type OptionGroupName: string
    :param OptionGroupName: [REQUIRED]\nSpecifies the name of the option group to be created.\nConstraints:\n\nMust be 1 to 255 letters, numbers, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: myoptiongroup\n

    :type EngineName: string
    :param EngineName: [REQUIRED]\nSpecifies the name of the engine that this option group should be associated with.\n

    :type MajorEngineVersion: string
    :param MajorEngineVersion: [REQUIRED]\nSpecifies the major version of the engine that this option group should be associated with.\n

    :type OptionGroupDescription: string
    :param OptionGroupDescription: [REQUIRED]\nThe description of the option group.\n

    :type Tags: list
    :param Tags: Tags to assign to the option group.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'OptionGroup': {
        'OptionGroupName': 'string',
        'OptionGroupDescription': 'string',
        'EngineName': 'string',
        'MajorEngineVersion': 'string',
        'Options': [
            {
                'OptionName': 'string',
                'OptionDescription': 'string',
                'Persistent': True|False,
                'Permanent': True|False,
                'Port': 123,
                'OptionVersion': 'string',
                'OptionSettings': [
                    {
                        'Name': 'string',
                        'Value': 'string',
                        'DefaultValue': 'string',
                        'Description': 'string',
                        'ApplyType': 'string',
                        'DataType': 'string',
                        'AllowedValues': 'string',
                        'IsModifiable': True|False,
                        'IsCollection': True|False
                    },
                ],
                'DBSecurityGroupMemberships': [
                    {
                        'DBSecurityGroupName': 'string',
                        'Status': 'string'
                    },
                ],
                'VpcSecurityGroupMemberships': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ]
            },
        ],
        'AllowsVpcAndNonVpcInstanceMemberships': True|False,
        'VpcId': 'string',
        'OptionGroupArn': 'string'
    }
}


Response Structure

(dict) --

OptionGroup (dict) --

OptionGroupName (string) --
Specifies the name of the option group.

OptionGroupDescription (string) --
Provides a description of the option group.

EngineName (string) --
Indicates the name of the engine that this option group can be applied to.

MajorEngineVersion (string) --
Indicates the major engine version associated with this option group.

Options (list) --
Indicates what options are available in the option group.

(dict) --
Option details.

OptionName (string) --
The name of the option.

OptionDescription (string) --
The description of the option.

Persistent (boolean) --
Indicate if this option is persistent.

Permanent (boolean) --
Indicate if this option is permanent.

Port (integer) --
If required, the port configured for this option to use.

OptionVersion (string) --
The version of the option.

OptionSettings (list) --
The option settings for this option.

(dict) --
Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.

Name (string) --
The name of the option that has settings that you can set.

Value (string) --
The current value of the option setting.

DefaultValue (string) --
The default value of the option setting.

Description (string) --
The description of the option setting.

ApplyType (string) --
The DB engine specific parameter type.

DataType (string) --
The data type of the option setting.

AllowedValues (string) --
The allowed values of the option setting.

IsModifiable (boolean) --
A Boolean value that, when true, indicates the option setting can be modified from the default.

IsCollection (boolean) --
Indicates if the option setting is part of a collection.





DBSecurityGroupMemberships (list) --
If the option requires access to a port, then this DB security group allows access to the port.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroupMemberships (list) --
If the option requires access to a port, then this VPC security group allows access to the port.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.









AllowsVpcAndNonVpcInstanceMemberships (boolean) --
Indicates whether this option group can be applied to both VPC and non-VPC instances. The value true indicates the option group can be applied to both VPC and non-VPC instances.

VpcId (string) --
If AllowsVpcAndNonVpcInstanceMemberships is false , this field is blank. If AllowsVpcAndNonVpcInstanceMemberships is true and this field is blank, then this option group can be applied to both VPC and non-VPC instances. If this field contains a value, then this option group can only be applied to instances that are in the VPC indicated by this field.

OptionGroupArn (string) --
The Amazon Resource Name (ARN) for the option group.









Exceptions

RDS.Client.exceptions.OptionGroupAlreadyExistsFault
RDS.Client.exceptions.OptionGroupQuotaExceededFault

Examples
This example creates an option group.
response = client.create_option_group(
    EngineName='MySQL',
    MajorEngineVersion='5.6',
    OptionGroupDescription='My MySQL 5.6 option group',
    OptionGroupName='mymysqloptiongroup',
)

print(response)


Expected Output:
{
    'OptionGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'OptionGroup': {
            'OptionGroupName': 'string',
            'OptionGroupDescription': 'string',
            'EngineName': 'string',
            'MajorEngineVersion': 'string',
            'Options': [
                {
                    'OptionName': 'string',
                    'OptionDescription': 'string',
                    'Persistent': True|False,
                    'Permanent': True|False,
                    'Port': 123,
                    'OptionVersion': 'string',
                    'OptionSettings': [
                        {
                            'Name': 'string',
                            'Value': 'string',
                            'DefaultValue': 'string',
                            'Description': 'string',
                            'ApplyType': 'string',
                            'DataType': 'string',
                            'AllowedValues': 'string',
                            'IsModifiable': True|False,
                            'IsCollection': True|False
                        },
                    ],
                    'DBSecurityGroupMemberships': [
                        {
                            'DBSecurityGroupName': 'string',
                            'Status': 'string'
                        },
                    ],
                    'VpcSecurityGroupMemberships': [
                        {
                            'VpcSecurityGroupId': 'string',
                            'Status': 'string'
                        },
                    ]
                },
            ],
            'AllowsVpcAndNonVpcInstanceMemberships': True|False,
            'VpcId': 'string',
            'OptionGroupArn': 'string'
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def delete_custom_availability_zone(CustomAvailabilityZoneId=None):
    """
    Deletes a custom Availability Zone (AZ).
    A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.
    For more information about RDS on VMware, see the ` RDS on VMware User Guide. https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.delete_custom_availability_zone(
        CustomAvailabilityZoneId='string'
    )
    
    
    :type CustomAvailabilityZoneId: string
    :param CustomAvailabilityZoneId: [REQUIRED]\nThe custom AZ identifier.\n

    :rtype: dict
ReturnsResponse Syntax{
    'CustomAvailabilityZone': {
        'CustomAvailabilityZoneId': 'string',
        'CustomAvailabilityZoneName': 'string',
        'CustomAvailabilityZoneStatus': 'string',
        'VpnDetails': {
            'VpnId': 'string',
            'VpnTunnelOriginatorIP': 'string',
            'VpnGatewayIp': 'string',
            'VpnPSK': 'string',
            'VpnName': 'string',
            'VpnState': 'string'
        }
    }
}


Response Structure

(dict) --
CustomAvailabilityZone (dict) --A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere cluster.
For more information about RDS on VMware, see the ` RDS on VMware User Guide. https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

CustomAvailabilityZoneId (string) --The identifier of the custom AZ.
Amazon RDS generates a unique identifier when a custom AZ is created.

CustomAvailabilityZoneName (string) --The name of the custom AZ.

CustomAvailabilityZoneStatus (string) --The status of the custom AZ.

VpnDetails (dict) --Information about the virtual private network (VPN) between the VMware vSphere cluster and the AWS website.

VpnId (string) --The ID of the VPN.

VpnTunnelOriginatorIP (string) --The IP address of network traffic from your on-premises data center. A custom AZ receives the network traffic.

VpnGatewayIp (string) --The IP address of network traffic from AWS to your on-premises data center.

VpnPSK (string) --The preshared key (PSK) for the VPN.

VpnName (string) --The name of the VPN.

VpnState (string) --The state of the VPN.










Exceptions

RDS.Client.exceptions.CustomAvailabilityZoneNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault


    :return: {
        'CustomAvailabilityZone': {
            'CustomAvailabilityZoneId': 'string',
            'CustomAvailabilityZoneName': 'string',
            'CustomAvailabilityZoneStatus': 'string',
            'VpnDetails': {
                'VpnId': 'string',
                'VpnTunnelOriginatorIP': 'string',
                'VpnGatewayIp': 'string',
                'VpnPSK': 'string',
                'VpnName': 'string',
                'VpnState': 'string'
            }
        }
    }
    
    
    """
    pass

def delete_db_cluster(DBClusterIdentifier=None, SkipFinalSnapshot=None, FinalDBSnapshotIdentifier=None):
    """
    The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can\'t be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example deletes the specified DB cluster.
    Expected Output:
    
    :example: response = client.delete_db_cluster(
        DBClusterIdentifier='string',
        SkipFinalSnapshot=True|False,
        FinalDBSnapshotIdentifier='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe DB cluster identifier for the DB cluster to be deleted. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust match an existing DBClusterIdentifier.\n\n

    :type SkipFinalSnapshot: boolean
    :param SkipFinalSnapshot: A value that indicates whether to skip the creation of a final DB cluster snapshot before the DB cluster is deleted. If skip is specified, no DB cluster snapshot is created. If skip isn\'t specified, a DB cluster snapshot is created before the DB cluster is deleted. By default, skip isn\'t specified, and the DB cluster snapshot is created. By default, this parameter is disabled.\n\nNote\nYou must specify a FinalDBSnapshotIdentifier parameter if SkipFinalSnapshot is disabled.\n\n

    :type FinalDBSnapshotIdentifier: string
    :param FinalDBSnapshotIdentifier: The DB cluster snapshot identifier of the new DB cluster snapshot created when SkipFinalSnapshot is disabled.\n\nNote\nSpecifying this parameter and also skipping the creation of a final DB cluster snapshot with the SkipFinalShapshot parameter results in an error.\n\nConstraints:\n\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

DBCluster (dict) --
Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --
For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --
If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --
Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --
Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --
Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --
Specifies the current state of this DB cluster.

PercentProgress (string) --
Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --
The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --
Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --
The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --
Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --
Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --
Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --
Indicates the database engine version.

LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --
Specifies the port that the database engine is listening on.

MasterUsername (string) --
Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --
Provides the list of option group memberships for this DB cluster.

(dict) --
Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --
Specifies the name of the DB cluster option group.

Status (string) --
Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --
Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --
Provides the list of instances that make up the DB cluster.

(dict) --
Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --
Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --
Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --
Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --
Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --
Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --
If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --
Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --
Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --
A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --
Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --
The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --
The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --
The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --
The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --
The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --
Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --
The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --
The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --
A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --
The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --
The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --
Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --
A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --
The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --
The status of the database activity stream.

ActivityStreamKmsKeyId (string) --
The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --
The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --
Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB cluster.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.













Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.DBClusterSnapshotAlreadyExistsFault
RDS.Client.exceptions.SnapshotQuotaExceededFault
RDS.Client.exceptions.InvalidDBClusterSnapshotStateFault

Examples
This example deletes the specified DB cluster.
response = client.delete_db_cluster(
    DBClusterIdentifier='mydbcluster',
    SkipFinalSnapshot=True,
)

print(response)


Expected Output:
{
    'DBCluster': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def delete_db_cluster_endpoint(DBClusterEndpointIdentifier=None):
    """
    Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.delete_db_cluster_endpoint(
        DBClusterEndpointIdentifier='string'
    )
    
    
    :type DBClusterEndpointIdentifier: string
    :param DBClusterEndpointIdentifier: [REQUIRED]\nThe identifier associated with the custom endpoint. This parameter is stored as a lowercase string.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBClusterEndpointIdentifier': 'string',
    'DBClusterIdentifier': 'string',
    'DBClusterEndpointResourceIdentifier': 'string',
    'Endpoint': 'string',
    'Status': 'string',
    'EndpointType': 'string',
    'CustomEndpointType': 'string',
    'StaticMembers': [
        'string',
    ],
    'ExcludedMembers': [
        'string',
    ],
    'DBClusterEndpointArn': 'string'
}


Response Structure

(dict) --This data type represents the information you need to connect to an Amazon Aurora DB cluster. This data type is used as a response element in the following actions:

CreateDBClusterEndpoint
DescribeDBClusterEndpoints
ModifyDBClusterEndpoint
DeleteDBClusterEndpoint

For the data structure that represents Amazon RDS DB instance endpoints, see Endpoint .

DBClusterEndpointIdentifier (string) --The identifier associated with the endpoint. This parameter is stored as a lowercase string.

DBClusterIdentifier (string) --The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.

DBClusterEndpointResourceIdentifier (string) --A unique system-generated identifier for an endpoint. It remains the same for the whole life of the endpoint.

Endpoint (string) --The DNS address of the endpoint.

Status (string) --The current status of the endpoint. One of: creating , available , deleting , modifying .

EndpointType (string) --The type of the endpoint. One of: READER , WRITER , CUSTOM .

CustomEndpointType (string) --The type associated with a custom endpoint. One of: READER , WRITER , ANY .

StaticMembers (list) --List of DB instance identifiers that are part of the custom endpoint group.

(string) --


ExcludedMembers (list) --List of DB instance identifiers that aren\'t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.

(string) --


DBClusterEndpointArn (string) --The Amazon Resource Name (ARN) for the endpoint.






Exceptions

RDS.Client.exceptions.InvalidDBClusterEndpointStateFault
RDS.Client.exceptions.DBClusterEndpointNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault


    :return: {
        'DBClusterEndpointIdentifier': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterEndpointResourceIdentifier': 'string',
        'Endpoint': 'string',
        'Status': 'string',
        'EndpointType': 'string',
        'CustomEndpointType': 'string',
        'StaticMembers': [
            'string',
        ],
        'ExcludedMembers': [
            'string',
        ],
        'DBClusterEndpointArn': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def delete_db_cluster_parameter_group(DBClusterParameterGroupName=None):
    """
    Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can\'t be associated with any DB clusters.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example deletes the specified DB cluster parameter group.
    Expected Output:
    
    :example: response = client.delete_db_cluster_parameter_group(
        DBClusterParameterGroupName='string'
    )
    
    
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: [REQUIRED]\nThe name of the DB cluster parameter group.\nConstraints:\n\nMust be the name of an existing DB cluster parameter group.\nYou can\'t delete a default DB cluster parameter group.\nCan\'t be associated with any DB clusters.\n\n

    :return: response = client.delete_db_cluster_parameter_group(
        DBClusterParameterGroupName='mydbclusterparametergroup',
    )
    
    print(response)
    
    
    :returns: 
    RDS.Client.exceptions.InvalidDBParameterGroupStateFault
    RDS.Client.exceptions.DBParameterGroupNotFoundFault
    
    """
    pass

def delete_db_cluster_snapshot(DBClusterSnapshotIdentifier=None):
    """
    Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example deletes the specified DB cluster snapshot.
    Expected Output:
    
    :example: response = client.delete_db_cluster_snapshot(
        DBClusterSnapshotIdentifier='string'
    )
    
    
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: [REQUIRED]\nThe identifier of the DB cluster snapshot to delete.\nConstraints: Must be the name of an existing DB cluster snapshot in the available state.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBClusterSnapshot': {
        'AvailabilityZones': [
            'string',
        ],
        'DBClusterSnapshotIdentifier': 'string',
        'DBClusterIdentifier': 'string',
        'SnapshotCreateTime': datetime(2015, 1, 1),
        'Engine': 'string',
        'AllocatedStorage': 123,
        'Status': 'string',
        'Port': 123,
        'VpcId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'MasterUsername': 'string',
        'EngineVersion': 'string',
        'LicenseModel': 'string',
        'SnapshotType': 'string',
        'PercentProgress': 123,
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DBClusterSnapshotArn': 'string',
        'SourceDBClusterSnapshotArn': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False
    }
}


Response Structure

(dict) --
DBClusterSnapshot (dict) --Contains the details for an Amazon RDS DB cluster snapshot
This data type is used as a response element in the DescribeDBClusterSnapshots action.

AvailabilityZones (list) --Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot can be restored.

(string) --


DBClusterSnapshotIdentifier (string) --Specifies the identifier for the DB cluster snapshot.

DBClusterIdentifier (string) --Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.

SnapshotCreateTime (datetime) --Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

Engine (string) --Specifies the name of the database engine.

AllocatedStorage (integer) --Specifies the allocated storage size in gibibytes (GiB).

Status (string) --Specifies the status of this DB cluster snapshot.

Port (integer) --Specifies the port that the DB cluster was listening on at the time of the snapshot.

VpcId (string) --Provides the VPC ID associated with the DB cluster snapshot.

ClusterCreateTime (datetime) --Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

MasterUsername (string) --Provides the master username for the DB cluster snapshot.

EngineVersion (string) --Provides the version of the database engine for this DB cluster snapshot.

LicenseModel (string) --Provides the license model information for this DB cluster snapshot.

SnapshotType (string) --Provides the type of the DB cluster snapshot.

PercentProgress (integer) --Specifies the percentage of the estimated data that has been transferred.

StorageEncrypted (boolean) --Specifies whether the DB cluster snapshot is encrypted.

KmsKeyId (string) --If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.

DBClusterSnapshotArn (string) --The Amazon Resource Name (ARN) for the DB cluster snapshot.

SourceDBClusterSnapshotArn (string) --If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

IAMDatabaseAuthenticationEnabled (boolean) --True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.








Exceptions

RDS.Client.exceptions.InvalidDBClusterSnapshotStateFault
RDS.Client.exceptions.DBClusterSnapshotNotFoundFault

Examples
This example deletes the specified DB cluster snapshot.
response = client.delete_db_cluster_snapshot(
    DBClusterSnapshotIdentifier='mydbclustersnapshot',
)

print(response)


Expected Output:
{
    'DBClusterSnapshot': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBClusterSnapshot': {
            'AvailabilityZones': [
                'string',
            ],
            'DBClusterSnapshotIdentifier': 'string',
            'DBClusterIdentifier': 'string',
            'SnapshotCreateTime': datetime(2015, 1, 1),
            'Engine': 'string',
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'VpcId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'SnapshotType': 'string',
            'PercentProgress': 123,
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DBClusterSnapshotArn': 'string',
            'SourceDBClusterSnapshotArn': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.InvalidDBClusterSnapshotStateFault
    RDS.Client.exceptions.DBClusterSnapshotNotFoundFault
    
    """
    pass

def delete_db_instance(DBInstanceIdentifier=None, SkipFinalSnapshot=None, FinalDBSnapshotIdentifier=None, DeleteAutomatedBackups=None):
    """
    The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can\'t be recovered. Manual DB snapshots of the DB instance to be deleted by DeleteDBInstance are not deleted.
    If you request a final DB snapshot the status of the Amazon RDS DB instance is deleting until the DB snapshot is created. The API action DescribeDBInstance is used to monitor the status of this operation. The action can\'t be canceled or reverted once submitted.
    When a DB instance is in a failure state and has a status of failed , incompatible-restore , or incompatible-network , you can only delete it when you skip creation of the final snapshot with the SkipFinalSnapshot parameter.
    If the specified DB instance is part of an Amazon Aurora DB cluster, you can\'t delete the DB instance if both of the following conditions are true:
    To delete a DB instance in this case, first call the PromoteReadReplicaDBCluster API action to promote the DB cluster so it\'s no longer a read replica. After the promotion completes, then call the DeleteDBInstance API action to delete the final instance in the DB cluster.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example deletes the specified DB instance.
    Expected Output:
    
    :example: response = client.delete_db_instance(
        DBInstanceIdentifier='string',
        SkipFinalSnapshot=True|False,
        FinalDBSnapshotIdentifier='string',
        DeleteAutomatedBackups=True|False
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe DB instance identifier for the DB instance to be deleted. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust match the name of an existing DB instance.\n\n

    :type SkipFinalSnapshot: boolean
    :param SkipFinalSnapshot: A value that indicates whether to skip the creation of a final DB snapshot before the DB instance is deleted. If skip is specified, no DB snapshot is created. If skip isn\'t specified, a DB snapshot is created before the DB instance is deleted. By default, skip isn\'t specified, and the DB snapshot is created.\nWhen a DB instance is in a failure state and has a status of \'failed\', \'incompatible-restore\', or \'incompatible-network\', it can only be deleted when skip is specified.\nSpecify skip when deleting a read replica.\n\nNote\nThe FinalDBSnapshotIdentifier parameter must be specified if skip isn\'t specified.\n\n

    :type FinalDBSnapshotIdentifier: string
    :param FinalDBSnapshotIdentifier: The DBSnapshotIdentifier of the new DBSnapshot created when the SkipFinalSnapshot parameter is disabled.\n\nNote\nSpecifying this parameter and also specifying to skip final DB snapshot creation in SkipFinalShapshot results in an error.\n\nConstraints:\n\nMust be 1 to 255 letters or numbers.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\nCan\'t be specified when deleting a read replica.\n\n

    :type DeleteAutomatedBackups: boolean
    :param DeleteAutomatedBackups: A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn\'t case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.DBSnapshotAlreadyExistsFault
RDS.Client.exceptions.SnapshotQuotaExceededFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.DBInstanceAutomatedBackupQuotaExceededFault

Examples
This example deletes the specified DB instance.
response = client.delete_db_instance(
    DBInstanceIdentifier='mymysqlinstance',
    SkipFinalSnapshot=True,
)

print(response)


Expected Output:
{
    'DBInstance': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    DBInstanceIdentifier (string) -- [REQUIRED]
    The DB instance identifier for the DB instance to be deleted. This parameter isn\'t case-sensitive.
    Constraints:
    
    Must match the name of an existing DB instance.
    
    
    SkipFinalSnapshot (boolean) -- A value that indicates whether to skip the creation of a final DB snapshot before the DB instance is deleted. If skip is specified, no DB snapshot is created. If skip isn\'t specified, a DB snapshot is created before the DB instance is deleted. By default, skip isn\'t specified, and the DB snapshot is created.
    When a DB instance is in a failure state and has a status of \'failed\', \'incompatible-restore\', or \'incompatible-network\', it can only be deleted when skip is specified.
    Specify skip when deleting a read replica.
    
    Note
    The FinalDBSnapshotIdentifier parameter must be specified if skip isn\'t specified.
    
    
    FinalDBSnapshotIdentifier (string) -- The DBSnapshotIdentifier of the new DBSnapshot created when the SkipFinalSnapshot parameter is disabled.
    
    Note
    Specifying this parameter and also specifying to skip final DB snapshot creation in SkipFinalShapshot results in an error.
    
    Constraints:
    
    Must be 1 to 255 letters or numbers.
    First character must be a letter.
    Can\'t end with a hyphen or contain two consecutive hyphens.
    Can\'t be specified when deleting a read replica.
    
    
    DeleteAutomatedBackups (boolean) -- A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn\'t case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.
    
    """
    pass

def delete_db_instance_automated_backup(DbiResourceId=None):
    """
    Deletes automated backups based on the source instance\'s DbiResourceId value or the restorable instance\'s resource ID.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.delete_db_instance_automated_backup(
        DbiResourceId='string'
    )
    
    
    :type DbiResourceId: string
    :param DbiResourceId: [REQUIRED]\nThe identifier for the source DB instance, which can\'t be changed and which is unique to an AWS Region.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBInstanceAutomatedBackup': {
        'DBInstanceArn': 'string',
        'DbiResourceId': 'string',
        'Region': 'string',
        'DBInstanceIdentifier': 'string',
        'RestoreWindow': {
            'EarliestTime': datetime(2015, 1, 1),
            'LatestTime': datetime(2015, 1, 1)
        },
        'AllocatedStorage': 123,
        'Status': 'string',
        'Port': 123,
        'AvailabilityZone': 'string',
        'VpcId': 'string',
        'InstanceCreateTime': datetime(2015, 1, 1),
        'MasterUsername': 'string',
        'Engine': 'string',
        'EngineVersion': 'string',
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupName': 'string',
        'TdeCredentialArn': 'string',
        'Encrypted': True|False,
        'StorageType': 'string',
        'KmsKeyId': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False
    }
}


Response Structure

(dict) --
DBInstanceAutomatedBackup (dict) --An automated backup of a DB instance. It it consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance.

DBInstanceArn (string) --The Amazon Resource Name (ARN) for the automated backup.

DbiResourceId (string) --The identifier for the source DB instance, which can\'t be changed and which is unique to an AWS Region.

Region (string) --The AWS Region associated with the automated backup.

DBInstanceIdentifier (string) --The customer id of the instance that is/was associated with the automated backup.

RestoreWindow (dict) --Earliest and latest time an instance can be restored to.

EarliestTime (datetime) --The earliest time you can restore an instance to.

LatestTime (datetime) --The latest time you can restore an instance to.



AllocatedStorage (integer) --Specifies the allocated storage size in gibibytes (GiB).

Status (string) --Provides a list of status information for an automated backup:

active - automated backups for current instances
retained - automated backups for deleted instances
creating - automated backups that are waiting for the first automated snapshot to be available.


Port (integer) --The port number that the automated backup used for connections.
Default: Inherits from the source DB instance
Valid Values: 1150-65535

AvailabilityZone (string) --The Availability Zone that the automated backup was created in. For information on AWS Regions and Availability Zones, see Regions and Availability Zones .

VpcId (string) --Provides the VPC ID associated with the DB instance

InstanceCreateTime (datetime) --Provides the date and time that the DB instance was created.

MasterUsername (string) --The license model of an automated backup.

Engine (string) --The name of the database engine for this automated backup.

EngineVersion (string) --The version of the database engine for the automated backup.

LicenseModel (string) --License model information for the automated backup.

Iops (integer) --The IOPS (I/O operations per second) value for the automated backup.

OptionGroupName (string) --The option group the automated backup is associated with. If omitted, the default option group for the engine specified is used.

TdeCredentialArn (string) --The ARN from the key store with which the automated backup is associated for TDE encryption.

Encrypted (boolean) --Specifies whether the automated backup is encrypted.

StorageType (string) --Specifies the storage type associated with the automated backup.

KmsKeyId (string) --The AWS KMS key ID for an automated backup. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

Timezone (string) --The time zone of the automated backup. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.








Exceptions

RDS.Client.exceptions.InvalidDBInstanceAutomatedBackupStateFault
RDS.Client.exceptions.DBInstanceAutomatedBackupNotFoundFault


    :return: {
        'DBInstanceAutomatedBackup': {
            'DBInstanceArn': 'string',
            'DbiResourceId': 'string',
            'Region': 'string',
            'DBInstanceIdentifier': 'string',
            'RestoreWindow': {
                'EarliestTime': datetime(2015, 1, 1),
                'LatestTime': datetime(2015, 1, 1)
            },
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'AvailabilityZone': 'string',
            'VpcId': 'string',
            'InstanceCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'Engine': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupName': 'string',
            'TdeCredentialArn': 'string',
            'Encrypted': True|False,
            'StorageType': 'string',
            'KmsKeyId': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.InvalidDBInstanceAutomatedBackupStateFault
    RDS.Client.exceptions.DBInstanceAutomatedBackupNotFoundFault
    
    """
    pass

def delete_db_parameter_group(DBParameterGroupName=None):
    """
    Deletes a specified DB parameter group. The DB parameter group to be deleted can\'t be associated with any DB instances.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    The following example deletes a DB parameter group.
    Expected Output:
    
    :example: response = client.delete_db_parameter_group(
        DBParameterGroupName='string'
    )
    
    
    :type DBParameterGroupName: string
    :param DBParameterGroupName: [REQUIRED]\nThe name of the DB parameter group.\nConstraints:\n\nMust be the name of an existing DB parameter group\nYou can\'t delete a default DB parameter group\nCan\'t be associated with any DB instances\n\n

    :return: response = client.delete_db_parameter_group(
        DBParameterGroupName='mydbparamgroup3',
    )
    
    print(response)
    
    
    :returns: 
    RDS.Client.exceptions.InvalidDBParameterGroupStateFault
    RDS.Client.exceptions.DBParameterGroupNotFoundFault
    
    """
    pass

def delete_db_proxy(DBProxyName=None):
    """
    Deletes an existing proxy.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.delete_db_proxy(
        DBProxyName='string'
    )
    
    
    :type DBProxyName: string
    :param DBProxyName: [REQUIRED]\nThe name of the DB proxy to delete.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBProxy': {
        'DBProxyName': 'string',
        'DBProxyArn': 'string',
        'Status': 'available'|'modifying'|'incompatible-network'|'insufficient-resource-limits'|'creating'|'deleting'|'suspended'|'suspending'|'reactivating',
        'EngineFamily': 'string',
        'VpcSecurityGroupIds': [
            'string',
        ],
        'VpcSubnetIds': [
            'string',
        ],
        'Auth': [
            {
                'Description': 'string',
                'UserName': 'string',
                'AuthScheme': 'SECRETS',
                'SecretArn': 'string',
                'IAMAuth': 'DISABLED'|'REQUIRED'
            },
        ],
        'RoleArn': 'string',
        'Endpoint': 'string',
        'RequireTLS': True|False,
        'IdleClientTimeout': 123,
        'DebugLogging': True|False,
        'CreatedDate': datetime(2015, 1, 1),
        'UpdatedDate': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --
DBProxy (dict) --The data structure representing the details of the DB proxy that you delete.

DBProxyName (string) --The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.

DBProxyArn (string) --The Amazon Resource Name (ARN) for the proxy.

Status (string) --The current status of this proxy. A status of available means the proxy is ready to handle requests. Other values indicate that you must wait for the proxy to be ready, or take some action to resolve an issue.

EngineFamily (string) --The engine family applies to MySQL and PostgreSQL for both RDS and Aurora.

VpcSecurityGroupIds (list) --Provides a list of VPC security groups that the proxy belongs to.

(string) --


VpcSubnetIds (list) --The EC2 subnet IDs for the proxy.

(string) --


Auth (list) --One or more data structures specifying the authorization mechanism to connect to the associated RDS DB instance or Aurora DB cluster.

(dict) --
Note
This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.

Returns the details of authentication used by a proxy to log in as a specific database user.

Description (string) --A user-specified description about the authentication used by a proxy to log in as a specific database user.

UserName (string) --The name of the database user to which the proxy connects.

AuthScheme (string) --The type of authentication that the proxy uses for connections from the proxy to the underlying database.

SecretArn (string) --The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.

IAMAuth (string) --Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.





RoleArn (string) --The Amazon Resource Name (ARN) for the IAM role that the proxy uses to access Amazon Secrets Manager.

Endpoint (string) --The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.

RequireTLS (boolean) --Indicates whether Transport Layer Security (TLS) encryption is required for connections to the proxy.

IdleClientTimeout (integer) --The number of seconds a connection to the proxy can have no activity before the proxy drops the client connection. The proxy keeps the underlying database connection open and puts it back into the connection pool for reuse by later connection requests.
Default: 1800 (30 minutes)
Constraints: 1 to 28,800

DebugLogging (boolean) --Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.

CreatedDate (datetime) --The date and time when the proxy was first created.

UpdatedDate (datetime) --The date and time when the proxy was last updated.








Exceptions

RDS.Client.exceptions.DBProxyNotFoundFault
RDS.Client.exceptions.InvalidDBProxyStateFault


    :return: {
        'DBProxy': {
            'DBProxyName': 'string',
            'DBProxyArn': 'string',
            'Status': 'available'|'modifying'|'incompatible-network'|'insufficient-resource-limits'|'creating'|'deleting'|'suspended'|'suspending'|'reactivating',
            'EngineFamily': 'string',
            'VpcSecurityGroupIds': [
                'string',
            ],
            'VpcSubnetIds': [
                'string',
            ],
            'Auth': [
                {
                    'Description': 'string',
                    'UserName': 'string',
                    'AuthScheme': 'SECRETS',
                    'SecretArn': 'string',
                    'IAMAuth': 'DISABLED'|'REQUIRED'
                },
            ],
            'RoleArn': 'string',
            'Endpoint': 'string',
            'RequireTLS': True|False,
            'IdleClientTimeout': 123,
            'DebugLogging': True|False,
            'CreatedDate': datetime(2015, 1, 1),
            'UpdatedDate': datetime(2015, 1, 1)
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def delete_db_security_group(DBSecurityGroupName=None):
    """
    Deletes a DB security group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    The following example deletes a DB security group.
    Expected Output:
    
    :example: response = client.delete_db_security_group(
        DBSecurityGroupName='string'
    )
    
    
    :type DBSecurityGroupName: string
    :param DBSecurityGroupName: [REQUIRED]\nThe name of the DB security group to delete.\n\nNote\nYou can\'t delete the default DB security group.\n\nConstraints:\n\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\nMust not be 'Default'\n\n

    :return: response = client.delete_db_security_group(
        DBSecurityGroupName='mysecgroup',
    )
    
    print(response)
    
    
    :returns: 
    RDS.Client.exceptions.InvalidDBSecurityGroupStateFault
    RDS.Client.exceptions.DBSecurityGroupNotFoundFault
    
    """
    pass

def delete_db_snapshot(DBSnapshotIdentifier=None):
    """
    Deletes a DB snapshot. If the snapshot is being copied, the copy operation is terminated.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example deletes the specified DB snapshot.
    Expected Output:
    
    :example: response = client.delete_db_snapshot(
        DBSnapshotIdentifier='string'
    )
    
    
    :type DBSnapshotIdentifier: string
    :param DBSnapshotIdentifier: [REQUIRED]\nThe DB snapshot identifier.\nConstraints: Must be the name of an existing DB snapshot in the available state.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBSnapshot': {
        'DBSnapshotIdentifier': 'string',
        'DBInstanceIdentifier': 'string',
        'SnapshotCreateTime': datetime(2015, 1, 1),
        'Engine': 'string',
        'AllocatedStorage': 123,
        'Status': 'string',
        'Port': 123,
        'AvailabilityZone': 'string',
        'VpcId': 'string',
        'InstanceCreateTime': datetime(2015, 1, 1),
        'MasterUsername': 'string',
        'EngineVersion': 'string',
        'LicenseModel': 'string',
        'SnapshotType': 'string',
        'Iops': 123,
        'OptionGroupName': 'string',
        'PercentProgress': 123,
        'SourceRegion': 'string',
        'SourceDBSnapshotIdentifier': 'string',
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'Encrypted': True|False,
        'KmsKeyId': 'string',
        'DBSnapshotArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DbiResourceId': 'string'
    }
}


Response Structure

(dict) --
DBSnapshot (dict) --Contains the details of an Amazon RDS DB snapshot.
This data type is used as a response element in the DescribeDBSnapshots action.

DBSnapshotIdentifier (string) --Specifies the identifier for the DB snapshot.

DBInstanceIdentifier (string) --Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

SnapshotCreateTime (datetime) --Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

Engine (string) --Specifies the name of the database engine.

AllocatedStorage (integer) --Specifies the allocated storage size in gibibytes (GiB).

Status (string) --Specifies the status of this DB snapshot.

Port (integer) --Specifies the port that the database engine was listening on at the time of the snapshot.

AvailabilityZone (string) --Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.

VpcId (string) --Provides the VPC ID associated with the DB snapshot.

InstanceCreateTime (datetime) --Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

MasterUsername (string) --Provides the master username for the DB snapshot.

EngineVersion (string) --Specifies the version of the database engine.

LicenseModel (string) --License model information for the restored DB instance.

SnapshotType (string) --Provides the type of the DB snapshot.

Iops (integer) --Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.

OptionGroupName (string) --Provides the option group name for the DB snapshot.

PercentProgress (integer) --The percentage of the estimated data that has been transferred.

SourceRegion (string) --The AWS Region that the DB snapshot was created in or copied from.

SourceDBSnapshotIdentifier (string) --The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has value in case of cross-customer or cross-region copy.

StorageType (string) --Specifies the storage type associated with DB snapshot.

TdeCredentialArn (string) --The ARN from the key store with which to associate the instance for TDE encryption.

Encrypted (boolean) --Specifies whether the DB snapshot is encrypted.

KmsKeyId (string) --If Encrypted is true, the AWS KMS key identifier for the encrypted DB snapshot.

DBSnapshotArn (string) --The Amazon Resource Name (ARN) for the DB snapshot.

Timezone (string) --The time zone of the DB snapshot. In most cases, the Timezone element is empty. Timezone content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.

ProcessorFeatures (list) --The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB snapshot was created.

(dict) --Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --The value of a processor feature name.





DbiResourceId (string) --The identifier for the source DB instance, which can\'t be changed and which is unique to an AWS Region.








Exceptions

RDS.Client.exceptions.InvalidDBSnapshotStateFault
RDS.Client.exceptions.DBSnapshotNotFoundFault

Examples
This example deletes the specified DB snapshot.
response = client.delete_db_snapshot(
    DBSnapshotIdentifier='mydbsnapshot',
)

print(response)


Expected Output:
{
    'DBSnapshot': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSnapshot': {
            'DBSnapshotIdentifier': 'string',
            'DBInstanceIdentifier': 'string',
            'SnapshotCreateTime': datetime(2015, 1, 1),
            'Engine': 'string',
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'AvailabilityZone': 'string',
            'VpcId': 'string',
            'InstanceCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'SnapshotType': 'string',
            'Iops': 123,
            'OptionGroupName': 'string',
            'PercentProgress': 123,
            'SourceRegion': 'string',
            'SourceDBSnapshotIdentifier': 'string',
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'Encrypted': True|False,
            'KmsKeyId': 'string',
            'DBSnapshotArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DbiResourceId': 'string'
        }
    }
    
    
    :returns: 
    DescribeDBInstances
    DescribeDBSnapshots
    DescribeValidDBInstanceModifications
    
    """
    pass

def delete_db_subnet_group(DBSubnetGroupName=None):
    """
    Deletes a DB subnet group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example deletes the specified DB subnetgroup.
    Expected Output:
    
    :example: response = client.delete_db_subnet_group(
        DBSubnetGroupName='string'
    )
    
    
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: [REQUIRED]\nThe name of the database subnet group to delete.\n\nNote\nYou can\'t delete the default subnet group.\n\nConstraints:\nConstraints: Must match the name of an existing DBSubnetGroup. Must not be default.\nExample: mySubnetgroup\n

    :return: response = client.delete_db_subnet_group(
        DBSubnetGroupName='mydbsubnetgroup',
    )
    
    print(response)
    
    
    """
    pass

def delete_event_subscription(SubscriptionName=None):
    """
    Deletes an RDS event notification subscription.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example deletes the specified DB event subscription.
    Expected Output:
    
    :example: response = client.delete_event_subscription(
        SubscriptionName='string'
    )
    
    
    :type SubscriptionName: string
    :param SubscriptionName: [REQUIRED]\nThe name of the RDS event notification subscription you want to delete.\n

    :rtype: dict
ReturnsResponse Syntax{
    'EventSubscription': {
        'CustomerAwsId': 'string',
        'CustSubscriptionId': 'string',
        'SnsTopicArn': 'string',
        'Status': 'string',
        'SubscriptionCreationTime': 'string',
        'SourceType': 'string',
        'SourceIdsList': [
            'string',
        ],
        'EventCategoriesList': [
            'string',
        ],
        'Enabled': True|False,
        'EventSubscriptionArn': 'string'
    }
}


Response Structure

(dict) --
EventSubscription (dict) --Contains the results of a successful invocation of the DescribeEventSubscriptions action.

CustomerAwsId (string) --The AWS customer account associated with the RDS event notification subscription.

CustSubscriptionId (string) --The RDS event notification subscription Id.

SnsTopicArn (string) --The topic ARN of the RDS event notification subscription.

Status (string) --The status of the RDS event notification subscription.
Constraints:
Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist
The status "no-permission" indicates that RDS no longer has permission to post to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.

SubscriptionCreationTime (string) --The time the RDS event notification subscription was created.

SourceType (string) --The source type for the RDS event notification subscription.

SourceIdsList (list) --A list of source IDs for the RDS event notification subscription.

(string) --


EventCategoriesList (list) --A list of event categories for the RDS event notification subscription.

(string) --


Enabled (boolean) --A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.

EventSubscriptionArn (string) --The Amazon Resource Name (ARN) for the event subscription.








Exceptions

RDS.Client.exceptions.SubscriptionNotFoundFault
RDS.Client.exceptions.InvalidEventSubscriptionStateFault

Examples
This example deletes the specified DB event subscription.
response = client.delete_event_subscription(
    SubscriptionName='myeventsubscription',
)

print(response)


Expected Output:
{
    'EventSubscription': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'EventSubscription': {
            'CustomerAwsId': 'string',
            'CustSubscriptionId': 'string',
            'SnsTopicArn': 'string',
            'Status': 'string',
            'SubscriptionCreationTime': 'string',
            'SourceType': 'string',
            'SourceIdsList': [
                'string',
            ],
            'EventCategoriesList': [
                'string',
            ],
            'Enabled': True|False,
            'EventSubscriptionArn': 'string'
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def delete_global_cluster(GlobalClusterIdentifier=None):
    """
    Deletes a global database cluster. The primary and secondary clusters must already be detached or destroyed first.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.delete_global_cluster(
        GlobalClusterIdentifier='string'
    )
    
    
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: [REQUIRED]\nThe cluster identifier of the global database cluster being deleted.\n

    :rtype: dict
ReturnsResponse Syntax{
    'GlobalCluster': {
        'GlobalClusterIdentifier': 'string',
        'GlobalClusterResourceId': 'string',
        'GlobalClusterArn': 'string',
        'Status': 'string',
        'Engine': 'string',
        'EngineVersion': 'string',
        'DatabaseName': 'string',
        'StorageEncrypted': True|False,
        'DeletionProtection': True|False,
        'GlobalClusterMembers': [
            {
                'DBClusterArn': 'string',
                'Readers': [
                    'string',
                ],
                'IsWriter': True|False
            },
        ]
    }
}


Response Structure

(dict) --
GlobalCluster (dict) --A data type representing an Aurora global database.

GlobalClusterIdentifier (string) --Contains a user-supplied global database cluster identifier. This identifier is the unique key that identifies a global database cluster.

GlobalClusterResourceId (string) --The AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

GlobalClusterArn (string) --The Amazon Resource Name (ARN) for the global database cluster.

Status (string) --Specifies the current state of this global database cluster.

Engine (string) --The Aurora database engine used by the global database cluster.

EngineVersion (string) --Indicates the database engine version.

DatabaseName (string) --The default database name within the new global database cluster.

StorageEncrypted (boolean) --The storage encryption setting for the global database cluster.

DeletionProtection (boolean) --The deletion protection setting for the new global database cluster.

GlobalClusterMembers (list) --The list of cluster IDs for secondary clusters within the global database cluster. Currently limited to 1 item.

(dict) --A data structure with information about any primary and secondary clusters associated with an Aurora global database.

DBClusterArn (string) --The Amazon Resource Name (ARN) for each Aurora cluster.

Readers (list) --The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global database.

(string) --


IsWriter (boolean) --Specifies whether the Aurora cluster is the primary cluster (that is, has read-write capability) for the Aurora global database with which it is associated.












Exceptions

RDS.Client.exceptions.GlobalClusterNotFoundFault
RDS.Client.exceptions.InvalidGlobalClusterStateFault


    :return: {
        'GlobalCluster': {
            'GlobalClusterIdentifier': 'string',
            'GlobalClusterResourceId': 'string',
            'GlobalClusterArn': 'string',
            'Status': 'string',
            'Engine': 'string',
            'EngineVersion': 'string',
            'DatabaseName': 'string',
            'StorageEncrypted': True|False,
            'DeletionProtection': True|False,
            'GlobalClusterMembers': [
                {
                    'DBClusterArn': 'string',
                    'Readers': [
                        'string',
                    ],
                    'IsWriter': True|False
                },
            ]
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.GlobalClusterNotFoundFault
    RDS.Client.exceptions.InvalidGlobalClusterStateFault
    
    """
    pass

def delete_installation_media(InstallationMediaId=None):
    """
    Deletes the installation medium for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.delete_installation_media(
        InstallationMediaId='string'
    )
    
    
    :type InstallationMediaId: string
    :param InstallationMediaId: [REQUIRED]\nThe installation medium ID.\n

    :rtype: dict
ReturnsResponse Syntax{
    'InstallationMediaId': 'string',
    'CustomAvailabilityZoneId': 'string',
    'Engine': 'string',
    'EngineVersion': 'string',
    'EngineInstallationMediaPath': 'string',
    'OSInstallationMediaPath': 'string',
    'Status': 'string',
    'FailureCause': {
        'Message': 'string'
    }
}


Response Structure

(dict) --Contains the installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.

InstallationMediaId (string) --The installation medium ID.

CustomAvailabilityZoneId (string) --The custom Availability Zone (AZ) that contains the installation media.

Engine (string) --The DB engine.

EngineVersion (string) --The engine version of the DB engine.

EngineInstallationMediaPath (string) --The path to the installation medium for the DB engine.

OSInstallationMediaPath (string) --The path to the installation medium for the operating system associated with the DB engine.

Status (string) --The status of the installation medium.

FailureCause (dict) --If an installation media failure occurred, the cause of the failure.

Message (string) --The reason that an installation media import failed.








Exceptions

RDS.Client.exceptions.InstallationMediaNotFoundFault


    :return: {
        'InstallationMediaId': 'string',
        'CustomAvailabilityZoneId': 'string',
        'Engine': 'string',
        'EngineVersion': 'string',
        'EngineInstallationMediaPath': 'string',
        'OSInstallationMediaPath': 'string',
        'Status': 'string',
        'FailureCause': {
            'Message': 'string'
        }
    }
    
    
    """
    pass

def delete_option_group(OptionGroupName=None):
    """
    Deletes an existing option group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example deletes the specified option group.
    Expected Output:
    
    :example: response = client.delete_option_group(
        OptionGroupName='string'
    )
    
    
    :type OptionGroupName: string
    :param OptionGroupName: [REQUIRED]\nThe name of the option group to be deleted.\n\nNote\nYou can\'t delete default option groups.\n\n

    :return: response = client.delete_option_group(
        OptionGroupName='mydboptiongroup',
    )
    
    print(response)
    
    
    """
    pass

def deregister_db_proxy_targets(DBProxyName=None, TargetGroupName=None, DBInstanceIdentifiers=None, DBClusterIdentifiers=None):
    """
    Remove the association between one or more DBProxyTarget data structures and a DBProxyTargetGroup .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.deregister_db_proxy_targets(
        DBProxyName='string',
        TargetGroupName='string',
        DBInstanceIdentifiers=[
            'string',
        ],
        DBClusterIdentifiers=[
            'string',
        ]
    )
    
    
    :type DBProxyName: string
    :param DBProxyName: [REQUIRED]\nThe identifier of the DBProxy that is associated with the DBProxyTargetGroup .\n

    :type TargetGroupName: string
    :param TargetGroupName: The identifier of the DBProxyTargetGroup .

    :type DBInstanceIdentifiers: list
    :param DBInstanceIdentifiers: One or more DB instance identifiers.\n\n(string) --\n\n

    :type DBClusterIdentifiers: list
    :param DBClusterIdentifiers: One or more DB cluster identifiers.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{}


Response Structure

(dict) --




Exceptions

RDS.Client.exceptions.DBProxyTargetNotFoundFault
RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
RDS.Client.exceptions.DBProxyNotFoundFault
RDS.Client.exceptions.InvalidDBProxyStateFault


    :return: {}
    
    
    :returns: 
    (dict) --
    
    """
    pass

def describe_account_attributes():
    """
    Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota\'s maximum value.
    This command doesn\'t take any parameters.
    See also: AWS API Documentation
    
    Examples
    This example lists account attributes.
    Expected Output:
    
    :example: response = client.describe_account_attributes()
    
    
    :rtype: dict
ReturnsResponse Syntax{
    'AccountQuotas': [
        {
            'AccountQuotaName': 'string',
            'Used': 123,
            'Max': 123
        },
    ]
}


Response Structure

(dict) --Data returned by the DescribeAccountAttributes action.

AccountQuotas (list) --A list of AccountQuota objects. Within this list, each quota has a name, a count of usage toward the quota maximum, and a maximum value for the quota.

(dict) --Describes a quota for an AWS account.
The following are account quotas:

AllocatedStorage - The total allocated storage per account, in GiB. The used value is the total allocated storage in the account, in GiB.
AuthorizationsPerDBSecurityGroup - The number of ingress rules per DB security group. The used value is the highest number of ingress rules in a DB security group in the account. Other DB security groups in the account might have a lower number of ingress rules.
CustomEndpointsPerDBCluster - The number of custom endpoints per DB cluster. The used value is the highest number of custom endpoints in a DB clusters in the account. Other DB clusters in the account might have a lower number of custom endpoints.
DBClusterParameterGroups - The number of DB cluster parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB cluster parameter groups in the account.
DBClusterRoles - The number of associated AWS Identity and Access Management (IAM) roles per DB cluster. The used value is the highest number of associated IAM roles for a DB cluster in the account. Other DB clusters in the account might have a lower number of associated IAM roles.
DBClusters - The number of DB clusters per account. The used value is the count of DB clusters in the account.
DBInstanceRoles - The number of associated IAM roles per DB instance. The used value is the highest number of associated IAM roles for a DB instance in the account. Other DB instances in the account might have a lower number of associated IAM roles.
DBInstances - The number of DB instances per account. The used value is the count of the DB instances in the account. Amazon RDS DB instances, Amazon Aurora DB instances, Amazon Neptune instances, and Amazon DocumentDB instances apply to this quota.
DBParameterGroups - The number of DB parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB parameter groups in the account.
DBSecurityGroups - The number of DB security groups (not VPC security groups) per account, excluding the default security group. The used value is the count of nondefault DB security groups in the account.
DBSubnetGroups - The number of DB subnet groups per account. The used value is the count of the DB subnet groups in the account.
EventSubscriptions - The number of event subscriptions per account. The used value is the count of the event subscriptions in the account.
ManualSnapshots - The number of manual DB snapshots per account. The used value is the count of the manual DB snapshots in the account.
OptionGroups - The number of DB option groups per account, excluding default option groups. The used value is the count of nondefault DB option groups in the account.
ReadReplicasPerMaster - The number of read replicas per DB instance. The used value is the highest number of read replicas for a DB instance in the account. Other DB instances in the account might have a lower number of read replicas.
ReservedDBInstances - The number of reserved DB instances per account. The used value is the count of the active reserved DB instances in the account.
SubnetsPerDBSubnetGroup - The number of subnets per DB subnet group. The used value is highest number of subnets for a DB subnet group in the account. Other DB subnet groups in the account might have a lower number of subnets.

For more information, see Quotas for Amazon RDS in the Amazon RDS User Guide and Quotas for Amazon Aurora in the Amazon Aurora User Guide .

AccountQuotaName (string) --The name of the Amazon RDS quota for this AWS account.

Used (integer) --The amount currently used toward the quota maximum.

Max (integer) --The maximum allowed value for the quota.










Examples
This example lists account attributes.
response = client.describe_account_attributes(
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'AccountQuotas': [
            {
                'AccountQuotaName': 'string',
                'Used': 123,
                'Max': 123
            },
        ]
    }
    
    
    """
    pass

def describe_certificates(CertificateIdentifier=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Lists the set of CA certificates provided by Amazon RDS for this AWS account.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists up to 20 certificates for the specified certificate identifier.
    Expected Output:
    
    :example: response = client.describe_certificates(
        CertificateIdentifier='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type CertificateIdentifier: string
    :param CertificateIdentifier: The user-supplied certificate identifier. If this parameter is specified, information for only the identified certificate is returned. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust match an existing CertificateIdentifier.\n\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeCertificates request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Certificates': [
        {
            'CertificateIdentifier': 'string',
            'CertificateType': 'string',
            'Thumbprint': 'string',
            'ValidFrom': datetime(2015, 1, 1),
            'ValidTill': datetime(2015, 1, 1),
            'CertificateArn': 'string',
            'CustomerOverride': True|False,
            'CustomerOverrideValidTill': datetime(2015, 1, 1)
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --
Data returned by the DescribeCertificates action.

Certificates (list) --
The list of Certificate objects for the AWS account.

(dict) --
A CA certificate for an AWS account.

CertificateIdentifier (string) --
The unique key that identifies a certificate.

CertificateType (string) --
The type of the certificate.

Thumbprint (string) --
The thumbprint of the certificate.

ValidFrom (datetime) --
The starting date from which the certificate is valid.

ValidTill (datetime) --
The final date that the certificate continues to be valid.

CertificateArn (string) --
The Amazon Resource Name (ARN) for the certificate.

CustomerOverride (boolean) --
Whether there is an override for the default certificate identifier.

CustomerOverrideValidTill (datetime) --
If there is an override for the default certificate identifier, when the override expires.





Marker (string) --
An optional pagination token provided by a previous DescribeCertificates request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .







Exceptions

RDS.Client.exceptions.CertificateNotFoundFault

Examples
This example lists up to 20 certificates for the specified certificate identifier.
response = client.describe_certificates(
    CertificateIdentifier='rds-ca-2015',
    MaxRecords=20,
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Certificates': [
            {
                'CertificateIdentifier': 'string',
                'CertificateType': 'string',
                'Thumbprint': 'string',
                'ValidFrom': datetime(2015, 1, 1),
                'ValidTill': datetime(2015, 1, 1),
                'CertificateArn': 'string',
                'CustomerOverride': True|False,
                'CustomerOverrideValidTill': datetime(2015, 1, 1)
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    RDS.Client.exceptions.CertificateNotFoundFault
    
    """
    pass

def describe_custom_availability_zones(CustomAvailabilityZoneId=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns information about custom Availability Zones (AZs).
    A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.
    For more information about RDS on VMware, see the ` RDS on VMware User Guide. https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_custom_availability_zones(
        CustomAvailabilityZoneId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type CustomAvailabilityZoneId: string
    :param CustomAvailabilityZoneId: The custom AZ identifier. If this parameter is specified, information from only the specific custom AZ is returned.

    :type Filters: list
    :param Filters: A filter that specifies one or more custom AZs to describe.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeCustomAvailabilityZones request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'CustomAvailabilityZones': [
        {
            'CustomAvailabilityZoneId': 'string',
            'CustomAvailabilityZoneName': 'string',
            'CustomAvailabilityZoneStatus': 'string',
            'VpnDetails': {
                'VpnId': 'string',
                'VpnTunnelOriginatorIP': 'string',
                'VpnGatewayIp': 'string',
                'VpnPSK': 'string',
                'VpnName': 'string',
                'VpnState': 'string'
            }
        },
    ]
}


Response Structure

(dict) --

Marker (string) --
An optional pagination token provided by a previous DescribeCustomAvailabilityZones request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

CustomAvailabilityZones (list) --
The list of  CustomAvailabilityZone objects for the AWS account.

(dict) --
A custom Availability Zone (AZ) is an on-premises AZ that is integrated with a VMware vSphere cluster.
For more information about RDS on VMware, see the ` RDS on VMware User Guide. https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html`__

CustomAvailabilityZoneId (string) --
The identifier of the custom AZ.
Amazon RDS generates a unique identifier when a custom AZ is created.

CustomAvailabilityZoneName (string) --
The name of the custom AZ.

CustomAvailabilityZoneStatus (string) --
The status of the custom AZ.

VpnDetails (dict) --
Information about the virtual private network (VPN) between the VMware vSphere cluster and the AWS website.

VpnId (string) --
The ID of the VPN.

VpnTunnelOriginatorIP (string) --
The IP address of network traffic from your on-premises data center. A custom AZ receives the network traffic.

VpnGatewayIp (string) --
The IP address of network traffic from AWS to your on-premises data center.

VpnPSK (string) --
The preshared key (PSK) for the VPN.

VpnName (string) --
The name of the VPN.

VpnState (string) --
The state of the VPN.













Exceptions

RDS.Client.exceptions.CustomAvailabilityZoneNotFoundFault


    :return: {
        'Marker': 'string',
        'CustomAvailabilityZones': [
            {
                'CustomAvailabilityZoneId': 'string',
                'CustomAvailabilityZoneName': 'string',
                'CustomAvailabilityZoneStatus': 'string',
                'VpnDetails': {
                    'VpnId': 'string',
                    'VpnTunnelOriginatorIP': 'string',
                    'VpnGatewayIp': 'string',
                    'VpnPSK': 'string',
                    'VpnName': 'string',
                    'VpnState': 'string'
                }
            },
        ]
    }
    
    
    :returns: 
    RDS.Client.exceptions.CustomAvailabilityZoneNotFoundFault
    
    """
    pass

def describe_db_cluster_backtracks(DBClusterIdentifier=None, BacktrackIdentifier=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns information about backtracks for a DB cluster.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_db_cluster_backtracks(
        DBClusterIdentifier='string',
        BacktrackIdentifier='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe DB cluster identifier of the DB cluster to be described. This parameter is stored as a lowercase string.\nConstraints:\n\nMust contain from 1 to 63 alphanumeric characters or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\nExample: my-cluster1\n

    :type BacktrackIdentifier: string
    :param BacktrackIdentifier: If specified, this value is the backtrack identifier of the backtrack to be described.\nConstraints:\n\nMust contain a valid universally unique identifier (UUID). For more information about UUIDs, see A Universally Unique Identifier (UUID) URN Namespace .\n\nExample: 123e4567-e89b-12d3-a456-426655440000\n

    :type Filters: list
    :param Filters: A filter that specifies one or more DB clusters to describe. Supported filters include the following:\n\ndb-cluster-backtrack-id - Accepts backtrack identifiers. The results list includes information about only the backtracks identified by these identifiers.\ndb-cluster-backtrack-status - Accepts any of the following backtrack status values:\napplying\ncompleted\nfailed\npending\n\n\n\nThe results list includes information about only the backtracks identified by these values.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBClusterBacktracks request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBClusterBacktracks': [
        {
            'DBClusterIdentifier': 'string',
            'BacktrackIdentifier': 'string',
            'BacktrackTo': datetime(2015, 1, 1),
            'BacktrackedFrom': datetime(2015, 1, 1),
            'BacktrackRequestCreationTime': datetime(2015, 1, 1),
            'Status': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBClusterBacktracks action.

Marker (string) --
A pagination token that can be used in a later DescribeDBClusterBacktracks request.

DBClusterBacktracks (list) --
Contains a list of backtracks for the user.

(dict) --
This data type is used as a response element in the DescribeDBClusterBacktracks action.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

BacktrackIdentifier (string) --
Contains the backtrack identifier.

BacktrackTo (datetime) --
The timestamp of the time to which the DB cluster was backtracked.

BacktrackedFrom (datetime) --
The timestamp of the time from which the DB cluster was backtracked.

BacktrackRequestCreationTime (datetime) --
The timestamp of the time at which the backtrack was requested.

Status (string) --
The status of the backtrack. This property returns one of the following values:

applying - The backtrack is currently being applied to or rolled back from the DB cluster.
completed - The backtrack has successfully been applied to or rolled back from the DB cluster.
failed - An error occurred while the backtrack was applied to or rolled back from the DB cluster.
pending - The backtrack is currently pending application to or rollback from the DB cluster.












Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.DBClusterBacktrackNotFoundFault


    :return: {
        'Marker': 'string',
        'DBClusterBacktracks': [
            {
                'DBClusterIdentifier': 'string',
                'BacktrackIdentifier': 'string',
                'BacktrackTo': datetime(2015, 1, 1),
                'BacktrackedFrom': datetime(2015, 1, 1),
                'BacktrackRequestCreationTime': datetime(2015, 1, 1),
                'Status': 'string'
            },
        ]
    }
    
    
    :returns: 
    applying - The backtrack is currently being applied to or rolled back from the DB cluster.
    completed - The backtrack has successfully been applied to or rolled back from the DB cluster.
    failed - An error occurred while the backtrack was applied to or rolled back from the DB cluster.
    pending - The backtrack is currently pending application to or rollback from the DB cluster.
    
    """
    pass

def describe_db_cluster_endpoints(DBClusterIdentifier=None, DBClusterEndpointIdentifier=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns information about endpoints for an Amazon Aurora DB cluster.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_db_cluster_endpoints(
        DBClusterIdentifier='string',
        DBClusterEndpointIdentifier='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.

    :type DBClusterEndpointIdentifier: string
    :param DBClusterEndpointIdentifier: The identifier of the endpoint to describe. This parameter is stored as a lowercase string.

    :type Filters: list
    :param Filters: A set of name-value pairs that define which endpoints to include in the output. The filters are specified as name-value pairs, in the format Name=*endpoint_type* ,Values=*endpoint_type1* ,*endpoint_type2* ,... . Name can be one of: db-cluster-endpoint-type , db-cluster-endpoint-custom-type , db-cluster-endpoint-id , db-cluster-endpoint-status . Values for the db-cluster-endpoint-type filter can be one or more of: reader , writer , custom . Values for the db-cluster-endpoint-custom-type filter can be one or more of: reader , any . Values for the db-cluster-endpoint-status filter can be one or more of: available , creating , deleting , modifying .\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBClusterEndpoints request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBClusterEndpoints': [
        {
            'DBClusterEndpointIdentifier': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterEndpointResourceIdentifier': 'string',
            'Endpoint': 'string',
            'Status': 'string',
            'EndpointType': 'string',
            'CustomEndpointType': 'string',
            'StaticMembers': [
                'string',
            ],
            'ExcludedMembers': [
                'string',
            ],
            'DBClusterEndpointArn': 'string'
        },
    ]
}


Response Structure

(dict) --

Marker (string) --
An optional pagination token provided by a previous DescribeDBClusterEndpoints request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBClusterEndpoints (list) --
Contains the details of the endpoints associated with the cluster and matching any filter conditions.

(dict) --
This data type represents the information you need to connect to an Amazon Aurora DB cluster. This data type is used as a response element in the following actions:

CreateDBClusterEndpoint
DescribeDBClusterEndpoints
ModifyDBClusterEndpoint
DeleteDBClusterEndpoint

For the data structure that represents Amazon RDS DB instance endpoints, see Endpoint .

DBClusterEndpointIdentifier (string) --
The identifier associated with the endpoint. This parameter is stored as a lowercase string.

DBClusterIdentifier (string) --
The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.

DBClusterEndpointResourceIdentifier (string) --
A unique system-generated identifier for an endpoint. It remains the same for the whole life of the endpoint.

Endpoint (string) --
The DNS address of the endpoint.

Status (string) --
The current status of the endpoint. One of: creating , available , deleting , modifying .

EndpointType (string) --
The type of the endpoint. One of: READER , WRITER , CUSTOM .

CustomEndpointType (string) --
The type associated with a custom endpoint. One of: READER , WRITER , ANY .

StaticMembers (list) --
List of DB instance identifiers that are part of the custom endpoint group.

(string) --


ExcludedMembers (list) --
List of DB instance identifiers that aren\'t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.

(string) --


DBClusterEndpointArn (string) --
The Amazon Resource Name (ARN) for the endpoint.











Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault


    :return: {
        'Marker': 'string',
        'DBClusterEndpoints': [
            {
                'DBClusterEndpointIdentifier': 'string',
                'DBClusterIdentifier': 'string',
                'DBClusterEndpointResourceIdentifier': 'string',
                'Endpoint': 'string',
                'Status': 'string',
                'EndpointType': 'string',
                'CustomEndpointType': 'string',
                'StaticMembers': [
                    'string',
                ],
                'ExcludedMembers': [
                    'string',
                ],
                'DBClusterEndpointArn': 'string'
            },
        ]
    }
    
    
    :returns: 
    CreateDBClusterEndpoint
    DescribeDBClusterEndpoints
    ModifyDBClusterEndpoint
    DeleteDBClusterEndpoint
    
    """
    pass

def describe_db_cluster_parameter_groups(DBClusterParameterGroupName=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns a list of DBClusterParameterGroup descriptions. If a DBClusterParameterGroupName parameter is specified, the list will contain only the description of the specified DB cluster parameter group.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists settings for the specified DB cluster parameter group.
    Expected Output:
    
    :example: response = client.describe_db_cluster_parameter_groups(
        DBClusterParameterGroupName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: The name of a specific DB cluster parameter group to return details for.\nConstraints:\n\nIf supplied, must match the name of an existing DBClusterParameterGroup.\n\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBClusterParameterGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBClusterParameterGroups': [
        {
            'DBClusterParameterGroupName': 'string',
            'DBParameterGroupFamily': 'string',
            'Description': 'string',
            'DBClusterParameterGroupArn': 'string'
        },
    ]
}


Response Structure

(dict) --

Marker (string) --
An optional pagination token provided by a previous DescribeDBClusterParameterGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBClusterParameterGroups (list) --
A list of DB cluster parameter groups.

(dict) --
Contains the details of an Amazon RDS DB cluster parameter group.
This data type is used as a response element in the DescribeDBClusterParameterGroups action.

DBClusterParameterGroupName (string) --
Provides the name of the DB cluster parameter group.

DBParameterGroupFamily (string) --
Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.

Description (string) --
Provides the customer-specified description for this DB cluster parameter group.

DBClusterParameterGroupArn (string) --
The Amazon Resource Name (ARN) for the DB cluster parameter group.











Exceptions

RDS.Client.exceptions.DBParameterGroupNotFoundFault

Examples
This example lists settings for the specified DB cluster parameter group.
response = client.describe_db_cluster_parameter_groups(
    DBClusterParameterGroupName='mydbclusterparametergroup',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'DBClusterParameterGroups': [
            {
                'DBClusterParameterGroupName': 'string',
                'DBParameterGroupFamily': 'string',
                'Description': 'string',
                'DBClusterParameterGroupArn': 'string'
            },
        ]
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBParameterGroupNotFoundFault
    
    """
    pass

def describe_db_cluster_parameters(DBClusterParameterGroupName=None, Source=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns the detailed parameter list for a particular DB cluster parameter group.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists system parameters for the specified DB cluster parameter group.
    Expected Output:
    
    :example: response = client.describe_db_cluster_parameters(
        DBClusterParameterGroupName='string',
        Source='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: [REQUIRED]\nThe name of a specific DB cluster parameter group to return parameter details for.\nConstraints:\n\nIf supplied, must match the name of an existing DBClusterParameterGroup.\n\n

    :type Source: string
    :param Source: A value that indicates to return only parameters for a specific source. Parameter sources can be engine , service , or customer .

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBClusterParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Parameters': [
        {
            'ParameterName': 'string',
            'ParameterValue': 'string',
            'Description': 'string',
            'Source': 'string',
            'ApplyType': 'string',
            'DataType': 'string',
            'AllowedValues': 'string',
            'IsModifiable': True|False,
            'MinimumEngineVersion': 'string',
            'ApplyMethod': 'immediate'|'pending-reboot',
            'SupportedEngineModes': [
                'string',
            ]
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --
Provides details about a DB cluster parameter group including the parameters in the DB cluster parameter group.

Parameters (list) --
Provides a list of parameters for the DB cluster parameter group.

(dict) --
This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions.
This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.

ParameterName (string) --
Specifies the name of the parameter.

ParameterValue (string) --
Specifies the value of the parameter.

Description (string) --
Provides a description of the parameter.

Source (string) --
Indicates the source of the parameter value.

ApplyType (string) --
Specifies the engine specific parameters type.

DataType (string) --
Specifies the valid data type for the parameter.

AllowedValues (string) --
Specifies the valid range of values for the parameter.

IsModifiable (boolean) --
Indicates whether (true ) or not (false ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.

MinimumEngineVersion (string) --
The earliest engine version to which the parameter can apply.

ApplyMethod (string) --
Indicates when to apply parameter updates.

SupportedEngineModes (list) --
The valid DB engine modes.

(string) --






Marker (string) --
An optional pagination token provided by a previous DescribeDBClusterParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .







Exceptions

RDS.Client.exceptions.DBParameterGroupNotFoundFault

Examples
This example lists system parameters for the specified DB cluster parameter group.
response = client.describe_db_cluster_parameters(
    DBClusterParameterGroupName='mydbclusterparametergroup',
    Source='system',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Parameters': [
            {
                'ParameterName': 'string',
                'ParameterValue': 'string',
                'Description': 'string',
                'Source': 'string',
                'ApplyType': 'string',
                'DataType': 'string',
                'AllowedValues': 'string',
                'IsModifiable': True|False,
                'MinimumEngineVersion': 'string',
                'ApplyMethod': 'immediate'|'pending-reboot',
                'SupportedEngineModes': [
                    'string',
                ]
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_db_cluster_snapshot_attributes(DBClusterSnapshotIdentifier=None):
    """
    Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.
    When sharing snapshots with other AWS accounts, DescribeDBClusterSnapshotAttributes returns the restore attribute and a list of IDs for the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If all is included in the list of values for the restore attribute, then the manual DB cluster snapshot is public and can be copied or restored by all AWS accounts.
    To add or remove access for an AWS account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the ModifyDBClusterSnapshotAttribute API action.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists attributes for the specified DB cluster snapshot.
    Expected Output:
    
    :example: response = client.describe_db_cluster_snapshot_attributes(
        DBClusterSnapshotIdentifier='string'
    )
    
    
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: [REQUIRED]\nThe identifier for the DB cluster snapshot to describe the attributes for.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBClusterSnapshotAttributesResult': {
        'DBClusterSnapshotIdentifier': 'string',
        'DBClusterSnapshotAttributes': [
            {
                'AttributeName': 'string',
                'AttributeValues': [
                    'string',
                ]
            },
        ]
    }
}


Response Structure

(dict) --
DBClusterSnapshotAttributesResult (dict) --Contains the results of a successful call to the DescribeDBClusterSnapshotAttributes API action.
Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the ModifyDBClusterSnapshotAttribute API action.

DBClusterSnapshotIdentifier (string) --The identifier of the manual DB cluster snapshot that the attributes apply to.

DBClusterSnapshotAttributes (list) --The list of attributes and values for the manual DB cluster snapshot.

(dict) --Contains the name and values of a manual DB cluster snapshot attribute.
Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the ModifyDBClusterSnapshotAttribute API action.

AttributeName (string) --The name of the manual DB cluster snapshot attribute.
The attribute named restore refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the ModifyDBClusterSnapshotAttribute API action.

AttributeValues (list) --The value(s) for the manual DB cluster snapshot attribute.
If the AttributeName field is set to restore , then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of all is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.

(string) --













Exceptions

RDS.Client.exceptions.DBClusterSnapshotNotFoundFault

Examples
This example lists attributes for the specified DB cluster snapshot.
response = client.describe_db_cluster_snapshot_attributes(
    DBClusterSnapshotIdentifier='mydbclustersnapshot',
)

print(response)


Expected Output:
{
    'DBClusterSnapshotAttributesResult': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBClusterSnapshotAttributesResult': {
            'DBClusterSnapshotIdentifier': 'string',
            'DBClusterSnapshotAttributes': [
                {
                    'AttributeName': 'string',
                    'AttributeValues': [
                        'string',
                    ]
                },
            ]
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBClusterSnapshotNotFoundFault
    
    """
    pass

def describe_db_cluster_snapshots(DBClusterIdentifier=None, DBClusterSnapshotIdentifier=None, SnapshotType=None, Filters=None, MaxRecords=None, Marker=None, IncludeShared=None, IncludePublic=None):
    """
    Returns information about DB cluster snapshots. This API action supports pagination.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists settings for the specified, manually-created cluster snapshot.
    Expected Output:
    
    :example: response = client.describe_db_cluster_snapshots(
        DBClusterIdentifier='string',
        DBClusterSnapshotIdentifier='string',
        SnapshotType='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string',
        IncludeShared=True|False,
        IncludePublic=True|False
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter can\'t be used in conjunction with the DBClusterSnapshotIdentifier parameter. This parameter isn\'t case-sensitive.\nConstraints:\n\nIf supplied, must match the identifier of an existing DBCluster.\n\n

    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: A specific DB cluster snapshot identifier to describe. This parameter can\'t be used in conjunction with the DBClusterIdentifier parameter. This value is stored as a lowercase string.\nConstraints:\n\nIf supplied, must match the identifier of an existing DBClusterSnapshot.\nIf this identifier is for an automated snapshot, the SnapshotType parameter must also be specified.\n\n

    :type SnapshotType: string
    :param SnapshotType: The type of DB cluster snapshots to be returned. You can specify one of the following values:\n\nautomated - Return all DB cluster snapshots that have been automatically taken by Amazon RDS for my AWS account.\nmanual - Return all DB cluster snapshots that have been taken by my AWS account.\nshared - Return all manual DB cluster snapshots that have been shared to my AWS account.\npublic - Return all DB cluster snapshots that have been marked as public.\n\nIf you don\'t specify a SnapshotType value, then both automated and manual DB cluster snapshots are returned. You can include shared DB cluster snapshots with these results by enabling the IncludeShared parameter. You can include public DB cluster snapshots with these results by enabling the IncludePublic parameter.\nThe IncludeShared and IncludePublic parameters don\'t apply for SnapshotType values of manual or automated . The IncludePublic parameter doesn\'t apply when SnapshotType is set to shared . The IncludeShared parameter doesn\'t apply when SnapshotType is set to public .\n

    :type Filters: list
    :param Filters: A filter that specifies one or more DB cluster snapshots to describe.\nSupported filters:\n\ndb-cluster-id - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs).\ndb-cluster-snapshot-id - Accepts DB cluster snapshot identifiers.\nsnapshot-type - Accepts types of DB cluster snapshots.\nengine - Accepts names of database engines.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBClusterSnapshots request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type IncludeShared: boolean
    :param IncludeShared: A value that indicates whether to include shared manual DB cluster snapshots from other AWS accounts that this AWS account has been given permission to copy or restore. By default, these snapshots are not included.\nYou can give an AWS account permission to restore a manual DB cluster snapshot from another AWS account by the ModifyDBClusterSnapshotAttribute API action.\n

    :type IncludePublic: boolean
    :param IncludePublic: A value that indicates whether to include manual DB cluster snapshots that are public and can be copied or restored by any AWS account. By default, the public snapshots are not included.\nYou can share a manual DB cluster snapshot as public by using the ModifyDBClusterSnapshotAttribute API action.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBClusterSnapshots': [
        {
            'AvailabilityZones': [
                'string',
            ],
            'DBClusterSnapshotIdentifier': 'string',
            'DBClusterIdentifier': 'string',
            'SnapshotCreateTime': datetime(2015, 1, 1),
            'Engine': 'string',
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'VpcId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'SnapshotType': 'string',
            'PercentProgress': 123,
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DBClusterSnapshotArn': 'string',
            'SourceDBClusterSnapshotArn': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False
        },
    ]
}


Response Structure

(dict) --
Provides a list of DB cluster snapshots for the user as the result of a call to the DescribeDBClusterSnapshots action.

Marker (string) --
An optional pagination token provided by a previous DescribeDBClusterSnapshots request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBClusterSnapshots (list) --
Provides a list of DB cluster snapshots for the user.

(dict) --
Contains the details for an Amazon RDS DB cluster snapshot
This data type is used as a response element in the DescribeDBClusterSnapshots action.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot can be restored.

(string) --


DBClusterSnapshotIdentifier (string) --
Specifies the identifier for the DB cluster snapshot.

DBClusterIdentifier (string) --
Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.

SnapshotCreateTime (datetime) --
Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

Engine (string) --
Specifies the name of the database engine.

AllocatedStorage (integer) --
Specifies the allocated storage size in gibibytes (GiB).

Status (string) --
Specifies the status of this DB cluster snapshot.

Port (integer) --
Specifies the port that the DB cluster was listening on at the time of the snapshot.

VpcId (string) --
Provides the VPC ID associated with the DB cluster snapshot.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

MasterUsername (string) --
Provides the master username for the DB cluster snapshot.

EngineVersion (string) --
Provides the version of the database engine for this DB cluster snapshot.

LicenseModel (string) --
Provides the license model information for this DB cluster snapshot.

SnapshotType (string) --
Provides the type of the DB cluster snapshot.

PercentProgress (integer) --
Specifies the percentage of the estimated data that has been transferred.

StorageEncrypted (boolean) --
Specifies whether the DB cluster snapshot is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.

DBClusterSnapshotArn (string) --
The Amazon Resource Name (ARN) for the DB cluster snapshot.

SourceDBClusterSnapshotArn (string) --
If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.











Exceptions

RDS.Client.exceptions.DBClusterSnapshotNotFoundFault

Examples
This example lists settings for the specified, manually-created cluster snapshot.
response = client.describe_db_cluster_snapshots(
    DBClusterSnapshotIdentifier='mydbclustersnapshot',
    SnapshotType='manual',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'DBClusterSnapshots': [
            {
                'AvailabilityZones': [
                    'string',
                ],
                'DBClusterSnapshotIdentifier': 'string',
                'DBClusterIdentifier': 'string',
                'SnapshotCreateTime': datetime(2015, 1, 1),
                'Engine': 'string',
                'AllocatedStorage': 123,
                'Status': 'string',
                'Port': 123,
                'VpcId': 'string',
                'ClusterCreateTime': datetime(2015, 1, 1),
                'MasterUsername': 'string',
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'SnapshotType': 'string',
                'PercentProgress': 123,
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DBClusterSnapshotArn': 'string',
                'SourceDBClusterSnapshotArn': 'string',
                'IAMDatabaseAuthenticationEnabled': True|False
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_db_clusters(DBClusterIdentifier=None, Filters=None, MaxRecords=None, Marker=None, IncludeShared=None):
    """
    Returns information about provisioned Aurora DB clusters. This API supports pagination.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists settings for the specified DB cluster.
    Expected Output:
    
    :example: response = client.describe_db_clusters(
        DBClusterIdentifier='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string',
        IncludeShared=True|False
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn\'t case-sensitive.\nConstraints:\n\nIf supplied, must match an existing DBClusterIdentifier.\n\n

    :type Filters: list
    :param Filters: A filter that specifies one or more DB clusters to describe.\nSupported filters:\n\ndb-cluster-id - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB clusters identified by these ARNs.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBClusters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type IncludeShared: boolean
    :param IncludeShared: Optional Boolean parameter that specifies whether the output includes information about clusters shared from other AWS accounts.

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBClusters': [
        {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBClusters action.

Marker (string) --
A pagination token that can be used in a later DescribeDBClusters request.

DBClusters (list) --
Contains a list of DB clusters for the user.

(dict) --
Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --
For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --
If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --
Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --
Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --
Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --
Specifies the current state of this DB cluster.

PercentProgress (string) --
Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --
The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --
Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --
The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --
Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --
Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --
Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --
Indicates the database engine version.

LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --
Specifies the port that the database engine is listening on.

MasterUsername (string) --
Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --
Provides the list of option group memberships for this DB cluster.

(dict) --
Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --
Specifies the name of the DB cluster option group.

Status (string) --
Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --
Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --
Provides the list of instances that make up the DB cluster.

(dict) --
Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --
Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --
Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --
Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --
Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --
Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --
If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --
Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --
Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --
A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --
Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --
The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --
The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --
The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --
The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --
The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --
Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --
The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --
The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --
A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --
The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --
The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --
Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --
A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --
The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --
The status of the database activity stream.

ActivityStreamKmsKeyId (string) --
The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --
The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --
Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB cluster.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.















Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault

Examples
This example lists settings for the specified DB cluster.
response = client.describe_db_clusters(
    DBClusterIdentifier='mynewdbcluster',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'DBClusters': [
            {
                'AllocatedStorage': 123,
                'AvailabilityZones': [
                    'string',
                ],
                'BackupRetentionPeriod': 123,
                'CharacterSetName': 'string',
                'DatabaseName': 'string',
                'DBClusterIdentifier': 'string',
                'DBClusterParameterGroup': 'string',
                'DBSubnetGroup': 'string',
                'Status': 'string',
                'PercentProgress': 'string',
                'EarliestRestorableTime': datetime(2015, 1, 1),
                'Endpoint': 'string',
                'ReaderEndpoint': 'string',
                'CustomEndpoints': [
                    'string',
                ],
                'MultiAZ': True|False,
                'Engine': 'string',
                'EngineVersion': 'string',
                'LatestRestorableTime': datetime(2015, 1, 1),
                'Port': 123,
                'MasterUsername': 'string',
                'DBClusterOptionGroupMemberships': [
                    {
                        'DBClusterOptionGroupName': 'string',
                        'Status': 'string'
                    },
                ],
                'PreferredBackupWindow': 'string',
                'PreferredMaintenanceWindow': 'string',
                'ReplicationSourceIdentifier': 'string',
                'ReadReplicaIdentifiers': [
                    'string',
                ],
                'DBClusterMembers': [
                    {
                        'DBInstanceIdentifier': 'string',
                        'IsClusterWriter': True|False,
                        'DBClusterParameterGroupStatus': 'string',
                        'PromotionTier': 123
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'HostedZoneId': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbClusterResourceId': 'string',
                'DBClusterArn': 'string',
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'Status': 'string',
                        'FeatureName': 'string'
                    },
                ],
                'IAMDatabaseAuthenticationEnabled': True|False,
                'CloneGroupId': 'string',
                'ClusterCreateTime': datetime(2015, 1, 1),
                'EarliestBacktrackTime': datetime(2015, 1, 1),
                'BacktrackWindow': 123,
                'BacktrackConsumedChangeRecords': 123,
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'Capacity': 123,
                'EngineMode': 'string',
                'ScalingConfigurationInfo': {
                    'MinCapacity': 123,
                    'MaxCapacity': 123,
                    'AutoPause': True|False,
                    'SecondsUntilAutoPause': 123,
                    'TimeoutAction': 'string'
                },
                'DeletionProtection': True|False,
                'HttpEndpointEnabled': True|False,
                'ActivityStreamMode': 'sync'|'async',
                'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
                'ActivityStreamKmsKeyId': 'string',
                'ActivityStreamKinesisStreamName': 'string',
                'CopyTagsToSnapshot': True|False,
                'CrossAccountClone': True|False,
                'DomainMemberships': [
                    {
                        'Domain': 'string',
                        'Status': 'string',
                        'FQDN': 'string',
                        'IAMRoleName': 'string'
                    },
                ]
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_db_engine_versions(Engine=None, EngineVersion=None, DBParameterGroupFamily=None, Filters=None, MaxRecords=None, Marker=None, DefaultOnly=None, ListSupportedCharacterSets=None, ListSupportedTimezones=None, IncludeAll=None):
    """
    Returns a list of the available DB engines.
    See also: AWS API Documentation
    
    Examples
    This example lists settings for the specified DB engine version.
    Expected Output:
    
    :example: response = client.describe_db_engine_versions(
        Engine='string',
        EngineVersion='string',
        DBParameterGroupFamily='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string',
        DefaultOnly=True|False,
        ListSupportedCharacterSets=True|False,
        ListSupportedTimezones=True|False,
        IncludeAll=True|False
    )
    
    
    :type Engine: string
    :param Engine: The database engine to return.

    :type EngineVersion: string
    :param EngineVersion: The database engine version to return.\nExample: 5.1.49\n

    :type DBParameterGroupFamily: string
    :param DBParameterGroupFamily: The name of a specific DB parameter group family to return details for.\nConstraints:\n\nIf supplied, must match an existing DBParameterGroupFamily.\n\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more than the MaxRecords value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type DefaultOnly: boolean
    :param DefaultOnly: A value that indicates whether only the default version of the specified engine or engine and major version combination is returned.

    :type ListSupportedCharacterSets: boolean
    :param ListSupportedCharacterSets: A value that indicates whether to list the supported character sets for each engine version.\nIf this parameter is enabled and the requested engine supports the CharacterSetName parameter for CreateDBInstance , the response includes a list of supported character sets for each engine version.\n

    :type ListSupportedTimezones: boolean
    :param ListSupportedTimezones: A value that indicates whether to list the supported time zones for each engine version.\nIf this parameter is enabled and the requested engine supports the TimeZone parameter for CreateDBInstance , the response includes a list of supported time zones for each engine version.\n

    :type IncludeAll: boolean
    :param IncludeAll: A value that indicates whether to include engine versions that aren\'t available in the list. The default is to list only available engine versions.

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBEngineVersions': [
        {
            'Engine': 'string',
            'EngineVersion': 'string',
            'DBParameterGroupFamily': 'string',
            'DBEngineDescription': 'string',
            'DBEngineVersionDescription': 'string',
            'DefaultCharacterSet': {
                'CharacterSetName': 'string',
                'CharacterSetDescription': 'string'
            },
            'SupportedCharacterSets': [
                {
                    'CharacterSetName': 'string',
                    'CharacterSetDescription': 'string'
                },
            ],
            'ValidUpgradeTarget': [
                {
                    'Engine': 'string',
                    'EngineVersion': 'string',
                    'Description': 'string',
                    'AutoUpgrade': True|False,
                    'IsMajorVersionUpgrade': True|False
                },
            ],
            'SupportedTimezones': [
                {
                    'TimezoneName': 'string'
                },
            ],
            'ExportableLogTypes': [
                'string',
            ],
            'SupportsLogExportsToCloudwatchLogs': True|False,
            'SupportsReadReplica': True|False,
            'SupportedEngineModes': [
                'string',
            ],
            'SupportedFeatureNames': [
                'string',
            ],
            'Status': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBEngineVersions action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBEngineVersions (list) --
A list of DBEngineVersion elements.

(dict) --
This data type is used as a response element in the action DescribeDBEngineVersions .

Engine (string) --
The name of the database engine.

EngineVersion (string) --
The version number of the database engine.

DBParameterGroupFamily (string) --
The name of the DB parameter group family for the database engine.

DBEngineDescription (string) --
The description of the database engine.

DBEngineVersionDescription (string) --
The description of the database engine version.

DefaultCharacterSet (dict) --
The default character set for new instances of this engine version, if the CharacterSetName parameter of the CreateDBInstance API isn\'t specified.

CharacterSetName (string) --
The name of the character set.

CharacterSetDescription (string) --
The description of the character set.



SupportedCharacterSets (list) --
A list of the character sets supported by this engine for the CharacterSetName parameter of the CreateDBInstance action.

(dict) --
This data type is used as a response element in the action DescribeDBEngineVersions .

CharacterSetName (string) --
The name of the character set.

CharacterSetDescription (string) --
The description of the character set.





ValidUpgradeTarget (list) --
A list of engine versions that this database engine version can be upgraded to.

(dict) --
The version of the database engine that a DB instance can be upgraded to.

Engine (string) --
The name of the upgrade target database engine.

EngineVersion (string) --
The version number of the upgrade target database engine.

Description (string) --
The version of the database engine that a DB instance can be upgraded to.

AutoUpgrade (boolean) --
A value that indicates whether the target version is applied to any source DB instances that have AutoMinorVersionUpgrade set to true.

IsMajorVersionUpgrade (boolean) --
A value that indicates whether a database engine is upgraded to a major version.





SupportedTimezones (list) --
A list of the time zones supported by this engine for the Timezone parameter of the CreateDBInstance action.

(dict) --
A time zone associated with a DBInstance or a DBSnapshot . This data type is an element in the response to the DescribeDBInstances , the DescribeDBSnapshots , and the DescribeDBEngineVersions actions.

TimezoneName (string) --
The name of the time zone.





ExportableLogTypes (list) --
The types of logs that the database engine has available for export to CloudWatch Logs.

(string) --


SupportsLogExportsToCloudwatchLogs (boolean) --
A value that indicates whether the engine version supports exporting the log types specified by ExportableLogTypes to CloudWatch Logs.

SupportsReadReplica (boolean) --
Indicates whether the database engine version supports read replicas.

SupportedEngineModes (list) --
A list of the supported DB engine modes.

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode.


(string) --


SupportedFeatureNames (list) --
A list of features supported by the DB engine. Supported feature names include the following.

s3Import


(string) --


Status (string) --
The status of the DB engine version, either available or deprecated .











Examples
This example lists settings for the specified DB engine version.
response = client.describe_db_engine_versions(
    DBParameterGroupFamily='mysql5.6',
    DefaultOnly=True,
    Engine='mysql',
    EngineVersion='5.6',
    ListSupportedCharacterSets=True,
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'DBEngineVersions': [
            {
                'Engine': 'string',
                'EngineVersion': 'string',
                'DBParameterGroupFamily': 'string',
                'DBEngineDescription': 'string',
                'DBEngineVersionDescription': 'string',
                'DefaultCharacterSet': {
                    'CharacterSetName': 'string',
                    'CharacterSetDescription': 'string'
                },
                'SupportedCharacterSets': [
                    {
                        'CharacterSetName': 'string',
                        'CharacterSetDescription': 'string'
                    },
                ],
                'ValidUpgradeTarget': [
                    {
                        'Engine': 'string',
                        'EngineVersion': 'string',
                        'Description': 'string',
                        'AutoUpgrade': True|False,
                        'IsMajorVersionUpgrade': True|False
                    },
                ],
                'SupportedTimezones': [
                    {
                        'TimezoneName': 'string'
                    },
                ],
                'ExportableLogTypes': [
                    'string',
                ],
                'SupportsLogExportsToCloudwatchLogs': True|False,
                'SupportsReadReplica': True|False,
                'SupportedEngineModes': [
                    'string',
                ],
                'SupportedFeatureNames': [
                    'string',
                ],
                'Status': 'string'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_db_instance_automated_backups(DbiResourceId=None, DBInstanceIdentifier=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Displays backups for both current and deleted instances. For example, use this operation to find details about automated backups for previously deleted instances. Current instances with retention periods greater than zero (0) are returned for both the DescribeDBInstanceAutomatedBackups and DescribeDBInstances operations.
    All parameters are optional.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_db_instance_automated_backups(
        DbiResourceId='string',
        DBInstanceIdentifier='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DbiResourceId: string
    :param DbiResourceId: The resource ID of the DB instance that is the source of the automated backup. This parameter isn\'t case-sensitive.

    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: (Optional) The user-supplied instance identifier. If this parameter is specified, it must match the identifier of an existing DB instance. It returns information from the specific DB instance\' automated backup. This parameter isn\'t case-sensitive.

    :type Filters: list
    :param Filters: A filter that specifies which resources to return based on status.\nSupported filters are the following:\n\nstatus\nactive - automated backups for current instances\nretained - automated backups for deleted instances\ncreating - automated backups that are waiting for the first automated snapshot to be available\n\n\ndb-instance-id - Accepts DB instance identifiers and Amazon Resource Names (ARNs) for DB instances. The results list includes only information about the DB instance automated backupss identified by these ARNs.\ndbi-resource-id - Accepts DB instance resource identifiers and DB Amazon Resource Names (ARNs) for DB instances. The results list includes only information about the DB instance resources identified by these ARNs.\n\nReturns all resources by default. The status for each resource is specified in the response.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.

    :type Marker: string
    :param Marker: The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBInstanceAutomatedBackups': [
        {
            'DBInstanceArn': 'string',
            'DbiResourceId': 'string',
            'Region': 'string',
            'DBInstanceIdentifier': 'string',
            'RestoreWindow': {
                'EarliestTime': datetime(2015, 1, 1),
                'LatestTime': datetime(2015, 1, 1)
            },
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'AvailabilityZone': 'string',
            'VpcId': 'string',
            'InstanceCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'Engine': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupName': 'string',
            'TdeCredentialArn': 'string',
            'Encrypted': True|False,
            'StorageType': 'string',
            'KmsKeyId': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBInstanceAutomatedBackups action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBInstanceAutomatedBackups (list) --
A list of DBInstanceAutomatedBackup instances.

(dict) --
An automated backup of a DB instance. It it consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance.

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the automated backup.

DbiResourceId (string) --
The identifier for the source DB instance, which can\'t be changed and which is unique to an AWS Region.

Region (string) --
The AWS Region associated with the automated backup.

DBInstanceIdentifier (string) --
The customer id of the instance that is/was associated with the automated backup.

RestoreWindow (dict) --
Earliest and latest time an instance can be restored to.

EarliestTime (datetime) --
The earliest time you can restore an instance to.

LatestTime (datetime) --
The latest time you can restore an instance to.



AllocatedStorage (integer) --
Specifies the allocated storage size in gibibytes (GiB).

Status (string) --
Provides a list of status information for an automated backup:

active - automated backups for current instances
retained - automated backups for deleted instances
creating - automated backups that are waiting for the first automated snapshot to be available.


Port (integer) --
The port number that the automated backup used for connections.
Default: Inherits from the source DB instance
Valid Values: 1150-65535

AvailabilityZone (string) --
The Availability Zone that the automated backup was created in. For information on AWS Regions and Availability Zones, see Regions and Availability Zones .

VpcId (string) --
Provides the VPC ID associated with the DB instance

InstanceCreateTime (datetime) --
Provides the date and time that the DB instance was created.

MasterUsername (string) --
The license model of an automated backup.

Engine (string) --
The name of the database engine for this automated backup.

EngineVersion (string) --
The version of the database engine for the automated backup.

LicenseModel (string) --
License model information for the automated backup.

Iops (integer) --
The IOPS (I/O operations per second) value for the automated backup.

OptionGroupName (string) --
The option group the automated backup is associated with. If omitted, the default option group for the engine specified is used.

TdeCredentialArn (string) --
The ARN from the key store with which the automated backup is associated for TDE encryption.

Encrypted (boolean) --
Specifies whether the automated backup is encrypted.

StorageType (string) --
Specifies the storage type associated with the automated backup.

KmsKeyId (string) --
The AWS KMS key ID for an automated backup. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

Timezone (string) --
The time zone of the automated backup. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.











Exceptions

RDS.Client.exceptions.DBInstanceAutomatedBackupNotFoundFault


    :return: {
        'Marker': 'string',
        'DBInstanceAutomatedBackups': [
            {
                'DBInstanceArn': 'string',
                'DbiResourceId': 'string',
                'Region': 'string',
                'DBInstanceIdentifier': 'string',
                'RestoreWindow': {
                    'EarliestTime': datetime(2015, 1, 1),
                    'LatestTime': datetime(2015, 1, 1)
                },
                'AllocatedStorage': 123,
                'Status': 'string',
                'Port': 123,
                'AvailabilityZone': 'string',
                'VpcId': 'string',
                'InstanceCreateTime': datetime(2015, 1, 1),
                'MasterUsername': 'string',
                'Engine': 'string',
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'OptionGroupName': 'string',
                'TdeCredentialArn': 'string',
                'Encrypted': True|False,
                'StorageType': 'string',
                'KmsKeyId': 'string',
                'Timezone': 'string',
                'IAMDatabaseAuthenticationEnabled': True|False
            },
        ]
    }
    
    
    :returns: 
    active - automated backups for current instances
    retained - automated backups for deleted instances
    creating - automated backups that are waiting for the first automated snapshot to be available.
    
    """
    pass

def describe_db_instances(DBInstanceIdentifier=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns information about provisioned RDS instances. This API supports pagination.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists settings for the specified DB instance.
    Expected Output:
    
    :example: response = client.describe_db_instances(
        DBInstanceIdentifier='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: The user-supplied instance identifier. If this parameter is specified, information from only the specific DB instance is returned. This parameter isn\'t case-sensitive.\nConstraints:\n\nIf supplied, must match the identifier of an existing DBInstance.\n\n

    :type Filters: list
    :param Filters: A filter that specifies one or more DB instances to describe.\nSupported filters:\n\ndb-cluster-id - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB instances associated with the DB clusters identified by these ARNs.\ndb-instance-id - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs). The results list will only include information about the DB instances identified by these ARNs.\ndbi-resource-id - Accepts DB instance resource identifiers. The results list will only include information about the DB instances identified by these DB instance resource identifiers.\ndomain - Accepts Active Directory directory IDs. The results list will only include information about the DB instances associated with these domains.\nengine - Accepts engine names. The results list will only include information about the DB instances for these engines.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBInstances request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBInstances': [
        {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBInstances action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBInstances (list) --
A list of DBInstance instances.

(dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.











Exceptions

RDS.Client.exceptions.DBInstanceNotFoundFault

Examples
This example lists settings for the specified DB instance.
response = client.describe_db_instances(
    DBInstanceIdentifier='mymysqlinstance',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'DBInstances': [
            {
                'DBInstanceIdentifier': 'string',
                'DBInstanceClass': 'string',
                'Engine': 'string',
                'DBInstanceStatus': 'string',
                'MasterUsername': 'string',
                'DBName': 'string',
                'Endpoint': {
                    'Address': 'string',
                    'Port': 123,
                    'HostedZoneId': 'string'
                },
                'AllocatedStorage': 123,
                'InstanceCreateTime': datetime(2015, 1, 1),
                'PreferredBackupWindow': 'string',
                'BackupRetentionPeriod': 123,
                'DBSecurityGroups': [
                    {
                        'DBSecurityGroupName': 'string',
                        'Status': 'string'
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'DBParameterGroups': [
                    {
                        'DBParameterGroupName': 'string',
                        'ParameterApplyStatus': 'string'
                    },
                ],
                'AvailabilityZone': 'string',
                'DBSubnetGroup': {
                    'DBSubnetGroupName': 'string',
                    'DBSubnetGroupDescription': 'string',
                    'VpcId': 'string',
                    'SubnetGroupStatus': 'string',
                    'Subnets': [
                        {
                            'SubnetIdentifier': 'string',
                            'SubnetAvailabilityZone': {
                                'Name': 'string'
                            },
                            'SubnetStatus': 'string'
                        },
                    ],
                    'DBSubnetGroupArn': 'string'
                },
                'PreferredMaintenanceWindow': 'string',
                'PendingModifiedValues': {
                    'DBInstanceClass': 'string',
                    'AllocatedStorage': 123,
                    'MasterUserPassword': 'string',
                    'Port': 123,
                    'BackupRetentionPeriod': 123,
                    'MultiAZ': True|False,
                    'EngineVersion': 'string',
                    'LicenseModel': 'string',
                    'Iops': 123,
                    'DBInstanceIdentifier': 'string',
                    'StorageType': 'string',
                    'CACertificateIdentifier': 'string',
                    'DBSubnetGroupName': 'string',
                    'PendingCloudwatchLogsExports': {
                        'LogTypesToEnable': [
                            'string',
                        ],
                        'LogTypesToDisable': [
                            'string',
                        ]
                    },
                    'ProcessorFeatures': [
                        {
                            'Name': 'string',
                            'Value': 'string'
                        },
                    ]
                },
                'LatestRestorableTime': datetime(2015, 1, 1),
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'AutoMinorVersionUpgrade': True|False,
                'ReadReplicaSourceDBInstanceIdentifier': 'string',
                'ReadReplicaDBInstanceIdentifiers': [
                    'string',
                ],
                'ReadReplicaDBClusterIdentifiers': [
                    'string',
                ],
                'LicenseModel': 'string',
                'Iops': 123,
                'OptionGroupMemberships': [
                    {
                        'OptionGroupName': 'string',
                        'Status': 'string'
                    },
                ],
                'CharacterSetName': 'string',
                'SecondaryAvailabilityZone': 'string',
                'PubliclyAccessible': True|False,
                'StatusInfos': [
                    {
                        'StatusType': 'string',
                        'Normal': True|False,
                        'Status': 'string',
                        'Message': 'string'
                    },
                ],
                'StorageType': 'string',
                'TdeCredentialArn': 'string',
                'DbInstancePort': 123,
                'DBClusterIdentifier': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbiResourceId': 'string',
                'CACertificateIdentifier': 'string',
                'DomainMemberships': [
                    {
                        'Domain': 'string',
                        'Status': 'string',
                        'FQDN': 'string',
                        'IAMRoleName': 'string'
                    },
                ],
                'CopyTagsToSnapshot': True|False,
                'MonitoringInterval': 123,
                'EnhancedMonitoringResourceArn': 'string',
                'MonitoringRoleArn': 'string',
                'PromotionTier': 123,
                'DBInstanceArn': 'string',
                'Timezone': 'string',
                'IAMDatabaseAuthenticationEnabled': True|False,
                'PerformanceInsightsEnabled': True|False,
                'PerformanceInsightsKMSKeyId': 'string',
                'PerformanceInsightsRetentionPeriod': 123,
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ],
                'DeletionProtection': True|False,
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'FeatureName': 'string',
                        'Status': 'string'
                    },
                ],
                'ListenerEndpoint': {
                    'Address': 'string',
                    'Port': 123,
                    'HostedZoneId': 'string'
                },
                'MaxAllocatedStorage': 123
            },
        ]
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def describe_db_log_files(DBInstanceIdentifier=None, FilenameContains=None, FileLastWritten=None, FileSize=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns a list of DB log files for the DB instance.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists matching log file names for the specified DB instance, file name pattern, last write date in POSIX time with milleseconds, and minimum file size.
    Expected Output:
    
    :example: response = client.describe_db_log_files(
        DBInstanceIdentifier='string',
        FilenameContains='string',
        FileLastWritten=123,
        FileSize=123,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe customer-assigned name of the DB instance that contains the log files you want to list.\nConstraints:\n\nMust match the identifier of an existing DBInstance.\n\n

    :type FilenameContains: string
    :param FilenameContains: Filters the available log files for log file names that contain the specified string.

    :type FileLastWritten: integer
    :param FileLastWritten: Filters the available log files for files written since the specified date, in POSIX timestamp format with milliseconds.

    :type FileSize: integer
    :param FileSize: Filters the available log files for files larger than the specified size.

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.

    :type Marker: string
    :param Marker: The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords.

    :rtype: dict

ReturnsResponse Syntax
{
    'DescribeDBLogFiles': [
        {
            'LogFileName': 'string',
            'LastWritten': 123,
            'Size': 123
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --
The response from a call to DescribeDBLogFiles .

DescribeDBLogFiles (list) --
The DB log files returned.

(dict) --
This data type is used as a response element to DescribeDBLogFiles .

LogFileName (string) --
The name of the log file for the specified DB instance.

LastWritten (integer) --
A POSIX timestamp when the last log entry was written.

Size (integer) --
The size, in bytes, of the log file for the specified DB instance.





Marker (string) --
A pagination token that can be used in a later DescribeDBLogFiles request.







Exceptions

RDS.Client.exceptions.DBInstanceNotFoundFault

Examples
This example lists matching log file names for the specified DB instance, file name pattern, last write date in POSIX time with milleseconds, and minimum file size.
response = client.describe_db_log_files(
    DBInstanceIdentifier='mymysqlinstance',
    FileLastWritten=1470873600000,
    FileSize=0,
    FilenameContains='error',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DescribeDBLogFiles': [
            {
                'LogFileName': 'string',
                'LastWritten': 123,
                'Size': 123
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBInstanceNotFoundFault
    
    """
    pass

def describe_db_parameter_groups(DBParameterGroupName=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns a list of DBParameterGroup descriptions. If a DBParameterGroupName is specified, the list will contain only the description of the specified DB parameter group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information about the specified DB parameter group.
    Expected Output:
    
    :example: response = client.describe_db_parameter_groups(
        DBParameterGroupName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBParameterGroupName: string
    :param DBParameterGroupName: The name of a specific DB parameter group to return details for.\nConstraints:\n\nIf supplied, must match the name of an existing DBClusterParameterGroup.\n\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBParameterGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBParameterGroups': [
        {
            'DBParameterGroupName': 'string',
            'DBParameterGroupFamily': 'string',
            'Description': 'string',
            'DBParameterGroupArn': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBParameterGroups action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBParameterGroups (list) --
A list of DBParameterGroup instances.

(dict) --
Contains the details of an Amazon RDS DB parameter group.
This data type is used as a response element in the DescribeDBParameterGroups action.

DBParameterGroupName (string) --
Provides the name of the DB parameter group.

DBParameterGroupFamily (string) --
Provides the name of the DB parameter group family that this DB parameter group is compatible with.

Description (string) --
Provides the customer-specified description for this DB parameter group.

DBParameterGroupArn (string) --
The Amazon Resource Name (ARN) for the DB parameter group.











Exceptions

RDS.Client.exceptions.DBParameterGroupNotFoundFault

Examples
This example lists information about the specified DB parameter group.
response = client.describe_db_parameter_groups(
    DBParameterGroupName='mymysqlparametergroup',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'DBParameterGroupFamily': 'string',
                'Description': 'string',
                'DBParameterGroupArn': 'string'
            },
        ]
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBParameterGroupNotFoundFault
    
    """
    pass

def describe_db_parameters(DBParameterGroupName=None, Source=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns the detailed parameter list for a particular DB parameter group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information for up to the first 20 system parameters for the specified DB parameter group.
    Expected Output:
    
    :example: response = client.describe_db_parameters(
        DBParameterGroupName='string',
        Source='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBParameterGroupName: string
    :param DBParameterGroupName: [REQUIRED]\nThe name of a specific DB parameter group to return details for.\nConstraints:\n\nIf supplied, must match the name of an existing DBParameterGroup.\n\n

    :type Source: string
    :param Source: The parameter types to return.\nDefault: All parameter types returned\nValid Values: user | system | engine-default\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Parameters': [
        {
            'ParameterName': 'string',
            'ParameterValue': 'string',
            'Description': 'string',
            'Source': 'string',
            'ApplyType': 'string',
            'DataType': 'string',
            'AllowedValues': 'string',
            'IsModifiable': True|False,
            'MinimumEngineVersion': 'string',
            'ApplyMethod': 'immediate'|'pending-reboot',
            'SupportedEngineModes': [
                'string',
            ]
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBParameters action.

Parameters (list) --
A list of Parameter values.

(dict) --
This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions.
This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.

ParameterName (string) --
Specifies the name of the parameter.

ParameterValue (string) --
Specifies the value of the parameter.

Description (string) --
Provides a description of the parameter.

Source (string) --
Indicates the source of the parameter value.

ApplyType (string) --
Specifies the engine specific parameters type.

DataType (string) --
Specifies the valid data type for the parameter.

AllowedValues (string) --
Specifies the valid range of values for the parameter.

IsModifiable (boolean) --
Indicates whether (true ) or not (false ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.

MinimumEngineVersion (string) --
The earliest engine version to which the parameter can apply.

ApplyMethod (string) --
Indicates when to apply parameter updates.

SupportedEngineModes (list) --
The valid DB engine modes.

(string) --






Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .







Exceptions

RDS.Client.exceptions.DBParameterGroupNotFoundFault

Examples
This example lists information for up to the first 20 system parameters for the specified DB parameter group.
response = client.describe_db_parameters(
    DBParameterGroupName='mymysqlparametergroup',
    MaxRecords=20,
    Source='system',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Parameters': [
            {
                'ParameterName': 'string',
                'ParameterValue': 'string',
                'Description': 'string',
                'Source': 'string',
                'ApplyType': 'string',
                'DataType': 'string',
                'AllowedValues': 'string',
                'IsModifiable': True|False,
                'MinimumEngineVersion': 'string',
                'ApplyMethod': 'immediate'|'pending-reboot',
                'SupportedEngineModes': [
                    'string',
                ]
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_db_proxies(DBProxyName=None, Filters=None, Marker=None, MaxRecords=None):
    """
    Returns information about DB proxies.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_db_proxies(
        DBProxyName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        Marker='string',
        MaxRecords=123
    )
    
    
    :type DBProxyName: string
    :param DBProxyName: The name of the DB proxy.

    :type Filters: list
    :param Filters: This parameter is not currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBProxies': [
        {
            'DBProxyName': 'string',
            'DBProxyArn': 'string',
            'Status': 'available'|'modifying'|'incompatible-network'|'insufficient-resource-limits'|'creating'|'deleting'|'suspended'|'suspending'|'reactivating',
            'EngineFamily': 'string',
            'VpcSecurityGroupIds': [
                'string',
            ],
            'VpcSubnetIds': [
                'string',
            ],
            'Auth': [
                {
                    'Description': 'string',
                    'UserName': 'string',
                    'AuthScheme': 'SECRETS',
                    'SecretArn': 'string',
                    'IAMAuth': 'DISABLED'|'REQUIRED'
                },
            ],
            'RoleArn': 'string',
            'Endpoint': 'string',
            'RequireTLS': True|False,
            'IdleClientTimeout': 123,
            'DebugLogging': True|False,
            'CreatedDate': datetime(2015, 1, 1),
            'UpdatedDate': datetime(2015, 1, 1)
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --

DBProxies (list) --
A return value representing an arbitrary number of DBProxy data structures.

(dict) --

Note
This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.

The data structure representing a proxy managed by the RDS Proxy.
This data type is used as a response element in the DescribeDBProxies action.

DBProxyName (string) --
The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.

DBProxyArn (string) --
The Amazon Resource Name (ARN) for the proxy.

Status (string) --
The current status of this proxy. A status of available means the proxy is ready to handle requests. Other values indicate that you must wait for the proxy to be ready, or take some action to resolve an issue.

EngineFamily (string) --
The engine family applies to MySQL and PostgreSQL for both RDS and Aurora.

VpcSecurityGroupIds (list) --
Provides a list of VPC security groups that the proxy belongs to.

(string) --


VpcSubnetIds (list) --
The EC2 subnet IDs for the proxy.

(string) --


Auth (list) --
One or more data structures specifying the authorization mechanism to connect to the associated RDS DB instance or Aurora DB cluster.

(dict) --

Note
This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.

Returns the details of authentication used by a proxy to log in as a specific database user.

Description (string) --
A user-specified description about the authentication used by a proxy to log in as a specific database user.

UserName (string) --
The name of the database user to which the proxy connects.

AuthScheme (string) --
The type of authentication that the proxy uses for connections from the proxy to the underlying database.

SecretArn (string) --
The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.

IAMAuth (string) --
Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.





RoleArn (string) --
The Amazon Resource Name (ARN) for the IAM role that the proxy uses to access Amazon Secrets Manager.

Endpoint (string) --
The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.

RequireTLS (boolean) --
Indicates whether Transport Layer Security (TLS) encryption is required for connections to the proxy.

IdleClientTimeout (integer) --
The number of seconds a connection to the proxy can have no activity before the proxy drops the client connection. The proxy keeps the underlying database connection open and puts it back into the connection pool for reuse by later connection requests.
Default: 1800 (30 minutes)
Constraints: 1 to 28,800

DebugLogging (boolean) --
Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.

CreatedDate (datetime) --
The date and time when the proxy was first created.

UpdatedDate (datetime) --
The date and time when the proxy was last updated.





Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .







Exceptions

RDS.Client.exceptions.DBProxyNotFoundFault


    :return: {
        'DBProxies': [
            {
                'DBProxyName': 'string',
                'DBProxyArn': 'string',
                'Status': 'available'|'modifying'|'incompatible-network'|'insufficient-resource-limits'|'creating'|'deleting'|'suspended'|'suspending'|'reactivating',
                'EngineFamily': 'string',
                'VpcSecurityGroupIds': [
                    'string',
                ],
                'VpcSubnetIds': [
                    'string',
                ],
                'Auth': [
                    {
                        'Description': 'string',
                        'UserName': 'string',
                        'AuthScheme': 'SECRETS',
                        'SecretArn': 'string',
                        'IAMAuth': 'DISABLED'|'REQUIRED'
                    },
                ],
                'RoleArn': 'string',
                'Endpoint': 'string',
                'RequireTLS': True|False,
                'IdleClientTimeout': 123,
                'DebugLogging': True|False,
                'CreatedDate': datetime(2015, 1, 1),
                'UpdatedDate': datetime(2015, 1, 1)
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_db_proxy_target_groups(DBProxyName=None, TargetGroupName=None, Filters=None, Marker=None, MaxRecords=None):
    """
    Returns information about DB proxy target groups, represented by DBProxyTargetGroup data structures.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_db_proxy_target_groups(
        DBProxyName='string',
        TargetGroupName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        Marker='string',
        MaxRecords=123
    )
    
    
    :type DBProxyName: string
    :param DBProxyName: [REQUIRED]\nThe identifier of the DBProxy associated with the target group.\n

    :type TargetGroupName: string
    :param TargetGroupName: The identifier of the DBProxyTargetGroup to describe.

    :type Filters: list
    :param Filters: This parameter is not currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'TargetGroups': [
        {
            'DBProxyName': 'string',
            'TargetGroupName': 'string',
            'TargetGroupArn': 'string',
            'IsDefault': True|False,
            'Status': 'string',
            'ConnectionPoolConfig': {
                'MaxConnectionsPercent': 123,
                'MaxIdleConnectionsPercent': 123,
                'ConnectionBorrowTimeout': 123,
                'SessionPinningFilters': [
                    'string',
                ],
                'InitQuery': 'string'
            },
            'CreatedDate': datetime(2015, 1, 1),
            'UpdatedDate': datetime(2015, 1, 1)
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --

TargetGroups (list) --
An arbitrary number of DBProxyTargetGroup objects, containing details of the corresponding target groups.

(dict) --

Note
This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.

Represents a set of RDS DB instances, Aurora DB clusters, or both that a proxy can connect to. Currently, each target group is associated with exactly one RDS DB instance or Aurora DB cluster.
This data type is used as a response element in the DescribeDBProxyTargetGroups action.

DBProxyName (string) --
The identifier for the RDS proxy associated with this target group.

TargetGroupName (string) --
The identifier for the target group. This name must be unique for all target groups owned by your AWS account in the specified AWS Region.

TargetGroupArn (string) --
The Amazon Resource Name (ARN) representing the target group.

IsDefault (boolean) --
Whether this target group is the first one used for connection requests by the associated proxy. Because each proxy is currently associated with a single target group, currently this setting is always true .

Status (string) --
The current status of this target group. A status of available means the target group is correctly associated with a database. Other values indicate that you must wait for the target group to be ready, or take some action to resolve an issue.

ConnectionPoolConfig (dict) --
The settings that determine the size and behavior of the connection pool for the target group.

MaxConnectionsPercent (integer) --
The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.

MaxIdleConnectionsPercent (integer) --
Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.

ConnectionBorrowTimeout (integer) --
The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.

SessionPinningFilters (list) --
Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. Currently, the only allowed value is EXCLUDE_VARIABLE_SETS .

(string) --


InitQuery (string) --
One or more SQL statements for the proxy to run when opening each new database connection. Typically used with SET statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single SET statement, such as SET x=1, y=2 .

InitQuery is not currently supported for PostgreSQL.




CreatedDate (datetime) --
The date and time when the target group was first created.

UpdatedDate (datetime) --
The date and time when the target group was last updated.





Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .







Exceptions

RDS.Client.exceptions.DBProxyNotFoundFault
RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
RDS.Client.exceptions.InvalidDBProxyStateFault


    :return: {
        'TargetGroups': [
            {
                'DBProxyName': 'string',
                'TargetGroupName': 'string',
                'TargetGroupArn': 'string',
                'IsDefault': True|False,
                'Status': 'string',
                'ConnectionPoolConfig': {
                    'MaxConnectionsPercent': 123,
                    'MaxIdleConnectionsPercent': 123,
                    'ConnectionBorrowTimeout': 123,
                    'SessionPinningFilters': [
                        'string',
                    ],
                    'InitQuery': 'string'
                },
                'CreatedDate': datetime(2015, 1, 1),
                'UpdatedDate': datetime(2015, 1, 1)
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_db_proxy_targets(DBProxyName=None, TargetGroupName=None, Filters=None, Marker=None, MaxRecords=None):
    """
    Returns information about DBProxyTarget objects. This API supports pagination.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_db_proxy_targets(
        DBProxyName='string',
        TargetGroupName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        Marker='string',
        MaxRecords=123
    )
    
    
    :type DBProxyName: string
    :param DBProxyName: [REQUIRED]\nThe identifier of the DBProxyTarget to describe.\n

    :type TargetGroupName: string
    :param TargetGroupName: The identifier of the DBProxyTargetGroup to describe.

    :type Filters: list
    :param Filters: This parameter is not currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Targets': [
        {
            'TargetArn': 'string',
            'Endpoint': 'string',
            'TrackedClusterId': 'string',
            'RdsResourceId': 'string',
            'Port': 123,
            'Type': 'RDS_INSTANCE'|'RDS_SERVERLESS_ENDPOINT'|'TRACKED_CLUSTER',
            'TargetHealth': {
                'State': 'REGISTERING'|'AVAILABLE'|'UNAVAILABLE',
                'Reason': 'UNREACHABLE'|'CONNECTION_FAILED'|'AUTH_FAILURE'|'PENDING_PROXY_CAPACITY',
                'Description': 'string'
            }
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --

Targets (list) --
An arbitrary number of DBProxyTarget objects, containing details of the corresponding targets.

(dict) --

Note
This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.

Contains the details for an RDS Proxy target. It represents an RDS DB instance or Aurora DB cluster that the proxy can connect to. One or more targets are associated with an RDS Proxy target group.
This data type is used as a response element in the DescribeDBProxyTargets action.

TargetArn (string) --
The Amazon Resource Name (ARN) for the RDS DB instance or Aurora DB cluster.

Endpoint (string) --
The writer endpoint for the RDS DB instance or Aurora DB cluster.

TrackedClusterId (string) --
The DB cluster identifier when the target represents an Aurora DB cluster. This field is blank when the target represents an RDS DB instance.

RdsResourceId (string) --
The identifier representing the target. It can be the instance identifier for an RDS DB instance, or the cluster identifier for an Aurora DB cluster.

Port (integer) --
The port that the RDS Proxy uses to connect to the target RDS DB instance or Aurora DB cluster.

Type (string) --
Specifies the kind of database, such as an RDS DB instance or an Aurora DB cluster, that the target represents.

TargetHealth (dict) --
Information about the connection health of the RDS Proxy target.

State (string) --
The current state of the connection health lifecycle for the RDS Proxy target. The following is a typical lifecycle example for the states of an RDS Proxy target:

registering > unavailable > available > unavailable > available


Reason (string) --
The reason for the current health State of the RDS Proxy target.

Description (string) --
A description of the health of the RDS Proxy target. If the State is AVAILABLE , a description is not included.







Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .







Exceptions

RDS.Client.exceptions.DBProxyNotFoundFault
RDS.Client.exceptions.DBProxyTargetNotFoundFault
RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
RDS.Client.exceptions.InvalidDBProxyStateFault


    :return: {
        'Targets': [
            {
                'TargetArn': 'string',
                'Endpoint': 'string',
                'TrackedClusterId': 'string',
                'RdsResourceId': 'string',
                'Port': 123,
                'Type': 'RDS_INSTANCE'|'RDS_SERVERLESS_ENDPOINT'|'TRACKED_CLUSTER',
                'TargetHealth': {
                    'State': 'REGISTERING'|'AVAILABLE'|'UNAVAILABLE',
                    'Reason': 'UNREACHABLE'|'CONNECTION_FAILED'|'AUTH_FAILURE'|'PENDING_PROXY_CAPACITY',
                    'Description': 'string'
                }
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBProxyNotFoundFault
    RDS.Client.exceptions.DBProxyTargetNotFoundFault
    RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
    RDS.Client.exceptions.InvalidDBProxyStateFault
    
    """
    pass

def describe_db_security_groups(DBSecurityGroupName=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns a list of DBSecurityGroup descriptions. If a DBSecurityGroupName is specified, the list will contain only the descriptions of the specified DB security group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists settings for the specified security group.
    Expected Output:
    
    :example: response = client.describe_db_security_groups(
        DBSecurityGroupName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBSecurityGroupName: string
    :param DBSecurityGroupName: The name of the DB security group to return details for.

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBSecurityGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBSecurityGroups': [
        {
            'OwnerId': 'string',
            'DBSecurityGroupName': 'string',
            'DBSecurityGroupDescription': 'string',
            'VpcId': 'string',
            'EC2SecurityGroups': [
                {
                    'Status': 'string',
                    'EC2SecurityGroupName': 'string',
                    'EC2SecurityGroupId': 'string',
                    'EC2SecurityGroupOwnerId': 'string'
                },
            ],
            'IPRanges': [
                {
                    'Status': 'string',
                    'CIDRIP': 'string'
                },
            ],
            'DBSecurityGroupArn': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBSecurityGroups action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBSecurityGroups (list) --
A list of DBSecurityGroup instances.

(dict) --
Contains the details for an Amazon RDS DB security group.
This data type is used as a response element in the DescribeDBSecurityGroups action.

OwnerId (string) --
Provides the AWS ID of the owner of a specific DB security group.

DBSecurityGroupName (string) --
Specifies the name of the DB security group.

DBSecurityGroupDescription (string) --
Provides the description of the DB security group.

VpcId (string) --
Provides the VpcId of the DB security group.

EC2SecurityGroups (list) --
Contains a list of EC2SecurityGroup elements.

(dict) --
This data type is used as a response element in the following actions:

AuthorizeDBSecurityGroupIngress
DescribeDBSecurityGroups
RevokeDBSecurityGroupIngress


Status (string) --
Provides the status of the EC2 security group. Status can be "authorizing", "authorized", "revoking", and "revoked".

EC2SecurityGroupName (string) --
Specifies the name of the EC2 security group.

EC2SecurityGroupId (string) --
Specifies the id of the EC2 security group.

EC2SecurityGroupOwnerId (string) --
Specifies the AWS ID of the owner of the EC2 security group specified in the EC2SecurityGroupName field.





IPRanges (list) --
Contains a list of IPRange elements.

(dict) --
This data type is used as a response element in the DescribeDBSecurityGroups action.

Status (string) --
Specifies the status of the IP range. Status can be "authorizing", "authorized", "revoking", and "revoked".

CIDRIP (string) --
Specifies the IP range.





DBSecurityGroupArn (string) --
The Amazon Resource Name (ARN) for the DB security group.











Exceptions

RDS.Client.exceptions.DBSecurityGroupNotFoundFault

Examples
This example lists settings for the specified security group.
response = client.describe_db_security_groups(
    DBSecurityGroupName='mydbsecuritygroup',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'DBSecurityGroups': [
            {
                'OwnerId': 'string',
                'DBSecurityGroupName': 'string',
                'DBSecurityGroupDescription': 'string',
                'VpcId': 'string',
                'EC2SecurityGroups': [
                    {
                        'Status': 'string',
                        'EC2SecurityGroupName': 'string',
                        'EC2SecurityGroupId': 'string',
                        'EC2SecurityGroupOwnerId': 'string'
                    },
                ],
                'IPRanges': [
                    {
                        'Status': 'string',
                        'CIDRIP': 'string'
                    },
                ],
                'DBSecurityGroupArn': 'string'
            },
        ]
    }
    
    
    :returns: 
    AuthorizeDBSecurityGroupIngress
    DescribeDBSecurityGroups
    RevokeDBSecurityGroupIngress
    
    """
    pass

def describe_db_snapshot_attributes(DBSnapshotIdentifier=None):
    """
    Returns a list of DB snapshot attribute names and values for a manual DB snapshot.
    When sharing snapshots with other AWS accounts, DescribeDBSnapshotAttributes returns the restore attribute and a list of IDs for the AWS accounts that are authorized to copy or restore the manual DB snapshot. If all is included in the list of values for the restore attribute, then the manual DB snapshot is public and can be copied or restored by all AWS accounts.
    To add or remove access for an AWS account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the ModifyDBSnapshotAttribute API action.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists attributes for the specified DB snapshot.
    Expected Output:
    
    :example: response = client.describe_db_snapshot_attributes(
        DBSnapshotIdentifier='string'
    )
    
    
    :type DBSnapshotIdentifier: string
    :param DBSnapshotIdentifier: [REQUIRED]\nThe identifier for the DB snapshot to describe the attributes for.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBSnapshotAttributesResult': {
        'DBSnapshotIdentifier': 'string',
        'DBSnapshotAttributes': [
            {
                'AttributeName': 'string',
                'AttributeValues': [
                    'string',
                ]
            },
        ]
    }
}


Response Structure

(dict) --
DBSnapshotAttributesResult (dict) --Contains the results of a successful call to the DescribeDBSnapshotAttributes API action.
Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB snapshot. For more information, see the ModifyDBSnapshotAttribute API action.

DBSnapshotIdentifier (string) --The identifier of the manual DB snapshot that the attributes apply to.

DBSnapshotAttributes (list) --The list of attributes and values for the manual DB snapshot.

(dict) --Contains the name and values of a manual DB snapshot attribute
Manual DB snapshot attributes are used to authorize other AWS accounts to restore a manual DB snapshot. For more information, see the ModifyDBSnapshotAttribute API.

AttributeName (string) --The name of the manual DB snapshot attribute.
The attribute named restore refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the ModifyDBSnapshotAttribute API action.

AttributeValues (list) --The value or values for the manual DB snapshot attribute.
If the AttributeName field is set to restore , then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB snapshot. If a value of all is in the list, then the manual DB snapshot is public and available for any AWS account to copy or restore.

(string) --













Exceptions

RDS.Client.exceptions.DBSnapshotNotFoundFault

Examples
This example lists attributes for the specified DB snapshot.
response = client.describe_db_snapshot_attributes(
    DBSnapshotIdentifier='mydbsnapshot',
)

print(response)


Expected Output:
{
    'DBSnapshotAttributesResult': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSnapshotAttributesResult': {
            'DBSnapshotIdentifier': 'string',
            'DBSnapshotAttributes': [
                {
                    'AttributeName': 'string',
                    'AttributeValues': [
                        'string',
                    ]
                },
            ]
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBSnapshotNotFoundFault
    
    """
    pass

def describe_db_snapshots(DBInstanceIdentifier=None, DBSnapshotIdentifier=None, SnapshotType=None, Filters=None, MaxRecords=None, Marker=None, IncludeShared=None, IncludePublic=None, DbiResourceId=None):
    """
    Returns information about DB snapshots. This API action supports pagination.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists all manually-created, shared snapshots for the specified DB instance.
    Expected Output:
    
    :example: response = client.describe_db_snapshots(
        DBInstanceIdentifier='string',
        DBSnapshotIdentifier='string',
        SnapshotType='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string',
        IncludeShared=True|False,
        IncludePublic=True|False,
        DbiResourceId='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: The ID of the DB instance to retrieve the list of DB snapshots for. This parameter can\'t be used in conjunction with DBSnapshotIdentifier . This parameter isn\'t case-sensitive.\nConstraints:\n\nIf supplied, must match the identifier of an existing DBInstance.\n\n

    :type DBSnapshotIdentifier: string
    :param DBSnapshotIdentifier: A specific DB snapshot identifier to describe. This parameter can\'t be used in conjunction with DBInstanceIdentifier . This value is stored as a lowercase string.\nConstraints:\n\nIf supplied, must match the identifier of an existing DBSnapshot.\nIf this identifier is for an automated snapshot, the SnapshotType parameter must also be specified.\n\n

    :type SnapshotType: string
    :param SnapshotType: The type of snapshots to be returned. You can specify one of the following values:\n\nautomated - Return all DB snapshots that have been automatically taken by Amazon RDS for my AWS account.\nmanual - Return all DB snapshots that have been taken by my AWS account.\nshared - Return all manual DB snapshots that have been shared to my AWS account.\npublic - Return all DB snapshots that have been marked as public.\nawsbackup - Return the DB snapshots managed by the AWS Backup service. For information about AWS Backup, see the ` AWS Backup Developer Guide. https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html`__  The awsbackup type does not apply to Aurora.\n\nIf you don\'t specify a SnapshotType value, then both automated and manual snapshots are returned. Shared and public DB snapshots are not included in the returned results by default. You can include shared snapshots with these results by enabling the IncludeShared parameter. You can include public snapshots with these results by enabling the IncludePublic parameter.\nThe IncludeShared and IncludePublic parameters don\'t apply for SnapshotType values of manual or automated . The IncludePublic parameter doesn\'t apply when SnapshotType is set to shared . The IncludeShared parameter doesn\'t apply when SnapshotType is set to public .\n

    :type Filters: list
    :param Filters: A filter that specifies one or more DB snapshots to describe.\nSupported filters:\n\ndb-instance-id - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs).\ndb-snapshot-id - Accepts DB snapshot identifiers.\ndbi-resource-id - Accepts identifiers of source DB instances.\nsnapshot-type - Accepts types of DB snapshots.\nengine - Accepts names of database engines.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBSnapshots request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type IncludeShared: boolean
    :param IncludeShared: A value that indicates whether to include shared manual DB cluster snapshots from other AWS accounts that this AWS account has been given permission to copy or restore. By default, these snapshots are not included.\nYou can give an AWS account permission to restore a manual DB snapshot from another AWS account by using the ModifyDBSnapshotAttribute API action.\n

    :type IncludePublic: boolean
    :param IncludePublic: A value that indicates whether to include manual DB cluster snapshots that are public and can be copied or restored by any AWS account. By default, the public snapshots are not included.\nYou can share a manual DB snapshot as public by using the ModifyDBSnapshotAttribute API.\n

    :type DbiResourceId: string
    :param DbiResourceId: A specific DB resource ID to describe.

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBSnapshots': [
        {
            'DBSnapshotIdentifier': 'string',
            'DBInstanceIdentifier': 'string',
            'SnapshotCreateTime': datetime(2015, 1, 1),
            'Engine': 'string',
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'AvailabilityZone': 'string',
            'VpcId': 'string',
            'InstanceCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'SnapshotType': 'string',
            'Iops': 123,
            'OptionGroupName': 'string',
            'PercentProgress': 123,
            'SourceRegion': 'string',
            'SourceDBSnapshotIdentifier': 'string',
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'Encrypted': True|False,
            'KmsKeyId': 'string',
            'DBSnapshotArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DbiResourceId': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBSnapshots action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBSnapshots (list) --
A list of DBSnapshot instances.

(dict) --
Contains the details of an Amazon RDS DB snapshot.
This data type is used as a response element in the DescribeDBSnapshots action.

DBSnapshotIdentifier (string) --
Specifies the identifier for the DB snapshot.

DBInstanceIdentifier (string) --
Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

SnapshotCreateTime (datetime) --
Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

Engine (string) --
Specifies the name of the database engine.

AllocatedStorage (integer) --
Specifies the allocated storage size in gibibytes (GiB).

Status (string) --
Specifies the status of this DB snapshot.

Port (integer) --
Specifies the port that the database engine was listening on at the time of the snapshot.

AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.

VpcId (string) --
Provides the VPC ID associated with the DB snapshot.

InstanceCreateTime (datetime) --
Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

MasterUsername (string) --
Provides the master username for the DB snapshot.

EngineVersion (string) --
Specifies the version of the database engine.

LicenseModel (string) --
License model information for the restored DB instance.

SnapshotType (string) --
Provides the type of the DB snapshot.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.

OptionGroupName (string) --
Provides the option group name for the DB snapshot.

PercentProgress (integer) --
The percentage of the estimated data that has been transferred.

SourceRegion (string) --
The AWS Region that the DB snapshot was created in or copied from.

SourceDBSnapshotIdentifier (string) --
The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has value in case of cross-customer or cross-region copy.

StorageType (string) --
Specifies the storage type associated with DB snapshot.

TdeCredentialArn (string) --
The ARN from the key store with which to associate the instance for TDE encryption.

Encrypted (boolean) --
Specifies whether the DB snapshot is encrypted.

KmsKeyId (string) --
If Encrypted is true, the AWS KMS key identifier for the encrypted DB snapshot.

DBSnapshotArn (string) --
The Amazon Resource Name (ARN) for the DB snapshot.

Timezone (string) --
The time zone of the DB snapshot. In most cases, the Timezone element is empty. Timezone content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.

ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB snapshot was created.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DbiResourceId (string) --
The identifier for the source DB instance, which can\'t be changed and which is unique to an AWS Region.











Exceptions

RDS.Client.exceptions.DBSnapshotNotFoundFault

Examples
This example lists all manually-created, shared snapshots for the specified DB instance.
response = client.describe_db_snapshots(
    DBInstanceIdentifier='mymysqlinstance',
    IncludePublic=False,
    IncludeShared=True,
    SnapshotType='manual',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'DBSnapshots': [
            {
                'DBSnapshotIdentifier': 'string',
                'DBInstanceIdentifier': 'string',
                'SnapshotCreateTime': datetime(2015, 1, 1),
                'Engine': 'string',
                'AllocatedStorage': 123,
                'Status': 'string',
                'Port': 123,
                'AvailabilityZone': 'string',
                'VpcId': 'string',
                'InstanceCreateTime': datetime(2015, 1, 1),
                'MasterUsername': 'string',
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'SnapshotType': 'string',
                'Iops': 123,
                'OptionGroupName': 'string',
                'PercentProgress': 123,
                'SourceRegion': 'string',
                'SourceDBSnapshotIdentifier': 'string',
                'StorageType': 'string',
                'TdeCredentialArn': 'string',
                'Encrypted': True|False,
                'KmsKeyId': 'string',
                'DBSnapshotArn': 'string',
                'Timezone': 'string',
                'IAMDatabaseAuthenticationEnabled': True|False,
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ],
                'DbiResourceId': 'string'
            },
        ]
    }
    
    
    :returns: 
    CreateDBInstance
    ModifyDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceFromS3
    RestoreDBInstanceToPointInTime
    
    """
    pass

def describe_db_subnet_groups(DBSubnetGroupName=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.
    For an overview of CIDR ranges, go to the Wikipedia Tutorial .
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information about the specified DB subnet group.
    Expected Output:
    
    :example: response = client.describe_db_subnet_groups(
        DBSubnetGroupName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: The name of the DB subnet group to return details for.

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeDBSubnetGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'DBSubnetGroups': [
        {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeDBSubnetGroups action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

DBSubnetGroups (list) --
A list of DBSubnetGroup instances.

(dict) --
Contains the details of an Amazon RDS DB subnet group.
This data type is used as a response element in the DescribeDBSubnetGroups action.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.











Exceptions

RDS.Client.exceptions.DBSubnetGroupNotFoundFault

Examples
This example lists information about the specified DB subnet group.
response = client.describe_db_subnet_groups(
    DBSubnetGroupName='mydbsubnetgroup',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'DBSubnetGroups': [
            {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
        ]
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBSubnetGroupNotFoundFault
    
    """
    pass

def describe_engine_default_cluster_parameters(DBParameterGroupFamily=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns the default engine and system parameter information for the cluster database engine.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Examples
    This example lists default parameters for the specified DB cluster engine.
    Expected Output:
    
    :example: response = client.describe_engine_default_cluster_parameters(
        DBParameterGroupFamily='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBParameterGroupFamily: string
    :param DBParameterGroupFamily: [REQUIRED]\nThe name of the DB cluster parameter group family to return engine parameter information for.\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeEngineDefaultClusterParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'EngineDefaults': {
        'DBParameterGroupFamily': 'string',
        'Marker': 'string',
        'Parameters': [
            {
                'ParameterName': 'string',
                'ParameterValue': 'string',
                'Description': 'string',
                'Source': 'string',
                'ApplyType': 'string',
                'DataType': 'string',
                'AllowedValues': 'string',
                'IsModifiable': True|False,
                'MinimumEngineVersion': 'string',
                'ApplyMethod': 'immediate'|'pending-reboot',
                'SupportedEngineModes': [
                    'string',
                ]
            },
        ]
    }
}


Response Structure

(dict) --

EngineDefaults (dict) --
Contains the result of a successful invocation of the DescribeEngineDefaultParameters action.

DBParameterGroupFamily (string) --
Specifies the name of the DB parameter group family that the engine default parameters apply to.

Marker (string) --
An optional pagination token provided by a previous EngineDefaults request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

Parameters (list) --
Contains a list of engine default parameters.

(dict) --
This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions.
This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.

ParameterName (string) --
Specifies the name of the parameter.

ParameterValue (string) --
Specifies the value of the parameter.

Description (string) --
Provides a description of the parameter.

Source (string) --
Indicates the source of the parameter value.

ApplyType (string) --
Specifies the engine specific parameters type.

DataType (string) --
Specifies the valid data type for the parameter.

AllowedValues (string) --
Specifies the valid range of values for the parameter.

IsModifiable (boolean) --
Indicates whether (true ) or not (false ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.

MinimumEngineVersion (string) --
The earliest engine version to which the parameter can apply.

ApplyMethod (string) --
Indicates when to apply parameter updates.

SupportedEngineModes (list) --
The valid DB engine modes.

(string) --














Examples
This example lists default parameters for the specified DB cluster engine.
response = client.describe_engine_default_cluster_parameters(
    DBParameterGroupFamily='aurora5.6',
)

print(response)


Expected Output:
{
    'EngineDefaults': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'EngineDefaults': {
            'DBParameterGroupFamily': 'string',
            'Marker': 'string',
            'Parameters': [
                {
                    'ParameterName': 'string',
                    'ParameterValue': 'string',
                    'Description': 'string',
                    'Source': 'string',
                    'ApplyType': 'string',
                    'DataType': 'string',
                    'AllowedValues': 'string',
                    'IsModifiable': True|False,
                    'MinimumEngineVersion': 'string',
                    'ApplyMethod': 'immediate'|'pending-reboot',
                    'SupportedEngineModes': [
                        'string',
                    ]
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_engine_default_parameters(DBParameterGroupFamily=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns the default engine and system parameter information for the specified database engine.
    See also: AWS API Documentation
    
    Examples
    This example lists default parameters for the specified DB engine.
    Expected Output:
    
    :example: response = client.describe_engine_default_parameters(
        DBParameterGroupFamily='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type DBParameterGroupFamily: string
    :param DBParameterGroupFamily: [REQUIRED]\nThe name of the DB parameter group family.\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeEngineDefaultParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'EngineDefaults': {
        'DBParameterGroupFamily': 'string',
        'Marker': 'string',
        'Parameters': [
            {
                'ParameterName': 'string',
                'ParameterValue': 'string',
                'Description': 'string',
                'Source': 'string',
                'ApplyType': 'string',
                'DataType': 'string',
                'AllowedValues': 'string',
                'IsModifiable': True|False,
                'MinimumEngineVersion': 'string',
                'ApplyMethod': 'immediate'|'pending-reboot',
                'SupportedEngineModes': [
                    'string',
                ]
            },
        ]
    }
}


Response Structure

(dict) --

EngineDefaults (dict) --
Contains the result of a successful invocation of the DescribeEngineDefaultParameters action.

DBParameterGroupFamily (string) --
Specifies the name of the DB parameter group family that the engine default parameters apply to.

Marker (string) --
An optional pagination token provided by a previous EngineDefaults request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

Parameters (list) --
Contains a list of engine default parameters.

(dict) --
This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions.
This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.

ParameterName (string) --
Specifies the name of the parameter.

ParameterValue (string) --
Specifies the value of the parameter.

Description (string) --
Provides a description of the parameter.

Source (string) --
Indicates the source of the parameter value.

ApplyType (string) --
Specifies the engine specific parameters type.

DataType (string) --
Specifies the valid data type for the parameter.

AllowedValues (string) --
Specifies the valid range of values for the parameter.

IsModifiable (boolean) --
Indicates whether (true ) or not (false ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.

MinimumEngineVersion (string) --
The earliest engine version to which the parameter can apply.

ApplyMethod (string) --
Indicates when to apply parameter updates.

SupportedEngineModes (list) --
The valid DB engine modes.

(string) --














Examples
This example lists default parameters for the specified DB engine.
response = client.describe_engine_default_parameters(
    DBParameterGroupFamily='mysql5.6',
)

print(response)


Expected Output:
{
    'EngineDefaults': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'EngineDefaults': {
            'DBParameterGroupFamily': 'string',
            'Marker': 'string',
            'Parameters': [
                {
                    'ParameterName': 'string',
                    'ParameterValue': 'string',
                    'Description': 'string',
                    'Source': 'string',
                    'ApplyType': 'string',
                    'DataType': 'string',
                    'AllowedValues': 'string',
                    'IsModifiable': True|False,
                    'MinimumEngineVersion': 'string',
                    'ApplyMethod': 'immediate'|'pending-reboot',
                    'SupportedEngineModes': [
                        'string',
                    ]
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_event_categories(SourceType=None, Filters=None):
    """
    Displays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in the Events topic in the Amazon RDS User Guide.
    See also: AWS API Documentation
    
    Examples
    This example lists all DB instance event categories.
    Expected Output:
    
    :example: response = client.describe_event_categories(
        SourceType='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type SourceType: string
    :param SourceType: The type of source that is generating the events.\nValid values: db-instance | db-parameter-group | db-security-group | db-snapshot\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'EventCategoriesMapList': [
        {
            'SourceType': 'string',
            'EventCategories': [
                'string',
            ]
        },
    ]
}


Response Structure

(dict) --
Data returned from the DescribeEventCategories action.

EventCategoriesMapList (list) --
A list of EventCategoriesMap data types.

(dict) --
Contains the results of a successful invocation of the DescribeEventCategories action.

SourceType (string) --
The source type that the returned categories belong to

EventCategories (list) --
The event categories for the specified source type

(string) --












Examples
This example lists all DB instance event categories.
response = client.describe_event_categories(
    SourceType='db-instance',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'EventCategoriesMapList': [
            {
                'SourceType': 'string',
                'EventCategories': [
                    'string',
                ]
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_event_subscriptions(SubscriptionName=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Lists all the subscription descriptions for a customer account. The description for a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID, CreationTime, and Status.
    If you specify a SubscriptionName, lists the description for that subscription.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information for the specified DB event notification subscription.
    Expected Output:
    
    :example: response = client.describe_event_subscriptions(
        SubscriptionName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type SubscriptionName: string
    :param SubscriptionName: The name of the RDS event notification subscription you want to describe.

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'EventSubscriptionsList': [
        {
            'CustomerAwsId': 'string',
            'CustSubscriptionId': 'string',
            'SnsTopicArn': 'string',
            'Status': 'string',
            'SubscriptionCreationTime': 'string',
            'SourceType': 'string',
            'SourceIdsList': [
                'string',
            ],
            'EventCategoriesList': [
                'string',
            ],
            'Enabled': True|False,
            'EventSubscriptionArn': 'string'
        },
    ]
}


Response Structure

(dict) --
Data returned by the DescribeEventSubscriptions action.

Marker (string) --
An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

EventSubscriptionsList (list) --
A list of EventSubscriptions data types.

(dict) --
Contains the results of a successful invocation of the DescribeEventSubscriptions action.

CustomerAwsId (string) --
The AWS customer account associated with the RDS event notification subscription.

CustSubscriptionId (string) --
The RDS event notification subscription Id.

SnsTopicArn (string) --
The topic ARN of the RDS event notification subscription.

Status (string) --
The status of the RDS event notification subscription.
Constraints:
Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist
The status "no-permission" indicates that RDS no longer has permission to post to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.

SubscriptionCreationTime (string) --
The time the RDS event notification subscription was created.

SourceType (string) --
The source type for the RDS event notification subscription.

SourceIdsList (list) --
A list of source IDs for the RDS event notification subscription.

(string) --


EventCategoriesList (list) --
A list of event categories for the RDS event notification subscription.

(string) --


Enabled (boolean) --
A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.

EventSubscriptionArn (string) --
The Amazon Resource Name (ARN) for the event subscription.











Exceptions

RDS.Client.exceptions.SubscriptionNotFoundFault

Examples
This example lists information for the specified DB event notification subscription.
response = client.describe_event_subscriptions(
    SubscriptionName='mymysqleventsubscription',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'EventSubscriptionsList': [
            {
                'CustomerAwsId': 'string',
                'CustSubscriptionId': 'string',
                'SnsTopicArn': 'string',
                'Status': 'string',
                'SubscriptionCreationTime': 'string',
                'SourceType': 'string',
                'SourceIdsList': [
                    'string',
                ],
                'EventCategoriesList': [
                    'string',
                ],
                'Enabled': True|False,
                'EventSubscriptionArn': 'string'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_events(SourceIdentifier=None, SourceType=None, StartTime=None, EndTime=None, Duration=None, EventCategories=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. Events specific to a particular DB instance, DB security group, database snapshot, or DB parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.
    See also: AWS API Documentation
    
    Examples
    This example lists information for all backup-related events for the specified DB instance for the past 7 days (7 days * 24 hours * 60 minutes = 10,080 minutes).
    Expected Output:
    
    :example: response = client.describe_events(
        SourceIdentifier='string',
        SourceType='db-instance'|'db-parameter-group'|'db-security-group'|'db-snapshot'|'db-cluster'|'db-cluster-snapshot',
        StartTime=datetime(2015, 1, 1),
        EndTime=datetime(2015, 1, 1),
        Duration=123,
        EventCategories=[
            'string',
        ],
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type SourceIdentifier: string
    :param SourceIdentifier: The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.\nConstraints:\n\nIf SourceIdentifier is supplied, SourceType must also be provided.\nIf the source type is DBInstance , then a DBInstanceIdentifier must be supplied.\nIf the source type is DBSecurityGroup , a DBSecurityGroupName must be supplied.\nIf the source type is DBParameterGroup , a DBParameterGroupName must be supplied.\nIf the source type is DBSnapshot , a DBSnapshotIdentifier must be supplied.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\n

    :type SourceType: string
    :param SourceType: The event source to retrieve events for. If no value is specified, all events are returned.

    :type StartTime: datetime
    :param StartTime: The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the ISO8601 Wikipedia page.\nExample: 2009-07-08T18:00Z\n

    :type EndTime: datetime
    :param EndTime: The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the ISO8601 Wikipedia page.\nExample: 2009-07-08T18:00Z\n

    :type Duration: integer
    :param Duration: The number of minutes to retrieve events for.\nDefault: 60\n

    :type EventCategories: list
    :param EventCategories: A list of event categories that trigger notifications for a event notification subscription.\n\n(string) --\n\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeEvents request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'Events': [
        {
            'SourceIdentifier': 'string',
            'SourceType': 'db-instance'|'db-parameter-group'|'db-security-group'|'db-snapshot'|'db-cluster'|'db-cluster-snapshot',
            'Message': 'string',
            'EventCategories': [
                'string',
            ],
            'Date': datetime(2015, 1, 1),
            'SourceArn': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeEvents action.

Marker (string) --
An optional pagination token provided by a previous Events request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

Events (list) --
A list of Event instances.

(dict) --
This data type is used as a response element in the DescribeEvents action.

SourceIdentifier (string) --
Provides the identifier for the source of the event.

SourceType (string) --
Specifies the source type for this event.

Message (string) --
Provides the text of this event.

EventCategories (list) --
Specifies the category for the event.

(string) --


Date (datetime) --
Specifies the date and time of the event.

SourceArn (string) --
The Amazon Resource Name (ARN) for the event.











Examples
This example lists information for all backup-related events for the specified DB instance for the past 7 days (7 days * 24 hours * 60 minutes = 10,080 minutes).
response = client.describe_events(
    Duration=10080,
    EventCategories=[
        'backup',
    ],
    SourceIdentifier='mymysqlinstance',
    SourceType='db-instance',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'Events': [
            {
                'SourceIdentifier': 'string',
                'SourceType': 'db-instance'|'db-parameter-group'|'db-security-group'|'db-snapshot'|'db-cluster'|'db-cluster-snapshot',
                'Message': 'string',
                'EventCategories': [
                    'string',
                ],
                'Date': datetime(2015, 1, 1),
                'SourceArn': 'string'
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_export_tasks(ExportTaskIdentifier=None, SourceArn=None, Filters=None, Marker=None, MaxRecords=None):
    """
    Returns information about a snapshot export to Amazon S3. This API operation supports pagination.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_export_tasks(
        ExportTaskIdentifier='string',
        SourceArn='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        Marker='string',
        MaxRecords=123
    )
    
    
    :type ExportTaskIdentifier: string
    :param ExportTaskIdentifier: The identifier of the snapshot export task to be described.

    :type SourceArn: string
    :param SourceArn: The Amazon Resource Name (ARN) of the snapshot exported to Amazon S3.

    :type Filters: list
    :param Filters: Filters specify one or more snapshot exports to describe. The filters are specified as name-value pairs that define what to include in the output.\nSupported filters include the following:\n\nexport-task-identifier - An identifier for the snapshot export task.\ns3-bucket - The Amazon S3 bucket the snapshot is exported to.\nsource-arn - The Amazon Resource Name (ARN) of the snapshot exported to Amazon S3\nstatus - The status of the export task.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeExportTasks request. If you specify this parameter, the response includes only records beyond the marker, up to the value specified by the MaxRecords parameter.

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified value, a pagination token called a marker is included in the response. You can use the marker in a later DescribeExportTasks request to retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'ExportTasks': [
        {
            'ExportTaskIdentifier': 'string',
            'SourceArn': 'string',
            'ExportOnly': [
                'string',
            ],
            'SnapshotTime': datetime(2015, 1, 1),
            'TaskStartTime': datetime(2015, 1, 1),
            'TaskEndTime': datetime(2015, 1, 1),
            'S3Bucket': 'string',
            'S3Prefix': 'string',
            'IamRoleArn': 'string',
            'KmsKeyId': 'string',
            'Status': 'string',
            'PercentProgress': 123,
            'TotalExtractedDataInGB': 123,
            'FailureCause': 'string',
            'WarningMessage': 'string'
        },
    ]
}


Response Structure

(dict) --

Marker (string) --
A pagination token that can be used in a later DescribeExportTasks request. A marker is used for pagination to identify the location to begin output for the next response of DescribeExportTasks .

ExportTasks (list) --
Information about an export of a snapshot to Amazon S3.

(dict) --
Contains the details of a snapshot export to Amazon S3.
This data type is used as a response element in the DescribeExportTasks action.

ExportTaskIdentifier (string) --
A unique identifier for the snapshot export task. This ID isn\'t an identifier for the Amazon S3 bucket where the snapshot is exported to.

SourceArn (string) --
The Amazon Resource Name (ARN) of the snapshot exported to Amazon S3.

ExportOnly (list) --
The data exported from the snapshot. Valid values are the following:

database - Export all the data from a specified database.
database.table table-name - Export a table of the snapshot. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.
database.schema schema-name - Export a database schema of the snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.
database.schema.table table-name - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.


(string) --


SnapshotTime (datetime) --
The time that the snapshot was created.

TaskStartTime (datetime) --
The time that the snapshot export task started.

TaskEndTime (datetime) --
The time that the snapshot export task completed.

S3Bucket (string) --
The Amazon S3 bucket that the snapshot is exported to.

S3Prefix (string) --
The Amazon S3 bucket prefix that is the file name and path of the exported snapshot.

IamRoleArn (string) --
The name of the IAM role that is used to write to Amazon S3 when exporting a snapshot.

KmsKeyId (string) --
The ID of the AWS KMS key that is used to encrypt the snapshot when it\'s exported to Amazon S3. The KMS key ID is the Amazon Resource Name (ARN), the KMS key identifier, or the KMS key alias for the KMS encryption key. The IAM role used for the snapshot export must have encryption and decryption permissions to use this KMS key.

Status (string) --
The progress status of the export task.

PercentProgress (integer) --
The progress of the snapshot export task as a percentage.

TotalExtractedDataInGB (integer) --
The total amount of data exported, in gigabytes.

FailureCause (string) --
The reason the export failed, if it failed.

WarningMessage (string) --
A warning about the snapshot export task.











Exceptions

RDS.Client.exceptions.ExportTaskNotFoundFault


    :return: {
        'Marker': 'string',
        'ExportTasks': [
            {
                'ExportTaskIdentifier': 'string',
                'SourceArn': 'string',
                'ExportOnly': [
                    'string',
                ],
                'SnapshotTime': datetime(2015, 1, 1),
                'TaskStartTime': datetime(2015, 1, 1),
                'TaskEndTime': datetime(2015, 1, 1),
                'S3Bucket': 'string',
                'S3Prefix': 'string',
                'IamRoleArn': 'string',
                'KmsKeyId': 'string',
                'Status': 'string',
                'PercentProgress': 123,
                'TotalExtractedDataInGB': 123,
                'FailureCause': 'string',
                'WarningMessage': 'string'
            },
        ]
    }
    
    
    :returns: 
    database - Export all the data from a specified database.
    database.table table-name - Export a table of the snapshot. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.
    database.schema schema-name - Export a database schema of the snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.
    database.schema.table table-name - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.
    
    """
    pass

def describe_global_clusters(GlobalClusterIdentifier=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns information about Aurora global database clusters. This API supports pagination.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_global_clusters(
        GlobalClusterIdentifier='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn\'t case-sensitive.\nConstraints:\n\nIf supplied, must match an existing DBClusterIdentifier.\n\n

    :type Filters: list
    :param Filters: A filter that specifies one or more global DB clusters to describe.\nSupported filters:\n\ndb-cluster-id - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB clusters identified by these ARNs.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeGlobalClusters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'GlobalClusters': [
        {
            'GlobalClusterIdentifier': 'string',
            'GlobalClusterResourceId': 'string',
            'GlobalClusterArn': 'string',
            'Status': 'string',
            'Engine': 'string',
            'EngineVersion': 'string',
            'DatabaseName': 'string',
            'StorageEncrypted': True|False,
            'DeletionProtection': True|False,
            'GlobalClusterMembers': [
                {
                    'DBClusterArn': 'string',
                    'Readers': [
                        'string',
                    ],
                    'IsWriter': True|False
                },
            ]
        },
    ]
}


Response Structure

(dict) --

Marker (string) --
An optional pagination token provided by a previous DescribeGlobalClusters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

GlobalClusters (list) --
The list of global clusters returned by this request.

(dict) --
A data type representing an Aurora global database.

GlobalClusterIdentifier (string) --
Contains a user-supplied global database cluster identifier. This identifier is the unique key that identifies a global database cluster.

GlobalClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

GlobalClusterArn (string) --
The Amazon Resource Name (ARN) for the global database cluster.

Status (string) --
Specifies the current state of this global database cluster.

Engine (string) --
The Aurora database engine used by the global database cluster.

EngineVersion (string) --
Indicates the database engine version.

DatabaseName (string) --
The default database name within the new global database cluster.

StorageEncrypted (boolean) --
The storage encryption setting for the global database cluster.

DeletionProtection (boolean) --
The deletion protection setting for the new global database cluster.

GlobalClusterMembers (list) --
The list of cluster IDs for secondary clusters within the global database cluster. Currently limited to 1 item.

(dict) --
A data structure with information about any primary and secondary clusters associated with an Aurora global database.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for each Aurora cluster.

Readers (list) --
The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global database.

(string) --


IsWriter (boolean) --
Specifies whether the Aurora cluster is the primary cluster (that is, has read-write capability) for the Aurora global database with which it is associated.















Exceptions

RDS.Client.exceptions.GlobalClusterNotFoundFault


    :return: {
        'Marker': 'string',
        'GlobalClusters': [
            {
                'GlobalClusterIdentifier': 'string',
                'GlobalClusterResourceId': 'string',
                'GlobalClusterArn': 'string',
                'Status': 'string',
                'Engine': 'string',
                'EngineVersion': 'string',
                'DatabaseName': 'string',
                'StorageEncrypted': True|False,
                'DeletionProtection': True|False,
                'GlobalClusterMembers': [
                    {
                        'DBClusterArn': 'string',
                        'Readers': [
                            'string',
                        ],
                        'IsWriter': True|False
                    },
                ]
            },
        ]
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_installation_media(InstallationMediaId=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Describes the available installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_installation_media(
        InstallationMediaId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type InstallationMediaId: string
    :param InstallationMediaId: The installation medium ID.

    :type Filters: list
    :param Filters: A filter that specifies one or more installation media to describe. Supported filters include the following:\n\ncustom-availability-zone-id - Accepts custom Availability Zone (AZ) identifiers. The results list includes information about only the custom AZs identified by these identifiers.\nengine - Accepts database engines. The results list includes information about only the database engines identified by these identifiers. For more information about the valid engines for installation media, see ImportInstallationMedia .\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: An optional pagination token provided by a previous DescribeInstallationMedia request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'InstallationMedia': [
        {
            'InstallationMediaId': 'string',
            'CustomAvailabilityZoneId': 'string',
            'Engine': 'string',
            'EngineVersion': 'string',
            'EngineInstallationMediaPath': 'string',
            'OSInstallationMediaPath': 'string',
            'Status': 'string',
            'FailureCause': {
                'Message': 'string'
            }
        },
    ]
}


Response Structure

(dict) --

Marker (string) --
An optional pagination token provided by a previous  DescribeInstallationMedia request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

InstallationMedia (list) --
The list of  InstallationMedia objects for the AWS account.

(dict) --
Contains the installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.

InstallationMediaId (string) --
The installation medium ID.

CustomAvailabilityZoneId (string) --
The custom Availability Zone (AZ) that contains the installation media.

Engine (string) --
The DB engine.

EngineVersion (string) --
The engine version of the DB engine.

EngineInstallationMediaPath (string) --
The path to the installation medium for the DB engine.

OSInstallationMediaPath (string) --
The path to the installation medium for the operating system associated with the DB engine.

Status (string) --
The status of the installation medium.

FailureCause (dict) --
If an installation media failure occurred, the cause of the failure.

Message (string) --
The reason that an installation media import failed.













Exceptions

RDS.Client.exceptions.InstallationMediaNotFoundFault


    :return: {
        'Marker': 'string',
        'InstallationMedia': [
            {
                'InstallationMediaId': 'string',
                'CustomAvailabilityZoneId': 'string',
                'Engine': 'string',
                'EngineVersion': 'string',
                'EngineInstallationMediaPath': 'string',
                'OSInstallationMediaPath': 'string',
                'Status': 'string',
                'FailureCause': {
                    'Message': 'string'
                }
            },
        ]
    }
    
    
    :returns: 
    RDS.Client.exceptions.InstallationMediaNotFoundFault
    
    """
    pass

def describe_option_group_options(EngineName=None, MajorEngineVersion=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Describes all available options.
    See also: AWS API Documentation
    
    Examples
    This example lists information for all option group options for the specified DB engine.
    Expected Output:
    
    :example: response = client.describe_option_group_options(
        EngineName='string',
        MajorEngineVersion='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type EngineName: string
    :param EngineName: [REQUIRED]\nA required parameter. Options available for the given engine name are described.\n

    :type MajorEngineVersion: string
    :param MajorEngineVersion: If specified, filters the results to include only options for the specified major engine version.

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'OptionGroupOptions': [
        {
            'Name': 'string',
            'Description': 'string',
            'EngineName': 'string',
            'MajorEngineVersion': 'string',
            'MinimumRequiredMinorEngineVersion': 'string',
            'PortRequired': True|False,
            'DefaultPort': 123,
            'OptionsDependedOn': [
                'string',
            ],
            'OptionsConflictsWith': [
                'string',
            ],
            'Persistent': True|False,
            'Permanent': True|False,
            'RequiresAutoMinorEngineVersionUpgrade': True|False,
            'VpcOnly': True|False,
            'SupportsOptionVersionDowngrade': True|False,
            'OptionGroupOptionSettings': [
                {
                    'SettingName': 'string',
                    'SettingDescription': 'string',
                    'DefaultValue': 'string',
                    'ApplyType': 'string',
                    'AllowedValues': 'string',
                    'IsModifiable': True|False,
                    'IsRequired': True|False,
                    'MinimumEngineVersionPerAllowedValue': [
                        {
                            'AllowedValue': 'string',
                            'MinimumEngineVersion': 'string'
                        },
                    ]
                },
            ],
            'OptionGroupOptionVersions': [
                {
                    'Version': 'string',
                    'IsDefault': True|False
                },
            ]
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --

OptionGroupOptions (list) --
List of available option group options.

(dict) --
Available option.

Name (string) --
The name of the option.

Description (string) --
The description of the option.

EngineName (string) --
The name of the engine that this option can be applied to.

MajorEngineVersion (string) --
Indicates the major engine version that the option is available for.

MinimumRequiredMinorEngineVersion (string) --
The minimum required engine version for the option to be applied.

PortRequired (boolean) --
Specifies whether the option requires a port.

DefaultPort (integer) --
If the option requires a port, specifies the default port for the option.

OptionsDependedOn (list) --
The options that are prerequisites for this option.

(string) --


OptionsConflictsWith (list) --
The options that conflict with this option.

(string) --


Persistent (boolean) --
Persistent options can\'t be removed from an option group while DB instances are associated with the option group. If you disassociate all DB instances from the option group, your can remove the persistent option from the option group.

Permanent (boolean) --
Permanent options can never be removed from an option group. An option group containing a permanent option can\'t be removed from a DB instance.

RequiresAutoMinorEngineVersionUpgrade (boolean) --
If true, you must enable the Auto Minor Version Upgrade setting for your DB instance before you can use this option. You can enable Auto Minor Version Upgrade when you first create your DB instance, or by modifying your DB instance later.

VpcOnly (boolean) --
If true, you can only use this option with a DB instance that is in a VPC.

SupportsOptionVersionDowngrade (boolean) --
If true, you can change the option to an earlier version of the option. This only applies to options that have different versions available.

OptionGroupOptionSettings (list) --
The option settings that are available (and the default value) for each option in an option group.

(dict) --
Option group option settings are used to display settings available for each option with their default values and other information. These values are used with the DescribeOptionGroupOptions action.

SettingName (string) --
The name of the option group option.

SettingDescription (string) --
The description of the option group option.

DefaultValue (string) --
The default value for the option group option.

ApplyType (string) --
The DB engine specific parameter type for the option group option.

AllowedValues (string) --
Indicates the acceptable values for the option group option.

IsModifiable (boolean) --
Boolean value where true indicates that this option group option can be changed from the default value.

IsRequired (boolean) --
Boolean value where true indicates that a value must be specified for this option setting of the option group option.

MinimumEngineVersionPerAllowedValue (list) --
The minimum DB engine version required for the corresponding allowed value for this option setting.

(dict) --
The minimum DB engine version required for each corresponding allowed value for an option setting.

AllowedValue (string) --
The allowed value for an option setting.

MinimumEngineVersion (string) --
The minimum DB engine version required for the allowed value.









OptionGroupOptionVersions (list) --
The versions that are available for the option.

(dict) --
The version for an option. Option group option versions are returned by the DescribeOptionGroupOptions action.

Version (string) --
The version of the option.

IsDefault (boolean) --
True if the version is the default version of the option, and otherwise false.









Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .







Examples
This example lists information for all option group options for the specified DB engine.
response = client.describe_option_group_options(
    EngineName='mysql',
    MajorEngineVersion='5.6',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'OptionGroupOptions': [
            {
                'Name': 'string',
                'Description': 'string',
                'EngineName': 'string',
                'MajorEngineVersion': 'string',
                'MinimumRequiredMinorEngineVersion': 'string',
                'PortRequired': True|False,
                'DefaultPort': 123,
                'OptionsDependedOn': [
                    'string',
                ],
                'OptionsConflictsWith': [
                    'string',
                ],
                'Persistent': True|False,
                'Permanent': True|False,
                'RequiresAutoMinorEngineVersionUpgrade': True|False,
                'VpcOnly': True|False,
                'SupportsOptionVersionDowngrade': True|False,
                'OptionGroupOptionSettings': [
                    {
                        'SettingName': 'string',
                        'SettingDescription': 'string',
                        'DefaultValue': 'string',
                        'ApplyType': 'string',
                        'AllowedValues': 'string',
                        'IsModifiable': True|False,
                        'IsRequired': True|False,
                        'MinimumEngineVersionPerAllowedValue': [
                            {
                                'AllowedValue': 'string',
                                'MinimumEngineVersion': 'string'
                            },
                        ]
                    },
                ],
                'OptionGroupOptionVersions': [
                    {
                        'Version': 'string',
                        'IsDefault': True|False
                    },
                ]
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_option_groups(OptionGroupName=None, Filters=None, Marker=None, MaxRecords=None, EngineName=None, MajorEngineVersion=None):
    """
    Describes the available option groups.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information for all option groups for the specified DB engine.
    Expected Output:
    
    :example: response = client.describe_option_groups(
        OptionGroupName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        Marker='string',
        MaxRecords=123,
        EngineName='string',
        MajorEngineVersion='string'
    )
    
    
    :type OptionGroupName: string
    :param OptionGroupName: The name of the option group to describe. Can\'t be supplied together with EngineName or MajorEngineVersion.

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeOptionGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type EngineName: string
    :param EngineName: Filters the list of option groups to only include groups associated with a specific database engine.

    :type MajorEngineVersion: string
    :param MajorEngineVersion: Filters the list of option groups to only include groups associated with a specific database engine version. If specified, then EngineName must also be specified.

    :rtype: dict

ReturnsResponse Syntax
{
    'OptionGroupsList': [
        {
            'OptionGroupName': 'string',
            'OptionGroupDescription': 'string',
            'EngineName': 'string',
            'MajorEngineVersion': 'string',
            'Options': [
                {
                    'OptionName': 'string',
                    'OptionDescription': 'string',
                    'Persistent': True|False,
                    'Permanent': True|False,
                    'Port': 123,
                    'OptionVersion': 'string',
                    'OptionSettings': [
                        {
                            'Name': 'string',
                            'Value': 'string',
                            'DefaultValue': 'string',
                            'Description': 'string',
                            'ApplyType': 'string',
                            'DataType': 'string',
                            'AllowedValues': 'string',
                            'IsModifiable': True|False,
                            'IsCollection': True|False
                        },
                    ],
                    'DBSecurityGroupMemberships': [
                        {
                            'DBSecurityGroupName': 'string',
                            'Status': 'string'
                        },
                    ],
                    'VpcSecurityGroupMemberships': [
                        {
                            'VpcSecurityGroupId': 'string',
                            'Status': 'string'
                        },
                    ]
                },
            ],
            'AllowsVpcAndNonVpcInstanceMemberships': True|False,
            'VpcId': 'string',
            'OptionGroupArn': 'string'
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --
List of option groups.

OptionGroupsList (list) --
List of option groups.

(dict) --

OptionGroupName (string) --
Specifies the name of the option group.

OptionGroupDescription (string) --
Provides a description of the option group.

EngineName (string) --
Indicates the name of the engine that this option group can be applied to.

MajorEngineVersion (string) --
Indicates the major engine version associated with this option group.

Options (list) --
Indicates what options are available in the option group.

(dict) --
Option details.

OptionName (string) --
The name of the option.

OptionDescription (string) --
The description of the option.

Persistent (boolean) --
Indicate if this option is persistent.

Permanent (boolean) --
Indicate if this option is permanent.

Port (integer) --
If required, the port configured for this option to use.

OptionVersion (string) --
The version of the option.

OptionSettings (list) --
The option settings for this option.

(dict) --
Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.

Name (string) --
The name of the option that has settings that you can set.

Value (string) --
The current value of the option setting.

DefaultValue (string) --
The default value of the option setting.

Description (string) --
The description of the option setting.

ApplyType (string) --
The DB engine specific parameter type.

DataType (string) --
The data type of the option setting.

AllowedValues (string) --
The allowed values of the option setting.

IsModifiable (boolean) --
A Boolean value that, when true, indicates the option setting can be modified from the default.

IsCollection (boolean) --
Indicates if the option setting is part of a collection.





DBSecurityGroupMemberships (list) --
If the option requires access to a port, then this DB security group allows access to the port.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroupMemberships (list) --
If the option requires access to a port, then this VPC security group allows access to the port.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.









AllowsVpcAndNonVpcInstanceMemberships (boolean) --
Indicates whether this option group can be applied to both VPC and non-VPC instances. The value true indicates the option group can be applied to both VPC and non-VPC instances.

VpcId (string) --
If AllowsVpcAndNonVpcInstanceMemberships is false , this field is blank. If AllowsVpcAndNonVpcInstanceMemberships is true and this field is blank, then this option group can be applied to both VPC and non-VPC instances. If this field contains a value, then this option group can only be applied to instances that are in the VPC indicated by this field.

OptionGroupArn (string) --
The Amazon Resource Name (ARN) for the option group.





Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .







Exceptions

RDS.Client.exceptions.OptionGroupNotFoundFault

Examples
This example lists information for all option groups for the specified DB engine.
response = client.describe_option_groups(
    EngineName='mysql',
    MajorEngineVersion='5.6',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'OptionGroupsList': [
            {
                'OptionGroupName': 'string',
                'OptionGroupDescription': 'string',
                'EngineName': 'string',
                'MajorEngineVersion': 'string',
                'Options': [
                    {
                        'OptionName': 'string',
                        'OptionDescription': 'string',
                        'Persistent': True|False,
                        'Permanent': True|False,
                        'Port': 123,
                        'OptionVersion': 'string',
                        'OptionSettings': [
                            {
                                'Name': 'string',
                                'Value': 'string',
                                'DefaultValue': 'string',
                                'Description': 'string',
                                'ApplyType': 'string',
                                'DataType': 'string',
                                'AllowedValues': 'string',
                                'IsModifiable': True|False,
                                'IsCollection': True|False
                            },
                        ],
                        'DBSecurityGroupMemberships': [
                            {
                                'DBSecurityGroupName': 'string',
                                'Status': 'string'
                            },
                        ],
                        'VpcSecurityGroupMemberships': [
                            {
                                'VpcSecurityGroupId': 'string',
                                'Status': 'string'
                            },
                        ]
                    },
                ],
                'AllowsVpcAndNonVpcInstanceMemberships': True|False,
                'VpcId': 'string',
                'OptionGroupArn': 'string'
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def describe_orderable_db_instance_options(Engine=None, EngineVersion=None, DBInstanceClass=None, LicenseModel=None, AvailabilityZoneGroup=None, Vpc=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns a list of orderable DB instance options for the specified engine.
    See also: AWS API Documentation
    
    Examples
    This example lists information for all orderable DB instance options for the specified DB engine, engine version, DB instance class, license model, and VPC settings.
    Expected Output:
    
    :example: response = client.describe_orderable_db_instance_options(
        Engine='string',
        EngineVersion='string',
        DBInstanceClass='string',
        LicenseModel='string',
        AvailabilityZoneGroup='string',
        Vpc=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type Engine: string
    :param Engine: [REQUIRED]\nThe name of the engine to retrieve DB instance options for.\n

    :type EngineVersion: string
    :param EngineVersion: The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.

    :type DBInstanceClass: string
    :param DBInstanceClass: The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.

    :type LicenseModel: string
    :param LicenseModel: The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.

    :type AvailabilityZoneGroup: string
    :param AvailabilityZoneGroup: The Availability Zone group associated with a Local Zone. Specify this parameter to retrieve available offerings for the Local Zones in the group.\nOmit this parameter to show the available offerings in the specified AWS Region.\n

    :type Vpc: boolean
    :param Vpc: A value that indicates whether to show only VPC or non-VPC offerings.

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'OrderableDBInstanceOptions': [
        {
            'Engine': 'string',
            'EngineVersion': 'string',
            'DBInstanceClass': 'string',
            'LicenseModel': 'string',
            'AvailabilityZoneGroup': 'string',
            'AvailabilityZones': [
                {
                    'Name': 'string'
                },
            ],
            'MultiAZCapable': True|False,
            'ReadReplicaCapable': True|False,
            'Vpc': True|False,
            'SupportsStorageEncryption': True|False,
            'StorageType': 'string',
            'SupportsIops': True|False,
            'SupportsEnhancedMonitoring': True|False,
            'SupportsIAMDatabaseAuthentication': True|False,
            'SupportsPerformanceInsights': True|False,
            'MinStorageSize': 123,
            'MaxStorageSize': 123,
            'MinIopsPerDbInstance': 123,
            'MaxIopsPerDbInstance': 123,
            'MinIopsPerGib': 123.0,
            'MaxIopsPerGib': 123.0,
            'AvailableProcessorFeatures': [
                {
                    'Name': 'string',
                    'DefaultValue': 'string',
                    'AllowedValues': 'string'
                },
            ],
            'SupportedEngineModes': [
                'string',
            ],
            'SupportsStorageAutoscaling': True|False,
            'SupportsKerberosAuthentication': True|False
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeOrderableDBInstanceOptions action.

OrderableDBInstanceOptions (list) --
An OrderableDBInstanceOption structure containing information about orderable options for the DB instance.

(dict) --
Contains a list of available options for a DB instance.
This data type is used as a response element in the DescribeOrderableDBInstanceOptions action.

Engine (string) --
The engine type of a DB instance.

EngineVersion (string) --
The engine version of a DB instance.

DBInstanceClass (string) --
The DB instance class for a DB instance.

LicenseModel (string) --
The license model for a DB instance.

AvailabilityZoneGroup (string) --
The Availability Zone group for a DB instance.

AvailabilityZones (list) --
A list of Availability Zones for a DB instance.

(dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.





MultiAZCapable (boolean) --
Indicates whether a DB instance is Multi-AZ capable.

ReadReplicaCapable (boolean) --
Indicates whether a DB instance can have a read replica.

Vpc (boolean) --
Indicates whether a DB instance is in a VPC.

SupportsStorageEncryption (boolean) --
Indicates whether a DB instance supports encrypted storage.

StorageType (string) --
Indicates the storage type for a DB instance.

SupportsIops (boolean) --
Indicates whether a DB instance supports provisioned IOPS.

SupportsEnhancedMonitoring (boolean) --
Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.

SupportsIAMDatabaseAuthentication (boolean) --
Indicates whether a DB instance supports IAM database authentication.

SupportsPerformanceInsights (boolean) --
True if a DB instance supports Performance Insights, otherwise false.

MinStorageSize (integer) --
Minimum storage size for a DB instance.

MaxStorageSize (integer) --
Maximum storage size for a DB instance.

MinIopsPerDbInstance (integer) --
Minimum total provisioned IOPS for a DB instance.

MaxIopsPerDbInstance (integer) --
Maximum total provisioned IOPS for a DB instance.

MinIopsPerGib (float) --
Minimum provisioned IOPS per GiB for a DB instance.

MaxIopsPerGib (float) --
Maximum provisioned IOPS per GiB for a DB instance.

AvailableProcessorFeatures (list) --
A list of the available processor features for the DB instance class of a DB instance.

(dict) --
Contains the available processor feature information for the DB instance class of a DB instance.
For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

DefaultValue (string) --
The default value for the processor feature of the DB instance class.

AllowedValues (string) --
The allowed values for the processor feature of the DB instance class.





SupportedEngineModes (list) --
A list of the supported DB engine modes.

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode.


(string) --


SupportsStorageAutoscaling (boolean) --
Whether Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.

SupportsKerberosAuthentication (boolean) --
Whether a DB instance supports Kerberos Authentication.





Marker (string) --
An optional pagination token provided by a previous OrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .







Examples
This example lists information for all orderable DB instance options for the specified DB engine, engine version, DB instance class, license model, and VPC settings.
response = client.describe_orderable_db_instance_options(
    DBInstanceClass='db.t2.micro',
    Engine='mysql',
    EngineVersion='5.6.27',
    LicenseModel='general-public-license',
    Vpc=True,
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'OrderableDBInstanceOptions': [
            {
                'Engine': 'string',
                'EngineVersion': 'string',
                'DBInstanceClass': 'string',
                'LicenseModel': 'string',
                'AvailabilityZoneGroup': 'string',
                'AvailabilityZones': [
                    {
                        'Name': 'string'
                    },
                ],
                'MultiAZCapable': True|False,
                'ReadReplicaCapable': True|False,
                'Vpc': True|False,
                'SupportsStorageEncryption': True|False,
                'StorageType': 'string',
                'SupportsIops': True|False,
                'SupportsEnhancedMonitoring': True|False,
                'SupportsIAMDatabaseAuthentication': True|False,
                'SupportsPerformanceInsights': True|False,
                'MinStorageSize': 123,
                'MaxStorageSize': 123,
                'MinIopsPerDbInstance': 123,
                'MaxIopsPerDbInstance': 123,
                'MinIopsPerGib': 123.0,
                'MaxIopsPerGib': 123.0,
                'AvailableProcessorFeatures': [
                    {
                        'Name': 'string',
                        'DefaultValue': 'string',
                        'AllowedValues': 'string'
                    },
                ],
                'SupportedEngineModes': [
                    'string',
                ],
                'SupportsStorageAutoscaling': True|False,
                'SupportsKerberosAuthentication': True|False
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def describe_pending_maintenance_actions(ResourceIdentifier=None, Filters=None, Marker=None, MaxRecords=None):
    """
    Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information for all pending maintenance actions for the specified DB instance.
    Expected Output:
    
    :example: response = client.describe_pending_maintenance_actions(
        ResourceIdentifier='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        Marker='string',
        MaxRecords=123
    )
    
    
    :type ResourceIdentifier: string
    :param ResourceIdentifier: The ARN of a resource to return pending maintenance actions for.

    :type Filters: list
    :param Filters: A filter that specifies one or more resources to return pending maintenance actions for.\nSupported filters:\n\ndb-cluster-id - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include pending maintenance actions for the DB clusters identified by these ARNs.\ndb-instance-id - Accepts DB instance identifiers and DB instance ARNs. The results list will only include pending maintenance actions for the DB instances identified by these ARNs.\n\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribePendingMaintenanceActions request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by MaxRecords .

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'PendingMaintenanceActions': [
        {
            'ResourceIdentifier': 'string',
            'PendingMaintenanceActionDetails': [
                {
                    'Action': 'string',
                    'AutoAppliedAfterDate': datetime(2015, 1, 1),
                    'ForcedApplyDate': datetime(2015, 1, 1),
                    'OptInStatus': 'string',
                    'CurrentApplyDate': datetime(2015, 1, 1),
                    'Description': 'string'
                },
            ]
        },
    ],
    'Marker': 'string'
}


Response Structure

(dict) --
Data returned from the DescribePendingMaintenanceActions action.

PendingMaintenanceActions (list) --
A list of the pending maintenance actions for the resource.

(dict) --
Describes the pending maintenance actions for a resource.

ResourceIdentifier (string) --
The ARN of the resource that has pending maintenance actions.

PendingMaintenanceActionDetails (list) --
A list that provides details about the pending maintenance actions for the resource.

(dict) --
Provides information about a pending maintenance action for a resource.

Action (string) --
The type of pending maintenance action that is available for the resource. Valid actions are system-update , db-upgrade , hardware-maintenance , and ca-certificate-rotation .

AutoAppliedAfterDate (datetime) --
The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date.

ForcedApplyDate (datetime) --
The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource.

OptInStatus (string) --
Indicates the type of opt-in request that has been received for the resource.

CurrentApplyDate (datetime) --
The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the ApplyPendingMaintenanceAction API, the AutoAppliedAfterDate , and the ForcedApplyDate . This value is blank if an opt-in request has not been received and nothing has been specified as AutoAppliedAfterDate or ForcedApplyDate .

Description (string) --
A description providing more detail about the maintenance action.









Marker (string) --
An optional pagination token provided by a previous DescribePendingMaintenanceActions request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by MaxRecords .







Exceptions

RDS.Client.exceptions.ResourceNotFoundFault

Examples
This example lists information for all pending maintenance actions for the specified DB instance.
response = client.describe_pending_maintenance_actions(
    ResourceIdentifier='arn:aws:rds:us-east-1:992648334831:db:mymysqlinstance',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'PendingMaintenanceActions': [
            {
                'ResourceIdentifier': 'string',
                'PendingMaintenanceActionDetails': [
                    {
                        'Action': 'string',
                        'AutoAppliedAfterDate': datetime(2015, 1, 1),
                        'ForcedApplyDate': datetime(2015, 1, 1),
                        'OptInStatus': 'string',
                        'CurrentApplyDate': datetime(2015, 1, 1),
                        'Description': 'string'
                    },
                ]
            },
        ],
        'Marker': 'string'
    }
    
    
    :returns: 
    RDS.Client.exceptions.ResourceNotFoundFault
    
    """
    pass

def describe_reserved_db_instances(ReservedDBInstanceId=None, ReservedDBInstancesOfferingId=None, DBInstanceClass=None, Duration=None, ProductDescription=None, OfferingType=None, MultiAZ=None, LeaseId=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Returns information about reserved DB instances for this account, or about a specified reserved DB instance.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information for all reserved DB instances for the specified DB instance class, duration, product, offering type, and availability zone settings.
    Expected Output:
    
    :example: response = client.describe_reserved_db_instances(
        ReservedDBInstanceId='string',
        ReservedDBInstancesOfferingId='string',
        DBInstanceClass='string',
        Duration='string',
        ProductDescription='string',
        OfferingType='string',
        MultiAZ=True|False,
        LeaseId='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type ReservedDBInstanceId: string
    :param ReservedDBInstanceId: The reserved DB instance identifier filter value. Specify this parameter to show only the reservation that matches the specified reservation ID.

    :type ReservedDBInstancesOfferingId: string
    :param ReservedDBInstancesOfferingId: The offering identifier filter value. Specify this parameter to show only purchased reservations matching the specified offering identifier.

    :type DBInstanceClass: string
    :param DBInstanceClass: The DB instance class filter value. Specify this parameter to show only those reservations matching the specified DB instances class.

    :type Duration: string
    :param Duration: The duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.\nValid Values: 1 | 3 | 31536000 | 94608000\n

    :type ProductDescription: string
    :param ProductDescription: The product description filter value. Specify this parameter to show only those reservations matching the specified product description.

    :type OfferingType: string
    :param OfferingType: The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.\nValid Values: 'Partial Upfront' | 'All Upfront' | 'No Upfront'\n

    :type MultiAZ: boolean
    :param MultiAZ: A value that indicates whether to show only those reservations that support Multi-AZ.

    :type LeaseId: string
    :param LeaseId: The lease identifier filter value. Specify this parameter to show only the reservation that matches the specified lease ID.\n\nNote\nAWS Support might request the lease ID for an issue related to a reserved DB instance.\n\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more than the MaxRecords value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'ReservedDBInstances': [
        {
            'ReservedDBInstanceId': 'string',
            'ReservedDBInstancesOfferingId': 'string',
            'DBInstanceClass': 'string',
            'StartTime': datetime(2015, 1, 1),
            'Duration': 123,
            'FixedPrice': 123.0,
            'UsagePrice': 123.0,
            'CurrencyCode': 'string',
            'DBInstanceCount': 123,
            'ProductDescription': 'string',
            'OfferingType': 'string',
            'MultiAZ': True|False,
            'State': 'string',
            'RecurringCharges': [
                {
                    'RecurringChargeAmount': 123.0,
                    'RecurringChargeFrequency': 'string'
                },
            ],
            'ReservedDBInstanceArn': 'string',
            'LeaseId': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeReservedDBInstances action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

ReservedDBInstances (list) --
A list of reserved DB instances.

(dict) --
This data type is used as a response element in the DescribeReservedDBInstances and PurchaseReservedDBInstancesOffering actions.

ReservedDBInstanceId (string) --
The unique identifier for the reservation.

ReservedDBInstancesOfferingId (string) --
The offering identifier.

DBInstanceClass (string) --
The DB instance class for the reserved DB instance.

StartTime (datetime) --
The time the reservation started.

Duration (integer) --
The duration of the reservation in seconds.

FixedPrice (float) --
The fixed price charged for this reserved DB instance.

UsagePrice (float) --
The hourly price charged for this reserved DB instance.

CurrencyCode (string) --
The currency code for the reserved DB instance.

DBInstanceCount (integer) --
The number of reserved DB instances.

ProductDescription (string) --
The description of the reserved DB instance.

OfferingType (string) --
The offering type of this reserved DB instance.

MultiAZ (boolean) --
Indicates if the reservation applies to Multi-AZ deployments.

State (string) --
The state of the reserved DB instance.

RecurringCharges (list) --
The recurring price charged to run this reserved DB instance.

(dict) --
This data type is used as a response element in the DescribeReservedDBInstances and DescribeReservedDBInstancesOfferings actions.

RecurringChargeAmount (float) --
The amount of the recurring charge.

RecurringChargeFrequency (string) --
The frequency of the recurring charge.





ReservedDBInstanceArn (string) --
The Amazon Resource Name (ARN) for the reserved DB instance.

LeaseId (string) --
The unique identifier for the lease associated with the reserved DB instance.

Note
AWS Support might request the lease ID for an issue related to a reserved DB instance.












Exceptions

RDS.Client.exceptions.ReservedDBInstanceNotFoundFault

Examples
This example lists information for all reserved DB instances for the specified DB instance class, duration, product, offering type, and availability zone settings.
response = client.describe_reserved_db_instances(
    DBInstanceClass='db.t2.micro',
    Duration='1y',
    MultiAZ=False,
    OfferingType='No Upfront',
    ProductDescription='mysql',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'ReservedDBInstances': [
            {
                'ReservedDBInstanceId': 'string',
                'ReservedDBInstancesOfferingId': 'string',
                'DBInstanceClass': 'string',
                'StartTime': datetime(2015, 1, 1),
                'Duration': 123,
                'FixedPrice': 123.0,
                'UsagePrice': 123.0,
                'CurrencyCode': 'string',
                'DBInstanceCount': 123,
                'ProductDescription': 'string',
                'OfferingType': 'string',
                'MultiAZ': True|False,
                'State': 'string',
                'RecurringCharges': [
                    {
                        'RecurringChargeAmount': 123.0,
                        'RecurringChargeFrequency': 'string'
                    },
                ],
                'ReservedDBInstanceArn': 'string',
                'LeaseId': 'string'
            },
        ]
    }
    
    
    :returns: 
    RDS.Client.exceptions.ReservedDBInstanceNotFoundFault
    
    """
    pass

def describe_reserved_db_instances_offerings(ReservedDBInstancesOfferingId=None, DBInstanceClass=None, Duration=None, ProductDescription=None, OfferingType=None, MultiAZ=None, Filters=None, MaxRecords=None, Marker=None):
    """
    Lists available reserved DB instance offerings.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information for all reserved DB instance offerings for the specified DB instance class, duration, product, offering type, and availability zone settings.
    Expected Output:
    
    :example: response = client.describe_reserved_db_instances_offerings(
        ReservedDBInstancesOfferingId='string',
        DBInstanceClass='string',
        Duration='string',
        ProductDescription='string',
        OfferingType='string',
        MultiAZ=True|False,
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ],
        MaxRecords=123,
        Marker='string'
    )
    
    
    :type ReservedDBInstancesOfferingId: string
    :param ReservedDBInstancesOfferingId: The offering identifier filter value. Specify this parameter to show only the available offering that matches the specified reservation identifier.\nExample: 438012d3-4052-4cc7-b2e3-8d3372e0e706\n

    :type DBInstanceClass: string
    :param DBInstanceClass: The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.

    :type Duration: string
    :param Duration: Duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.\nValid Values: 1 | 3 | 31536000 | 94608000\n

    :type ProductDescription: string
    :param ProductDescription: Product description filter value. Specify this parameter to show only the available offerings that contain the specified product description.\n\nNote\nThe results show offerings that partially match the filter value.\n\n

    :type OfferingType: string
    :param OfferingType: The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.\nValid Values: 'Partial Upfront' | 'All Upfront' | 'No Upfront'\n

    :type MultiAZ: boolean
    :param MultiAZ: A value that indicates whether to show only those reservations that support Multi-AZ.

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more than the MaxRecords value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'ReservedDBInstancesOfferings': [
        {
            'ReservedDBInstancesOfferingId': 'string',
            'DBInstanceClass': 'string',
            'Duration': 123,
            'FixedPrice': 123.0,
            'UsagePrice': 123.0,
            'CurrencyCode': 'string',
            'ProductDescription': 'string',
            'OfferingType': 'string',
            'MultiAZ': True|False,
            'RecurringCharges': [
                {
                    'RecurringChargeAmount': 123.0,
                    'RecurringChargeFrequency': 'string'
                },
            ]
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeReservedDBInstancesOfferings action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

ReservedDBInstancesOfferings (list) --
A list of reserved DB instance offerings.

(dict) --
This data type is used as a response element in the DescribeReservedDBInstancesOfferings action.

ReservedDBInstancesOfferingId (string) --
The offering identifier.

DBInstanceClass (string) --
The DB instance class for the reserved DB instance.

Duration (integer) --
The duration of the offering in seconds.

FixedPrice (float) --
The fixed price charged for this offering.

UsagePrice (float) --
The hourly price charged for this offering.

CurrencyCode (string) --
The currency code for the reserved DB instance offering.

ProductDescription (string) --
The database engine used by the offering.

OfferingType (string) --
The offering type.

MultiAZ (boolean) --
Indicates if the offering applies to Multi-AZ deployments.

RecurringCharges (list) --
The recurring price charged to run this reserved DB instance.

(dict) --
This data type is used as a response element in the DescribeReservedDBInstances and DescribeReservedDBInstancesOfferings actions.

RecurringChargeAmount (float) --
The amount of the recurring charge.

RecurringChargeFrequency (string) --
The frequency of the recurring charge.















Exceptions

RDS.Client.exceptions.ReservedDBInstancesOfferingNotFoundFault

Examples
This example lists information for all reserved DB instance offerings for the specified DB instance class, duration, product, offering type, and availability zone settings.
response = client.describe_reserved_db_instances_offerings(
    DBInstanceClass='db.t2.micro',
    Duration='1y',
    MultiAZ=False,
    OfferingType='No Upfront',
    ProductDescription='mysql',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'ReservedDBInstancesOfferings': [
            {
                'ReservedDBInstancesOfferingId': 'string',
                'DBInstanceClass': 'string',
                'Duration': 123,
                'FixedPrice': 123.0,
                'UsagePrice': 123.0,
                'CurrencyCode': 'string',
                'ProductDescription': 'string',
                'OfferingType': 'string',
                'MultiAZ': True|False,
                'RecurringCharges': [
                    {
                        'RecurringChargeAmount': 123.0,
                        'RecurringChargeFrequency': 'string'
                    },
                ]
            },
        ]
    }
    
    
    :returns: 
    RDS.Client.exceptions.ReservedDBInstancesOfferingNotFoundFault
    
    """
    pass

def describe_source_regions(RegionName=None, MaxRecords=None, Marker=None, Filters=None):
    """
    Returns a list of the source AWS Regions where the current AWS Region can create a read replica or copy a DB snapshot from. This API action supports pagination.
    See also: AWS API Documentation
    
    Examples
    To list the AWS regions where a Read Replica can be created.
    Expected Output:
    
    :example: response = client.describe_source_regions(
        RegionName='string',
        MaxRecords=123,
        Marker='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type RegionName: string
    :param RegionName: The source AWS Region name. For example, us-east-1 .\nConstraints:\n\nMust specify a valid AWS Region name.\n\n

    :type MaxRecords: integer
    :param MaxRecords: The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.\nDefault: 100\nConstraints: Minimum 20, maximum 100.\n

    :type Marker: string
    :param Marker: An optional pagination token provided by a previous DescribeSourceRegions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'Marker': 'string',
    'SourceRegions': [
        {
            'RegionName': 'string',
            'Endpoint': 'string',
            'Status': 'string'
        },
    ]
}


Response Structure

(dict) --
Contains the result of a successful invocation of the DescribeSourceRegions action.

Marker (string) --
An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords .

SourceRegions (list) --
A list of SourceRegion instances that contains each source AWS Region that the current AWS Region can get a read replica or a DB snapshot from.

(dict) --
Contains an AWS Region name as the result of a successful call to the DescribeSourceRegions action.

RegionName (string) --
The name of the source AWS Region.

Endpoint (string) --
The endpoint for the source AWS Region endpoint.

Status (string) --
The status of the source AWS Region.











Examples
To list the AWS regions where a Read Replica can be created.
response = client.describe_source_regions(
)

print(response)


Expected Output:
{
    'SourceRegions': [
        {
            'Endpoint': 'https://rds.ap-northeast-1.amazonaws.com',
            'RegionName': 'ap-northeast-1',
            'Status': 'available',
        },
        {
            'Endpoint': 'https://rds.ap-northeast-2.amazonaws.com',
            'RegionName': 'ap-northeast-2',
            'Status': 'available',
        },
        {
            'Endpoint': 'https://rds.ap-south-1.amazonaws.com',
            'RegionName': 'ap-south-1',
            'Status': 'available',
        },
        {
            'Endpoint': 'https://rds.ap-southeast-1.amazonaws.com',
            'RegionName': 'ap-southeast-1',
            'Status': 'available',
        },
        {
            'Endpoint': 'https://rds.ap-southeast-2.amazonaws.com',
            'RegionName': 'ap-southeast-2',
            'Status': 'available',
        },
        {
            'Endpoint': 'https://rds.eu-central-1.amazonaws.com',
            'RegionName': 'eu-central-1',
            'Status': 'available',
        },
        {
            'Endpoint': 'https://rds.eu-west-1.amazonaws.com',
            'RegionName': 'eu-west-1',
            'Status': 'available',
        },
        {
            'Endpoint': 'https://rds.sa-east-1.amazonaws.com',
            'RegionName': 'sa-east-1',
            'Status': 'available',
        },
        {
            'Endpoint': 'https://rds.us-west-1.amazonaws.com',
            'RegionName': 'us-west-1',
            'Status': 'available',
        },
        {
            'Endpoint': 'https://rds.us-west-2.amazonaws.com',
            'RegionName': 'us-west-2',
            'Status': 'available',
        },
    ],
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'Marker': 'string',
        'SourceRegions': [
            {
                'RegionName': 'string',
                'Endpoint': 'string',
                'Status': 'string'
            },
        ]
    }
    
    
    """
    pass

def describe_valid_db_instance_modifications(DBInstanceIdentifier=None):
    """
    You can call DescribeValidDBInstanceModifications to learn what modifications you can make to your DB instance. You can use this information when you call ModifyDBInstance .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.describe_valid_db_instance_modifications(
        DBInstanceIdentifier='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe customer identifier or the ARN of your DB instance.\n

    :rtype: dict
ReturnsResponse Syntax{
    'ValidDBInstanceModificationsMessage': {
        'Storage': [
            {
                'StorageType': 'string',
                'StorageSize': [
                    {
                        'From': 123,
                        'To': 123,
                        'Step': 123
                    },
                ],
                'ProvisionedIops': [
                    {
                        'From': 123,
                        'To': 123,
                        'Step': 123
                    },
                ],
                'IopsToStorageRatio': [
                    {
                        'From': 123.0,
                        'To': 123.0
                    },
                ],
                'SupportsStorageAutoscaling': True|False
            },
        ],
        'ValidProcessorFeatures': [
            {
                'Name': 'string',
                'DefaultValue': 'string',
                'AllowedValues': 'string'
            },
        ]
    }
}


Response Structure

(dict) --
ValidDBInstanceModificationsMessage (dict) --Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the DescribeValidDBInstanceModifications action. You can use this information when you call ModifyDBInstance .

Storage (list) --Valid storage options for your DB instance.

(dict) --Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the DescribeValidDBInstanceModifications action.

StorageType (string) --The valid storage types for your DB instance. For example, gp2, io1.

StorageSize (list) --The valid range of storage in gibibytes. For example, 100 to 16384.

(dict) --A range of integer values.

From (integer) --The minimum value in the range.

To (integer) --The maximum value in the range.

Step (integer) --The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn\'t a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000...





ProvisionedIops (list) --The valid range of provisioned IOPS. For example, 1000-20000.

(dict) --A range of integer values.

From (integer) --The minimum value in the range.

To (integer) --The maximum value in the range.

Step (integer) --The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn\'t a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000...





IopsToStorageRatio (list) --The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example, 3-10, which means that provisioned IOPS can be between 3 and 10 times storage.

(dict) --A range of double values.

From (float) --The minimum value in the range.

To (float) --The maximum value in the range.





SupportsStorageAutoscaling (boolean) --Whether or not Amazon RDS can automatically scale storage for DB instances that use the new instance class.





ValidProcessorFeatures (list) --Valid processor features for your DB instance.

(dict) --Contains the available processor feature information for the DB instance class of a DB instance.
For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .

DefaultValue (string) --The default value for the processor feature of the DB instance class.

AllowedValues (string) --The allowed values for the processor feature of the DB instance class.












Exceptions

RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.InvalidDBInstanceStateFault


    :return: {
        'ValidDBInstanceModificationsMessage': {
            'Storage': [
                {
                    'StorageType': 'string',
                    'StorageSize': [
                        {
                            'From': 123,
                            'To': 123,
                            'Step': 123
                        },
                    ],
                    'ProvisionedIops': [
                        {
                            'From': 123,
                            'To': 123,
                            'Step': 123
                        },
                    ],
                    'IopsToStorageRatio': [
                        {
                            'From': 123.0,
                            'To': 123.0
                        },
                    ],
                    'SupportsStorageAutoscaling': True|False
                },
            ],
            'ValidProcessorFeatures': [
                {
                    'Name': 'string',
                    'DefaultValue': 'string',
                    'AllowedValues': 'string'
                },
            ]
        }
    }
    
    
    """
    pass

def download_db_log_file_portion(DBInstanceIdentifier=None, LogFileName=None, Marker=None, NumberOfLines=None):
    """
    Downloads all or a portion of the specified log file, up to 1 MB in size.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information for the specified log file for the specified DB instance.
    Expected Output:
    
    :example: response = client.download_db_log_file_portion(
        DBInstanceIdentifier='string',
        LogFileName='string',
        Marker='string',
        NumberOfLines=123
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe customer-assigned name of the DB instance that contains the log files you want to list.\nConstraints:\n\nMust match the identifier of an existing DBInstance.\n\n

    :type LogFileName: string
    :param LogFileName: [REQUIRED]\nThe name of the log file to be downloaded.\n

    :type Marker: string
    :param Marker: The pagination token provided in the previous request or '0'. If the Marker parameter is specified the response includes only records beyond the marker until the end of the file or up to NumberOfLines.

    :type NumberOfLines: integer
    :param NumberOfLines: The number of lines to download. If the number of lines specified results in a file over 1 MB in size, the file is truncated at 1 MB in size.\nIf the NumberOfLines parameter is specified, then the block of lines returned can be from the beginning or the end of the log file, depending on the value of the Marker parameter.\n\nIf neither Marker or NumberOfLines are specified, the entire log file is returned up to a maximum of 10000 lines, starting with the most recent log entries first.\nIf NumberOfLines is specified and Marker isn\'t specified, then the most recent lines from the end of the log file are returned.\nIf Marker is specified as '0', then the specified number of lines from the beginning of the log file are returned.\nYou can download the log file in blocks of lines by specifying the size of the block using the NumberOfLines parameter, and by specifying a value of '0' for the Marker parameter in your first request. Include the Marker value returned in the response as the Marker value for the next request, continuing until the AdditionalDataPending response element returns false.\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'LogFileData': 'string',
    'Marker': 'string',
    'AdditionalDataPending': True|False
}


Response Structure

(dict) --
This data type is used as a response element to DownloadDBLogFilePortion .

LogFileData (string) --
Entries from the specified log file.

Marker (string) --
A pagination token that can be used in a later DownloadDBLogFilePortion request.

AdditionalDataPending (boolean) --
Boolean value that if true, indicates there is more data to be downloaded.







Exceptions

RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.DBLogFileNotFoundFault

Examples
This example lists information for the specified log file for the specified DB instance.
response = client.download_db_log_file_portion(
    DBInstanceIdentifier='mymysqlinstance',
    LogFileName='mysqlUpgrade',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'LogFileData': 'string',
        'Marker': 'string',
        'AdditionalDataPending': True|False
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBInstanceNotFoundFault
    RDS.Client.exceptions.DBLogFileNotFoundFault
    
    """
    pass

def failover_db_cluster(DBClusterIdentifier=None, TargetDBInstanceIdentifier=None):
    """
    Forces a failover for a DB cluster.
    A failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).
    Amazon Aurora will automatically fail over to an Aurora Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example performs a failover for the specified DB cluster to the specified DB instance.
    Expected Output:
    
    :example: response = client.failover_db_cluster(
        DBClusterIdentifier='string',
        TargetDBInstanceIdentifier='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nA DB cluster identifier to force a failover for. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust match the identifier of an existing DBCluster.\n\n

    :type TargetDBInstanceIdentifier: string
    :param TargetDBInstanceIdentifier: The name of the instance to promote to the primary instance.\nYou must specify the instance identifier for an Aurora Replica in the DB cluster. For example, mydbcluster-replica1 .\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

DBCluster (dict) --
Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --
For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --
If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --
Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --
Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --
Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --
Specifies the current state of this DB cluster.

PercentProgress (string) --
Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --
The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --
Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --
The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --
Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --
Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --
Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --
Indicates the database engine version.

LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --
Specifies the port that the database engine is listening on.

MasterUsername (string) --
Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --
Provides the list of option group memberships for this DB cluster.

(dict) --
Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --
Specifies the name of the DB cluster option group.

Status (string) --
Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --
Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --
Provides the list of instances that make up the DB cluster.

(dict) --
Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --
Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --
Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --
Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --
Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --
Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --
If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --
Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --
Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --
A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --
Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --
The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --
The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --
The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --
The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --
The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --
Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --
The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --
The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --
A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --
The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --
The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --
Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --
A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --
The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --
The status of the database activity stream.

ActivityStreamKmsKeyId (string) --
The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --
The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --
Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB cluster.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.













Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBInstanceStateFault

Examples
This example performs a failover for the specified DB cluster to the specified DB instance.
response = client.failover_db_cluster(
    DBClusterIdentifier='myaurorainstance-cluster',
    TargetDBInstanceIdentifier='myaurorareplica',
)

print(response)


Expected Output:
{
    'DBCluster': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def generate_db_auth_token(DBHostname=None, Port=None, DBUsername=None, Region=None):
    """
    Generates an auth token used to connect to a db with IAM credentials.
    
    :type DBHostname: str
    :param DBHostname: The hostname of the database to connect to.

    :type Port: int
    :param Port: The port number the database is listening on.

    :type DBUsername: str
    :param DBUsername: The username to log in as.

    :type Region: str
    :param Region: The region the database is in. If None, the client\nregion will be used.

    """
    pass

def generate_presigned_url(ClientMethod=None, Params=None, ExpiresIn=None, HttpMethod=None):
    """
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for

    :type Params: dict
    :param Params: The parameters normally passed to\nClientMethod.

    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid\nfor. By default it expires in an hour (3600 seconds)

    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By\ndefault, the http method is whatever is used in the method\'s model.

    """
    pass

def get_paginator(operation_name=None):
    """
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name. This is the same name\nas the method name on the client. For example, if the\nmethod name is create_foo, and you\'d normally invoke the\noperation as client.create_foo(**kwargs), if the\ncreate_foo operation can be paginated, you can use the\ncall client.get_paginator('create_foo').

    :rtype: L{botocore.paginate.Paginator}
ReturnsA paginator object.


    """
    pass

def get_waiter(waiter_name=None):
    """
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters\nsection of the service docs for a list of available waiters.

    :rtype: botocore.waiter.Waiter


    """
    pass

def import_installation_media(CustomAvailabilityZoneId=None, Engine=None, EngineVersion=None, EngineInstallationMediaPath=None, OSInstallationMediaPath=None):
    """
    Imports the installation media for a DB engine that requires an on-premises customer provided license, such as SQL Server.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.import_installation_media(
        CustomAvailabilityZoneId='string',
        Engine='string',
        EngineVersion='string',
        EngineInstallationMediaPath='string',
        OSInstallationMediaPath='string'
    )
    
    
    :type CustomAvailabilityZoneId: string
    :param CustomAvailabilityZoneId: [REQUIRED]\nThe identifier of the custom Availability Zone (AZ) to import the installation media to.\n

    :type Engine: string
    :param Engine: [REQUIRED]\nThe name of the database engine to be used for this instance.\nThe list only includes supported DB engines that require an on-premises customer provided license.\nValid Values:\n\nsqlserver-ee\nsqlserver-se\nsqlserver-ex\nsqlserver-web\n\n

    :type EngineVersion: string
    :param EngineVersion: [REQUIRED]\nThe version number of the database engine to use.\nFor a list of valid engine versions, call DescribeDBEngineVersions .\nThe following are the database engines and links to information about the major and minor versions. The list only includes DB engines that require an on-premises customer provided license.\n\nMicrosoft SQL Server\nSee Version and Feature Support on Amazon RDS in the Amazon RDS User Guide.\n

    :type EngineInstallationMediaPath: string
    :param EngineInstallationMediaPath: [REQUIRED]\nThe path to the installation medium for the specified DB engine.\nExample: SQLServerISO/en_sql_server_2016_enterprise_x64_dvd_8701793.iso\n

    :type OSInstallationMediaPath: string
    :param OSInstallationMediaPath: [REQUIRED]\nThe path to the installation medium for the operating system associated with the specified DB engine.\nExample: WindowsISO/en_windows_server_2016_x64_dvd_9327751.iso\n

    :rtype: dict

ReturnsResponse Syntax
{
    'InstallationMediaId': 'string',
    'CustomAvailabilityZoneId': 'string',
    'Engine': 'string',
    'EngineVersion': 'string',
    'EngineInstallationMediaPath': 'string',
    'OSInstallationMediaPath': 'string',
    'Status': 'string',
    'FailureCause': {
        'Message': 'string'
    }
}


Response Structure

(dict) --
Contains the installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.

InstallationMediaId (string) --
The installation medium ID.

CustomAvailabilityZoneId (string) --
The custom Availability Zone (AZ) that contains the installation media.

Engine (string) --
The DB engine.

EngineVersion (string) --
The engine version of the DB engine.

EngineInstallationMediaPath (string) --
The path to the installation medium for the DB engine.

OSInstallationMediaPath (string) --
The path to the installation medium for the operating system associated with the DB engine.

Status (string) --
The status of the installation medium.

FailureCause (dict) --
If an installation media failure occurred, the cause of the failure.

Message (string) --
The reason that an installation media import failed.









Exceptions

RDS.Client.exceptions.CustomAvailabilityZoneNotFoundFault
RDS.Client.exceptions.InstallationMediaAlreadyExistsFault


    :return: {
        'InstallationMediaId': 'string',
        'CustomAvailabilityZoneId': 'string',
        'Engine': 'string',
        'EngineVersion': 'string',
        'EngineInstallationMediaPath': 'string',
        'OSInstallationMediaPath': 'string',
        'Status': 'string',
        'FailureCause': {
            'Message': 'string'
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.CustomAvailabilityZoneNotFoundFault
    RDS.Client.exceptions.InstallationMediaAlreadyExistsFault
    
    """
    pass

def list_tags_for_resource(ResourceName=None, Filters=None):
    """
    Lists all tags on an Amazon RDS resource.
    For an overview on tagging an Amazon RDS resource, see Tagging Amazon RDS Resources in the Amazon RDS User Guide .
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example lists information about all tags associated with the specified DB option group.
    Expected Output:
    
    :example: response = client.list_tags_for_resource(
        ResourceName='string',
        Filters=[
            {
                'Name': 'string',
                'Values': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type ResourceName: string
    :param ResourceName: [REQUIRED]\nThe Amazon RDS resource with tags to be listed. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see Constructing an ARN for Amazon RDS in the Amazon RDS User Guide .\n

    :type Filters: list
    :param Filters: This parameter isn\'t currently supported.\n\n(dict) --A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.\n\nNote\nCurrently, wildcards are not supported in filters.\n\nThe following actions can be filtered:\n\nDescribeDBClusterBacktracks\nDescribeDBClusterEndpoints\nDescribeDBClusters\nDescribeDBInstances\nDescribePendingMaintenanceActions\n\n\nName (string) -- [REQUIRED]The name of the filter. Filter names are case-sensitive.\n\nValues (list) -- [REQUIRED]One or more filter values. Filter values are case-sensitive.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'TagList': [
        {
            'Key': 'string',
            'Value': 'string'
        },
    ]
}


Response Structure

(dict) --

TagList (list) --
List of tags returned by the ListTagsForResource operation.

(dict) --
Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

Key (string) --
A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with "aws:" or "rds:". The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

Value (string) --
A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with "aws:" or "rds:". The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").











Exceptions

RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.DBSnapshotNotFoundFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.DBProxyNotFoundFault
RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault

Examples
This example lists information about all tags associated with the specified DB option group.
response = client.list_tags_for_resource(
    ResourceName='arn:aws:rds:us-east-1:992648334831:og:mymysqloptiongroup',
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'TagList': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBInstanceNotFoundFault
    RDS.Client.exceptions.DBSnapshotNotFoundFault
    RDS.Client.exceptions.DBClusterNotFoundFault
    RDS.Client.exceptions.DBProxyNotFoundFault
    RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
    
    """
    pass

def modify_certificates(CertificateIdentifier=None, RemoveCustomerOverride=None):
    """
    Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances temporarily, or remove the override.
    By using this operation, you can specify an RDS-approved SSL/TLS certificate for new DB instances that is different from the default certificate provided by RDS. You can also use this operation to remove the override, so that new DB instances use the default certificate provided by RDS.
    You might need to override the default certificate in the following situations:
    For more information about rotating your SSL/TLS certificate for RDS DB engines, see Rotating Your SSL/TLS Certificate in the Amazon RDS User Guide .
    For more information about rotating your SSL/TLS certificate for Aurora DB engines, see Rotating Your SSL/TLS Certificate in the Amazon Aurora User Guide .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.modify_certificates(
        CertificateIdentifier='string',
        RemoveCustomerOverride=True|False
    )
    
    
    :type CertificateIdentifier: string
    :param CertificateIdentifier: The new default certificate identifier to override the current one with.\nTo determine the valid values, use the describe-certificates AWS CLI command or the DescribeCertificates API operation.\n

    :type RemoveCustomerOverride: boolean
    :param RemoveCustomerOverride: A value that indicates whether to remove the override for the default certificate. If the override is removed, the default certificate is the system default.

    :rtype: dict

ReturnsResponse Syntax
{
    'Certificate': {
        'CertificateIdentifier': 'string',
        'CertificateType': 'string',
        'Thumbprint': 'string',
        'ValidFrom': datetime(2015, 1, 1),
        'ValidTill': datetime(2015, 1, 1),
        'CertificateArn': 'string',
        'CustomerOverride': True|False,
        'CustomerOverrideValidTill': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --

Certificate (dict) --
A CA certificate for an AWS account.

CertificateIdentifier (string) --
The unique key that identifies a certificate.

CertificateType (string) --
The type of the certificate.

Thumbprint (string) --
The thumbprint of the certificate.

ValidFrom (datetime) --
The starting date from which the certificate is valid.

ValidTill (datetime) --
The final date that the certificate continues to be valid.

CertificateArn (string) --
The Amazon Resource Name (ARN) for the certificate.

CustomerOverride (boolean) --
Whether there is an override for the default certificate identifier.

CustomerOverrideValidTill (datetime) --
If there is an override for the default certificate identifier, when the override expires.









Exceptions

RDS.Client.exceptions.CertificateNotFoundFault


    :return: {
        'Certificate': {
            'CertificateIdentifier': 'string',
            'CertificateType': 'string',
            'Thumbprint': 'string',
            'ValidFrom': datetime(2015, 1, 1),
            'ValidTill': datetime(2015, 1, 1),
            'CertificateArn': 'string',
            'CustomerOverride': True|False,
            'CustomerOverrideValidTill': datetime(2015, 1, 1)
        }
    }
    
    
    :returns: 
    CertificateIdentifier (string) -- The new default certificate identifier to override the current one with.
    To determine the valid values, use the describe-certificates AWS CLI command or the DescribeCertificates API operation.
    
    RemoveCustomerOverride (boolean) -- A value that indicates whether to remove the override for the default certificate. If the override is removed, the default certificate is the system default.
    
    """
    pass

def modify_current_db_cluster_capacity(DBClusterIdentifier=None, Capacity=None, SecondsBeforeTimeout=None, TimeoutAction=None):
    """
    Set the capacity of an Aurora Serverless DB cluster to a specific value.
    Aurora Serverless scales seamlessly based on the workload on the DB cluster. In some cases, the capacity might not scale fast enough to meet a sudden change in workload, such as a large number of new transactions. Call ModifyCurrentDBClusterCapacity to set the capacity explicitly.
    After this call sets the DB cluster capacity, Aurora Serverless can automatically scale the DB cluster based on the cooldown period for scaling up and the cooldown period for scaling down.
    For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.modify_current_db_cluster_capacity(
        DBClusterIdentifier='string',
        Capacity=123,
        SecondsBeforeTimeout=123,
        TimeoutAction='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe DB cluster identifier for the cluster being modified. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust match the identifier of an existing DB cluster.\n\n

    :type Capacity: integer
    :param Capacity: The DB cluster capacity.\nWhen you change the capacity of a paused Aurora Serverless DB cluster, it automatically resumes.\nConstraints:\n\nFor Aurora MySQL, valid capacity values are 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , and 256 .\nFor Aurora PostgreSQL, valid capacity values are 2 , 4 , 8 , 16 , 32 , 64 , 192 , and 384 .\n\n

    :type SecondsBeforeTimeout: integer
    :param SecondsBeforeTimeout: The amount of time, in seconds, that Aurora Serverless tries to find a scaling point to perform seamless scaling before enforcing the timeout action. The default is 300.\n\nValue must be from 10 through 600.\n\n

    :type TimeoutAction: string
    :param TimeoutAction: The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange .\n\nForceApplyCapacityChange , the default, sets the capacity to the specified value as soon as possible.RollbackCapacityChange ignores the capacity change if a scaling point isn\'t found in the timeout period.\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterIdentifier': 'string',
    'PendingCapacity': 123,
    'CurrentCapacity': 123,
    'SecondsBeforeTimeout': 123,
    'TimeoutAction': 'string'
}


Response Structure

(dict) --

DBClusterIdentifier (string) --
A user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

PendingCapacity (integer) --
A value that specifies the capacity that the DB cluster scales to next.

CurrentCapacity (integer) --
The current capacity of the DB cluster.

SecondsBeforeTimeout (integer) --
The number of seconds before a call to ModifyCurrentDBClusterCapacity times out.

TimeoutAction (string) --
The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .







Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBClusterCapacityFault


    :return: {
        'DBClusterIdentifier': 'string',
        'PendingCapacity': 123,
        'CurrentCapacity': 123,
        'SecondsBeforeTimeout': 123,
        'TimeoutAction': 'string'
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBClusterNotFoundFault
    RDS.Client.exceptions.InvalidDBClusterStateFault
    RDS.Client.exceptions.InvalidDBClusterCapacityFault
    
    """
    pass

def modify_db_cluster(DBClusterIdentifier=None, NewDBClusterIdentifier=None, ApplyImmediately=None, BackupRetentionPeriod=None, DBClusterParameterGroupName=None, VpcSecurityGroupIds=None, Port=None, MasterUserPassword=None, OptionGroupName=None, PreferredBackupWindow=None, PreferredMaintenanceWindow=None, EnableIAMDatabaseAuthentication=None, BacktrackWindow=None, CloudwatchLogsExportConfiguration=None, EngineVersion=None, AllowMajorVersionUpgrade=None, DBInstanceParameterGroupName=None, Domain=None, DomainIAMRoleName=None, ScalingConfiguration=None, DeletionProtection=None, EnableHttpEndpoint=None, CopyTagsToSnapshot=None):
    """
    Modify a setting for an Amazon Aurora DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example changes the specified settings for the specified DB cluster.
    Expected Output:
    
    :example: response = client.modify_db_cluster(
        DBClusterIdentifier='string',
        NewDBClusterIdentifier='string',
        ApplyImmediately=True|False,
        BackupRetentionPeriod=123,
        DBClusterParameterGroupName='string',
        VpcSecurityGroupIds=[
            'string',
        ],
        Port=123,
        MasterUserPassword='string',
        OptionGroupName='string',
        PreferredBackupWindow='string',
        PreferredMaintenanceWindow='string',
        EnableIAMDatabaseAuthentication=True|False,
        BacktrackWindow=123,
        CloudwatchLogsExportConfiguration={
            'EnableLogTypes': [
                'string',
            ],
            'DisableLogTypes': [
                'string',
            ]
        },
        EngineVersion='string',
        AllowMajorVersionUpgrade=True|False,
        DBInstanceParameterGroupName='string',
        Domain='string',
        DomainIAMRoleName='string',
        ScalingConfiguration={
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        DeletionProtection=True|False,
        EnableHttpEndpoint=True|False,
        CopyTagsToSnapshot=True|False
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe DB cluster identifier for the cluster being modified. This parameter isn\'t case-sensitive.\nConstraints: This identifier must match the identifier of an existing DB cluster.\n

    :type NewDBClusterIdentifier: string
    :param NewDBClusterIdentifier: The new DB cluster identifier for the DB cluster when renaming a DB cluster. This value is stored as a lowercase string.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens\nThe first character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: my-cluster2\n

    :type ApplyImmediately: boolean
    :param ApplyImmediately: A value that indicates whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB cluster. If this parameter is disabled, changes to the DB cluster are applied during the next maintenance window.\nThe ApplyImmediately parameter only affects the EnableIAMDatabaseAuthentication , MasterUserPassword , and NewDBClusterIdentifier values. If the ApplyImmediately parameter is disabled, then changes to the EnableIAMDatabaseAuthentication , MasterUserPassword , and NewDBClusterIdentifier values are applied during the next maintenance window. All other changes are applied immediately, regardless of the value of the ApplyImmediately parameter.\nBy default, this parameter is disabled.\n

    :type BackupRetentionPeriod: integer
    :param BackupRetentionPeriod: The number of days for which automated backups are retained. You must specify a minimum value of 1.\nDefault: 1\nConstraints:\n\nMust be a value from 1 to 35\n\n

    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: The name of the DB cluster parameter group to use for the DB cluster.

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of VPC security groups that the DB cluster will belong to.\n\n(string) --\n\n

    :type Port: integer
    :param Port: The port number on which the DB cluster accepts connections.\nConstraints: Value must be 1150-65535\nDefault: The same port as the original DB cluster.\n

    :type MasterUserPassword: string
    :param MasterUserPassword: The new password for the master database user. This password can contain any printable ASCII character except '/', ''', or '@'.\nConstraints: Must contain from 8 to 41 characters.\n

    :type OptionGroupName: string
    :param OptionGroupName: A value that indicates that the DB cluster should be associated with the specified option group. Changing this parameter doesn\'t result in an outage except in the following case, and the change is applied during the next maintenance window unless the ApplyImmediately is enabled for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted.\nPermanent options can\'t be removed from an option group. The option group can\'t be removed from a DB cluster once it is associated with a DB cluster.\n

    :type PreferredBackupWindow: string
    :param PreferredBackupWindow: The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter.\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window in the Amazon Aurora User Guide.\nConstraints:\n\nMust be in the format hh24:mi-hh24:mi .\nMust be in Universal Coordinated Time (UTC).\nMust not conflict with the preferred maintenance window.\nMust be at least 30 minutes.\n\n

    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).\nFormat: ddd:hh24:mi-ddd:hh24:mi\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window in the Amazon Aurora User Guide.\nValid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.\nConstraints: Minimum 30-minute window.\n

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.\nFor more information, see IAM Database Authentication in the Amazon Aurora User Guide.\n

    :type BacktrackWindow: integer
    :param BacktrackWindow: The target backtrack window, in seconds. To disable backtracking, set this value to 0.\nDefault: 0\nConstraints:\n\nIf specified, this value must be set to a number from 0 to 259,200 (72 hours).\n\n

    :type CloudwatchLogsExportConfiguration: dict
    :param CloudwatchLogsExportConfiguration: The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB cluster.\n\nEnableLogTypes (list) --The list of log types to enable.\n\n(string) --\n\n\nDisableLogTypes (list) --The list of log types to disable.\n\n(string) --\n\n\n\n

    :type EngineVersion: string
    :param EngineVersion: The version number of the database engine to which you want to upgrade. Changing this parameter results in an outage. The change is applied during the next maintenance window unless ApplyImmediately is enabled.\nTo list all of the available engine versions for aurora (for MySQL 5.6-compatible Aurora), use the following command:\n\naws rds describe-db-engine-versions --engine aurora --query 'DBEngineVersions[].EngineVersion'\nTo list all of the available engine versions for aurora-mysql (for MySQL 5.7-compatible Aurora), use the following command:\n\naws rds describe-db-engine-versions --engine aurora-mysql --query 'DBEngineVersions[].EngineVersion'\nTo list all of the available engine versions for aurora-postgresql , use the following command:\n\naws rds describe-db-engine-versions --engine aurora-postgresql --query 'DBEngineVersions[].EngineVersion'\n

    :type AllowMajorVersionUpgrade: boolean
    :param AllowMajorVersionUpgrade: A value that indicates whether major version upgrades are allowed.\nConstraints: You must allow major version upgrades when specifying a value for the EngineVersion parameter that is a different major version than the DB cluster\'s current version.\n

    :type DBInstanceParameterGroupName: string
    :param DBInstanceParameterGroupName: The name of the DB parameter group to apply to all instances of the DB cluster.\n\nNote\nWhen you apply a parameter group using the DBInstanceParameterGroupName parameter, the DB cluster isn\'t rebooted automatically. Also, parameter changes aren\'t applied during the next maintenance window but instead are applied immediately.\n\nDefault: The existing name setting\nConstraints:\n\nThe DB parameter group must be in the same DB parameter group family as this DB cluster.\nThe DBInstanceParameterGroupName parameter is only valid in combination with the AllowMajorVersionUpgrade parameter.\n\n

    :type Domain: string
    :param Domain: The Active Directory directory ID to move the DB cluster to. Specify none to remove the cluster from its current domain. The domain must be created prior to this operation.

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: Specify the name of the IAM role to be used when making API calls to the Directory Service.

    :type ScalingConfiguration: dict
    :param ScalingConfiguration: The scaling properties of the DB cluster. You can only modify scaling properties for DB clusters in serverless DB engine mode.\n\nMinCapacity (integer) --The minimum capacity for an Aurora DB cluster in serverless DB engine mode.\nFor Aurora MySQL, valid capacity values are 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , and 256 .\nFor Aurora PostgreSQL, valid capacity values are 2 , 4 , 8 , 16 , 32 , 64 , 192 , and 384 .\nThe minimum capacity must be less than or equal to the maximum capacity.\n\nMaxCapacity (integer) --The maximum capacity for an Aurora DB cluster in serverless DB engine mode.\nFor Aurora MySQL, valid capacity values are 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , and 256 .\nFor Aurora PostgreSQL, valid capacity values are 2 , 4 , 8 , 16 , 32 , 64 , 192 , and 384 .\nThe maximum capacity must be greater than or equal to the minimum capacity.\n\nAutoPause (boolean) --A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it\'s idle (it has no connections).\n\nNote\nIf a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it.\n\n\nSecondsUntilAutoPause (integer) --The time, in seconds, before an Aurora DB cluster in serverless mode is paused.\n\nTimeoutAction (string) --The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange .\n\nForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange , the default, ignores the capacity change if a scaling point isn\'t found in the timeout period.\n\n\nWarning\nIf you specify ForceApplyCapacityChange , connections that prevent Aurora Serverless from finding a scaling point might be dropped.\n\nFor more information, see Autoscaling for Aurora Serverless in the Amazon Aurora User Guide .\n\n\n

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled.

    :type EnableHttpEndpoint: boolean
    :param EnableHttpEndpoint: A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster. By default, the HTTP endpoint is disabled.\nWhen enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.\nFor more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .\n

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

DBCluster (dict) --
Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --
For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --
If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --
Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --
Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --
Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --
Specifies the current state of this DB cluster.

PercentProgress (string) --
Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --
The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --
Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --
The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --
Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --
Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --
Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --
Indicates the database engine version.

LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --
Specifies the port that the database engine is listening on.

MasterUsername (string) --
Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --
Provides the list of option group memberships for this DB cluster.

(dict) --
Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --
Specifies the name of the DB cluster option group.

Status (string) --
Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --
Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --
Provides the list of instances that make up the DB cluster.

(dict) --
Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --
Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --
Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --
Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --
Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --
Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --
If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --
Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --
Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --
A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --
Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --
The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --
The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --
The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --
The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --
The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --
Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --
The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --
The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --
A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --
The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --
The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --
Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --
A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --
The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --
The status of the database activity stream.

ActivityStreamKmsKeyId (string) --
The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --
The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --
Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB cluster.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.













Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.InvalidDBSubnetGroupStateFault
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.DBClusterParameterGroupNotFoundFault
RDS.Client.exceptions.InvalidDBSecurityGroupStateFault
RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.DBClusterAlreadyExistsFault
RDS.Client.exceptions.DomainNotFoundFault

Examples
This example changes the specified settings for the specified DB cluster.
response = client.modify_db_cluster(
    ApplyImmediately=True,
    DBClusterIdentifier='mydbcluster',
    MasterUserPassword='mynewpassword',
    NewDBClusterIdentifier='mynewdbcluster',
    PreferredBackupWindow='04:00-04:30',
    PreferredMaintenanceWindow='Tue:05:00-Tue:05:30',
)

print(response)


Expected Output:
{
    'DBCluster': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_db_cluster_endpoint(DBClusterEndpointIdentifier=None, EndpointType=None, StaticMembers=None, ExcludedMembers=None):
    """
    Modifies the properties of an endpoint in an Amazon Aurora DB cluster.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.modify_db_cluster_endpoint(
        DBClusterEndpointIdentifier='string',
        EndpointType='string',
        StaticMembers=[
            'string',
        ],
        ExcludedMembers=[
            'string',
        ]
    )
    
    
    :type DBClusterEndpointIdentifier: string
    :param DBClusterEndpointIdentifier: [REQUIRED]\nThe identifier of the endpoint to modify. This parameter is stored as a lowercase string.\n

    :type EndpointType: string
    :param EndpointType: The type of the endpoint. One of: READER , WRITER , ANY .

    :type StaticMembers: list
    :param StaticMembers: List of DB instance identifiers that are part of the custom endpoint group.\n\n(string) --\n\n

    :type ExcludedMembers: list
    :param ExcludedMembers: List of DB instance identifiers that aren\'t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterEndpointIdentifier': 'string',
    'DBClusterIdentifier': 'string',
    'DBClusterEndpointResourceIdentifier': 'string',
    'Endpoint': 'string',
    'Status': 'string',
    'EndpointType': 'string',
    'CustomEndpointType': 'string',
    'StaticMembers': [
        'string',
    ],
    'ExcludedMembers': [
        'string',
    ],
    'DBClusterEndpointArn': 'string'
}


Response Structure

(dict) --
This data type represents the information you need to connect to an Amazon Aurora DB cluster. This data type is used as a response element in the following actions:

CreateDBClusterEndpoint
DescribeDBClusterEndpoints
ModifyDBClusterEndpoint
DeleteDBClusterEndpoint

For the data structure that represents Amazon RDS DB instance endpoints, see Endpoint .

DBClusterEndpointIdentifier (string) --
The identifier associated with the endpoint. This parameter is stored as a lowercase string.

DBClusterIdentifier (string) --
The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.

DBClusterEndpointResourceIdentifier (string) --
A unique system-generated identifier for an endpoint. It remains the same for the whole life of the endpoint.

Endpoint (string) --
The DNS address of the endpoint.

Status (string) --
The current status of the endpoint. One of: creating , available , deleting , modifying .

EndpointType (string) --
The type of the endpoint. One of: READER , WRITER , CUSTOM .

CustomEndpointType (string) --
The type associated with a custom endpoint. One of: READER , WRITER , ANY .

StaticMembers (list) --
List of DB instance identifiers that are part of the custom endpoint group.

(string) --


ExcludedMembers (list) --
List of DB instance identifiers that aren\'t part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.

(string) --


DBClusterEndpointArn (string) --
The Amazon Resource Name (ARN) for the endpoint.







Exceptions

RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBClusterEndpointStateFault
RDS.Client.exceptions.DBClusterEndpointNotFoundFault
RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.InvalidDBInstanceStateFault


    :return: {
        'DBClusterEndpointIdentifier': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterEndpointResourceIdentifier': 'string',
        'Endpoint': 'string',
        'Status': 'string',
        'EndpointType': 'string',
        'CustomEndpointType': 'string',
        'StaticMembers': [
            'string',
        ],
        'ExcludedMembers': [
            'string',
        ],
        'DBClusterEndpointArn': 'string'
    }
    
    
    :returns: 
    CreateDBClusterEndpoint
    DescribeDBClusterEndpoints
    ModifyDBClusterEndpoint
    DeleteDBClusterEndpoint
    
    """
    pass

def modify_db_cluster_parameter_group(DBClusterParameterGroupName=None, Parameters=None):
    """
    Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: ParameterName , ParameterValue , and ApplyMethod . A maximum of 20 parameters can be modified in a single request.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example immediately changes the specified setting for the specified DB cluster parameter group.
    Expected Output:
    
    :example: response = client.modify_db_cluster_parameter_group(
        DBClusterParameterGroupName='string',
        Parameters=[
            {
                'ParameterName': 'string',
                'ParameterValue': 'string',
                'Description': 'string',
                'Source': 'string',
                'ApplyType': 'string',
                'DataType': 'string',
                'AllowedValues': 'string',
                'IsModifiable': True|False,
                'MinimumEngineVersion': 'string',
                'ApplyMethod': 'immediate'|'pending-reboot',
                'SupportedEngineModes': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: [REQUIRED]\nThe name of the DB cluster parameter group to modify.\n

    :type Parameters: list
    :param Parameters: [REQUIRED]\nA list of parameters in the DB cluster parameter group to modify.\n\n(dict) --This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions.\nThis data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.\n\nParameterName (string) --Specifies the name of the parameter.\n\nParameterValue (string) --Specifies the value of the parameter.\n\nDescription (string) --Provides a description of the parameter.\n\nSource (string) --Indicates the source of the parameter value.\n\nApplyType (string) --Specifies the engine specific parameters type.\n\nDataType (string) --Specifies the valid data type for the parameter.\n\nAllowedValues (string) --Specifies the valid range of values for the parameter.\n\nIsModifiable (boolean) --Indicates whether (true ) or not (false ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.\n\nMinimumEngineVersion (string) --The earliest engine version to which the parameter can apply.\n\nApplyMethod (string) --Indicates when to apply parameter updates.\n\nSupportedEngineModes (list) --The valid DB engine modes.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterParameterGroupName': 'string'
}


Response Structure

(dict) --

DBClusterParameterGroupName (string) --
The name of the DB cluster parameter group.
Constraints:

Must be 1 to 255 letters or numbers.
First character must be a letter
Can\'t end with a hyphen or contain two consecutive hyphens


Note
This value is stored as a lowercase string.








Exceptions

RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.InvalidDBParameterGroupStateFault

Examples
This example immediately changes the specified setting for the specified DB cluster parameter group.
response = client.modify_db_cluster_parameter_group(
    DBClusterParameterGroupName='mydbclusterparametergroup',
    Parameters=[
        {
            'ApplyMethod': 'immediate',
            'ParameterName': 'time_zone',
            'ParameterValue': 'America/Phoenix',
        },
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBClusterParameterGroupName': 'string'
    }
    
    
    :returns: 
    Must be 1 to 255 letters or numbers.
    First character must be a letter
    Can\'t end with a hyphen or contain two consecutive hyphens
    
    """
    pass

def modify_db_cluster_snapshot_attribute(DBClusterSnapshotIdentifier=None, AttributeName=None, ValuesToAdd=None, ValuesToRemove=None):
    """
    Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.
    To share a manual DB cluster snapshot with other AWS accounts, specify restore as the AttributeName and use the ValuesToAdd parameter to add a list of IDs of the AWS accounts that are authorized to restore the manual DB cluster snapshot. Use the value all to make the manual DB cluster snapshot public, which means that it can be copied or restored by all AWS accounts. Do not add the all value for any manual DB cluster snapshots that contain private information that you don\'t want available to all AWS accounts. If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized AWS account IDs for the ValuesToAdd parameter. You can\'t use all as a value for that parameter in this case.
    To view which AWS accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot public or private, use the DescribeDBClusterSnapshotAttributes API action.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    The following example gives two AWS accounts access to a manual DB cluster snapshot and ensures that the DB cluster snapshot is private by removing the value "all".
    Expected Output:
    
    :example: response = client.modify_db_cluster_snapshot_attribute(
        DBClusterSnapshotIdentifier='string',
        AttributeName='string',
        ValuesToAdd=[
            'string',
        ],
        ValuesToRemove=[
            'string',
        ]
    )
    
    
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: [REQUIRED]\nThe identifier for the DB cluster snapshot to modify the attributes for.\n

    :type AttributeName: string
    :param AttributeName: [REQUIRED]\nThe name of the DB cluster snapshot attribute to modify.\nTo manage authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this value to restore .\n

    :type ValuesToAdd: list
    :param ValuesToAdd: A list of DB cluster snapshot attributes to add to the attribute specified by AttributeName .\nTo authorize other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account IDs, or all to make the manual DB cluster snapshot restorable by any AWS account. Do not add the all value for any manual DB cluster snapshots that contain private information that you don\'t want available to all AWS accounts.\n\n(string) --\n\n

    :type ValuesToRemove: list
    :param ValuesToRemove: A list of DB cluster snapshot attributes to remove from the attribute specified by AttributeName .\nTo remove authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account identifiers, or all to remove authorization for any AWS account to copy or restore the DB cluster snapshot. If you specify all , an AWS account whose account ID is explicitly added to the restore attribute can still copy or restore a manual DB cluster snapshot.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterSnapshotAttributesResult': {
        'DBClusterSnapshotIdentifier': 'string',
        'DBClusterSnapshotAttributes': [
            {
                'AttributeName': 'string',
                'AttributeValues': [
                    'string',
                ]
            },
        ]
    }
}


Response Structure

(dict) --

DBClusterSnapshotAttributesResult (dict) --
Contains the results of a successful call to the DescribeDBClusterSnapshotAttributes API action.
Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the ModifyDBClusterSnapshotAttribute API action.

DBClusterSnapshotIdentifier (string) --
The identifier of the manual DB cluster snapshot that the attributes apply to.

DBClusterSnapshotAttributes (list) --
The list of attributes and values for the manual DB cluster snapshot.

(dict) --
Contains the name and values of a manual DB cluster snapshot attribute.
Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the ModifyDBClusterSnapshotAttribute API action.

AttributeName (string) --
The name of the manual DB cluster snapshot attribute.
The attribute named restore refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the ModifyDBClusterSnapshotAttribute API action.

AttributeValues (list) --
The value(s) for the manual DB cluster snapshot attribute.
If the AttributeName field is set to restore , then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of all is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.

(string) --














Exceptions

RDS.Client.exceptions.DBClusterSnapshotNotFoundFault
RDS.Client.exceptions.InvalidDBClusterSnapshotStateFault
RDS.Client.exceptions.SharedSnapshotQuotaExceededFault

Examples
The following example gives two AWS accounts access to a manual DB cluster snapshot and ensures that the DB cluster snapshot is private by removing the value "all".
response = client.modify_db_cluster_snapshot_attribute(
    AttributeName='restore',
    DBClusterSnapshotIdentifier='manual-cluster-snapshot1',
    ValuesToAdd=[
        '123451234512',
        '123456789012',
    ],
    ValuesToRemove=[
        'all',
    ],
)

print(response)


Expected Output:
{
    'DBClusterSnapshotAttributesResult': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBClusterSnapshotAttributesResult': {
            'DBClusterSnapshotIdentifier': 'string',
            'DBClusterSnapshotAttributes': [
                {
                    'AttributeName': 'string',
                    'AttributeValues': [
                        'string',
                    ]
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_db_instance(DBInstanceIdentifier=None, AllocatedStorage=None, DBInstanceClass=None, DBSubnetGroupName=None, DBSecurityGroups=None, VpcSecurityGroupIds=None, ApplyImmediately=None, MasterUserPassword=None, DBParameterGroupName=None, BackupRetentionPeriod=None, PreferredBackupWindow=None, PreferredMaintenanceWindow=None, MultiAZ=None, EngineVersion=None, AllowMajorVersionUpgrade=None, AutoMinorVersionUpgrade=None, LicenseModel=None, Iops=None, OptionGroupName=None, NewDBInstanceIdentifier=None, StorageType=None, TdeCredentialArn=None, TdeCredentialPassword=None, CACertificateIdentifier=None, Domain=None, CopyTagsToSnapshot=None, MonitoringInterval=None, DBPortNumber=None, PubliclyAccessible=None, MonitoringRoleArn=None, DomainIAMRoleName=None, PromotionTier=None, EnableIAMDatabaseAuthentication=None, EnablePerformanceInsights=None, PerformanceInsightsKMSKeyId=None, PerformanceInsightsRetentionPeriod=None, CloudwatchLogsExportConfiguration=None, ProcessorFeatures=None, UseDefaultProcessorFeatures=None, DeletionProtection=None, MaxAllocatedStorage=None, CertificateRotationRestart=None):
    """
    Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call DescribeValidDBInstanceModifications before you call ModifyDBInstance .
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example immediately changes the specified settings for the specified DB instance.
    Expected Output:
    
    :example: response = client.modify_db_instance(
        DBInstanceIdentifier='string',
        AllocatedStorage=123,
        DBInstanceClass='string',
        DBSubnetGroupName='string',
        DBSecurityGroups=[
            'string',
        ],
        VpcSecurityGroupIds=[
            'string',
        ],
        ApplyImmediately=True|False,
        MasterUserPassword='string',
        DBParameterGroupName='string',
        BackupRetentionPeriod=123,
        PreferredBackupWindow='string',
        PreferredMaintenanceWindow='string',
        MultiAZ=True|False,
        EngineVersion='string',
        AllowMajorVersionUpgrade=True|False,
        AutoMinorVersionUpgrade=True|False,
        LicenseModel='string',
        Iops=123,
        OptionGroupName='string',
        NewDBInstanceIdentifier='string',
        StorageType='string',
        TdeCredentialArn='string',
        TdeCredentialPassword='string',
        CACertificateIdentifier='string',
        Domain='string',
        CopyTagsToSnapshot=True|False,
        MonitoringInterval=123,
        DBPortNumber=123,
        PubliclyAccessible=True|False,
        MonitoringRoleArn='string',
        DomainIAMRoleName='string',
        PromotionTier=123,
        EnableIAMDatabaseAuthentication=True|False,
        EnablePerformanceInsights=True|False,
        PerformanceInsightsKMSKeyId='string',
        PerformanceInsightsRetentionPeriod=123,
        CloudwatchLogsExportConfiguration={
            'EnableLogTypes': [
                'string',
            ],
            'DisableLogTypes': [
                'string',
            ]
        },
        ProcessorFeatures=[
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        UseDefaultProcessorFeatures=True|False,
        DeletionProtection=True|False,
        MaxAllocatedStorage=123,
        CertificateRotationRestart=True|False
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe DB instance identifier. This value is stored as a lowercase string.\nConstraints:\n\nMust match the identifier of an existing DBInstance.\n\n

    :type AllocatedStorage: integer
    :param AllocatedStorage: The new amount of storage (in gibibytes) to allocate for the DB instance.\nFor MariaDB, MySQL, Oracle, and PostgreSQL, the value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.\nFor the valid values for allocated storage for each engine, see CreateDBInstance .\n

    :type DBInstanceClass: string
    :param DBInstanceClass: The new compute and memory capacity of the DB instance, for example, db.m4.large . Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see DB Instance Class in the Amazon RDS User Guide.\nIf you modify the DB instance class, an outage occurs during the change. The change is applied during the next maintenance window, unless ApplyImmediately is enabled for this request.\nDefault: Uses existing setting\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: The new DB subnet group for the DB instance. You can use this parameter to move your DB instance to a different VPC. If your DB instance isn\'t in a VPC, you can also use this parameter to move your DB instance into a VPC. For more information, see Updating the VPC for a DB Instance in the Amazon RDS User Guide.\nChanging the subnet group causes an outage during the change. The change is applied during the next maintenance window, unless you enable ApplyImmediately .\nConstraints: If supplied, must match the name of an existing DBSubnetGroup.\nExample: mySubnetGroup\n

    :type DBSecurityGroups: list
    :param DBSecurityGroups: A list of DB security groups to authorize on this DB instance. Changing this setting doesn\'t result in an outage and the change is asynchronously applied as soon as possible.\nConstraints:\n\nIf supplied, must match existing DBSecurityGroups.\n\n\n(string) --\n\n

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of EC2 VPC security groups to authorize on this DB instance. This change is asynchronously applied as soon as possible.\n\nAmazon Aurora\nNot applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see ModifyDBCluster .\nConstraints:\n\nIf supplied, must match existing VpcSecurityGroupIds.\n\n\n(string) --\n\n

    :type ApplyImmediately: boolean
    :param ApplyImmediately: A value that indicates whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB instance. By default, this parameter is disabled.\nIf this parameter is disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to RebootDBInstance , or the next failure reboot. Review the table of parameters in Modifying a DB Instance in the Amazon RDS User Guide. to see the impact of enabling or disabling ApplyImmediately for each modified parameter and to determine when the changes are applied.\n

    :type MasterUserPassword: string
    :param MasterUserPassword: The new password for the master user. The password can include any printable ASCII character except '/', ''', or '@'.\nChanging this parameter doesn\'t result in an outage and the change is asynchronously applied as soon as possible. Between the time of the request and the completion of the request, the MasterUserPassword element exists in the PendingModifiedValues element of the operation response.\n\nAmazon Aurora\nNot applicable. The password for the master user is managed by the DB cluster. For more information, see ModifyDBCluster .\nDefault: Uses existing setting\n\nMariaDB\nConstraints: Must contain from 8 to 41 characters.\n\nMicrosoft SQL Server\nConstraints: Must contain from 8 to 128 characters.\n\nMySQL\nConstraints: Must contain from 8 to 41 characters.\n\nOracle\nConstraints: Must contain from 8 to 30 characters.\n\nPostgreSQL\nConstraints: Must contain from 8 to 128 characters.\n\nNote\nAmazon RDS API actions never return the password, so this action provides a way to regain access to a primary instance user if the password is lost. This includes restoring privileges that might have been accidentally revoked.\n\n

    :type DBParameterGroupName: string
    :param DBParameterGroupName: The name of the DB parameter group to apply to the DB instance. Changing this setting doesn\'t result in an outage. The parameter group name itself is changed immediately, but the actual parameter changes are not applied until you reboot the instance without failover. In this case, the DB instance isn\'t rebooted automatically and the parameter changes isn\'t applied during the next maintenance window.\nDefault: Uses existing setting\nConstraints: The DB parameter group must be in the same DB parameter group family as this DB instance.\n

    :type BackupRetentionPeriod: integer
    :param BackupRetentionPeriod: The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.\nChanging this parameter can result in an outage if you change from 0 to a non-zero value or from a non-zero value to 0. These changes are applied during the next maintenance window unless the ApplyImmediately parameter is enabled for this request. If you change the parameter from one non-zero value to another non-zero value, the change is asynchronously applied as soon as possible.\n\nAmazon Aurora\nNot applicable. The retention period for automated backups is managed by the DB cluster. For more information, see ModifyDBCluster .\nDefault: Uses existing setting\nConstraints:\n\nMust be a value from 0 to 35\nCan be specified for a MySQL read replica only if the source is running MySQL 5.6 or later\nCan be specified for a PostgreSQL read replica only if the source is running PostgreSQL 9.3.5\nCan\'t be set to 0 if the DB instance is a source to read replicas\n\n

    :type PreferredBackupWindow: string
    :param PreferredBackupWindow: The daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod parameter. Changing this parameter doesn\'t result in an outage and the change is asynchronously applied as soon as possible.\n\nAmazon Aurora\nNot applicable. The daily time range for creating automated backups is managed by the DB cluster. For more information, see ModifyDBCluster .\nConstraints:\n\nMust be in the format hh24:mi-hh24:mi\nMust be in Universal Time Coordinated (UTC)\nMust not conflict with the preferred maintenance window\nMust be at least 30 minutes\n\n

    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter doesn\'t result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, then changing this parameter will cause a reboot of the DB instance. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.\nDefault: Uses existing setting\nFormat: ddd:hh24:mi-ddd:hh24:mi\nValid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun\nConstraints: Must be at least 30 minutes\n

    :type MultiAZ: boolean
    :param MultiAZ: A value that indicates whether the DB instance is a Multi-AZ deployment. Changing this parameter doesn\'t result in an outage and the change is applied during the next maintenance window unless the ApplyImmediately parameter is enabled for this request.

    :type EngineVersion: string
    :param EngineVersion: The version number of the database engine to upgrade to. Changing this parameter results in an outage and the change is applied during the next maintenance window unless the ApplyImmediately parameter is eanbled for this request.\nFor major version upgrades, if a nondefault DB parameter group is currently in use, a new DB parameter group in the DB parameter group family for the new engine version must be specified. The new DB parameter group can be the default for that DB parameter group family.\nFor information about valid engine versions, see CreateDBInstance , or call DescribeDBEngineVersions .\n

    :type AllowMajorVersionUpgrade: boolean
    :param AllowMajorVersionUpgrade: A value that indicates whether major version upgrades are allowed. Changing this parameter doesn\'t result in an outage and the change is asynchronously applied as soon as possible.\nConstraints: Major version upgrades must be allowed when specifying a value for the EngineVersion parameter that is a different major version than the DB instance\'s current version.\n

    :type AutoMinorVersionUpgrade: boolean
    :param AutoMinorVersionUpgrade: A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window. Changing this parameter doesn\'t result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage results if this parameter is enabled during the maintenance window, and a newer minor version is available, and RDS has enabled auto patching for that engine version.

    :type LicenseModel: string
    :param LicenseModel: The license model for the DB instance.\nValid values: license-included | bring-your-own-license | general-public-license\n

    :type Iops: integer
    :param Iops: The new Provisioned IOPS (I/O operations per second) value for the RDS instance.\nChanging this setting doesn\'t result in an outage and the change is applied during the next maintenance window unless the ApplyImmediately parameter is enabled for this request. If you are migrating from Provisioned IOPS to standard storage, set this value to 0. The DB instance will require a reboot for the change in storage type to take effect.\nIf you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance.\nConstraints: For MariaDB, MySQL, Oracle, and PostgreSQL, the value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.\nDefault: Uses existing setting\n

    :type OptionGroupName: string
    :param OptionGroupName: Indicates that the DB instance should be associated with the specified option group. Changing this parameter doesn\'t result in an outage except in the following case and the change is applied during the next maintenance window unless the ApplyImmediately parameter is enabled for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted.\nPermanent options, such as the TDE option for Oracle Advanced Security TDE, can\'t be removed from an option group, and that option group can\'t be removed from a DB instance once it is associated with a DB instance\n

    :type NewDBInstanceIdentifier: string
    :param NewDBInstanceIdentifier: The new DB instance identifier for the DB instance when renaming a DB instance. When you change the DB instance identifier, an instance reboot occurs immediately if you enable ApplyImmediately , or will occur during the next maintenance window if you disable Apply Immediately. This value is stored as a lowercase string.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens.\nThe first character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\nExample: mydbinstance\n

    :type StorageType: string
    :param StorageType: Specifies the storage type to be associated with the DB instance.\nIf you specify Provisioned IOPS (io1 ), you must also include a value for the Iops parameter.\nIf you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance.\nValid values: standard | gp2 | io1\nDefault: io1 if the Iops parameter is specified, otherwise gp2\n

    :type TdeCredentialArn: string
    :param TdeCredentialArn: The ARN from the key store with which to associate the instance for TDE encryption.

    :type TdeCredentialPassword: string
    :param TdeCredentialPassword: The password for the given ARN from the key store in order to access the device.

    :type CACertificateIdentifier: string
    :param CACertificateIdentifier: Indicates the certificate that needs to be associated with the instance.

    :type Domain: string
    :param Domain: The Active Directory directory ID to move the DB instance to. Specify none to remove the instance from its current domain. The domain must be created prior to this operation. Currently, only Microsoft SQL Server and Oracle DB instances can be created in an Active Directory Domain.\nFor Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server in the Amazon RDS User Guide .\nFor Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see Using Kerberos Authentication with Amazon RDS for Oracle in the Amazon RDS User Guide .\n

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.\n\nAmazon Aurora\nNot applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see ModifyDBCluster .\n

    :type MonitoringInterval: integer
    :param MonitoringInterval: The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.\nIf MonitoringRoleArn is specified, then you must also set MonitoringInterval to a value other than 0.\nValid Values: 0, 1, 5, 10, 15, 30, 60\n

    :type DBPortNumber: integer
    :param DBPortNumber: The port number on which the database accepts connections.\nThe value of the DBPortNumber parameter must not match any of the port values specified for options in the option group for the DB instance.\nYour database will restart when you change the DBPortNumber value regardless of the value of the ApplyImmediately parameter.\n\nMySQL\nDefault: 3306\nValid values: 1150-65535\n\nMariaDB\nDefault: 3306\nValid values: 1150-65535\n\nPostgreSQL\nDefault: 5432\nValid values: 1150-65535\nType: Integer\n\nOracle\nDefault: 1521\nValid values: 1150-65535\n\nSQL Server\nDefault: 1433\nValid values: 1150-65535 except 1234 , 1434 , 3260 , 3343 , 3389 , 47001 , and 49152-49156 .\n\nAmazon Aurora\nDefault: 3306\nValid values: 1150-65535\n

    :type PubliclyAccessible: boolean
    :param PubliclyAccessible: A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn\'t publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address.\n\nPubliclyAccessible only applies to DB instances in a VPC. The DB instance must be part of a public subnet and PubliclyAccessible must be enabled for it to be publicly accessible.\nChanges to the PubliclyAccessible parameter are applied immediately regardless of the value of the ApplyImmediately parameter.\n

    :type MonitoringRoleArn: string
    :param MonitoringRoleArn: The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess . For information on creating a monitoring role, go to To create an IAM role for Amazon RDS Enhanced Monitoring in the Amazon RDS User Guide.\nIf MonitoringInterval is set to a value other than 0, then you must supply a MonitoringRoleArn value.\n

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: The name of the IAM role to use when making API calls to the Directory Service.

    :type PromotionTier: integer
    :param PromotionTier: A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .\nDefault: 1\nValid Values: 0 - 15\n

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see CreateDBInstance .\nFor more information about IAM database authentication, see IAM Database Authentication for MySQL and PostgreSQL in the Amazon RDS User Guide.\n

    :type EnablePerformanceInsights: boolean
    :param EnablePerformanceInsights: A value that indicates whether to enable Performance Insights for the DB instance.\nFor more information, see Using Amazon Performance Insights in the Amazon Relational Database Service User Guide .\n

    :type PerformanceInsightsKMSKeyId: string
    :param PerformanceInsightsKMSKeyId: The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.\nIf you do not specify a value for PerformanceInsightsKMSKeyId , then Amazon RDS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.\n

    :type PerformanceInsightsRetentionPeriod: integer
    :param PerformanceInsightsRetentionPeriod: The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

    :type CloudwatchLogsExportConfiguration: dict
    :param CloudwatchLogsExportConfiguration: The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance.\nA change to the CloudwatchLogsExportConfiguration parameter is always applied to the DB instance immediately. Therefore, the ApplyImmediately parameter has no effect.\n\nEnableLogTypes (list) --The list of log types to enable.\n\n(string) --\n\n\nDisableLogTypes (list) --The list of log types to disable.\n\n(string) --\n\n\n\n

    :type ProcessorFeatures: list
    :param ProcessorFeatures: The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.\n\n(dict) --Contains the processor features of a DB instance class.\nTo specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.\nYou can set the processor features of the DB instance class for a DB instance when you call one of the following actions:\n\nCreateDBInstance\nModifyDBInstance\nRestoreDBInstanceFromDBSnapshot\nRestoreDBInstanceFromS3\nRestoreDBInstanceToPointInTime\n\nYou can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.\nIn addition, you can use the following actions for DB instance class processor information:\n\nDescribeDBInstances\nDescribeDBSnapshots\nDescribeValidDBInstanceModifications\n\nFor more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.\n\nName (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .\n\nValue (string) --The value of a processor feature name.\n\n\n\n\n

    :type UseDefaultProcessorFeatures: boolean
    :param UseDefaultProcessorFeatures: A value that indicates whether the DB instance class of the DB instance uses its default processor features.

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see Deleting a DB Instance .

    :type MaxAllocatedStorage: integer
    :param MaxAllocatedStorage: The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.

    :type CertificateRotationRestart: boolean
    :param CertificateRotationRestart: A value that indicates whether the DB instance is restarted when you rotate your SSL/TLS certificate.\nBy default, the DB instance is restarted when you rotate your SSL/TLS certificate. The certificate is not updated until the DB instance is restarted.\n\nWarning\nSet this parameter only if you are not using SSL/TLS to connect to the DB instance.\n\nIf you are using SSL/TLS to connect to the DB instance, follow the appropriate instructions for your DB engine to rotate your SSL/TLS certificate:\n\nFor more information about rotating your SSL/TLS certificate for RDS DB engines, see Rotating Your SSL/TLS Certificate. in the Amazon RDS User Guide.\nFor more information about rotating your SSL/TLS certificate for Aurora DB engines, see Rotating Your SSL/TLS Certificate in the Amazon Aurora User Guide.\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.InvalidDBSecurityGroupStateFault
RDS.Client.exceptions.DBInstanceAlreadyExistsFault
RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.DBSecurityGroupNotFoundFault
RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.InsufficientDBInstanceCapacityFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.ProvisionedIopsNotAvailableInAZFault
RDS.Client.exceptions.OptionGroupNotFoundFault
RDS.Client.exceptions.DBUpgradeDependencyFailureFault
RDS.Client.exceptions.StorageTypeNotSupportedFault
RDS.Client.exceptions.AuthorizationNotFoundFault
RDS.Client.exceptions.CertificateNotFoundFault
RDS.Client.exceptions.DomainNotFoundFault
RDS.Client.exceptions.BackupPolicyNotFoundFault

Examples
This example immediately changes the specified settings for the specified DB instance.
response = client.modify_db_instance(
    AllocatedStorage=10,
    ApplyImmediately=True,
    BackupRetentionPeriod=1,
    DBInstanceClass='db.t2.small',
    DBInstanceIdentifier='mymysqlinstance',
    MasterUserPassword='mynewpassword',
    PreferredBackupWindow='04:00-04:30',
    PreferredMaintenanceWindow='Tue:05:00-Tue:05:30',
)

print(response)


Expected Output:
{
    'DBInstance': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def modify_db_parameter_group(DBParameterGroupName=None, Parameters=None):
    """
    Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: ParameterName , ParameterValue , and ApplyMethod . A maximum of 20 parameters can be modified in a single request.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example immediately changes the specified setting for the specified DB parameter group.
    Expected Output:
    
    :example: response = client.modify_db_parameter_group(
        DBParameterGroupName='string',
        Parameters=[
            {
                'ParameterName': 'string',
                'ParameterValue': 'string',
                'Description': 'string',
                'Source': 'string',
                'ApplyType': 'string',
                'DataType': 'string',
                'AllowedValues': 'string',
                'IsModifiable': True|False,
                'MinimumEngineVersion': 'string',
                'ApplyMethod': 'immediate'|'pending-reboot',
                'SupportedEngineModes': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type DBParameterGroupName: string
    :param DBParameterGroupName: [REQUIRED]\nThe name of the DB parameter group.\nConstraints:\n\nIf supplied, must match the name of an existing DBParameterGroup .\n\n

    :type Parameters: list
    :param Parameters: [REQUIRED]\nAn array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; later arguments are optional. A maximum of 20 parameters can be modified in a single request.\nValid Values (for the application method): immediate | pending-reboot\n\nNote\nYou can use the immediate value with dynamic parameters only. You can use the pending-reboot value for both dynamic and static parameters, and changes are applied when you reboot the DB instance without failover.\n\n\n(dict) --This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions.\nThis data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.\n\nParameterName (string) --Specifies the name of the parameter.\n\nParameterValue (string) --Specifies the value of the parameter.\n\nDescription (string) --Provides a description of the parameter.\n\nSource (string) --Indicates the source of the parameter value.\n\nApplyType (string) --Specifies the engine specific parameters type.\n\nDataType (string) --Specifies the valid data type for the parameter.\n\nAllowedValues (string) --Specifies the valid range of values for the parameter.\n\nIsModifiable (boolean) --Indicates whether (true ) or not (false ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.\n\nMinimumEngineVersion (string) --The earliest engine version to which the parameter can apply.\n\nApplyMethod (string) --Indicates when to apply parameter updates.\n\nSupportedEngineModes (list) --The valid DB engine modes.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBParameterGroupName': 'string'
}


Response Structure

(dict) --
Contains the result of a successful invocation of the ModifyDBParameterGroup or ResetDBParameterGroup action.

DBParameterGroupName (string) --
Provides the name of the DB parameter group.







Exceptions

RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.InvalidDBParameterGroupStateFault

Examples
This example immediately changes the specified setting for the specified DB parameter group.
response = client.modify_db_parameter_group(
    DBParameterGroupName='mymysqlparametergroup',
    Parameters=[
        {
            'ApplyMethod': 'immediate',
            'ParameterName': 'time_zone',
            'ParameterValue': 'America/Phoenix',
        },
    ],
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBParameterGroupName': 'string'
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBParameterGroupNotFoundFault
    RDS.Client.exceptions.InvalidDBParameterGroupStateFault
    
    """
    pass

def modify_db_proxy(DBProxyName=None, NewDBProxyName=None, Auth=None, RequireTLS=None, IdleClientTimeout=None, DebugLogging=None, RoleArn=None, SecurityGroups=None):
    """
    Changes the settings for an existing DB proxy.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.modify_db_proxy(
        DBProxyName='string',
        NewDBProxyName='string',
        Auth=[
            {
                'Description': 'string',
                'UserName': 'string',
                'AuthScheme': 'SECRETS',
                'SecretArn': 'string',
                'IAMAuth': 'DISABLED'|'REQUIRED'
            },
        ],
        RequireTLS=True|False,
        IdleClientTimeout=123,
        DebugLogging=True|False,
        RoleArn='string',
        SecurityGroups=[
            'string',
        ]
    )
    
    
    :type DBProxyName: string
    :param DBProxyName: [REQUIRED]\nThe identifier for the DBProxy to modify.\n

    :type NewDBProxyName: string
    :param NewDBProxyName: The new identifier for the DBProxy . An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can\'t end with a hyphen or contain two consecutive hyphens.

    :type Auth: list
    :param Auth: The new authentication settings for the DBProxy .\n\n(dict) --\nNote\nThis is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.\n\nSpecifies the details of authentication used by a proxy to log in as a specific database user.\n\nDescription (string) --A user-specified description about the authentication used by a proxy to log in as a specific database user.\n\nUserName (string) --The name of the database user to which the proxy connects.\n\nAuthScheme (string) --The type of authentication that the proxy uses for connections from the proxy to the underlying database.\n\nSecretArn (string) --The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.\n\nIAMAuth (string) --Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.\n\n\n\n\n

    :type RequireTLS: boolean
    :param RequireTLS: Whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy, even if the associated database doesn\'t use TLS.

    :type IdleClientTimeout: integer
    :param IdleClientTimeout: The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.

    :type DebugLogging: boolean
    :param DebugLogging: Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.

    :type RoleArn: string
    :param RoleArn: The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.

    :type SecurityGroups: list
    :param SecurityGroups: The new list of security groups for the DBProxy .\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBProxy': {
        'DBProxyName': 'string',
        'DBProxyArn': 'string',
        'Status': 'available'|'modifying'|'incompatible-network'|'insufficient-resource-limits'|'creating'|'deleting'|'suspended'|'suspending'|'reactivating',
        'EngineFamily': 'string',
        'VpcSecurityGroupIds': [
            'string',
        ],
        'VpcSubnetIds': [
            'string',
        ],
        'Auth': [
            {
                'Description': 'string',
                'UserName': 'string',
                'AuthScheme': 'SECRETS',
                'SecretArn': 'string',
                'IAMAuth': 'DISABLED'|'REQUIRED'
            },
        ],
        'RoleArn': 'string',
        'Endpoint': 'string',
        'RequireTLS': True|False,
        'IdleClientTimeout': 123,
        'DebugLogging': True|False,
        'CreatedDate': datetime(2015, 1, 1),
        'UpdatedDate': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --

DBProxy (dict) --
The DBProxy object representing the new settings for the proxy.

DBProxyName (string) --
The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.

DBProxyArn (string) --
The Amazon Resource Name (ARN) for the proxy.

Status (string) --
The current status of this proxy. A status of available means the proxy is ready to handle requests. Other values indicate that you must wait for the proxy to be ready, or take some action to resolve an issue.

EngineFamily (string) --
The engine family applies to MySQL and PostgreSQL for both RDS and Aurora.

VpcSecurityGroupIds (list) --
Provides a list of VPC security groups that the proxy belongs to.

(string) --


VpcSubnetIds (list) --
The EC2 subnet IDs for the proxy.

(string) --


Auth (list) --
One or more data structures specifying the authorization mechanism to connect to the associated RDS DB instance or Aurora DB cluster.

(dict) --

Note
This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.

Returns the details of authentication used by a proxy to log in as a specific database user.

Description (string) --
A user-specified description about the authentication used by a proxy to log in as a specific database user.

UserName (string) --
The name of the database user to which the proxy connects.

AuthScheme (string) --
The type of authentication that the proxy uses for connections from the proxy to the underlying database.

SecretArn (string) --
The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.

IAMAuth (string) --
Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.





RoleArn (string) --
The Amazon Resource Name (ARN) for the IAM role that the proxy uses to access Amazon Secrets Manager.

Endpoint (string) --
The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.

RequireTLS (boolean) --
Indicates whether Transport Layer Security (TLS) encryption is required for connections to the proxy.

IdleClientTimeout (integer) --
The number of seconds a connection to the proxy can have no activity before the proxy drops the client connection. The proxy keeps the underlying database connection open and puts it back into the connection pool for reuse by later connection requests.
Default: 1800 (30 minutes)
Constraints: 1 to 28,800

DebugLogging (boolean) --
Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.

CreatedDate (datetime) --
The date and time when the proxy was first created.

UpdatedDate (datetime) --
The date and time when the proxy was last updated.









Exceptions

RDS.Client.exceptions.DBProxyNotFoundFault
RDS.Client.exceptions.DBProxyAlreadyExistsFault
RDS.Client.exceptions.InvalidDBProxyStateFault


    :return: {
        'DBProxy': {
            'DBProxyName': 'string',
            'DBProxyArn': 'string',
            'Status': 'available'|'modifying'|'incompatible-network'|'insufficient-resource-limits'|'creating'|'deleting'|'suspended'|'suspending'|'reactivating',
            'EngineFamily': 'string',
            'VpcSecurityGroupIds': [
                'string',
            ],
            'VpcSubnetIds': [
                'string',
            ],
            'Auth': [
                {
                    'Description': 'string',
                    'UserName': 'string',
                    'AuthScheme': 'SECRETS',
                    'SecretArn': 'string',
                    'IAMAuth': 'DISABLED'|'REQUIRED'
                },
            ],
            'RoleArn': 'string',
            'Endpoint': 'string',
            'RequireTLS': True|False,
            'IdleClientTimeout': 123,
            'DebugLogging': True|False,
            'CreatedDate': datetime(2015, 1, 1),
            'UpdatedDate': datetime(2015, 1, 1)
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_db_proxy_target_group(TargetGroupName=None, DBProxyName=None, ConnectionPoolConfig=None, NewName=None):
    """
    Modifies the properties of a DBProxyTargetGroup .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.modify_db_proxy_target_group(
        TargetGroupName='string',
        DBProxyName='string',
        ConnectionPoolConfig={
            'MaxConnectionsPercent': 123,
            'MaxIdleConnectionsPercent': 123,
            'ConnectionBorrowTimeout': 123,
            'SessionPinningFilters': [
                'string',
            ],
            'InitQuery': 'string'
        },
        NewName='string'
    )
    
    
    :type TargetGroupName: string
    :param TargetGroupName: [REQUIRED]\nThe name of the new target group to assign to the proxy.\n

    :type DBProxyName: string
    :param DBProxyName: [REQUIRED]\nThe name of the new proxy to which to assign the target group.\n

    :type ConnectionPoolConfig: dict
    :param ConnectionPoolConfig: The settings that determine the size and behavior of the connection pool for the target group.\n\nMaxConnectionsPercent (integer) --The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.\nDefault: 100\nConstraints: between 1 and 100\n\nMaxIdleConnectionsPercent (integer) --Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.\nDefault: 50\nConstraints: between 0 and MaxConnectionsPercent\n\nConnectionBorrowTimeout (integer) --The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.\nDefault: 120\nConstraints: between 1 and 3600, or 0 representing unlimited\n\nSessionPinningFilters (list) --Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior.\nDefault: no session pinning filters\n\n(string) --\n\n\nInitQuery (string) --One or more SQL statements for the proxy to run when opening each new database connection. Typically used with SET statements to make sure that each connection has identical settings such as time zone and character set. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single SET statement, such as SET x=1, y=2 .\n\nInitQuery is not currently supported for PostgreSQL.\nDefault: no initialization query\n\n\n

    :type NewName: string
    :param NewName: The new name for the modified DBProxyTarget . An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can\'t end with a hyphen or contain two consecutive hyphens.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBProxyTargetGroup': {
        'DBProxyName': 'string',
        'TargetGroupName': 'string',
        'TargetGroupArn': 'string',
        'IsDefault': True|False,
        'Status': 'string',
        'ConnectionPoolConfig': {
            'MaxConnectionsPercent': 123,
            'MaxIdleConnectionsPercent': 123,
            'ConnectionBorrowTimeout': 123,
            'SessionPinningFilters': [
                'string',
            ],
            'InitQuery': 'string'
        },
        'CreatedDate': datetime(2015, 1, 1),
        'UpdatedDate': datetime(2015, 1, 1)
    }
}


Response Structure

(dict) --

DBProxyTargetGroup (dict) --
The settings of the modified DBProxyTarget .

DBProxyName (string) --
The identifier for the RDS proxy associated with this target group.

TargetGroupName (string) --
The identifier for the target group. This name must be unique for all target groups owned by your AWS account in the specified AWS Region.

TargetGroupArn (string) --
The Amazon Resource Name (ARN) representing the target group.

IsDefault (boolean) --
Whether this target group is the first one used for connection requests by the associated proxy. Because each proxy is currently associated with a single target group, currently this setting is always true .

Status (string) --
The current status of this target group. A status of available means the target group is correctly associated with a database. Other values indicate that you must wait for the target group to be ready, or take some action to resolve an issue.

ConnectionPoolConfig (dict) --
The settings that determine the size and behavior of the connection pool for the target group.

MaxConnectionsPercent (integer) --
The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.

MaxIdleConnectionsPercent (integer) --
Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.

ConnectionBorrowTimeout (integer) --
The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.

SessionPinningFilters (list) --
Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. Currently, the only allowed value is EXCLUDE_VARIABLE_SETS .

(string) --


InitQuery (string) --
One or more SQL statements for the proxy to run when opening each new database connection. Typically used with SET statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single SET statement, such as SET x=1, y=2 .

InitQuery is not currently supported for PostgreSQL.




CreatedDate (datetime) --
The date and time when the target group was first created.

UpdatedDate (datetime) --
The date and time when the target group was last updated.









Exceptions

RDS.Client.exceptions.DBProxyNotFoundFault
RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
RDS.Client.exceptions.InvalidDBProxyStateFault


    :return: {
        'DBProxyTargetGroup': {
            'DBProxyName': 'string',
            'TargetGroupName': 'string',
            'TargetGroupArn': 'string',
            'IsDefault': True|False,
            'Status': 'string',
            'ConnectionPoolConfig': {
                'MaxConnectionsPercent': 123,
                'MaxIdleConnectionsPercent': 123,
                'ConnectionBorrowTimeout': 123,
                'SessionPinningFilters': [
                    'string',
                ],
                'InitQuery': 'string'
            },
            'CreatedDate': datetime(2015, 1, 1),
            'UpdatedDate': datetime(2015, 1, 1)
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_db_snapshot(DBSnapshotIdentifier=None, EngineVersion=None, OptionGroupName=None):
    """
    Updates a manual DB snapshot with a new engine version. The snapshot can be encrypted or unencrypted, but not shared or public.
    Amazon RDS supports upgrading DB snapshots for MySQL, Oracle, and PostgreSQL.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.modify_db_snapshot(
        DBSnapshotIdentifier='string',
        EngineVersion='string',
        OptionGroupName='string'
    )
    
    
    :type DBSnapshotIdentifier: string
    :param DBSnapshotIdentifier: [REQUIRED]\nThe identifier of the DB snapshot to modify.\n

    :type EngineVersion: string
    :param EngineVersion: The engine version to upgrade the DB snapshot to.\nThe following are the database engines and engine versions that are available when you upgrade a DB snapshot.\n\nMySQL\n\n5.5.46 (supported for 5.1 DB snapshots)\n\n\nOracle\n\n12.1.0.2.v8 (supported for 12.1.0.1 DB snapshots)\n11.2.0.4.v12 (supported for 11.2.0.2 DB snapshots)\n11.2.0.4.v11 (supported for 11.2.0.3 DB snapshots)\n\n\nPostgreSQL\nFor the list of engine versions that are available for upgrading a DB snapshot, see Upgrading the PostgreSQL DB Engine for Amazon RDS .\n

    :type OptionGroupName: string
    :param OptionGroupName: The option group to identify with the upgraded DB snapshot.\nYou can specify this parameter when you upgrade an Oracle DB snapshot. The same option group considerations apply when upgrading a DB snapshot as when upgrading a DB instance. For more information, see Option Group Considerations in the Amazon RDS User Guide.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBSnapshot': {
        'DBSnapshotIdentifier': 'string',
        'DBInstanceIdentifier': 'string',
        'SnapshotCreateTime': datetime(2015, 1, 1),
        'Engine': 'string',
        'AllocatedStorage': 123,
        'Status': 'string',
        'Port': 123,
        'AvailabilityZone': 'string',
        'VpcId': 'string',
        'InstanceCreateTime': datetime(2015, 1, 1),
        'MasterUsername': 'string',
        'EngineVersion': 'string',
        'LicenseModel': 'string',
        'SnapshotType': 'string',
        'Iops': 123,
        'OptionGroupName': 'string',
        'PercentProgress': 123,
        'SourceRegion': 'string',
        'SourceDBSnapshotIdentifier': 'string',
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'Encrypted': True|False,
        'KmsKeyId': 'string',
        'DBSnapshotArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DbiResourceId': 'string'
    }
}


Response Structure

(dict) --

DBSnapshot (dict) --
Contains the details of an Amazon RDS DB snapshot.
This data type is used as a response element in the DescribeDBSnapshots action.

DBSnapshotIdentifier (string) --
Specifies the identifier for the DB snapshot.

DBInstanceIdentifier (string) --
Specifies the DB instance identifier of the DB instance this DB snapshot was created from.

SnapshotCreateTime (datetime) --
Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).

Engine (string) --
Specifies the name of the database engine.

AllocatedStorage (integer) --
Specifies the allocated storage size in gibibytes (GiB).

Status (string) --
Specifies the status of this DB snapshot.

Port (integer) --
Specifies the port that the database engine was listening on at the time of the snapshot.

AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.

VpcId (string) --
Provides the VPC ID associated with the DB snapshot.

InstanceCreateTime (datetime) --
Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC).

MasterUsername (string) --
Provides the master username for the DB snapshot.

EngineVersion (string) --
Specifies the version of the database engine.

LicenseModel (string) --
License model information for the restored DB instance.

SnapshotType (string) --
Provides the type of the DB snapshot.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.

OptionGroupName (string) --
Provides the option group name for the DB snapshot.

PercentProgress (integer) --
The percentage of the estimated data that has been transferred.

SourceRegion (string) --
The AWS Region that the DB snapshot was created in or copied from.

SourceDBSnapshotIdentifier (string) --
The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has value in case of cross-customer or cross-region copy.

StorageType (string) --
Specifies the storage type associated with DB snapshot.

TdeCredentialArn (string) --
The ARN from the key store with which to associate the instance for TDE encryption.

Encrypted (boolean) --
Specifies whether the DB snapshot is encrypted.

KmsKeyId (string) --
If Encrypted is true, the AWS KMS key identifier for the encrypted DB snapshot.

DBSnapshotArn (string) --
The Amazon Resource Name (ARN) for the DB snapshot.

Timezone (string) --
The time zone of the DB snapshot. In most cases, the Timezone element is empty. Timezone content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.

ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB snapshot was created.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DbiResourceId (string) --
The identifier for the source DB instance, which can\'t be changed and which is unique to an AWS Region.









Exceptions

RDS.Client.exceptions.DBSnapshotNotFoundFault


    :return: {
        'DBSnapshot': {
            'DBSnapshotIdentifier': 'string',
            'DBInstanceIdentifier': 'string',
            'SnapshotCreateTime': datetime(2015, 1, 1),
            'Engine': 'string',
            'AllocatedStorage': 123,
            'Status': 'string',
            'Port': 123,
            'AvailabilityZone': 'string',
            'VpcId': 'string',
            'InstanceCreateTime': datetime(2015, 1, 1),
            'MasterUsername': 'string',
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'SnapshotType': 'string',
            'Iops': 123,
            'OptionGroupName': 'string',
            'PercentProgress': 123,
            'SourceRegion': 'string',
            'SourceDBSnapshotIdentifier': 'string',
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'Encrypted': True|False,
            'KmsKeyId': 'string',
            'DBSnapshotArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DbiResourceId': 'string'
        }
    }
    
    
    :returns: 
    CreateDBInstance
    ModifyDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceFromS3
    RestoreDBInstanceToPointInTime
    
    """
    pass

def modify_db_snapshot_attribute(DBSnapshotIdentifier=None, AttributeName=None, ValuesToAdd=None, ValuesToRemove=None):
    """
    Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.
    To share a manual DB snapshot with other AWS accounts, specify restore as the AttributeName and use the ValuesToAdd parameter to add a list of IDs of the AWS accounts that are authorized to restore the manual DB snapshot. Uses the value all to make the manual DB snapshot public, which means it can be copied or restored by all AWS accounts. Do not add the all value for any manual DB snapshots that contain private information that you don\'t want available to all AWS accounts. If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized AWS account IDs for the ValuesToAdd parameter. You can\'t use all as a value for that parameter in this case.
    To view which AWS accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the DescribeDBSnapshotAttributes API action.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example adds the specified attribute for the specified DB snapshot.
    Expected Output:
    
    :example: response = client.modify_db_snapshot_attribute(
        DBSnapshotIdentifier='string',
        AttributeName='string',
        ValuesToAdd=[
            'string',
        ],
        ValuesToRemove=[
            'string',
        ]
    )
    
    
    :type DBSnapshotIdentifier: string
    :param DBSnapshotIdentifier: [REQUIRED]\nThe identifier for the DB snapshot to modify the attributes for.\n

    :type AttributeName: string
    :param AttributeName: [REQUIRED]\nThe name of the DB snapshot attribute to modify.\nTo manage authorization for other AWS accounts to copy or restore a manual DB snapshot, set this value to restore .\n

    :type ValuesToAdd: list
    :param ValuesToAdd: A list of DB snapshot attributes to add to the attribute specified by AttributeName .\nTo authorize other AWS accounts to copy or restore a manual snapshot, set this list to include one or more AWS account IDs, or all to make the manual DB snapshot restorable by any AWS account. Do not add the all value for any manual DB snapshots that contain private information that you don\'t want available to all AWS accounts.\n\n(string) --\n\n

    :type ValuesToRemove: list
    :param ValuesToRemove: A list of DB snapshot attributes to remove from the attribute specified by AttributeName .\nTo remove authorization for other AWS accounts to copy or restore a manual snapshot, set this list to include one or more AWS account identifiers, or all to remove authorization for any AWS account to copy or restore the DB snapshot. If you specify all , an AWS account whose account ID is explicitly added to the restore attribute can still copy or restore the manual DB snapshot.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBSnapshotAttributesResult': {
        'DBSnapshotIdentifier': 'string',
        'DBSnapshotAttributes': [
            {
                'AttributeName': 'string',
                'AttributeValues': [
                    'string',
                ]
            },
        ]
    }
}


Response Structure

(dict) --

DBSnapshotAttributesResult (dict) --
Contains the results of a successful call to the DescribeDBSnapshotAttributes API action.
Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB snapshot. For more information, see the ModifyDBSnapshotAttribute API action.

DBSnapshotIdentifier (string) --
The identifier of the manual DB snapshot that the attributes apply to.

DBSnapshotAttributes (list) --
The list of attributes and values for the manual DB snapshot.

(dict) --
Contains the name and values of a manual DB snapshot attribute
Manual DB snapshot attributes are used to authorize other AWS accounts to restore a manual DB snapshot. For more information, see the ModifyDBSnapshotAttribute API.

AttributeName (string) --
The name of the manual DB snapshot attribute.
The attribute named restore refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the ModifyDBSnapshotAttribute API action.

AttributeValues (list) --
The value or values for the manual DB snapshot attribute.
If the AttributeName field is set to restore , then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB snapshot. If a value of all is in the list, then the manual DB snapshot is public and available for any AWS account to copy or restore.

(string) --














Exceptions

RDS.Client.exceptions.DBSnapshotNotFoundFault
RDS.Client.exceptions.InvalidDBSnapshotStateFault
RDS.Client.exceptions.SharedSnapshotQuotaExceededFault

Examples
This example adds the specified attribute for the specified DB snapshot.
response = client.modify_db_snapshot_attribute(
    AttributeName='restore',
    DBSnapshotIdentifier='mydbsnapshot',
    ValuesToAdd=[
        'all',
    ],
)

print(response)


Expected Output:
{
    'DBSnapshotAttributesResult': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSnapshotAttributesResult': {
            'DBSnapshotIdentifier': 'string',
            'DBSnapshotAttributes': [
                {
                    'AttributeName': 'string',
                    'AttributeValues': [
                        'string',
                    ]
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_db_subnet_group(DBSubnetGroupName=None, DBSubnetGroupDescription=None, SubnetIds=None):
    """
    Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example changes the specified setting for the specified DB subnet group.
    Expected Output:
    
    :example: response = client.modify_db_subnet_group(
        DBSubnetGroupName='string',
        DBSubnetGroupDescription='string',
        SubnetIds=[
            'string',
        ]
    )
    
    
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: [REQUIRED]\nThe name for the DB subnet group. This value is stored as a lowercase string. You can\'t modify the default subnet group.\nConstraints: Must match the name of an existing DBSubnetGroup. Must not be default.\nExample: mySubnetgroup\n

    :type DBSubnetGroupDescription: string
    :param DBSubnetGroupDescription: The description for the DB subnet group.

    :type SubnetIds: list
    :param SubnetIds: [REQUIRED]\nThe EC2 subnet IDs for the DB subnet group.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBSubnetGroup': {
        'DBSubnetGroupName': 'string',
        'DBSubnetGroupDescription': 'string',
        'VpcId': 'string',
        'SubnetGroupStatus': 'string',
        'Subnets': [
            {
                'SubnetIdentifier': 'string',
                'SubnetAvailabilityZone': {
                    'Name': 'string'
                },
                'SubnetStatus': 'string'
            },
        ],
        'DBSubnetGroupArn': 'string'
    }
}


Response Structure

(dict) --

DBSubnetGroup (dict) --
Contains the details of an Amazon RDS DB subnet group.
This data type is used as a response element in the DescribeDBSubnetGroups action.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.









Exceptions

RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.DBSubnetQuotaExceededFault
RDS.Client.exceptions.SubnetAlreadyInUse
RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
RDS.Client.exceptions.InvalidSubnet

Examples
This example changes the specified setting for the specified DB subnet group.
response = client.modify_db_subnet_group(
    DBSubnetGroupName='mydbsubnetgroup',
    SubnetIds=[
        'subnet-70e1975a',
        'subnet-747a5c49',
    ],
)

print(response)


Expected Output:
{
    'DBSubnetGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBSubnetGroupNotFoundFault
    RDS.Client.exceptions.DBSubnetQuotaExceededFault
    RDS.Client.exceptions.SubnetAlreadyInUse
    RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
    RDS.Client.exceptions.InvalidSubnet
    
    """
    pass

def modify_event_subscription(SubscriptionName=None, SnsTopicArn=None, SourceType=None, EventCategories=None, Enabled=None):
    """
    Modifies an existing RDS event notification subscription. You can\'t modify the source identifiers using this call. To change source identifiers for a subscription, use the AddSourceIdentifierToSubscription and RemoveSourceIdentifierFromSubscription calls.
    You can see a list of the event categories for a given SourceType in the Events topic in the Amazon RDS User Guide or by using the DescribeEventCategories action.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example changes the specified setting for the specified event notification subscription.
    Expected Output:
    
    :example: response = client.modify_event_subscription(
        SubscriptionName='string',
        SnsTopicArn='string',
        SourceType='string',
        EventCategories=[
            'string',
        ],
        Enabled=True|False
    )
    
    
    :type SubscriptionName: string
    :param SubscriptionName: [REQUIRED]\nThe name of the RDS event notification subscription.\n

    :type SnsTopicArn: string
    :param SnsTopicArn: The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.

    :type SourceType: string
    :param SourceType: The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. If this value isn\'t specified, all events are returned.\nValid values: db-instance | db-parameter-group | db-security-group | db-snapshot\n

    :type EventCategories: list
    :param EventCategories: A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType in the Events topic in the Amazon RDS User Guide or by using the DescribeEventCategories action.\n\n(string) --\n\n

    :type Enabled: boolean
    :param Enabled: A value that indicates whether to activate the subscription.

    :rtype: dict

ReturnsResponse Syntax
{
    'EventSubscription': {
        'CustomerAwsId': 'string',
        'CustSubscriptionId': 'string',
        'SnsTopicArn': 'string',
        'Status': 'string',
        'SubscriptionCreationTime': 'string',
        'SourceType': 'string',
        'SourceIdsList': [
            'string',
        ],
        'EventCategoriesList': [
            'string',
        ],
        'Enabled': True|False,
        'EventSubscriptionArn': 'string'
    }
}


Response Structure

(dict) --

EventSubscription (dict) --
Contains the results of a successful invocation of the DescribeEventSubscriptions action.

CustomerAwsId (string) --
The AWS customer account associated with the RDS event notification subscription.

CustSubscriptionId (string) --
The RDS event notification subscription Id.

SnsTopicArn (string) --
The topic ARN of the RDS event notification subscription.

Status (string) --
The status of the RDS event notification subscription.
Constraints:
Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist
The status "no-permission" indicates that RDS no longer has permission to post to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.

SubscriptionCreationTime (string) --
The time the RDS event notification subscription was created.

SourceType (string) --
The source type for the RDS event notification subscription.

SourceIdsList (list) --
A list of source IDs for the RDS event notification subscription.

(string) --


EventCategoriesList (list) --
A list of event categories for the RDS event notification subscription.

(string) --


Enabled (boolean) --
A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.

EventSubscriptionArn (string) --
The Amazon Resource Name (ARN) for the event subscription.









Exceptions

RDS.Client.exceptions.EventSubscriptionQuotaExceededFault
RDS.Client.exceptions.SubscriptionNotFoundFault
RDS.Client.exceptions.SNSInvalidTopicFault
RDS.Client.exceptions.SNSNoAuthorizationFault
RDS.Client.exceptions.SNSTopicArnNotFoundFault
RDS.Client.exceptions.SubscriptionCategoryNotFoundFault

Examples
This example changes the specified setting for the specified event notification subscription.
response = client.modify_event_subscription(
    Enabled=True,
    EventCategories=[
        'deletion',
        'low storage',
    ],
    SourceType='db-instance',
    SubscriptionName='mymysqleventsubscription',
)

print(response)


Expected Output:
{
    'EventSubscription': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'EventSubscription': {
            'CustomerAwsId': 'string',
            'CustSubscriptionId': 'string',
            'SnsTopicArn': 'string',
            'Status': 'string',
            'SubscriptionCreationTime': 'string',
            'SourceType': 'string',
            'SourceIdsList': [
                'string',
            ],
            'EventCategoriesList': [
                'string',
            ],
            'Enabled': True|False,
            'EventSubscriptionArn': 'string'
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_global_cluster(GlobalClusterIdentifier=None, NewGlobalClusterIdentifier=None, DeletionProtection=None):
    """
    Modify a setting for an Amazon Aurora global cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.modify_global_cluster(
        GlobalClusterIdentifier='string',
        NewGlobalClusterIdentifier='string',
        DeletionProtection=True|False
    )
    
    
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: The DB cluster identifier for the global cluster being modified. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust match the identifier of an existing global database cluster.\n\n

    :type NewGlobalClusterIdentifier: string
    :param NewGlobalClusterIdentifier: The new cluster identifier for the global database cluster when modifying a global database cluster. This value is stored as a lowercase string.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens\nThe first character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: my-cluster2\n

    :type DeletionProtection: boolean
    :param DeletionProtection: Indicates if the global database cluster has deletion protection enabled. The global database cluster can\'t be deleted when deletion protection is enabled.

    :rtype: dict

ReturnsResponse Syntax
{
    'GlobalCluster': {
        'GlobalClusterIdentifier': 'string',
        'GlobalClusterResourceId': 'string',
        'GlobalClusterArn': 'string',
        'Status': 'string',
        'Engine': 'string',
        'EngineVersion': 'string',
        'DatabaseName': 'string',
        'StorageEncrypted': True|False,
        'DeletionProtection': True|False,
        'GlobalClusterMembers': [
            {
                'DBClusterArn': 'string',
                'Readers': [
                    'string',
                ],
                'IsWriter': True|False
            },
        ]
    }
}


Response Structure

(dict) --

GlobalCluster (dict) --
A data type representing an Aurora global database.

GlobalClusterIdentifier (string) --
Contains a user-supplied global database cluster identifier. This identifier is the unique key that identifies a global database cluster.

GlobalClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

GlobalClusterArn (string) --
The Amazon Resource Name (ARN) for the global database cluster.

Status (string) --
Specifies the current state of this global database cluster.

Engine (string) --
The Aurora database engine used by the global database cluster.

EngineVersion (string) --
Indicates the database engine version.

DatabaseName (string) --
The default database name within the new global database cluster.

StorageEncrypted (boolean) --
The storage encryption setting for the global database cluster.

DeletionProtection (boolean) --
The deletion protection setting for the new global database cluster.

GlobalClusterMembers (list) --
The list of cluster IDs for secondary clusters within the global database cluster. Currently limited to 1 item.

(dict) --
A data structure with information about any primary and secondary clusters associated with an Aurora global database.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for each Aurora cluster.

Readers (list) --
The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global database.

(string) --


IsWriter (boolean) --
Specifies whether the Aurora cluster is the primary cluster (that is, has read-write capability) for the Aurora global database with which it is associated.













Exceptions

RDS.Client.exceptions.GlobalClusterNotFoundFault
RDS.Client.exceptions.InvalidGlobalClusterStateFault


    :return: {
        'GlobalCluster': {
            'GlobalClusterIdentifier': 'string',
            'GlobalClusterResourceId': 'string',
            'GlobalClusterArn': 'string',
            'Status': 'string',
            'Engine': 'string',
            'EngineVersion': 'string',
            'DatabaseName': 'string',
            'StorageEncrypted': True|False,
            'DeletionProtection': True|False,
            'GlobalClusterMembers': [
                {
                    'DBClusterArn': 'string',
                    'Readers': [
                        'string',
                    ],
                    'IsWriter': True|False
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def modify_option_group(OptionGroupName=None, OptionsToInclude=None, OptionsToRemove=None, ApplyImmediately=None):
    """
    Modifies an existing option group.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    The following example adds an option to an option group.
    Expected Output:
    
    :example: response = client.modify_option_group(
        OptionGroupName='string',
        OptionsToInclude=[
            {
                'OptionName': 'string',
                'Port': 123,
                'OptionVersion': 'string',
                'DBSecurityGroupMemberships': [
                    'string',
                ],
                'VpcSecurityGroupMemberships': [
                    'string',
                ],
                'OptionSettings': [
                    {
                        'Name': 'string',
                        'Value': 'string',
                        'DefaultValue': 'string',
                        'Description': 'string',
                        'ApplyType': 'string',
                        'DataType': 'string',
                        'AllowedValues': 'string',
                        'IsModifiable': True|False,
                        'IsCollection': True|False
                    },
                ]
            },
        ],
        OptionsToRemove=[
            'string',
        ],
        ApplyImmediately=True|False
    )
    
    
    :type OptionGroupName: string
    :param OptionGroupName: [REQUIRED]\nThe name of the option group to be modified.\nPermanent options, such as the TDE option for Oracle Advanced Security TDE, can\'t be removed from an option group, and that option group can\'t be removed from a DB instance once it is associated with a DB instance\n

    :type OptionsToInclude: list
    :param OptionsToInclude: Options in this list are added to the option group or, if already present, the specified configuration is used to update the existing configuration.\n\n(dict) --A list of all available options\n\nOptionName (string) -- [REQUIRED]The configuration of options to include in a group.\n\nPort (integer) --The optional port for the option.\n\nOptionVersion (string) --The version for the option.\n\nDBSecurityGroupMemberships (list) --A list of DBSecurityGroupMembership name strings used for this option.\n\n(string) --\n\n\nVpcSecurityGroupMemberships (list) --A list of VpcSecurityGroupMembership name strings used for this option.\n\n(string) --\n\n\nOptionSettings (list) --The option settings to include in an option group.\n\n(dict) --Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.\n\nName (string) --The name of the option that has settings that you can set.\n\nValue (string) --The current value of the option setting.\n\nDefaultValue (string) --The default value of the option setting.\n\nDescription (string) --The description of the option setting.\n\nApplyType (string) --The DB engine specific parameter type.\n\nDataType (string) --The data type of the option setting.\n\nAllowedValues (string) --The allowed values of the option setting.\n\nIsModifiable (boolean) --A Boolean value that, when true, indicates the option setting can be modified from the default.\n\nIsCollection (boolean) --Indicates if the option setting is part of a collection.\n\n\n\n\n\n\n\n\n

    :type OptionsToRemove: list
    :param OptionsToRemove: Options in this list are removed from the option group.\n\n(string) --\n\n

    :type ApplyImmediately: boolean
    :param ApplyImmediately: A value that indicates whether to apply the change immediately or during the next maintenance window for each instance associated with the option group.

    :rtype: dict

ReturnsResponse Syntax
{
    'OptionGroup': {
        'OptionGroupName': 'string',
        'OptionGroupDescription': 'string',
        'EngineName': 'string',
        'MajorEngineVersion': 'string',
        'Options': [
            {
                'OptionName': 'string',
                'OptionDescription': 'string',
                'Persistent': True|False,
                'Permanent': True|False,
                'Port': 123,
                'OptionVersion': 'string',
                'OptionSettings': [
                    {
                        'Name': 'string',
                        'Value': 'string',
                        'DefaultValue': 'string',
                        'Description': 'string',
                        'ApplyType': 'string',
                        'DataType': 'string',
                        'AllowedValues': 'string',
                        'IsModifiable': True|False,
                        'IsCollection': True|False
                    },
                ],
                'DBSecurityGroupMemberships': [
                    {
                        'DBSecurityGroupName': 'string',
                        'Status': 'string'
                    },
                ],
                'VpcSecurityGroupMemberships': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ]
            },
        ],
        'AllowsVpcAndNonVpcInstanceMemberships': True|False,
        'VpcId': 'string',
        'OptionGroupArn': 'string'
    }
}


Response Structure

(dict) --

OptionGroup (dict) --

OptionGroupName (string) --
Specifies the name of the option group.

OptionGroupDescription (string) --
Provides a description of the option group.

EngineName (string) --
Indicates the name of the engine that this option group can be applied to.

MajorEngineVersion (string) --
Indicates the major engine version associated with this option group.

Options (list) --
Indicates what options are available in the option group.

(dict) --
Option details.

OptionName (string) --
The name of the option.

OptionDescription (string) --
The description of the option.

Persistent (boolean) --
Indicate if this option is persistent.

Permanent (boolean) --
Indicate if this option is permanent.

Port (integer) --
If required, the port configured for this option to use.

OptionVersion (string) --
The version of the option.

OptionSettings (list) --
The option settings for this option.

(dict) --
Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.

Name (string) --
The name of the option that has settings that you can set.

Value (string) --
The current value of the option setting.

DefaultValue (string) --
The default value of the option setting.

Description (string) --
The description of the option setting.

ApplyType (string) --
The DB engine specific parameter type.

DataType (string) --
The data type of the option setting.

AllowedValues (string) --
The allowed values of the option setting.

IsModifiable (boolean) --
A Boolean value that, when true, indicates the option setting can be modified from the default.

IsCollection (boolean) --
Indicates if the option setting is part of a collection.





DBSecurityGroupMemberships (list) --
If the option requires access to a port, then this DB security group allows access to the port.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroupMemberships (list) --
If the option requires access to a port, then this VPC security group allows access to the port.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.









AllowsVpcAndNonVpcInstanceMemberships (boolean) --
Indicates whether this option group can be applied to both VPC and non-VPC instances. The value true indicates the option group can be applied to both VPC and non-VPC instances.

VpcId (string) --
If AllowsVpcAndNonVpcInstanceMemberships is false , this field is blank. If AllowsVpcAndNonVpcInstanceMemberships is true and this field is blank, then this option group can be applied to both VPC and non-VPC instances. If this field contains a value, then this option group can only be applied to instances that are in the VPC indicated by this field.

OptionGroupArn (string) --
The Amazon Resource Name (ARN) for the option group.









Exceptions

RDS.Client.exceptions.InvalidOptionGroupStateFault
RDS.Client.exceptions.OptionGroupNotFoundFault

Examples
The following example adds an option to an option group.
response = client.modify_option_group(
    ApplyImmediately=True,
    OptionGroupName='myawsuser-og02',
    OptionsToInclude=[
        {
            'DBSecurityGroupMemberships': [
                'default',
            ],
            'OptionName': 'MEMCACHED',
        },
    ],
)

print(response)


Expected Output:
{
    'OptionGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'OptionGroup': {
            'OptionGroupName': 'string',
            'OptionGroupDescription': 'string',
            'EngineName': 'string',
            'MajorEngineVersion': 'string',
            'Options': [
                {
                    'OptionName': 'string',
                    'OptionDescription': 'string',
                    'Persistent': True|False,
                    'Permanent': True|False,
                    'Port': 123,
                    'OptionVersion': 'string',
                    'OptionSettings': [
                        {
                            'Name': 'string',
                            'Value': 'string',
                            'DefaultValue': 'string',
                            'Description': 'string',
                            'ApplyType': 'string',
                            'DataType': 'string',
                            'AllowedValues': 'string',
                            'IsModifiable': True|False,
                            'IsCollection': True|False
                        },
                    ],
                    'DBSecurityGroupMemberships': [
                        {
                            'DBSecurityGroupName': 'string',
                            'Status': 'string'
                        },
                    ],
                    'VpcSecurityGroupMemberships': [
                        {
                            'VpcSecurityGroupId': 'string',
                            'Status': 'string'
                        },
                    ]
                },
            ],
            'AllowsVpcAndNonVpcInstanceMemberships': True|False,
            'VpcId': 'string',
            'OptionGroupArn': 'string'
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def promote_read_replica(DBInstanceIdentifier=None, BackupRetentionPeriod=None, PreferredBackupWindow=None):
    """
    Promotes a read replica DB instance to a standalone DB instance.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example promotes the specified read replica and sets its backup retention period and preferred backup window.
    Expected Output:
    
    :example: response = client.promote_read_replica(
        DBInstanceIdentifier='string',
        BackupRetentionPeriod=123,
        PreferredBackupWindow='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe DB instance identifier. This value is stored as a lowercase string.\nConstraints:\n\nMust match the identifier of an existing read replica DB instance.\n\nExample: mydbinstance\n

    :type BackupRetentionPeriod: integer
    :param BackupRetentionPeriod: The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.\nDefault: 1\nConstraints:\n\nMust be a value from 0 to 35.\nCan\'t be set to 0 if the DB instance is a source to read replicas.\n\n

    :type PreferredBackupWindow: string
    :param PreferredBackupWindow: The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter.\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred Maintenance Window in the Amazon RDS User Guide.\nConstraints:\n\nMust be in the format hh24:mi-hh24:mi .\nMust be in Universal Coordinated Time (UTC).\nMust not conflict with the preferred maintenance window.\nMust be at least 30 minutes.\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.DBInstanceNotFoundFault

Examples
This example promotes the specified read replica and sets its backup retention period and preferred backup window.
response = client.promote_read_replica(
    BackupRetentionPeriod=1,
    DBInstanceIdentifier='mydbreadreplica',
    PreferredBackupWindow='03:30-04:00',
)

print(response)


Expected Output:
{
    'DBInstance': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    DBInstanceIdentifier (string) -- [REQUIRED]
    The DB instance identifier. This value is stored as a lowercase string.
    Constraints:
    
    Must match the identifier of an existing read replica DB instance.
    
    Example: mydbinstance
    
    BackupRetentionPeriod (integer) -- The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.
    Default: 1
    Constraints:
    
    Must be a value from 0 to 35.
    Can\'t be set to 0 if the DB instance is a source to read replicas.
    
    
    PreferredBackupWindow (string) -- The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter.
    The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred Maintenance Window in the Amazon RDS User Guide.
    Constraints:
    
    Must be in the format hh24:mi-hh24:mi .
    Must be in Universal Coordinated Time (UTC).
    Must not conflict with the preferred maintenance window.
    Must be at least 30 minutes.
    
    
    
    """
    pass

def promote_read_replica_db_cluster(DBClusterIdentifier=None):
    """
    Promotes a read replica DB cluster to a standalone DB cluster.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.promote_read_replica_db_cluster(
        DBClusterIdentifier='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe identifier of the DB cluster read replica to promote. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust match the identifier of an existing DB cluster read replica.\n\nExample: my-cluster-replica1\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --
DBCluster (dict) --Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --Specifies the current state of this DB cluster.

PercentProgress (string) --Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --Indicates the database engine version.

LatestRestorableTime (datetime) --Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --Specifies the port that the database engine is listening on.

MasterUsername (string) --Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --Provides the list of option group memberships for this DB cluster.

(dict) --Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --Specifies the name of the DB cluster option group.

Status (string) --Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --Provides the list of instances that make up the DB cluster.

(dict) --Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --The name of the VPC security group.

Status (string) --The status of the VPC security group.





HostedZoneId (string) --Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --The status of the database activity stream.

ActivityStreamKmsKeyId (string) --The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --The Active Directory Domain membership records associated with the DB cluster.

(dict) --An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --The identifier of the Active Directory Domain.

Status (string) --The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --The name of the IAM role to be used when making API calls to the Directory Service.












Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault


    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def purchase_reserved_db_instances_offering(ReservedDBInstancesOfferingId=None, ReservedDBInstanceId=None, DBInstanceCount=None, Tags=None):
    """
    Purchases a reserved DB instance offering.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example purchases a reserved DB instance offering that matches the specified settings.
    Expected Output:
    
    :example: response = client.purchase_reserved_db_instances_offering(
        ReservedDBInstancesOfferingId='string',
        ReservedDBInstanceId='string',
        DBInstanceCount=123,
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    )
    
    
    :type ReservedDBInstancesOfferingId: string
    :param ReservedDBInstancesOfferingId: [REQUIRED]\nThe ID of the Reserved DB instance offering to purchase.\nExample: 438012d3-4052-4cc7-b2e3-8d3372e0e706\n

    :type ReservedDBInstanceId: string
    :param ReservedDBInstanceId: Customer-specified identifier to track this reservation.\nExample: myreservationID\n

    :type DBInstanceCount: integer
    :param DBInstanceCount: The number of instances to reserve.\nDefault: 1\n

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ReservedDBInstance': {
        'ReservedDBInstanceId': 'string',
        'ReservedDBInstancesOfferingId': 'string',
        'DBInstanceClass': 'string',
        'StartTime': datetime(2015, 1, 1),
        'Duration': 123,
        'FixedPrice': 123.0,
        'UsagePrice': 123.0,
        'CurrencyCode': 'string',
        'DBInstanceCount': 123,
        'ProductDescription': 'string',
        'OfferingType': 'string',
        'MultiAZ': True|False,
        'State': 'string',
        'RecurringCharges': [
            {
                'RecurringChargeAmount': 123.0,
                'RecurringChargeFrequency': 'string'
            },
        ],
        'ReservedDBInstanceArn': 'string',
        'LeaseId': 'string'
    }
}


Response Structure

(dict) --

ReservedDBInstance (dict) --
This data type is used as a response element in the DescribeReservedDBInstances and PurchaseReservedDBInstancesOffering actions.

ReservedDBInstanceId (string) --
The unique identifier for the reservation.

ReservedDBInstancesOfferingId (string) --
The offering identifier.

DBInstanceClass (string) --
The DB instance class for the reserved DB instance.

StartTime (datetime) --
The time the reservation started.

Duration (integer) --
The duration of the reservation in seconds.

FixedPrice (float) --
The fixed price charged for this reserved DB instance.

UsagePrice (float) --
The hourly price charged for this reserved DB instance.

CurrencyCode (string) --
The currency code for the reserved DB instance.

DBInstanceCount (integer) --
The number of reserved DB instances.

ProductDescription (string) --
The description of the reserved DB instance.

OfferingType (string) --
The offering type of this reserved DB instance.

MultiAZ (boolean) --
Indicates if the reservation applies to Multi-AZ deployments.

State (string) --
The state of the reserved DB instance.

RecurringCharges (list) --
The recurring price charged to run this reserved DB instance.

(dict) --
This data type is used as a response element in the DescribeReservedDBInstances and DescribeReservedDBInstancesOfferings actions.

RecurringChargeAmount (float) --
The amount of the recurring charge.

RecurringChargeFrequency (string) --
The frequency of the recurring charge.





ReservedDBInstanceArn (string) --
The Amazon Resource Name (ARN) for the reserved DB instance.

LeaseId (string) --
The unique identifier for the lease associated with the reserved DB instance.

Note
AWS Support might request the lease ID for an issue related to a reserved DB instance.










Exceptions

RDS.Client.exceptions.ReservedDBInstancesOfferingNotFoundFault
RDS.Client.exceptions.ReservedDBInstanceAlreadyExistsFault
RDS.Client.exceptions.ReservedDBInstanceQuotaExceededFault

Examples
This example purchases a reserved DB instance offering that matches the specified settings.
response = client.purchase_reserved_db_instances_offering(
    ReservedDBInstanceId='myreservationid',
    ReservedDBInstancesOfferingId='fb29428a-646d-4390-850e-5fe89926e727',
)

print(response)


Expected Output:
{
    'ReservedDBInstance': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'ReservedDBInstance': {
            'ReservedDBInstanceId': 'string',
            'ReservedDBInstancesOfferingId': 'string',
            'DBInstanceClass': 'string',
            'StartTime': datetime(2015, 1, 1),
            'Duration': 123,
            'FixedPrice': 123.0,
            'UsagePrice': 123.0,
            'CurrencyCode': 'string',
            'DBInstanceCount': 123,
            'ProductDescription': 'string',
            'OfferingType': 'string',
            'MultiAZ': True|False,
            'State': 'string',
            'RecurringCharges': [
                {
                    'RecurringChargeAmount': 123.0,
                    'RecurringChargeFrequency': 'string'
                },
            ],
            'ReservedDBInstanceArn': 'string',
            'LeaseId': 'string'
        }
    }
    
    
    :returns: 
    RDS.Client.exceptions.ReservedDBInstancesOfferingNotFoundFault
    RDS.Client.exceptions.ReservedDBInstanceAlreadyExistsFault
    RDS.Client.exceptions.ReservedDBInstanceQuotaExceededFault
    
    """
    pass

def reboot_db_instance(DBInstanceIdentifier=None, ForceFailover=None):
    """
    You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect.
    Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting.
    For more information about rebooting, see Rebooting a DB Instance in the Amazon RDS User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example reboots the specified DB instance without forcing a failover.
    Expected Output:
    
    :example: response = client.reboot_db_instance(
        DBInstanceIdentifier='string',
        ForceFailover=True|False
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe DB instance identifier. This parameter is stored as a lowercase string.\nConstraints:\n\nMust match the identifier of an existing DBInstance.\n\n

    :type ForceFailover: boolean
    :param ForceFailover: A value that indicates whether the reboot is conducted through a Multi-AZ failover.\nConstraint: You can\'t enable force failover if the instance isn\'t configured for Multi-AZ.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.DBInstanceNotFoundFault

Examples
This example reboots the specified DB instance without forcing a failover.
response = client.reboot_db_instance(
    DBInstanceIdentifier='mymysqlinstance',
    ForceFailover=False,
)

print(response)


Expected Output:
{
    'DBInstance': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def register_db_proxy_targets(DBProxyName=None, TargetGroupName=None, DBInstanceIdentifiers=None, DBClusterIdentifiers=None):
    """
    Associate one or more DBProxyTarget data structures with a DBProxyTargetGroup .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.register_db_proxy_targets(
        DBProxyName='string',
        TargetGroupName='string',
        DBInstanceIdentifiers=[
            'string',
        ],
        DBClusterIdentifiers=[
            'string',
        ]
    )
    
    
    :type DBProxyName: string
    :param DBProxyName: [REQUIRED]\nThe identifier of the DBProxy that is associated with the DBProxyTargetGroup .\n

    :type TargetGroupName: string
    :param TargetGroupName: The identifier of the DBProxyTargetGroup .

    :type DBInstanceIdentifiers: list
    :param DBInstanceIdentifiers: One or more DB instance identifiers.\n\n(string) --\n\n

    :type DBClusterIdentifiers: list
    :param DBClusterIdentifiers: One or more DB cluster identifiers.\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBProxyTargets': [
        {
            'TargetArn': 'string',
            'Endpoint': 'string',
            'TrackedClusterId': 'string',
            'RdsResourceId': 'string',
            'Port': 123,
            'Type': 'RDS_INSTANCE'|'RDS_SERVERLESS_ENDPOINT'|'TRACKED_CLUSTER',
            'TargetHealth': {
                'State': 'REGISTERING'|'AVAILABLE'|'UNAVAILABLE',
                'Reason': 'UNREACHABLE'|'CONNECTION_FAILED'|'AUTH_FAILURE'|'PENDING_PROXY_CAPACITY',
                'Description': 'string'
            }
        },
    ]
}


Response Structure

(dict) --

DBProxyTargets (list) --
One or more DBProxyTarget objects that are created when you register targets with a target group.

(dict) --

Note
This is prerelease documentation for the RDS Database Proxy feature in preview release. It is subject to change.

Contains the details for an RDS Proxy target. It represents an RDS DB instance or Aurora DB cluster that the proxy can connect to. One or more targets are associated with an RDS Proxy target group.
This data type is used as a response element in the DescribeDBProxyTargets action.

TargetArn (string) --
The Amazon Resource Name (ARN) for the RDS DB instance or Aurora DB cluster.

Endpoint (string) --
The writer endpoint for the RDS DB instance or Aurora DB cluster.

TrackedClusterId (string) --
The DB cluster identifier when the target represents an Aurora DB cluster. This field is blank when the target represents an RDS DB instance.

RdsResourceId (string) --
The identifier representing the target. It can be the instance identifier for an RDS DB instance, or the cluster identifier for an Aurora DB cluster.

Port (integer) --
The port that the RDS Proxy uses to connect to the target RDS DB instance or Aurora DB cluster.

Type (string) --
Specifies the kind of database, such as an RDS DB instance or an Aurora DB cluster, that the target represents.

TargetHealth (dict) --
Information about the connection health of the RDS Proxy target.

State (string) --
The current state of the connection health lifecycle for the RDS Proxy target. The following is a typical lifecycle example for the states of an RDS Proxy target:

registering > unavailable > available > unavailable > available


Reason (string) --
The reason for the current health State of the RDS Proxy target.

Description (string) --
A description of the health of the RDS Proxy target. If the State is AVAILABLE , a description is not included.













Exceptions

RDS.Client.exceptions.DBProxyNotFoundFault
RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.DBProxyTargetAlreadyRegisteredFault
RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBProxyStateFault


    :return: {
        'DBProxyTargets': [
            {
                'TargetArn': 'string',
                'Endpoint': 'string',
                'TrackedClusterId': 'string',
                'RdsResourceId': 'string',
                'Port': 123,
                'Type': 'RDS_INSTANCE'|'RDS_SERVERLESS_ENDPOINT'|'TRACKED_CLUSTER',
                'TargetHealth': {
                    'State': 'REGISTERING'|'AVAILABLE'|'UNAVAILABLE',
                    'Reason': 'UNREACHABLE'|'CONNECTION_FAILED'|'AUTH_FAILURE'|'PENDING_PROXY_CAPACITY',
                    'Description': 'string'
                }
            },
        ]
    }
    
    
    :returns: 
    RDS.Client.exceptions.DBProxyNotFoundFault
    RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
    RDS.Client.exceptions.DBClusterNotFoundFault
    RDS.Client.exceptions.DBInstanceNotFoundFault
    RDS.Client.exceptions.DBProxyTargetAlreadyRegisteredFault
    RDS.Client.exceptions.InvalidDBInstanceStateFault
    RDS.Client.exceptions.InvalidDBClusterStateFault
    RDS.Client.exceptions.InvalidDBProxyStateFault
    
    """
    pass

def remove_from_global_cluster(GlobalClusterIdentifier=None, DbClusterIdentifier=None):
    """
    Detaches an Aurora secondary cluster from an Aurora global database cluster. The cluster becomes a standalone cluster with read-write capability instead of being read-only and receiving data from a primary cluster in a different region.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.remove_from_global_cluster(
        GlobalClusterIdentifier='string',
        DbClusterIdentifier='string'
    )
    
    
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: The cluster identifier to detach from the Aurora global database cluster.

    :type DbClusterIdentifier: string
    :param DbClusterIdentifier: The Amazon Resource Name (ARN) identifying the cluster that was detached from the Aurora global database cluster.

    :rtype: dict

ReturnsResponse Syntax
{
    'GlobalCluster': {
        'GlobalClusterIdentifier': 'string',
        'GlobalClusterResourceId': 'string',
        'GlobalClusterArn': 'string',
        'Status': 'string',
        'Engine': 'string',
        'EngineVersion': 'string',
        'DatabaseName': 'string',
        'StorageEncrypted': True|False,
        'DeletionProtection': True|False,
        'GlobalClusterMembers': [
            {
                'DBClusterArn': 'string',
                'Readers': [
                    'string',
                ],
                'IsWriter': True|False
            },
        ]
    }
}


Response Structure

(dict) --

GlobalCluster (dict) --
A data type representing an Aurora global database.

GlobalClusterIdentifier (string) --
Contains a user-supplied global database cluster identifier. This identifier is the unique key that identifies a global database cluster.

GlobalClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

GlobalClusterArn (string) --
The Amazon Resource Name (ARN) for the global database cluster.

Status (string) --
Specifies the current state of this global database cluster.

Engine (string) --
The Aurora database engine used by the global database cluster.

EngineVersion (string) --
Indicates the database engine version.

DatabaseName (string) --
The default database name within the new global database cluster.

StorageEncrypted (boolean) --
The storage encryption setting for the global database cluster.

DeletionProtection (boolean) --
The deletion protection setting for the new global database cluster.

GlobalClusterMembers (list) --
The list of cluster IDs for secondary clusters within the global database cluster. Currently limited to 1 item.

(dict) --
A data structure with information about any primary and secondary clusters associated with an Aurora global database.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for each Aurora cluster.

Readers (list) --
The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global database.

(string) --


IsWriter (boolean) --
Specifies whether the Aurora cluster is the primary cluster (that is, has read-write capability) for the Aurora global database with which it is associated.













Exceptions

RDS.Client.exceptions.GlobalClusterNotFoundFault
RDS.Client.exceptions.InvalidGlobalClusterStateFault
RDS.Client.exceptions.DBClusterNotFoundFault


    :return: {
        'GlobalCluster': {
            'GlobalClusterIdentifier': 'string',
            'GlobalClusterResourceId': 'string',
            'GlobalClusterArn': 'string',
            'Status': 'string',
            'Engine': 'string',
            'EngineVersion': 'string',
            'DatabaseName': 'string',
            'StorageEncrypted': True|False,
            'DeletionProtection': True|False,
            'GlobalClusterMembers': [
                {
                    'DBClusterArn': 'string',
                    'Readers': [
                        'string',
                    ],
                    'IsWriter': True|False
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def remove_role_from_db_cluster(DBClusterIdentifier=None, RoleArn=None, FeatureName=None):
    """
    Disassociates an AWS Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see Authorizing Amazon Aurora MySQL to Access Other AWS Services on Your Behalf in the Amazon Aurora User Guide .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.remove_role_from_db_cluster(
        DBClusterIdentifier='string',
        RoleArn='string',
        FeatureName='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe name of the DB cluster to disassociate the IAM role from.\n

    :type RoleArn: string
    :param RoleArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the IAM role to disassociate from the Aurora DB cluster, for example arn:aws:iam::123456789012:role/AuroraAccessRole .\n

    :type FeatureName: string
    :param FeatureName: The name of the feature for the DB cluster that the IAM role is to be disassociated from. For the list of supported feature names, see DBEngineVersion .

    :returns: 
    RDS.Client.exceptions.DBClusterNotFoundFault
    RDS.Client.exceptions.DBClusterRoleNotFoundFault
    RDS.Client.exceptions.InvalidDBClusterStateFault
    
    """
    pass

def remove_role_from_db_instance(DBInstanceIdentifier=None, RoleArn=None, FeatureName=None):
    """
    Disassociates an AWS Identity and Access Management (IAM) role from a DB instance.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.remove_role_from_db_instance(
        DBInstanceIdentifier='string',
        RoleArn='string',
        FeatureName='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe name of the DB instance to disassociate the IAM role from.\n

    :type RoleArn: string
    :param RoleArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the IAM role to disassociate from the DB instance, for example arn:aws:iam::123456789012:role/AccessRole .\n

    :type FeatureName: string
    :param FeatureName: [REQUIRED]\nThe name of the feature for the DB instance that the IAM role is to be disassociated from. For the list of supported feature names, see DBEngineVersion .\n

    :returns: 
    RDS.Client.exceptions.DBInstanceNotFoundFault
    RDS.Client.exceptions.DBInstanceRoleNotFoundFault
    RDS.Client.exceptions.InvalidDBInstanceStateFault
    
    """
    pass

def remove_source_identifier_from_subscription(SubscriptionName=None, SourceIdentifier=None):
    """
    Removes a source identifier from an existing RDS event notification subscription.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example removes the specified source identifier from the specified DB event subscription.
    Expected Output:
    
    :example: response = client.remove_source_identifier_from_subscription(
        SubscriptionName='string',
        SourceIdentifier='string'
    )
    
    
    :type SubscriptionName: string
    :param SubscriptionName: [REQUIRED]\nThe name of the RDS event notification subscription you want to remove a source identifier from.\n

    :type SourceIdentifier: string
    :param SourceIdentifier: [REQUIRED]\nThe source identifier to be removed from the subscription, such as the DB instance identifier for a DB instance or the name of a security group.\n

    :rtype: dict

ReturnsResponse Syntax
{
    'EventSubscription': {
        'CustomerAwsId': 'string',
        'CustSubscriptionId': 'string',
        'SnsTopicArn': 'string',
        'Status': 'string',
        'SubscriptionCreationTime': 'string',
        'SourceType': 'string',
        'SourceIdsList': [
            'string',
        ],
        'EventCategoriesList': [
            'string',
        ],
        'Enabled': True|False,
        'EventSubscriptionArn': 'string'
    }
}


Response Structure

(dict) --

EventSubscription (dict) --
Contains the results of a successful invocation of the DescribeEventSubscriptions action.

CustomerAwsId (string) --
The AWS customer account associated with the RDS event notification subscription.

CustSubscriptionId (string) --
The RDS event notification subscription Id.

SnsTopicArn (string) --
The topic ARN of the RDS event notification subscription.

Status (string) --
The status of the RDS event notification subscription.
Constraints:
Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist
The status "no-permission" indicates that RDS no longer has permission to post to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.

SubscriptionCreationTime (string) --
The time the RDS event notification subscription was created.

SourceType (string) --
The source type for the RDS event notification subscription.

SourceIdsList (list) --
A list of source IDs for the RDS event notification subscription.

(string) --


EventCategoriesList (list) --
A list of event categories for the RDS event notification subscription.

(string) --


Enabled (boolean) --
A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.

EventSubscriptionArn (string) --
The Amazon Resource Name (ARN) for the event subscription.









Exceptions

RDS.Client.exceptions.SubscriptionNotFoundFault
RDS.Client.exceptions.SourceNotFoundFault

Examples
This example removes the specified source identifier from the specified DB event subscription.
response = client.remove_source_identifier_from_subscription(
    SourceIdentifier='mymysqlinstance',
    SubscriptionName='myeventsubscription',
)

print(response)


Expected Output:
{
    'EventSubscription': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'EventSubscription': {
            'CustomerAwsId': 'string',
            'CustSubscriptionId': 'string',
            'SnsTopicArn': 'string',
            'Status': 'string',
            'SubscriptionCreationTime': 'string',
            'SourceType': 'string',
            'SourceIdsList': [
                'string',
            ],
            'EventCategoriesList': [
                'string',
            ],
            'Enabled': True|False,
            'EventSubscriptionArn': 'string'
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def remove_tags_from_resource(ResourceName=None, TagKeys=None):
    """
    Removes metadata tags from an Amazon RDS resource.
    For an overview on tagging an Amazon RDS resource, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example removes the specified tag associated with the specified DB option group.
    Expected Output:
    
    :example: response = client.remove_tags_from_resource(
        ResourceName='string',
        TagKeys=[
            'string',
        ]
    )
    
    
    :type ResourceName: string
    :param ResourceName: [REQUIRED]\nThe Amazon RDS resource that the tags are removed from. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see Constructing an ARN for Amazon RDS in the Amazon RDS User Guide.\n

    :type TagKeys: list
    :param TagKeys: [REQUIRED]\nThe tag key (name) of the tag to be removed.\n\n(string) --\n\n

    :return: response = client.remove_tags_from_resource(
        ResourceName='arn:aws:rds:us-east-1:992648334831:og:mydboptiongroup',
        TagKeys=[
            'MyKey',
        ],
    )
    
    print(response)
    
    
    :returns: 
    RDS.Client.exceptions.DBInstanceNotFoundFault
    RDS.Client.exceptions.DBSnapshotNotFoundFault
    RDS.Client.exceptions.DBClusterNotFoundFault
    RDS.Client.exceptions.DBProxyNotFoundFault
    RDS.Client.exceptions.DBProxyTargetGroupNotFoundFault
    
    """
    pass

def reset_db_cluster_parameter_group(DBClusterParameterGroupName=None, ResetAllParameters=None, Parameters=None):
    """
    Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: ParameterName and ApplyMethod . To reset the entire DB cluster parameter group, specify the DBClusterParameterGroupName and ResetAllParameters parameters.
    When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to pending-reboot to take effect on the next DB instance restart or RebootDBInstance request. You must call RebootDBInstance for every DB instance in your DB cluster that you want the updated static parameter to apply to.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example resets all parameters for the specified DB cluster parameter group to their default values.
    Expected Output:
    
    :example: response = client.reset_db_cluster_parameter_group(
        DBClusterParameterGroupName='string',
        ResetAllParameters=True|False,
        Parameters=[
            {
                'ParameterName': 'string',
                'ParameterValue': 'string',
                'Description': 'string',
                'Source': 'string',
                'ApplyType': 'string',
                'DataType': 'string',
                'AllowedValues': 'string',
                'IsModifiable': True|False,
                'MinimumEngineVersion': 'string',
                'ApplyMethod': 'immediate'|'pending-reboot',
                'SupportedEngineModes': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: [REQUIRED]\nThe name of the DB cluster parameter group to reset.\n

    :type ResetAllParameters: boolean
    :param ResetAllParameters: A value that indicates whether to reset all parameters in the DB cluster parameter group to their default values. You can\'t use this parameter if there is a list of parameter names specified for the Parameters parameter.

    :type Parameters: list
    :param Parameters: A list of parameter names in the DB cluster parameter group to reset to the default values. You can\'t use this parameter if the ResetAllParameters parameter is enabled.\n\n(dict) --This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions.\nThis data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.\n\nParameterName (string) --Specifies the name of the parameter.\n\nParameterValue (string) --Specifies the value of the parameter.\n\nDescription (string) --Provides a description of the parameter.\n\nSource (string) --Indicates the source of the parameter value.\n\nApplyType (string) --Specifies the engine specific parameters type.\n\nDataType (string) --Specifies the valid data type for the parameter.\n\nAllowedValues (string) --Specifies the valid range of values for the parameter.\n\nIsModifiable (boolean) --Indicates whether (true ) or not (false ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.\n\nMinimumEngineVersion (string) --The earliest engine version to which the parameter can apply.\n\nApplyMethod (string) --Indicates when to apply parameter updates.\n\nSupportedEngineModes (list) --The valid DB engine modes.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBClusterParameterGroupName': 'string'
}


Response Structure

(dict) --

DBClusterParameterGroupName (string) --
The name of the DB cluster parameter group.
Constraints:

Must be 1 to 255 letters or numbers.
First character must be a letter
Can\'t end with a hyphen or contain two consecutive hyphens


Note
This value is stored as a lowercase string.








Exceptions

RDS.Client.exceptions.InvalidDBParameterGroupStateFault
RDS.Client.exceptions.DBParameterGroupNotFoundFault

Examples
This example resets all parameters for the specified DB cluster parameter group to their default values.
response = client.reset_db_cluster_parameter_group(
    DBClusterParameterGroupName='mydbclusterparametergroup',
    ResetAllParameters=True,
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBClusterParameterGroupName': 'string'
    }
    
    
    :returns: 
    Must be 1 to 255 letters or numbers.
    First character must be a letter
    Can\'t end with a hyphen or contain two consecutive hyphens
    
    """
    pass

def reset_db_parameter_group(DBParameterGroupName=None, ResetAllParameters=None, Parameters=None):
    """
    Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: ParameterName and ApplyMethod . To reset the entire DB parameter group, specify the DBParameterGroup name and ResetAllParameters parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to pending-reboot to take effect on the next DB instance restart or RebootDBInstance request.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example resets all parameters for the specified DB parameter group to their default values.
    Expected Output:
    
    :example: response = client.reset_db_parameter_group(
        DBParameterGroupName='string',
        ResetAllParameters=True|False,
        Parameters=[
            {
                'ParameterName': 'string',
                'ParameterValue': 'string',
                'Description': 'string',
                'Source': 'string',
                'ApplyType': 'string',
                'DataType': 'string',
                'AllowedValues': 'string',
                'IsModifiable': True|False,
                'MinimumEngineVersion': 'string',
                'ApplyMethod': 'immediate'|'pending-reboot',
                'SupportedEngineModes': [
                    'string',
                ]
            },
        ]
    )
    
    
    :type DBParameterGroupName: string
    :param DBParameterGroupName: [REQUIRED]\nThe name of the DB parameter group.\nConstraints:\n\nMust match the name of an existing DBParameterGroup .\n\n

    :type ResetAllParameters: boolean
    :param ResetAllParameters: A value that indicates whether to reset all parameters in the DB parameter group to default values. By default, all parameters in the DB parameter group are reset to default values.

    :type Parameters: list
    :param Parameters: To reset the entire DB parameter group, specify the DBParameterGroup name and ResetAllParameters parameters. To reset specific parameters, provide a list of the following: ParameterName and ApplyMethod . A maximum of 20 parameters can be modified in a single request.\n\nMySQL\nValid Values (for Apply method): immediate | pending-reboot\nYou can use the immediate value with dynamic parameters only. You can use the pending-reboot value for both dynamic and static parameters, and changes are applied when DB instance reboots.\n\nMariaDB\nValid Values (for Apply method): immediate | pending-reboot\nYou can use the immediate value with dynamic parameters only. You can use the pending-reboot value for both dynamic and static parameters, and changes are applied when DB instance reboots.\n\nOracle\nValid Values (for Apply method): pending-reboot\n\n(dict) --This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions.\nThis data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.\n\nParameterName (string) --Specifies the name of the parameter.\n\nParameterValue (string) --Specifies the value of the parameter.\n\nDescription (string) --Provides a description of the parameter.\n\nSource (string) --Indicates the source of the parameter value.\n\nApplyType (string) --Specifies the engine specific parameters type.\n\nDataType (string) --Specifies the valid data type for the parameter.\n\nAllowedValues (string) --Specifies the valid range of values for the parameter.\n\nIsModifiable (boolean) --Indicates whether (true ) or not (false ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.\n\nMinimumEngineVersion (string) --The earliest engine version to which the parameter can apply.\n\nApplyMethod (string) --Indicates when to apply parameter updates.\n\nSupportedEngineModes (list) --The valid DB engine modes.\n\n(string) --\n\n\n\n\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'DBParameterGroupName': 'string'
}


Response Structure

(dict) --
Contains the result of a successful invocation of the ModifyDBParameterGroup or ResetDBParameterGroup action.

DBParameterGroupName (string) --
Provides the name of the DB parameter group.







Exceptions

RDS.Client.exceptions.InvalidDBParameterGroupStateFault
RDS.Client.exceptions.DBParameterGroupNotFoundFault

Examples
This example resets all parameters for the specified DB parameter group to their default values.
response = client.reset_db_parameter_group(
    DBParameterGroupName='mydbparametergroup',
    ResetAllParameters=True,
)

print(response)


Expected Output:
{
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBParameterGroupName': 'string'
    }
    
    
    :returns: 
    RDS.Client.exceptions.InvalidDBParameterGroupStateFault
    RDS.Client.exceptions.DBParameterGroupNotFoundFault
    
    """
    pass

def restore_db_cluster_from_s3(AvailabilityZones=None, BackupRetentionPeriod=None, CharacterSetName=None, DatabaseName=None, DBClusterIdentifier=None, DBClusterParameterGroupName=None, VpcSecurityGroupIds=None, DBSubnetGroupName=None, Engine=None, EngineVersion=None, Port=None, MasterUsername=None, MasterUserPassword=None, OptionGroupName=None, PreferredBackupWindow=None, PreferredMaintenanceWindow=None, Tags=None, StorageEncrypted=None, KmsKeyId=None, EnableIAMDatabaseAuthentication=None, SourceEngine=None, SourceEngineVersion=None, S3BucketName=None, S3Prefix=None, S3IngestionRoleArn=None, BacktrackWindow=None, EnableCloudwatchLogsExports=None, DeletionProtection=None, CopyTagsToSnapshot=None, Domain=None, DomainIAMRoleName=None):
    """
    Creates an Amazon Aurora DB cluster from data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in Migrating Data to an Amazon Aurora MySQL DB Cluster in the Amazon Aurora User Guide .
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.restore_db_cluster_from_s3(
        AvailabilityZones=[
            'string',
        ],
        BackupRetentionPeriod=123,
        CharacterSetName='string',
        DatabaseName='string',
        DBClusterIdentifier='string',
        DBClusterParameterGroupName='string',
        VpcSecurityGroupIds=[
            'string',
        ],
        DBSubnetGroupName='string',
        Engine='string',
        EngineVersion='string',
        Port=123,
        MasterUsername='string',
        MasterUserPassword='string',
        OptionGroupName='string',
        PreferredBackupWindow='string',
        PreferredMaintenanceWindow='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        StorageEncrypted=True|False,
        KmsKeyId='string',
        EnableIAMDatabaseAuthentication=True|False,
        SourceEngine='string',
        SourceEngineVersion='string',
        S3BucketName='string',
        S3Prefix='string',
        S3IngestionRoleArn='string',
        BacktrackWindow=123,
        EnableCloudwatchLogsExports=[
            'string',
        ],
        DeletionProtection=True|False,
        CopyTagsToSnapshot=True|False,
        Domain='string',
        DomainIAMRoleName='string'
    )
    
    
    :type AvailabilityZones: list
    :param AvailabilityZones: A list of Availability Zones (AZs) where instances in the restored DB cluster can be created.\n\n(string) --\n\n

    :type BackupRetentionPeriod: integer
    :param BackupRetentionPeriod: The number of days for which automated backups of the restored DB cluster are retained. You must specify a minimum value of 1.\nDefault: 1\nConstraints:\n\nMust be a value from 1 to 35\n\n

    :type CharacterSetName: string
    :param CharacterSetName: A value that indicates that the restored DB cluster should be associated with the specified CharacterSet.

    :type DatabaseName: string
    :param DatabaseName: The database name for the restored DB cluster.

    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe name of the DB cluster to create from the source data in the Amazon S3 bucket. This parameter is isn\'t case-sensitive.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\nExample: my-cluster1\n

    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: The name of the DB cluster parameter group to associate with the restored DB cluster. If this argument is omitted, default.aurora5.6 is used.\nConstraints:\n\nIf supplied, must match the name of an existing DBClusterParameterGroup.\n\n

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of EC2 VPC security groups to associate with the restored DB cluster.\n\n(string) --\n\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: A DB subnet group to associate with the restored DB cluster.\nConstraints: If supplied, must match the name of an existing DBSubnetGroup.\nExample: mySubnetgroup\n

    :type Engine: string
    :param Engine: [REQUIRED]\nThe name of the database engine to be used for the restored DB cluster.\nValid Values: aurora , aurora-postgresql\n

    :type EngineVersion: string
    :param EngineVersion: The version number of the database engine to use.\nTo list all of the available engine versions for aurora (for MySQL 5.6-compatible Aurora), use the following command:\n\naws rds describe-db-engine-versions --engine aurora --query 'DBEngineVersions[].EngineVersion'\nTo list all of the available engine versions for aurora-mysql (for MySQL 5.7-compatible Aurora), use the following command:\n\naws rds describe-db-engine-versions --engine aurora-mysql --query 'DBEngineVersions[].EngineVersion'\nTo list all of the available engine versions for aurora-postgresql , use the following command:\n\naws rds describe-db-engine-versions --engine aurora-postgresql --query 'DBEngineVersions[].EngineVersion'Aurora MySQL\n\nExample: 5.6.10a , 5.6.mysql_aurora.1.19.2 , 5.7.12 , 5.7.mysql_aurora.2.04.5\n\nAurora PostgreSQL\nExample: 9.6.3 , 10.7\n

    :type Port: integer
    :param Port: The port number on which the instances in the restored DB cluster accept connections.\nDefault: 3306\n

    :type MasterUsername: string
    :param MasterUsername: [REQUIRED]\nThe name of the master user for the restored DB cluster.\nConstraints:\n\nMust be 1 to 16 letters or numbers.\nFirst character must be a letter.\nCan\'t be a reserved word for the chosen database engine.\n\n

    :type MasterUserPassword: string
    :param MasterUserPassword: [REQUIRED]\nThe password for the master database user. This password can contain any printable ASCII character except '/', ''', or '@'.\nConstraints: Must contain from 8 to 41 characters.\n

    :type OptionGroupName: string
    :param OptionGroupName: A value that indicates that the restored DB cluster should be associated with the specified option group.\nPermanent options can\'t be removed from an option group. An option group can\'t be removed from a DB cluster once it is associated with a DB cluster.\n

    :type PreferredBackupWindow: string
    :param PreferredBackupWindow: The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred Maintenance Window in the Amazon Aurora User Guide.\nConstraints:\n\nMust be in the format hh24:mi-hh24:mi .\nMust be in Universal Coordinated Time (UTC).\nMust not conflict with the preferred maintenance window.\nMust be at least 30 minutes.\n\n

    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).\nFormat: ddd:hh24:mi-ddd:hh24:mi\nThe default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see Adjusting the Preferred Maintenance Window in the Amazon Aurora User Guide.\nValid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.\nConstraints: Minimum 30-minute window.\n

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type StorageEncrypted: boolean
    :param StorageEncrypted: A value that indicates whether the restored DB cluster is encrypted.

    :type KmsKeyId: string
    :param KmsKeyId: The AWS KMS key identifier for an encrypted DB cluster.\nThe KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KM encryption key.\nIf the StorageEncrypted parameter is enabled, and you do not specify a value for the KmsKeyId parameter, then Amazon RDS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.\n

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.\nFor more information, see IAM Database Authentication in the Amazon Aurora User Guide.\n

    :type SourceEngine: string
    :param SourceEngine: [REQUIRED]\nThe identifier for the database engine that was backed up to create the files stored in the Amazon S3 bucket.\nValid values: mysql\n

    :type SourceEngineVersion: string
    :param SourceEngineVersion: [REQUIRED]\nThe version of the database that the backup files were created from.\nMySQL version 5.5 and 5.6 are supported.\nExample: 5.6.22\n

    :type S3BucketName: string
    :param S3BucketName: [REQUIRED]\nThe name of the Amazon S3 bucket that contains the data used to create the Amazon Aurora DB cluster.\n

    :type S3Prefix: string
    :param S3Prefix: The prefix for all of the file names that contain the data used to create the Amazon Aurora DB cluster. If you do not specify a SourceS3Prefix value, then the Amazon Aurora DB cluster is created by using all of the files in the Amazon S3 bucket.

    :type S3IngestionRoleArn: string
    :param S3IngestionRoleArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that authorizes Amazon RDS to access the Amazon S3 bucket on your behalf.\n

    :type BacktrackWindow: integer
    :param BacktrackWindow: The target backtrack window, in seconds. To disable backtracking, set this value to 0.\nDefault: 0\nConstraints:\n\nIf specified, this value must be set to a number from 0 to 259,200 (72 hours).\n\n

    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: The list of logs that the restored DB cluster is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon Aurora User Guide .\n\n(string) --\n\n

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled.

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.

    :type Domain: string
    :param Domain: Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation.\nFor Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see Kerberos Authentication in the Amazon Aurora User Guide .\n

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: Specify the name of the IAM role to be used when making API calls to the Directory Service.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

DBCluster (dict) --
Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --
For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --
If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --
Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --
Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --
Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --
Specifies the current state of this DB cluster.

PercentProgress (string) --
Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --
The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --
Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --
The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --
Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --
Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --
Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --
Indicates the database engine version.

LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --
Specifies the port that the database engine is listening on.

MasterUsername (string) --
Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --
Provides the list of option group memberships for this DB cluster.

(dict) --
Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --
Specifies the name of the DB cluster option group.

Status (string) --
Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --
Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --
Provides the list of instances that make up the DB cluster.

(dict) --
Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --
Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --
Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --
Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --
Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --
Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --
If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --
Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --
Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --
A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --
Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --
The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --
The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --
The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --
The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --
The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --
Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --
The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --
The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --
A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --
The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --
The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --
Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --
A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --
The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --
The status of the database activity stream.

ActivityStreamKmsKeyId (string) --
The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --
The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --
Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB cluster.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.













Exceptions

RDS.Client.exceptions.DBClusterAlreadyExistsFault
RDS.Client.exceptions.DBClusterQuotaExceededFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBSubnetGroupStateFault
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.InvalidS3BucketFault
RDS.Client.exceptions.DBClusterParameterGroupNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.DomainNotFoundFault
RDS.Client.exceptions.InsufficientStorageClusterCapacityFault


    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def restore_db_cluster_from_snapshot(AvailabilityZones=None, DBClusterIdentifier=None, SnapshotIdentifier=None, Engine=None, EngineVersion=None, Port=None, DBSubnetGroupName=None, DatabaseName=None, OptionGroupName=None, VpcSecurityGroupIds=None, Tags=None, KmsKeyId=None, EnableIAMDatabaseAuthentication=None, BacktrackWindow=None, EnableCloudwatchLogsExports=None, EngineMode=None, ScalingConfiguration=None, DBClusterParameterGroupName=None, DeletionProtection=None, CopyTagsToSnapshot=None, Domain=None, DomainIAMRoleName=None):
    """
    Creates a new DB cluster from a DB snapshot or DB cluster snapshot. This action only applies to Aurora DB clusters.
    The target DB cluster is created from the source snapshot with a default configuration. If you don\'t specify a security group, the new DB cluster is associated with the default security group.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    The following example restores an Amazon Aurora DB cluster from a DB cluster snapshot.
    Expected Output:
    
    :example: response = client.restore_db_cluster_from_snapshot(
        AvailabilityZones=[
            'string',
        ],
        DBClusterIdentifier='string',
        SnapshotIdentifier='string',
        Engine='string',
        EngineVersion='string',
        Port=123,
        DBSubnetGroupName='string',
        DatabaseName='string',
        OptionGroupName='string',
        VpcSecurityGroupIds=[
            'string',
        ],
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        KmsKeyId='string',
        EnableIAMDatabaseAuthentication=True|False,
        BacktrackWindow=123,
        EnableCloudwatchLogsExports=[
            'string',
        ],
        EngineMode='string',
        ScalingConfiguration={
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        DBClusterParameterGroupName='string',
        DeletionProtection=True|False,
        CopyTagsToSnapshot=True|False,
        Domain='string',
        DomainIAMRoleName='string'
    )
    
    
    :type AvailabilityZones: list
    :param AvailabilityZones: Provides the list of Availability Zones (AZs) where instances in the restored DB cluster can be created.\n\n(string) --\n\n

    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe name of the DB cluster to create from the DB snapshot or DB cluster snapshot. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: my-snapshot-id\n

    :type SnapshotIdentifier: string
    :param SnapshotIdentifier: [REQUIRED]\nThe identifier for the DB snapshot or DB cluster snapshot to restore from.\nYou can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.\nConstraints:\n\nMust match the identifier of an existing Snapshot.\n\n

    :type Engine: string
    :param Engine: [REQUIRED]\nThe database engine to use for the new DB cluster.\nDefault: The same as source\nConstraint: Must be compatible with the engine of the source\n

    :type EngineVersion: string
    :param EngineVersion: The version of the database engine to use for the new DB cluster.\nTo list all of the available engine versions for aurora (for MySQL 5.6-compatible Aurora), use the following command:\n\naws rds describe-db-engine-versions --engine aurora --query 'DBEngineVersions[].EngineVersion'\nTo list all of the available engine versions for aurora-mysql (for MySQL 5.7-compatible Aurora), use the following command:\n\naws rds describe-db-engine-versions --engine aurora-mysql --query 'DBEngineVersions[].EngineVersion'\nTo list all of the available engine versions for aurora-postgresql , use the following command:\n\naws rds describe-db-engine-versions --engine aurora-postgresql --query 'DBEngineVersions[].EngineVersion'\n\nNote\n\nIf you aren\'t using the default engine version, then you must specify the engine version.\nAurora MySQL\n\nExample: 5.6.10a , 5.6.mysql_aurora.1.19.2 , 5.7.12 , 5.7.mysql_aurora.2.04.5\n\nAurora PostgreSQL\nExample: 9.6.3 , 10.7\n

    :type Port: integer
    :param Port: The port number on which the new DB cluster accepts connections.\nConstraints: This value must be 1150-65535\nDefault: The same port as the original DB cluster.\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: The name of the DB subnet group to use for the new DB cluster.\nConstraints: If supplied, must match the name of an existing DB subnet group.\nExample: mySubnetgroup\n

    :type DatabaseName: string
    :param DatabaseName: The database name for the restored DB cluster.

    :type OptionGroupName: string
    :param OptionGroupName: The name of the option group to use for the restored DB cluster.

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of VPC security groups that the new DB cluster will belong to.\n\n(string) --\n\n

    :type Tags: list
    :param Tags: The tags to be assigned to the restored DB cluster.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type KmsKeyId: string
    :param KmsKeyId: The AWS KMS key identifier to use when restoring an encrypted DB cluster from a DB snapshot or DB cluster snapshot.\nThe KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.\nIf you don\'t specify a value for the KmsKeyId parameter, then the following occurs:\n\nIf the DB snapshot or DB cluster snapshot in SnapshotIdentifier is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.\nIf the DB snapshot or DB cluster snapshot in SnapshotIdentifier isn\'t encrypted, then the restored DB cluster isn\'t encrypted.\n\n

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.\nFor more information, see IAM Database Authentication in the Amazon Aurora User Guide.\n

    :type BacktrackWindow: integer
    :param BacktrackWindow: The target backtrack window, in seconds. To disable backtracking, set this value to 0.\nDefault: 0\nConstraints:\n\nIf specified, this value must be set to a number from 0 to 259,200 (72 hours).\n\n

    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon Aurora User Guide .\n\n(string) --\n\n

    :type EngineMode: string
    :param EngineMode: The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

    :type ScalingConfiguration: dict
    :param ScalingConfiguration: For DB clusters in serverless DB engine mode, the scaling properties of the DB cluster.\n\nMinCapacity (integer) --The minimum capacity for an Aurora DB cluster in serverless DB engine mode.\nFor Aurora MySQL, valid capacity values are 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , and 256 .\nFor Aurora PostgreSQL, valid capacity values are 2 , 4 , 8 , 16 , 32 , 64 , 192 , and 384 .\nThe minimum capacity must be less than or equal to the maximum capacity.\n\nMaxCapacity (integer) --The maximum capacity for an Aurora DB cluster in serverless DB engine mode.\nFor Aurora MySQL, valid capacity values are 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , and 256 .\nFor Aurora PostgreSQL, valid capacity values are 2 , 4 , 8 , 16 , 32 , 64 , 192 , and 384 .\nThe maximum capacity must be greater than or equal to the minimum capacity.\n\nAutoPause (boolean) --A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it\'s idle (it has no connections).\n\nNote\nIf a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it.\n\n\nSecondsUntilAutoPause (integer) --The time, in seconds, before an Aurora DB cluster in serverless mode is paused.\n\nTimeoutAction (string) --The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange .\n\nForceApplyCapacityChange sets the capacity to the specified value as soon as possible.RollbackCapacityChange , the default, ignores the capacity change if a scaling point isn\'t found in the timeout period.\n\n\nWarning\nIf you specify ForceApplyCapacityChange , connections that prevent Aurora Serverless from finding a scaling point might be dropped.\n\nFor more information, see Autoscaling for Aurora Serverless in the Amazon Aurora User Guide .\n\n\n

    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default DB cluster parameter group for the specified engine is used.\nConstraints:\n\nIf supplied, must match the name of an existing default DB cluster parameter group.\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\n

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled.

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.

    :type Domain: string
    :param Domain: Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation.

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: Specify the name of the IAM role to be used when making API calls to the Directory Service.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

DBCluster (dict) --
Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --
For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --
If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --
Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --
Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --
Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --
Specifies the current state of this DB cluster.

PercentProgress (string) --
Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --
The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --
Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --
The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --
Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --
Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --
Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --
Indicates the database engine version.

LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --
Specifies the port that the database engine is listening on.

MasterUsername (string) --
Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --
Provides the list of option group memberships for this DB cluster.

(dict) --
Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --
Specifies the name of the DB cluster option group.

Status (string) --
Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --
Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --
Provides the list of instances that make up the DB cluster.

(dict) --
Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --
Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --
Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --
Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --
Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --
Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --
If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --
Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --
Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --
A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --
Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --
The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --
The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --
The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --
The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --
The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --
Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --
The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --
The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --
A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --
The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --
The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --
Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --
A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --
The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --
The status of the database activity stream.

ActivityStreamKmsKeyId (string) --
The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --
The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --
Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB cluster.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.













Exceptions

RDS.Client.exceptions.DBClusterAlreadyExistsFault
RDS.Client.exceptions.DBClusterQuotaExceededFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.DBSnapshotNotFoundFault
RDS.Client.exceptions.DBClusterSnapshotNotFoundFault
RDS.Client.exceptions.InsufficientDBClusterCapacityFault
RDS.Client.exceptions.InsufficientStorageClusterCapacityFault
RDS.Client.exceptions.InvalidDBSnapshotStateFault
RDS.Client.exceptions.InvalidDBClusterSnapshotStateFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.InvalidRestoreFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.OptionGroupNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.DomainNotFoundFault
RDS.Client.exceptions.DBClusterParameterGroupNotFoundFault

Examples
The following example restores an Amazon Aurora DB cluster from a DB cluster snapshot.
response = client.restore_db_cluster_from_snapshot(
    DBClusterIdentifier='restored-cluster1',
    Engine='aurora',
    SnapshotIdentifier='sample-cluster-snapshot1',
)

print(response)


Expected Output:
{
    'DBCluster': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def restore_db_cluster_to_point_in_time(DBClusterIdentifier=None, RestoreType=None, SourceDBClusterIdentifier=None, RestoreToTime=None, UseLatestRestorableTime=None, Port=None, DBSubnetGroupName=None, OptionGroupName=None, VpcSecurityGroupIds=None, Tags=None, KmsKeyId=None, EnableIAMDatabaseAuthentication=None, BacktrackWindow=None, EnableCloudwatchLogsExports=None, DBClusterParameterGroupName=None, DeletionProtection=None, CopyTagsToSnapshot=None, Domain=None, DomainIAMRoleName=None):
    """
    Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before LatestRestorableTime for up to BackupRetentionPeriod days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group.
    For more information on Amazon Aurora, see What Is Amazon Aurora? in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    The following example restores a DB cluster to a new DB cluster at a point in time from the source DB cluster.
    Expected Output:
    
    :example: response = client.restore_db_cluster_to_point_in_time(
        DBClusterIdentifier='string',
        RestoreType='string',
        SourceDBClusterIdentifier='string',
        RestoreToTime=datetime(2015, 1, 1),
        UseLatestRestorableTime=True|False,
        Port=123,
        DBSubnetGroupName='string',
        OptionGroupName='string',
        VpcSecurityGroupIds=[
            'string',
        ],
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        KmsKeyId='string',
        EnableIAMDatabaseAuthentication=True|False,
        BacktrackWindow=123,
        EnableCloudwatchLogsExports=[
            'string',
        ],
        DBClusterParameterGroupName='string',
        DeletionProtection=True|False,
        CopyTagsToSnapshot=True|False,
        Domain='string',
        DomainIAMRoleName='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe name of the new DB cluster to be created.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\n

    :type RestoreType: string
    :param RestoreType: The type of restore to be performed. You can specify one of the following values:\n\nfull-copy - The new DB cluster is restored as a full copy of the source DB cluster.\ncopy-on-write - The new DB cluster is restored as a clone of the source DB cluster.\n\nConstraints: You can\'t specify copy-on-write if the engine version of the source DB cluster is earlier than 1.11.\nIf you don\'t specify a RestoreType value, then the new DB cluster is restored as a full copy of the source DB cluster.\n

    :type SourceDBClusterIdentifier: string
    :param SourceDBClusterIdentifier: [REQUIRED]\nThe identifier of the source DB cluster from which to restore.\nConstraints:\n\nMust match the identifier of an existing DBCluster.\n\n

    :type RestoreToTime: datetime
    :param RestoreToTime: The date and time to restore the DB cluster to.\nValid Values: Value must be a time in Universal Coordinated Time (UTC) format\nConstraints:\n\nMust be before the latest restorable time for the DB instance\nMust be specified if UseLatestRestorableTime parameter isn\'t provided\nCan\'t be specified if the UseLatestRestorableTime parameter is enabled\nCan\'t be specified if the RestoreType parameter is copy-on-write\n\nExample: 2015-03-07T23:45:00Z\n

    :type UseLatestRestorableTime: boolean
    :param UseLatestRestorableTime: A value that indicates whether to restore the DB cluster to the latest restorable backup time. By default, the DB cluster isn\'t restored to the latest restorable backup time.\nConstraints: Can\'t be specified if RestoreToTime parameter is provided.\n

    :type Port: integer
    :param Port: The port number on which the new DB cluster accepts connections.\nConstraints: A value from 1150-65535 .\nDefault: The default port for the engine.\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: The DB subnet group name to use for the new DB cluster.\nConstraints: If supplied, must match the name of an existing DBSubnetGroup.\nExample: mySubnetgroup\n

    :type OptionGroupName: string
    :param OptionGroupName: The name of the option group for the new DB cluster.

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of VPC security groups that the new DB cluster belongs to.\n\n(string) --\n\n

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type KmsKeyId: string
    :param KmsKeyId: The AWS KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster.\nThe KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.\nYou can restore to a new DB cluster and encrypt the new DB cluster with a KMS key that is different than the KMS key used to encrypt the source DB cluster. The new DB cluster is encrypted with the KMS key identified by the KmsKeyId parameter.\nIf you don\'t specify a value for the KmsKeyId parameter, then the following occurs:\n\nIf the DB cluster is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the source DB cluster.\nIf the DB cluster isn\'t encrypted, then the restored DB cluster isn\'t encrypted.\n\nIf DBClusterIdentifier refers to a DB cluster that isn\'t encrypted, then the restore request is rejected.\n

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.\nFor more information, see IAM Database Authentication in the Amazon Aurora User Guide.\n

    :type BacktrackWindow: integer
    :param BacktrackWindow: The target backtrack window, in seconds. To disable backtracking, set this value to 0.\nDefault: 0\nConstraints:\n\nIf specified, this value must be set to a number from 0 to 259,200 (72 hours).\n\n

    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: The list of logs that the restored DB cluster is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon Aurora User Guide .\n\n(string) --\n\n

    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default DB cluster parameter group for the specified engine is used.\nConstraints:\n\nIf supplied, must match the name of an existing DB cluster parameter group.\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\n

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled.

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.

    :type Domain: string
    :param Domain: Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation.\nFor Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see Kerberos Authentication in the Amazon Aurora User Guide .\n

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: Specify the name of the IAM role to be used when making API calls to the Directory Service.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --

DBCluster (dict) --
Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --
For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --
Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --
If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --
Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --
Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --
Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --
Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --
Specifies the current state of this DB cluster.

PercentProgress (string) --
Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --
The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --
Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --
The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --
Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --
Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --
Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --
Indicates the database engine version.

LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --
Specifies the port that the database engine is listening on.

MasterUsername (string) --
Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --
Provides the list of option group memberships for this DB cluster.

(dict) --
Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --
Specifies the name of the DB cluster option group.

Status (string) --
Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --
Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --
Provides the list of instances that make up the DB cluster.

(dict) --
Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --
Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --
Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --
Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --
Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --
Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --
If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --
The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --
The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --
Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --
Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --
A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --
Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --
Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --
The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --
The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --
The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --
The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --
The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --
Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --
The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --
The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --
A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --
The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --
The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --
Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --
A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --
The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --
The status of the database activity stream.

ActivityStreamKmsKeyId (string) --
The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --
The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --
Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB cluster.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.













Exceptions

RDS.Client.exceptions.DBClusterAlreadyExistsFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.DBClusterQuotaExceededFault
RDS.Client.exceptions.DBClusterSnapshotNotFoundFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.InsufficientDBClusterCapacityFault
RDS.Client.exceptions.InsufficientStorageClusterCapacityFault
RDS.Client.exceptions.InvalidDBClusterSnapshotStateFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBSnapshotStateFault
RDS.Client.exceptions.InvalidRestoreFault
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.OptionGroupNotFoundFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.DomainNotFoundFault
RDS.Client.exceptions.DBClusterParameterGroupNotFoundFault

Examples
The following example restores a DB cluster to a new DB cluster at a point in time from the source DB cluster.
response = client.restore_db_cluster_to_point_in_time(
    DBClusterIdentifier='sample-restored-cluster1',
    RestoreToTime=datetime(2016, 9, 13, 18, 45, 0, 1, 257, 0),
    SourceDBClusterIdentifier='sample-cluster1',
)

print(response)


Expected Output:
{
    'DBCluster': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def restore_db_instance_from_db_snapshot(DBInstanceIdentifier=None, DBSnapshotIdentifier=None, DBInstanceClass=None, Port=None, AvailabilityZone=None, DBSubnetGroupName=None, MultiAZ=None, PubliclyAccessible=None, AutoMinorVersionUpgrade=None, LicenseModel=None, DBName=None, Engine=None, Iops=None, OptionGroupName=None, Tags=None, StorageType=None, TdeCredentialArn=None, TdeCredentialPassword=None, VpcSecurityGroupIds=None, Domain=None, CopyTagsToSnapshot=None, DomainIAMRoleName=None, EnableIAMDatabaseAuthentication=None, EnableCloudwatchLogsExports=None, ProcessorFeatures=None, UseDefaultProcessorFeatures=None, DBParameterGroupName=None, DeletionProtection=None):
    """
    Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with the most of original configuration with the default security group and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored AZ deployment and not a single-AZ deployment.
    If your intent is to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS doesn\'t allow two DB instances with the same name. Once you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you will replace the original DB instance with the DB instance created from the snapshot.
    If you are restoring from a shared manual DB snapshot, the DBSnapshotIdentifier must be the ARN of the shared DB snapshot.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    The following example restores a DB instance from a DB snapshot.
    Expected Output:
    
    :example: response = client.restore_db_instance_from_db_snapshot(
        DBInstanceIdentifier='string',
        DBSnapshotIdentifier='string',
        DBInstanceClass='string',
        Port=123,
        AvailabilityZone='string',
        DBSubnetGroupName='string',
        MultiAZ=True|False,
        PubliclyAccessible=True|False,
        AutoMinorVersionUpgrade=True|False,
        LicenseModel='string',
        DBName='string',
        Engine='string',
        Iops=123,
        OptionGroupName='string',
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        StorageType='string',
        TdeCredentialArn='string',
        TdeCredentialPassword='string',
        VpcSecurityGroupIds=[
            'string',
        ],
        Domain='string',
        CopyTagsToSnapshot=True|False,
        DomainIAMRoleName='string',
        EnableIAMDatabaseAuthentication=True|False,
        EnableCloudwatchLogsExports=[
            'string',
        ],
        ProcessorFeatures=[
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        UseDefaultProcessorFeatures=True|False,
        DBParameterGroupName='string',
        DeletionProtection=True|False
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nName of the DB instance to create from the DB snapshot. This parameter isn\'t case-sensitive.\nConstraints:\n\nMust contain from 1 to 63 numbers, letters, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\nExample: my-snapshot-id\n

    :type DBSnapshotIdentifier: string
    :param DBSnapshotIdentifier: [REQUIRED]\nThe identifier for the DB snapshot to restore from.\nConstraints:\n\nMust match the identifier of an existing DBSnapshot.\nIf you are restoring from a shared manual DB snapshot, the DBSnapshotIdentifier must be the ARN of the shared DB snapshot.\n\n

    :type DBInstanceClass: string
    :param DBInstanceClass: The compute and memory capacity of the Amazon RDS DB instance, for example, db.m4.large . Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see DB Instance Class in the Amazon RDS User Guide.\nDefault: The same DBInstanceClass as the original DB instance.\n

    :type Port: integer
    :param Port: The port number on which the database accepts connections.\nDefault: The same port as the original DB instance\nConstraints: Value must be 1150-65535\n

    :type AvailabilityZone: string
    :param AvailabilityZone: The Availability Zone (AZ) where the DB instance will be created.\nDefault: A random, system-chosen Availability Zone.\nConstraint: You can\'t specify the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment.\nExample: us-east-1a\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: The DB subnet group name to use for the new instance.\nConstraints: If supplied, must match the name of an existing DBSubnetGroup.\nExample: mySubnetgroup\n

    :type MultiAZ: boolean
    :param MultiAZ: A value that indicates whether the DB instance is a Multi-AZ deployment.\nConstraint: You can\'t specify the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment.\n

    :type PubliclyAccessible: boolean
    :param PubliclyAccessible: A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn\'t publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. For more information, see CreateDBInstance .

    :type AutoMinorVersionUpgrade: boolean
    :param AutoMinorVersionUpgrade: A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window.

    :type LicenseModel: string
    :param LicenseModel: License model information for the restored DB instance.\nDefault: Same as source.\nValid values: license-included | bring-your-own-license | general-public-license\n

    :type DBName: string
    :param DBName: The database name for the restored DB instance.\n\nNote\nThis parameter doesn\'t apply to the MySQL, PostgreSQL, or MariaDB engines.\n\n

    :type Engine: string
    :param Engine: The database engine to use for the new instance.\nDefault: The same as source\nConstraint: Must be compatible with the engine of the source. For example, you can restore a MariaDB 10.1 DB instance from a MySQL 5.6 snapshot.\nValid Values:\n\nmariadb\nmysql\noracle-ee\noracle-se2\noracle-se1\noracle-se\npostgres\nsqlserver-ee\nsqlserver-se\nsqlserver-ex\nsqlserver-web\n\n

    :type Iops: integer
    :param Iops: Specifies the amount of provisioned IOPS for the DB instance, expressed in I/O operations per second. If this parameter isn\'t specified, the IOPS value is taken from the backup. If this parameter is set to 0, the new instance is converted to a non-PIOPS instance. The conversion takes additional time, though your DB instance is available for connections before the conversion starts.\nThe provisioned IOPS value must follow the requirements for your database engine. For more information, see Amazon RDS Provisioned IOPS Storage to Improve Performance in the Amazon RDS User Guide.\nConstraints: Must be an integer greater than 1000.\n

    :type OptionGroupName: string
    :param OptionGroupName: The name of the option group to be used for the restored DB instance.\nPermanent options, such as the TDE option for Oracle Advanced Security TDE, can\'t be removed from an option group, and that option group can\'t be removed from a DB instance once it is associated with a DB instance\n

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type StorageType: string
    :param StorageType: Specifies the storage type to be associated with the DB instance.\nValid values: standard | gp2 | io1\nIf you specify io1 , you must also include a value for the Iops parameter.\nDefault: io1 if the Iops parameter is specified, otherwise gp2\n

    :type TdeCredentialArn: string
    :param TdeCredentialArn: The ARN from the key store with which to associate the instance for TDE encryption.

    :type TdeCredentialPassword: string
    :param TdeCredentialPassword: The password for the given ARN from the key store in order to access the device.

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of EC2 VPC security groups to associate with this DB instance.\nDefault: The default EC2 VPC security group for the DB subnet group\'s VPC.\n\n(string) --\n\n

    :type Domain: string
    :param Domain: Specify the Active Directory directory ID to restore the DB instance in. The domain must be created prior to this operation. Currently, only Microsoft SQL Server and Oracle DB instances can be created in an Active Directory Domain.\nFor Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server in the Amazon RDS User Guide .\nFor Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see Using Kerberos Authentication with Amazon RDS for Oracle in the Amazon RDS User Guide .\n

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the restored DB instance to snapshots of the DB instance. By default, tags are not copied.

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: Specify the name of the IAM role to be used when making API calls to the Directory Service.

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see CreateDBInstance .\nFor more information about IAM database authentication, see IAM Database Authentication for MySQL and PostgreSQL in the Amazon RDS User Guide.\n

    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon Aurora User Guide .\n\n(string) --\n\n

    :type ProcessorFeatures: list
    :param ProcessorFeatures: The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.\n\n(dict) --Contains the processor features of a DB instance class.\nTo specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.\nYou can set the processor features of the DB instance class for a DB instance when you call one of the following actions:\n\nCreateDBInstance\nModifyDBInstance\nRestoreDBInstanceFromDBSnapshot\nRestoreDBInstanceFromS3\nRestoreDBInstanceToPointInTime\n\nYou can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.\nIn addition, you can use the following actions for DB instance class processor information:\n\nDescribeDBInstances\nDescribeDBSnapshots\nDescribeValidDBInstanceModifications\n\nFor more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.\n\nName (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .\n\nValue (string) --The value of a processor feature name.\n\n\n\n\n

    :type UseDefaultProcessorFeatures: boolean
    :param UseDefaultProcessorFeatures: A value that indicates whether the DB instance class of the DB instance uses its default processor features.

    :type DBParameterGroupName: string
    :param DBParameterGroupName: The name of the DB parameter group to associate with this DB instance.\nIf you do not specify a value for DBParameterGroupName , then the default DBParameterGroup for the specified DB engine is used.\nConstraints:\n\nIf supplied, must match the name of an existing DBParameterGroup.\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\n

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see Deleting a DB Instance .

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.DBInstanceAlreadyExistsFault
RDS.Client.exceptions.DBSnapshotNotFoundFault
RDS.Client.exceptions.InstanceQuotaExceededFault
RDS.Client.exceptions.InsufficientDBInstanceCapacityFault
RDS.Client.exceptions.InvalidDBSnapshotStateFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.InvalidRestoreFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.ProvisionedIopsNotAvailableInAZFault
RDS.Client.exceptions.OptionGroupNotFoundFault
RDS.Client.exceptions.StorageTypeNotSupportedFault
RDS.Client.exceptions.AuthorizationNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.DBSecurityGroupNotFoundFault
RDS.Client.exceptions.DomainNotFoundFault
RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.BackupPolicyNotFoundFault

Examples
The following example restores a DB instance from a DB snapshot.
response = client.restore_db_instance_from_db_snapshot(
    DBInstanceIdentifier='mysqldb-restored',
    DBSnapshotIdentifier='rds:mysqldb-2014-04-22-08-15',
)

print(response)


Expected Output:
{
    'DBInstance': {
        'AllocatedStorage': 200,
        'AutoMinorVersionUpgrade': True,
        'AvailabilityZone': 'us-west-2b',
        'BackupRetentionPeriod': 7,
        'CACertificateIdentifier': 'rds-ca-2015',
        'CopyTagsToSnapshot': False,
        'DBInstanceArn': 'arn:aws:rds:us-west-2:123456789012:db:mysqldb-restored',
        'DBInstanceClass': 'db.t2.small',
        'DBInstanceIdentifier': 'mysqldb-restored',
        'DBInstanceStatus': 'available',
        'DBName': 'sample',
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'default.mysql5.6',
                'ParameterApplyStatus': 'in-sync',
            },
        ],
        'DBSecurityGroups': [
        ],
        'DBSubnetGroup': {
            'DBSubnetGroupDescription': 'default',
            'DBSubnetGroupName': 'default',
            'SubnetGroupStatus': 'Complete',
            'Subnets': [
                {
                    'SubnetAvailabilityZone': {
                        'Name': 'us-west-2a',
                    },
                    'SubnetIdentifier': 'subnet-77e8db03',
                    'SubnetStatus': 'Active',
                },
                {
                    'SubnetAvailabilityZone': {
                        'Name': 'us-west-2b',
                    },
                    'SubnetIdentifier': 'subnet-c39989a1',
                    'SubnetStatus': 'Active',
                },
                {
                    'SubnetAvailabilityZone': {
                        'Name': 'us-west-2c',
                    },
                    'SubnetIdentifier': 'subnet-4b267b0d',
                    'SubnetStatus': 'Active',
                },
            ],
            'VpcId': 'vpc-c1c5b3a3',
        },
        'DbInstancePort': 0,
        'DbiResourceId': 'db-VNZUCCBTEDC4WR7THXNJO72HVQ',
        'DomainMemberships': [
        ],
        'Engine': 'mysql',
        'EngineVersion': '5.6.27',
        'LicenseModel': 'general-public-license',
        'MasterUsername': 'mymasteruser',
        'MonitoringInterval': 0,
        'MultiAZ': False,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'default:mysql-5-6',
                'Status': 'in-sync',
            },
        ],
        'PendingModifiedValues': {
        },
        'PreferredBackupWindow': '12:58-13:28',
        'PreferredMaintenanceWindow': 'tue:10:16-tue:10:46',
        'PubliclyAccessible': True,
        'ReadReplicaDBInstanceIdentifiers': [
        ],
        'StorageEncrypted': False,
        'StorageType': 'gp2',
        'VpcSecurityGroups': [
            {
                'Status': 'active',
                'VpcSecurityGroupId': 'sg-e5e5b0d2',
            },
        ],
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def restore_db_instance_from_s3(DBName=None, DBInstanceIdentifier=None, AllocatedStorage=None, DBInstanceClass=None, Engine=None, MasterUsername=None, MasterUserPassword=None, DBSecurityGroups=None, VpcSecurityGroupIds=None, AvailabilityZone=None, DBSubnetGroupName=None, PreferredMaintenanceWindow=None, DBParameterGroupName=None, BackupRetentionPeriod=None, PreferredBackupWindow=None, Port=None, MultiAZ=None, EngineVersion=None, AutoMinorVersionUpgrade=None, LicenseModel=None, Iops=None, OptionGroupName=None, PubliclyAccessible=None, Tags=None, StorageType=None, StorageEncrypted=None, KmsKeyId=None, CopyTagsToSnapshot=None, MonitoringInterval=None, MonitoringRoleArn=None, EnableIAMDatabaseAuthentication=None, SourceEngine=None, SourceEngineVersion=None, S3BucketName=None, S3Prefix=None, S3IngestionRoleArn=None, EnablePerformanceInsights=None, PerformanceInsightsKMSKeyId=None, PerformanceInsightsRetentionPeriod=None, EnableCloudwatchLogsExports=None, ProcessorFeatures=None, UseDefaultProcessorFeatures=None, DeletionProtection=None):
    """
    Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files. You can create a backup of your on-premises database, store it on Amazon Simple Storage Service (Amazon S3), and then restore the backup file onto a new Amazon RDS DB instance running MySQL. For more information, see Importing Data into an Amazon RDS MySQL DB Instance in the Amazon RDS User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.restore_db_instance_from_s3(
        DBName='string',
        DBInstanceIdentifier='string',
        AllocatedStorage=123,
        DBInstanceClass='string',
        Engine='string',
        MasterUsername='string',
        MasterUserPassword='string',
        DBSecurityGroups=[
            'string',
        ],
        VpcSecurityGroupIds=[
            'string',
        ],
        AvailabilityZone='string',
        DBSubnetGroupName='string',
        PreferredMaintenanceWindow='string',
        DBParameterGroupName='string',
        BackupRetentionPeriod=123,
        PreferredBackupWindow='string',
        Port=123,
        MultiAZ=True|False,
        EngineVersion='string',
        AutoMinorVersionUpgrade=True|False,
        LicenseModel='string',
        Iops=123,
        OptionGroupName='string',
        PubliclyAccessible=True|False,
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        StorageType='string',
        StorageEncrypted=True|False,
        KmsKeyId='string',
        CopyTagsToSnapshot=True|False,
        MonitoringInterval=123,
        MonitoringRoleArn='string',
        EnableIAMDatabaseAuthentication=True|False,
        SourceEngine='string',
        SourceEngineVersion='string',
        S3BucketName='string',
        S3Prefix='string',
        S3IngestionRoleArn='string',
        EnablePerformanceInsights=True|False,
        PerformanceInsightsKMSKeyId='string',
        PerformanceInsightsRetentionPeriod=123,
        EnableCloudwatchLogsExports=[
            'string',
        ],
        ProcessorFeatures=[
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        UseDefaultProcessorFeatures=True|False,
        DeletionProtection=True|False
    )
    
    
    :type DBName: string
    :param DBName: The name of the database to create when the DB instance is created. Follow the naming rules specified in CreateDBInstance .

    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe DB instance identifier. This parameter is stored as a lowercase string.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\nExample: mydbinstance\n

    :type AllocatedStorage: integer
    :param AllocatedStorage: The amount of storage (in gigabytes) to allocate initially for the DB instance. Follow the allocation rules specified in CreateDBInstance .\n\nNote\nBe sure to allocate enough memory for your new DB instance so that the restore operation can succeed. You can also allocate additional memory for future growth.\n\n

    :type DBInstanceClass: string
    :param DBInstanceClass: [REQUIRED]\nThe compute and memory capacity of the DB instance, for example, db.m4.large . Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see DB Instance Class in the Amazon RDS User Guide.\nImporting from Amazon S3 isn\'t supported on the db.t2.micro DB instance class.\n

    :type Engine: string
    :param Engine: [REQUIRED]\nThe name of the database engine to be used for this instance.\nValid Values: mysql\n

    :type MasterUsername: string
    :param MasterUsername: The name for the master user.\nConstraints:\n\nMust be 1 to 16 letters or numbers.\nFirst character must be a letter.\nCan\'t be a reserved word for the chosen database engine.\n\n

    :type MasterUserPassword: string
    :param MasterUserPassword: The password for the master user. The password can include any printable ASCII character except '/', ''', or '@'.\nConstraints: Must contain from 8 to 41 characters.\n

    :type DBSecurityGroups: list
    :param DBSecurityGroups: A list of DB security groups to associate with this DB instance.\nDefault: The default DB security group for the database engine.\n\n(string) --\n\n

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of VPC security groups to associate with this DB instance.\n\n(string) --\n\n

    :type AvailabilityZone: string
    :param AvailabilityZone: The Availability Zone that the DB instance is created in. For information about AWS Regions and Availability Zones, see Regions and Availability Zones in the Amazon RDS User Guide.\nDefault: A random, system-chosen Availability Zone in the endpoint\'s AWS Region.\nExample: us-east-1d\nConstraint: The AvailabilityZone parameter can\'t be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same AWS Region as the current endpoint.\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: A DB subnet group to associate with this DB instance.

    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see Amazon RDS Maintenance Window in the Amazon RDS User Guide.\nConstraints:\n\nMust be in the format ddd:hh24:mi-ddd:hh24:mi .\nValid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.\nMust be in Universal Coordinated Time (UTC).\nMust not conflict with the preferred backup window.\nMust be at least 30 minutes.\n\n

    :type DBParameterGroupName: string
    :param DBParameterGroupName: The name of the DB parameter group to associate with this DB instance.\nIf you do not specify a value for DBParameterGroupName , then the default DBParameterGroup for the specified DB engine is used.\n

    :type BackupRetentionPeriod: integer
    :param BackupRetentionPeriod: The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. For more information, see CreateDBInstance .

    :type PreferredBackupWindow: string
    :param PreferredBackupWindow: The time range each day during which automated backups are created if automated backups are enabled. For more information, see The Backup Window in the Amazon RDS User Guide.\nConstraints:\n\nMust be in the format hh24:mi-hh24:mi .\nMust be in Universal Coordinated Time (UTC).\nMust not conflict with the preferred maintenance window.\nMust be at least 30 minutes.\n\n

    :type Port: integer
    :param Port: The port number on which the database accepts connections.\nType: Integer\nValid Values: 1150 -65535\nDefault: 3306\n

    :type MultiAZ: boolean
    :param MultiAZ: A value that indicates whether the DB instance is a Multi-AZ deployment. If the DB instance is a Multi-AZ deployment, you can\'t set the AvailabilityZone parameter.

    :type EngineVersion: string
    :param EngineVersion: The version number of the database engine to use. Choose the latest minor version of your database engine. For information about engine versions, see CreateDBInstance , or call DescribeDBEngineVersions .

    :type AutoMinorVersionUpgrade: boolean
    :param AutoMinorVersionUpgrade: A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are not applied automatically.

    :type LicenseModel: string
    :param LicenseModel: The license model for this DB instance. Use general-public-license .

    :type Iops: integer
    :param Iops: The amount of Provisioned IOPS (input/output operations per second) to allocate initially for the DB instance. For information about valid Iops values, see Amazon RDS Provisioned IOPS Storage to Improve Performance in the Amazon RDS User Guide.

    :type OptionGroupName: string
    :param OptionGroupName: The name of the option group to associate with this DB instance. If this argument is omitted, the default option group for the specified engine is used.

    :type PubliclyAccessible: boolean
    :param PubliclyAccessible: A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn\'t publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. For more information, see CreateDBInstance .

    :type Tags: list
    :param Tags: A list of tags to associate with this DB instance. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type StorageType: string
    :param StorageType: Specifies the storage type to be associated with the DB instance.\nValid values: standard | gp2 | io1\nIf you specify io1 , you must also include a value for the Iops parameter.\nDefault: io1 if the Iops parameter is specified; otherwise gp2\n

    :type StorageEncrypted: boolean
    :param StorageEncrypted: A value that indicates whether the new DB instance is encrypted or not.

    :type KmsKeyId: string
    :param KmsKeyId: The AWS KMS key identifier for an encrypted DB instance.\nThe KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB instance with the same AWS account that owns the KMS encryption key used to encrypt the new DB instance, then you can use the KMS key alias instead of the ARN for the KM encryption key.\nIf the StorageEncrypted parameter is enabled, and you do not specify a value for the KmsKeyId parameter, then Amazon RDS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.\n

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.

    :type MonitoringInterval: integer
    :param MonitoringInterval: The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.\nIf MonitoringRoleArn is specified, then you must also set MonitoringInterval to a value other than 0.\nValid Values: 0, 1, 5, 10, 15, 30, 60\nDefault: 0\n

    :type MonitoringRoleArn: string
    :param MonitoringRoleArn: The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess . For information on creating a monitoring role, see Setting Up and Enabling Enhanced Monitoring in the Amazon RDS User Guide.\nIf MonitoringInterval is set to a value other than 0, then you must supply a MonitoringRoleArn value.\n

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see CreateDBInstance .\nFor more information about IAM database authentication, see IAM Database Authentication for MySQL and PostgreSQL in the Amazon RDS User Guide.\n

    :type SourceEngine: string
    :param SourceEngine: [REQUIRED]\nThe name of the engine of your source database.\nValid Values: mysql\n

    :type SourceEngineVersion: string
    :param SourceEngineVersion: [REQUIRED]\nThe engine version of your source database.\nValid Values: 5.6\n

    :type S3BucketName: string
    :param S3BucketName: [REQUIRED]\nThe name of your Amazon S3 bucket that contains your database backup file.\n

    :type S3Prefix: string
    :param S3Prefix: The prefix of your Amazon S3 bucket.

    :type S3IngestionRoleArn: string
    :param S3IngestionRoleArn: [REQUIRED]\nAn AWS Identity and Access Management (IAM) role to allow Amazon RDS to access your Amazon S3 bucket.\n

    :type EnablePerformanceInsights: boolean
    :param EnablePerformanceInsights: A value that indicates whether to enable Performance Insights for the DB instance.\nFor more information, see Using Amazon Performance Insights in the Amazon Relational Database Service User Guide .\n

    :type PerformanceInsightsKMSKeyId: string
    :param PerformanceInsightsKMSKeyId: The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), the KMS key identifier, or the KMS key alias for the KMS encryption key.\nIf you do not specify a value for PerformanceInsightsKMSKeyId , then Amazon RDS uses your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.\n

    :type PerformanceInsightsRetentionPeriod: integer
    :param PerformanceInsightsRetentionPeriod: The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon RDS User Guide .\n\n(string) --\n\n

    :type ProcessorFeatures: list
    :param ProcessorFeatures: The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.\n\n(dict) --Contains the processor features of a DB instance class.\nTo specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.\nYou can set the processor features of the DB instance class for a DB instance when you call one of the following actions:\n\nCreateDBInstance\nModifyDBInstance\nRestoreDBInstanceFromDBSnapshot\nRestoreDBInstanceFromS3\nRestoreDBInstanceToPointInTime\n\nYou can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.\nIn addition, you can use the following actions for DB instance class processor information:\n\nDescribeDBInstances\nDescribeDBSnapshots\nDescribeValidDBInstanceModifications\n\nFor more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.\n\nName (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .\n\nValue (string) --The value of a processor feature name.\n\n\n\n\n

    :type UseDefaultProcessorFeatures: boolean
    :param UseDefaultProcessorFeatures: A value that indicates whether the DB instance class of the DB instance uses its default processor features.

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see Deleting a DB Instance .

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.DBInstanceAlreadyExistsFault
RDS.Client.exceptions.InsufficientDBInstanceCapacityFault
RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.DBSecurityGroupNotFoundFault
RDS.Client.exceptions.InstanceQuotaExceededFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.InvalidS3BucketFault
RDS.Client.exceptions.ProvisionedIopsNotAvailableInAZFault
RDS.Client.exceptions.OptionGroupNotFoundFault
RDS.Client.exceptions.StorageTypeNotSupportedFault
RDS.Client.exceptions.AuthorizationNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.BackupPolicyNotFoundFault


    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def restore_db_instance_to_point_in_time(SourceDBInstanceIdentifier=None, TargetDBInstanceIdentifier=None, RestoreTime=None, UseLatestRestorableTime=None, DBInstanceClass=None, Port=None, AvailabilityZone=None, DBSubnetGroupName=None, MultiAZ=None, PubliclyAccessible=None, AutoMinorVersionUpgrade=None, LicenseModel=None, DBName=None, Engine=None, Iops=None, OptionGroupName=None, CopyTagsToSnapshot=None, Tags=None, StorageType=None, TdeCredentialArn=None, TdeCredentialPassword=None, VpcSecurityGroupIds=None, Domain=None, DomainIAMRoleName=None, EnableIAMDatabaseAuthentication=None, EnableCloudwatchLogsExports=None, ProcessorFeatures=None, UseDefaultProcessorFeatures=None, DBParameterGroupName=None, DeletionProtection=None, SourceDbiResourceId=None):
    """
    Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.
    The target database is created with most of the original configuration, but in a system-selected Availability Zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.
    See also: AWS API Documentation
    
    Exceptions
    Examples
    The following example restores a DB instance to a new DB instance at a point in time from the source DB instance.
    Expected Output:
    
    :example: response = client.restore_db_instance_to_point_in_time(
        SourceDBInstanceIdentifier='string',
        TargetDBInstanceIdentifier='string',
        RestoreTime=datetime(2015, 1, 1),
        UseLatestRestorableTime=True|False,
        DBInstanceClass='string',
        Port=123,
        AvailabilityZone='string',
        DBSubnetGroupName='string',
        MultiAZ=True|False,
        PubliclyAccessible=True|False,
        AutoMinorVersionUpgrade=True|False,
        LicenseModel='string',
        DBName='string',
        Engine='string',
        Iops=123,
        OptionGroupName='string',
        CopyTagsToSnapshot=True|False,
        Tags=[
            {
                'Key': 'string',
                'Value': 'string'
            },
        ],
        StorageType='string',
        TdeCredentialArn='string',
        TdeCredentialPassword='string',
        VpcSecurityGroupIds=[
            'string',
        ],
        Domain='string',
        DomainIAMRoleName='string',
        EnableIAMDatabaseAuthentication=True|False,
        EnableCloudwatchLogsExports=[
            'string',
        ],
        ProcessorFeatures=[
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        UseDefaultProcessorFeatures=True|False,
        DBParameterGroupName='string',
        DeletionProtection=True|False,
        SourceDbiResourceId='string'
    )
    
    
    :type SourceDBInstanceIdentifier: string
    :param SourceDBInstanceIdentifier: The identifier of the source DB instance from which to restore.\nConstraints:\n\nMust match the identifier of an existing DB instance.\n\n

    :type TargetDBInstanceIdentifier: string
    :param TargetDBInstanceIdentifier: [REQUIRED]\nThe name of the new DB instance to be created.\nConstraints:\n\nMust contain from 1 to 63 letters, numbers, or hyphens\nFirst character must be a letter\nCan\'t end with a hyphen or contain two consecutive hyphens\n\n

    :type RestoreTime: datetime
    :param RestoreTime: The date and time to restore from.\nValid Values: Value must be a time in Universal Coordinated Time (UTC) format\nConstraints:\n\nMust be before the latest restorable time for the DB instance\nCan\'t be specified if the UseLatestRestorableTime parameter is enabled\n\nExample: 2009-09-07T23:45:00Z\n

    :type UseLatestRestorableTime: boolean
    :param UseLatestRestorableTime: A value that indicates whether the DB instance is restored from the latest backup time. By default, the DB instance isn\'t restored from the latest backup time.\nConstraints: Can\'t be specified if the RestoreTime parameter is provided.\n

    :type DBInstanceClass: string
    :param DBInstanceClass: The compute and memory capacity of the Amazon RDS DB instance, for example, db.m4.large . Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see DB Instance Class in the Amazon RDS User Guide.\nDefault: The same DBInstanceClass as the original DB instance.\n

    :type Port: integer
    :param Port: The port number on which the database accepts connections.\nConstraints: Value must be 1150-65535\nDefault: The same port as the original DB instance.\n

    :type AvailabilityZone: string
    :param AvailabilityZone: The Availability Zone (AZ) where the DB instance will be created.\nDefault: A random, system-chosen Availability Zone.\nConstraint: You can\'t specify the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment.\nExample: us-east-1a\n

    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: The DB subnet group name to use for the new instance.\nConstraints: If supplied, must match the name of an existing DBSubnetGroup.\nExample: mySubnetgroup\n

    :type MultiAZ: boolean
    :param MultiAZ: A value that indicates whether the DB instance is a Multi-AZ deployment.\nConstraint: You can\'t specify the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment.\n

    :type PubliclyAccessible: boolean
    :param PubliclyAccessible: A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn\'t publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. For more information, see CreateDBInstance .

    :type AutoMinorVersionUpgrade: boolean
    :param AutoMinorVersionUpgrade: A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window.

    :type LicenseModel: string
    :param LicenseModel: License model information for the restored DB instance.\nDefault: Same as source.\nValid values: license-included | bring-your-own-license | general-public-license\n

    :type DBName: string
    :param DBName: The database name for the restored DB instance.\n\nNote\nThis parameter isn\'t used for the MySQL or MariaDB engines.\n\n

    :type Engine: string
    :param Engine: The database engine to use for the new instance.\nDefault: The same as source\nConstraint: Must be compatible with the engine of the source\nValid Values:\n\nmariadb\nmysql\noracle-ee\noracle-se2\noracle-se1\noracle-se\npostgres\nsqlserver-ee\nsqlserver-se\nsqlserver-ex\nsqlserver-web\n\n

    :type Iops: integer
    :param Iops: The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.\nConstraints: Must be an integer greater than 1000.\n\nSQL Server\nSetting the IOPS value for the SQL Server database engine isn\'t supported.\n

    :type OptionGroupName: string
    :param OptionGroupName: The name of the option group to be used for the restored DB instance.\nPermanent options, such as the TDE option for Oracle Advanced Security TDE, can\'t be removed from an option group, and that option group can\'t be removed from a DB instance once it is associated with a DB instance\n

    :type CopyTagsToSnapshot: boolean
    :param CopyTagsToSnapshot: A value that indicates whether to copy all tags from the restored DB instance to snapshots of the DB instance. By default, tags are not copied.

    :type Tags: list
    :param Tags: A list of tags. For more information, see Tagging Amazon RDS Resources in the Amazon RDS User Guide.\n\n(dict) --Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nKey (string) --A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\nValue (string) --A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can\'t be prefixed with 'aws:' or 'rds:'. The string can only contain only the set of Unicode letters, digits, white-space, \'_\', \'.\', \'/\', \'=\', \'+\', \'-\' (Java regex: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$').\n\n\n\n\n

    :type StorageType: string
    :param StorageType: Specifies the storage type to be associated with the DB instance.\nValid values: standard | gp2 | io1\nIf you specify io1 , you must also include a value for the Iops parameter.\nDefault: io1 if the Iops parameter is specified, otherwise gp2\n

    :type TdeCredentialArn: string
    :param TdeCredentialArn: The ARN from the key store with which to associate the instance for TDE encryption.

    :type TdeCredentialPassword: string
    :param TdeCredentialPassword: The password for the given ARN from the key store in order to access the device.

    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: A list of EC2 VPC security groups to associate with this DB instance.\nDefault: The default EC2 VPC security group for the DB subnet group\'s VPC.\n\n(string) --\n\n

    :type Domain: string
    :param Domain: Specify the Active Directory directory ID to restore the DB instance in. The domain must be created prior to this operation. Currently, only Microsoft SQL Server and Oracle DB instances can be created in an Active Directory Domain.\nFor Microsoft SQL Server DB instances, Amazon RDS can use Windows Authentication to authenticate users that connect to the DB instance. For more information, see Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server in the Amazon RDS User Guide .\nFor Oracle DB instances, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB instance. For more information, see Using Kerberos Authentication with Amazon RDS for Oracle in the Amazon RDS User Guide .\n

    :type DomainIAMRoleName: string
    :param DomainIAMRoleName: Specify the name of the IAM role to be used when making API calls to the Directory Service.

    :type EnableIAMDatabaseAuthentication: boolean
    :param EnableIAMDatabaseAuthentication: A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For information about the supported DB engines, see CreateDBInstance .\nFor more information about IAM database authentication, see IAM Database Authentication for MySQL and PostgreSQL in the Amazon RDS User Guide.\n

    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs in the Amazon RDS User Guide .\n\n(string) --\n\n

    :type ProcessorFeatures: list
    :param ProcessorFeatures: The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.\n\n(dict) --Contains the processor features of a DB instance class.\nTo specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.\nYou can set the processor features of the DB instance class for a DB instance when you call one of the following actions:\n\nCreateDBInstance\nModifyDBInstance\nRestoreDBInstanceFromDBSnapshot\nRestoreDBInstanceFromS3\nRestoreDBInstanceToPointInTime\n\nYou can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.\nIn addition, you can use the following actions for DB instance class processor information:\n\nDescribeDBInstances\nDescribeDBSnapshots\nDescribeValidDBInstanceModifications\n\nFor more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.\n\nName (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .\n\nValue (string) --The value of a processor feature name.\n\n\n\n\n

    :type UseDefaultProcessorFeatures: boolean
    :param UseDefaultProcessorFeatures: A value that indicates whether the DB instance class of the DB instance uses its default processor features.

    :type DBParameterGroupName: string
    :param DBParameterGroupName: The name of the DB parameter group to associate with this DB instance.\nIf you do not specify a value for DBParameterGroupName , then the default DBParameterGroup for the specified DB engine is used.\nConstraints:\n\nIf supplied, must match the name of an existing DBParameterGroup.\nMust be 1 to 255 letters, numbers, or hyphens.\nFirst character must be a letter.\nCan\'t end with a hyphen or contain two consecutive hyphens.\n\n

    :type DeletionProtection: boolean
    :param DeletionProtection: A value that indicates whether the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see Deleting a DB Instance .

    :type SourceDbiResourceId: string
    :param SourceDbiResourceId: The resource ID of the source DB instance from which to restore.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.DBInstanceAlreadyExistsFault
RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.InstanceQuotaExceededFault
RDS.Client.exceptions.InsufficientDBInstanceCapacityFault
RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.PointInTimeRestoreNotEnabledFault
RDS.Client.exceptions.StorageQuotaExceededFault
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.InvalidRestoreFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.ProvisionedIopsNotAvailableInAZFault
RDS.Client.exceptions.OptionGroupNotFoundFault
RDS.Client.exceptions.StorageTypeNotSupportedFault
RDS.Client.exceptions.AuthorizationNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.DBSecurityGroupNotFoundFault
RDS.Client.exceptions.DomainNotFoundFault
RDS.Client.exceptions.BackupPolicyNotFoundFault
RDS.Client.exceptions.DBParameterGroupNotFoundFault
RDS.Client.exceptions.DBInstanceAutomatedBackupNotFoundFault

Examples
The following example restores a DB instance to a new DB instance at a point in time from the source DB instance.
response = client.restore_db_instance_to_point_in_time(
    RestoreTime=datetime(2016, 9, 13, 18, 45, 0, 1, 257, 0),
    SourceDBInstanceIdentifier='mysql-sample',
    TargetDBInstanceIdentifier='mysql-sample-restored',
)

print(response)


Expected Output:
{
    'DBInstance': {
        'AllocatedStorage': 200,
        'AutoMinorVersionUpgrade': True,
        'AvailabilityZone': 'us-west-2b',
        'BackupRetentionPeriod': 7,
        'CACertificateIdentifier': 'rds-ca-2015',
        'CopyTagsToSnapshot': False,
        'DBInstanceArn': 'arn:aws:rds:us-west-2:123456789012:db:mysql-sample-restored',
        'DBInstanceClass': 'db.t2.small',
        'DBInstanceIdentifier': 'mysql-sample-restored',
        'DBInstanceStatus': 'available',
        'DBName': 'sample',
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'default.mysql5.6',
                'ParameterApplyStatus': 'in-sync',
            },
        ],
        'DBSecurityGroups': [
        ],
        'DBSubnetGroup': {
            'DBSubnetGroupDescription': 'default',
            'DBSubnetGroupName': 'default',
            'SubnetGroupStatus': 'Complete',
            'Subnets': [
                {
                    'SubnetAvailabilityZone': {
                        'Name': 'us-west-2a',
                    },
                    'SubnetIdentifier': 'subnet-77e8db03',
                    'SubnetStatus': 'Active',
                },
                {
                    'SubnetAvailabilityZone': {
                        'Name': 'us-west-2b',
                    },
                    'SubnetIdentifier': 'subnet-c39989a1',
                    'SubnetStatus': 'Active',
                },
                {
                    'SubnetAvailabilityZone': {
                        'Name': 'us-west-2c',
                    },
                    'SubnetIdentifier': 'subnet-4b267b0d',
                    'SubnetStatus': 'Active',
                },
            ],
            'VpcId': 'vpc-c1c5b3a3',
        },
        'DbInstancePort': 0,
        'DbiResourceId': 'db-VNZUCCBTEDC4WR7THXNJO72HVQ',
        'DomainMemberships': [
        ],
        'Engine': 'mysql',
        'EngineVersion': '5.6.27',
        'LicenseModel': 'general-public-license',
        'MasterUsername': 'mymasteruser',
        'MonitoringInterval': 0,
        'MultiAZ': False,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'default:mysql-5-6',
                'Status': 'in-sync',
            },
        ],
        'PendingModifiedValues': {
        },
        'PreferredBackupWindow': '12:58-13:28',
        'PreferredMaintenanceWindow': 'tue:10:16-tue:10:46',
        'PubliclyAccessible': True,
        'ReadReplicaDBInstanceIdentifiers': [
        ],
        'StorageEncrypted': False,
        'StorageType': 'gp2',
        'VpcSecurityGroups': [
            {
                'Status': 'active',
                'VpcSecurityGroupId': 'sg-e5e5b0d2',
            },
        ],
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

def revoke_db_security_group_ingress(DBSecurityGroupName=None, CIDRIP=None, EC2SecurityGroupName=None, EC2SecurityGroupId=None, EC2SecurityGroupOwnerId=None):
    """
    Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC Security Groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).
    See also: AWS API Documentation
    
    Exceptions
    Examples
    This example revokes ingress for the specified CIDR block associated with the specified DB security group.
    Expected Output:
    
    :example: response = client.revoke_db_security_group_ingress(
        DBSecurityGroupName='string',
        CIDRIP='string',
        EC2SecurityGroupName='string',
        EC2SecurityGroupId='string',
        EC2SecurityGroupOwnerId='string'
    )
    
    
    :type DBSecurityGroupName: string
    :param DBSecurityGroupName: [REQUIRED]\nThe name of the DB security group to revoke ingress from.\n

    :type CIDRIP: string
    :param CIDRIP: The IP range to revoke access from. Must be a valid CIDR range. If CIDRIP is specified, EC2SecurityGroupName , EC2SecurityGroupId and EC2SecurityGroupOwnerId can\'t be provided.

    :type EC2SecurityGroupName: string
    :param EC2SecurityGroupName: The name of the EC2 security group to revoke access from. For VPC DB security groups, EC2SecurityGroupId must be provided. Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.

    :type EC2SecurityGroupId: string
    :param EC2SecurityGroupId: The id of the EC2 security group to revoke access from. For VPC DB security groups, EC2SecurityGroupId must be provided. Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.

    :type EC2SecurityGroupOwnerId: string
    :param EC2SecurityGroupOwnerId: The AWS account number of the owner of the EC2 security group specified in the EC2SecurityGroupName parameter. The AWS access key ID isn\'t an acceptable value. For VPC DB security groups, EC2SecurityGroupId must be provided. Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBSecurityGroup': {
        'OwnerId': 'string',
        'DBSecurityGroupName': 'string',
        'DBSecurityGroupDescription': 'string',
        'VpcId': 'string',
        'EC2SecurityGroups': [
            {
                'Status': 'string',
                'EC2SecurityGroupName': 'string',
                'EC2SecurityGroupId': 'string',
                'EC2SecurityGroupOwnerId': 'string'
            },
        ],
        'IPRanges': [
            {
                'Status': 'string',
                'CIDRIP': 'string'
            },
        ],
        'DBSecurityGroupArn': 'string'
    }
}


Response Structure

(dict) --

DBSecurityGroup (dict) --
Contains the details for an Amazon RDS DB security group.
This data type is used as a response element in the DescribeDBSecurityGroups action.

OwnerId (string) --
Provides the AWS ID of the owner of a specific DB security group.

DBSecurityGroupName (string) --
Specifies the name of the DB security group.

DBSecurityGroupDescription (string) --
Provides the description of the DB security group.

VpcId (string) --
Provides the VpcId of the DB security group.

EC2SecurityGroups (list) --
Contains a list of EC2SecurityGroup elements.

(dict) --
This data type is used as a response element in the following actions:

AuthorizeDBSecurityGroupIngress
DescribeDBSecurityGroups
RevokeDBSecurityGroupIngress


Status (string) --
Provides the status of the EC2 security group. Status can be "authorizing", "authorized", "revoking", and "revoked".

EC2SecurityGroupName (string) --
Specifies the name of the EC2 security group.

EC2SecurityGroupId (string) --
Specifies the id of the EC2 security group.

EC2SecurityGroupOwnerId (string) --
Specifies the AWS ID of the owner of the EC2 security group specified in the EC2SecurityGroupName field.





IPRanges (list) --
Contains a list of IPRange elements.

(dict) --
This data type is used as a response element in the DescribeDBSecurityGroups action.

Status (string) --
Specifies the status of the IP range. Status can be "authorizing", "authorized", "revoking", and "revoked".

CIDRIP (string) --
Specifies the IP range.





DBSecurityGroupArn (string) --
The Amazon Resource Name (ARN) for the DB security group.









Exceptions

RDS.Client.exceptions.DBSecurityGroupNotFoundFault
RDS.Client.exceptions.AuthorizationNotFoundFault
RDS.Client.exceptions.InvalidDBSecurityGroupStateFault

Examples
This example revokes ingress for the specified CIDR block associated with the specified DB security group.
response = client.revoke_db_security_group_ingress(
    CIDRIP='203.0.113.5/32',
    DBSecurityGroupName='mydbsecuritygroup',
)

print(response)


Expected Output:
{
    'DBSecurityGroup': {
    },
    'ResponseMetadata': {
        '...': '...',
    },
}



    :return: {
        'DBSecurityGroup': {
            'OwnerId': 'string',
            'DBSecurityGroupName': 'string',
            'DBSecurityGroupDescription': 'string',
            'VpcId': 'string',
            'EC2SecurityGroups': [
                {
                    'Status': 'string',
                    'EC2SecurityGroupName': 'string',
                    'EC2SecurityGroupId': 'string',
                    'EC2SecurityGroupOwnerId': 'string'
                },
            ],
            'IPRanges': [
                {
                    'Status': 'string',
                    'CIDRIP': 'string'
                },
            ],
            'DBSecurityGroupArn': 'string'
        }
    }
    
    
    :returns: 
    AuthorizeDBSecurityGroupIngress
    DescribeDBSecurityGroups
    RevokeDBSecurityGroupIngress
    
    """
    pass

def start_activity_stream(ResourceArn=None, Mode=None, KmsKeyId=None, ApplyImmediately=None):
    """
    Starts a database activity stream to monitor activity on the database. For more information, see Database Activity Streams in the Amazon Aurora User Guide .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.start_activity_stream(
        ResourceArn='string',
        Mode='sync'|'async',
        KmsKeyId='string',
        ApplyImmediately=True|False
    )
    
    
    :type ResourceArn: string
    :param ResourceArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the DB cluster, for example arn:aws:rds:us-east-1:12345667890:cluster:das-cluster .\n

    :type Mode: string
    :param Mode: [REQUIRED]\nSpecifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.\n

    :type KmsKeyId: string
    :param KmsKeyId: [REQUIRED]\nThe AWS KMS key identifier for encrypting messages in the database activity stream. The key identifier can be either a key ID, a key ARN, or a key alias.\n

    :type ApplyImmediately: boolean
    :param ApplyImmediately: Specifies whether or not the database activity stream is to start as soon as possible, regardless of the maintenance window for the database.

    :rtype: dict

ReturnsResponse Syntax
{
    'KmsKeyId': 'string',
    'KinesisStreamName': 'string',
    'Status': 'stopped'|'starting'|'started'|'stopping',
    'Mode': 'sync'|'async',
    'ApplyImmediately': True|False
}


Response Structure

(dict) --

KmsKeyId (string) --
The AWS KMS key identifier for encryption of messages in the database activity stream.

KinesisStreamName (string) --
The name of the Amazon Kinesis data stream to be used for the database activity stream.

Status (string) --
The status of the database activity stream.

Mode (string) --
The mode of the database activity stream.

ApplyImmediately (boolean) --
Indicates whether or not the database activity stream will start as soon as possible, regardless of the maintenance window for the database.







Exceptions

RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.ResourceNotFoundFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault


    :return: {
        'KmsKeyId': 'string',
        'KinesisStreamName': 'string',
        'Status': 'stopped'|'starting'|'started'|'stopping',
        'Mode': 'sync'|'async',
        'ApplyImmediately': True|False
    }
    
    
    :returns: 
    RDS.Client.exceptions.InvalidDBInstanceStateFault
    RDS.Client.exceptions.InvalidDBClusterStateFault
    RDS.Client.exceptions.ResourceNotFoundFault
    RDS.Client.exceptions.DBClusterNotFoundFault
    RDS.Client.exceptions.DBInstanceNotFoundFault
    RDS.Client.exceptions.KMSKeyNotAccessibleFault
    
    """
    pass

def start_db_cluster(DBClusterIdentifier=None):
    """
    Starts an Amazon Aurora DB cluster that was stopped using the AWS console, the stop-db-cluster AWS CLI command, or the StopDBCluster action.
    For more information, see Stopping and Starting an Aurora Cluster in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.start_db_cluster(
        DBClusterIdentifier='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe DB cluster identifier of the Amazon Aurora DB cluster to be started. This parameter is stored as a lowercase string.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --
DBCluster (dict) --Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --Specifies the current state of this DB cluster.

PercentProgress (string) --Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --Indicates the database engine version.

LatestRestorableTime (datetime) --Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --Specifies the port that the database engine is listening on.

MasterUsername (string) --Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --Provides the list of option group memberships for this DB cluster.

(dict) --Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --Specifies the name of the DB cluster option group.

Status (string) --Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --Provides the list of instances that make up the DB cluster.

(dict) --Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --The name of the VPC security group.

Status (string) --The status of the VPC security group.





HostedZoneId (string) --Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --The status of the database activity stream.

ActivityStreamKmsKeyId (string) --The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --The Active Directory Domain membership records associated with the DB cluster.

(dict) --An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --The identifier of the Active Directory Domain.

Status (string) --The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --The name of the IAM role to be used when making API calls to the Directory Service.












Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBInstanceStateFault


    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def start_db_instance(DBInstanceIdentifier=None):
    """
    Starts an Amazon RDS DB instance that was stopped using the AWS console, the stop-db-instance AWS CLI command, or the StopDBInstance action.
    For more information, see Starting an Amazon RDS DB instance That Was Previously Stopped in the Amazon RDS User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.start_db_instance(
        DBInstanceIdentifier='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe user-supplied instance identifier.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --
DBInstance (dict) --Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --Contains the master username for the DB instance.

DBName (string) --The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL
Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle
Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --Specifies the connection endpoint.

Address (string) --Specifies the DNS address of the DB instance.

Port (integer) --Specifies the port that the database engine is listening on.

HostedZoneId (string) --Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --The name of the DB security group.

Status (string) --The status of the DB security group.





VpcSecurityGroups (list) --Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --The name of the VPC security group.

Status (string) --The status of the VPC security group.





DBParameterGroups (list) --Provides the list of DB parameter groups applied to this DB instance.

(dict) --The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --The name of the DB parameter group.

ParameterApplyStatus (string) --The status of parameter updates.





AvailabilityZone (string) --Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --The name of the DB subnet group.

DBSubnetGroupDescription (string) --Provides the description of the DB subnet group.

VpcId (string) --Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --Provides the status of the DB subnet group.

Subnets (list) --Contains a list of Subnet elements.

(dict) --This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --The name of the Availability Zone.



SubnetStatus (string) --Specifies the status of the subnet.





DBSubnetGroupArn (string) --The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --Indicates the database engine version.

LicenseModel (string) --The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --The value of a processor feature name.







LatestRestorableTime (datetime) --Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --License model information for this DB instance.

Iops (integer) --Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --Provides the list of option group memberships for this DB instance.

(dict) --Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --The name of the option group that the instance belongs to.

Status (string) --The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --Provides a list of status information for a DB instance.

StatusType (string) --This value is currently "read replication."

Normal (boolean) --Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --Specifies whether the DB instance is encrypted.

KmsKeyId (string) --If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --The Active Directory Domain membership records associated with the DB instance.

(dict) --An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --The identifier of the Active Directory Domain.

Status (string) --The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora
Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --The value of a processor feature name.





DeletionProtection (boolean) --Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --Specifies the DNS address of the DB instance.

Port (integer) --Specifies the port that the database engine is listening on.

HostedZoneId (string) --Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.








Exceptions

RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.InsufficientDBInstanceCapacityFault
RDS.Client.exceptions.DBSubnetGroupNotFoundFault
RDS.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidSubnet
RDS.Client.exceptions.InvalidVPCNetworkStateFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.AuthorizationNotFoundFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault


    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    CreateDBInstance
    CreateDBInstanceReadReplica
    DeleteDBInstance
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    
    """
    pass

def start_export_task(ExportTaskIdentifier=None, SourceArn=None, S3BucketName=None, IamRoleArn=None, KmsKeyId=None, S3Prefix=None, ExportOnly=None):
    """
    Starts an export of a snapshot to Amazon S3. The provided IAM role must have access to the S3 bucket.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.start_export_task(
        ExportTaskIdentifier='string',
        SourceArn='string',
        S3BucketName='string',
        IamRoleArn='string',
        KmsKeyId='string',
        S3Prefix='string',
        ExportOnly=[
            'string',
        ]
    )
    
    
    :type ExportTaskIdentifier: string
    :param ExportTaskIdentifier: [REQUIRED]\nA unique identifier for the snapshot export task. This ID isn\'t an identifier for the Amazon S3 bucket where the snapshot is to be exported to.\n

    :type SourceArn: string
    :param SourceArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the snapshot to export to Amazon S3.\n

    :type S3BucketName: string
    :param S3BucketName: [REQUIRED]\nThe name of the Amazon S3 bucket to export the snapshot to.\n

    :type IamRoleArn: string
    :param IamRoleArn: [REQUIRED]\nThe name of the IAM role to use for writing to the Amazon S3 bucket when exporting a snapshot.\n

    :type KmsKeyId: string
    :param KmsKeyId: [REQUIRED]\nThe ID of the AWS KMS key to use to encrypt the snapshot exported to Amazon S3. The KMS key ID is the Amazon Resource Name (ARN), the KMS key identifier, or the KMS key alias for the KMS encryption key. The IAM role used for the snapshot export must have encryption and decryption permissions to use this KMS key.\n

    :type S3Prefix: string
    :param S3Prefix: The Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.

    :type ExportOnly: list
    :param ExportOnly: The data to be exported from the snapshot. If this parameter is not provided, all the snapshot data is exported. Valid values are the following:\n\ndatabase - Export all the data from a specified database.\ndatabase.table table-name - Export a table of the snapshot. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.\ndatabase.schema schema-name - Export a database schema of the snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.\ndatabase.schema.table table-name - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.\n\n\n(string) --\n\n

    :rtype: dict

ReturnsResponse Syntax
{
    'ExportTaskIdentifier': 'string',
    'SourceArn': 'string',
    'ExportOnly': [
        'string',
    ],
    'SnapshotTime': datetime(2015, 1, 1),
    'TaskStartTime': datetime(2015, 1, 1),
    'TaskEndTime': datetime(2015, 1, 1),
    'S3Bucket': 'string',
    'S3Prefix': 'string',
    'IamRoleArn': 'string',
    'KmsKeyId': 'string',
    'Status': 'string',
    'PercentProgress': 123,
    'TotalExtractedDataInGB': 123,
    'FailureCause': 'string',
    'WarningMessage': 'string'
}


Response Structure

(dict) --
Contains the details of a snapshot export to Amazon S3.
This data type is used as a response element in the DescribeExportTasks action.

ExportTaskIdentifier (string) --
A unique identifier for the snapshot export task. This ID isn\'t an identifier for the Amazon S3 bucket where the snapshot is exported to.

SourceArn (string) --
The Amazon Resource Name (ARN) of the snapshot exported to Amazon S3.

ExportOnly (list) --
The data exported from the snapshot. Valid values are the following:

database - Export all the data from a specified database.
database.table table-name - Export a table of the snapshot. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.
database.schema schema-name - Export a database schema of the snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.
database.schema.table table-name - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.


(string) --


SnapshotTime (datetime) --
The time that the snapshot was created.

TaskStartTime (datetime) --
The time that the snapshot export task started.

TaskEndTime (datetime) --
The time that the snapshot export task completed.

S3Bucket (string) --
The Amazon S3 bucket that the snapshot is exported to.

S3Prefix (string) --
The Amazon S3 bucket prefix that is the file name and path of the exported snapshot.

IamRoleArn (string) --
The name of the IAM role that is used to write to Amazon S3 when exporting a snapshot.

KmsKeyId (string) --
The ID of the AWS KMS key that is used to encrypt the snapshot when it\'s exported to Amazon S3. The KMS key ID is the Amazon Resource Name (ARN), the KMS key identifier, or the KMS key alias for the KMS encryption key. The IAM role used for the snapshot export must have encryption and decryption permissions to use this KMS key.

Status (string) --
The progress status of the export task.

PercentProgress (integer) --
The progress of the snapshot export task as a percentage.

TotalExtractedDataInGB (integer) --
The total amount of data exported, in gigabytes.

FailureCause (string) --
The reason the export failed, if it failed.

WarningMessage (string) --
A warning about the snapshot export task.







Exceptions

RDS.Client.exceptions.DBSnapshotNotFoundFault
RDS.Client.exceptions.DBClusterSnapshotNotFoundFault
RDS.Client.exceptions.ExportTaskAlreadyExistsFault
RDS.Client.exceptions.InvalidS3BucketFault
RDS.Client.exceptions.IamRoleNotFoundFault
RDS.Client.exceptions.IamRoleMissingPermissionsFault
RDS.Client.exceptions.InvalidExportOnlyFault
RDS.Client.exceptions.KMSKeyNotAccessibleFault
RDS.Client.exceptions.InvalidExportSourceStateFault


    :return: {
        'ExportTaskIdentifier': 'string',
        'SourceArn': 'string',
        'ExportOnly': [
            'string',
        ],
        'SnapshotTime': datetime(2015, 1, 1),
        'TaskStartTime': datetime(2015, 1, 1),
        'TaskEndTime': datetime(2015, 1, 1),
        'S3Bucket': 'string',
        'S3Prefix': 'string',
        'IamRoleArn': 'string',
        'KmsKeyId': 'string',
        'Status': 'string',
        'PercentProgress': 123,
        'TotalExtractedDataInGB': 123,
        'FailureCause': 'string',
        'WarningMessage': 'string'
    }
    
    
    :returns: 
    database - Export all the data from a specified database.
    database.table table-name - Export a table of the snapshot. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.
    database.schema schema-name - Export a database schema of the snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.
    database.schema.table table-name - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.
    
    """
    pass

def stop_activity_stream(ResourceArn=None, ApplyImmediately=None):
    """
    Stops a database activity stream that was started using the AWS console, the start-activity-stream AWS CLI command, or the StartActivityStream action.
    For more information, see Database Activity Streams in the Amazon Aurora User Guide .
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.stop_activity_stream(
        ResourceArn='string',
        ApplyImmediately=True|False
    )
    
    
    :type ResourceArn: string
    :param ResourceArn: [REQUIRED]\nThe Amazon Resource Name (ARN) of the DB cluster for the database activity stream. For example, arn:aws:rds:us-east-1:12345667890:cluster:das-cluster .\n

    :type ApplyImmediately: boolean
    :param ApplyImmediately: Specifies whether or not the database activity stream is to stop as soon as possible, regardless of the maintenance window for the database.

    :rtype: dict

ReturnsResponse Syntax
{
    'KmsKeyId': 'string',
    'KinesisStreamName': 'string',
    'Status': 'stopped'|'starting'|'started'|'stopping'
}


Response Structure

(dict) --

KmsKeyId (string) --
The AWS KMS key identifier used for encrypting messages in the database activity stream.

KinesisStreamName (string) --
The name of the Amazon Kinesis data stream used for the database activity stream.

Status (string) --
The status of the database activity stream.







Exceptions

RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.ResourceNotFoundFault
RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.DBInstanceNotFoundFault


    :return: {
        'KmsKeyId': 'string',
        'KinesisStreamName': 'string',
        'Status': 'stopped'|'starting'|'started'|'stopping'
    }
    
    
    :returns: 
    RDS.Client.exceptions.InvalidDBInstanceStateFault
    RDS.Client.exceptions.InvalidDBClusterStateFault
    RDS.Client.exceptions.ResourceNotFoundFault
    RDS.Client.exceptions.DBClusterNotFoundFault
    RDS.Client.exceptions.DBInstanceNotFoundFault
    
    """
    pass

def stop_db_cluster(DBClusterIdentifier=None):
    """
    Stops an Amazon Aurora DB cluster. When you stop a DB cluster, Aurora retains the DB cluster\'s metadata, including its endpoints and DB parameter groups. Aurora also retains the transaction logs so you can do a point-in-time restore if necessary.
    For more information, see Stopping and Starting an Aurora Cluster in the Amazon Aurora User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.stop_db_cluster(
        DBClusterIdentifier='string'
    )
    
    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: [REQUIRED]\nThe DB cluster identifier of the Amazon Aurora DB cluster to be stopped. This parameter is stored as a lowercase string.\n

    :rtype: dict
ReturnsResponse Syntax{
    'DBCluster': {
        'AllocatedStorage': 123,
        'AvailabilityZones': [
            'string',
        ],
        'BackupRetentionPeriod': 123,
        'CharacterSetName': 'string',
        'DatabaseName': 'string',
        'DBClusterIdentifier': 'string',
        'DBClusterParameterGroup': 'string',
        'DBSubnetGroup': 'string',
        'Status': 'string',
        'PercentProgress': 'string',
        'EarliestRestorableTime': datetime(2015, 1, 1),
        'Endpoint': 'string',
        'ReaderEndpoint': 'string',
        'CustomEndpoints': [
            'string',
        ],
        'MultiAZ': True|False,
        'Engine': 'string',
        'EngineVersion': 'string',
        'LatestRestorableTime': datetime(2015, 1, 1),
        'Port': 123,
        'MasterUsername': 'string',
        'DBClusterOptionGroupMemberships': [
            {
                'DBClusterOptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'PreferredBackupWindow': 'string',
        'PreferredMaintenanceWindow': 'string',
        'ReplicationSourceIdentifier': 'string',
        'ReadReplicaIdentifiers': [
            'string',
        ],
        'DBClusterMembers': [
            {
                'DBInstanceIdentifier': 'string',
                'IsClusterWriter': True|False,
                'DBClusterParameterGroupStatus': 'string',
                'PromotionTier': 123
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'HostedZoneId': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbClusterResourceId': 'string',
        'DBClusterArn': 'string',
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'Status': 'string',
                'FeatureName': 'string'
            },
        ],
        'IAMDatabaseAuthenticationEnabled': True|False,
        'CloneGroupId': 'string',
        'ClusterCreateTime': datetime(2015, 1, 1),
        'EarliestBacktrackTime': datetime(2015, 1, 1),
        'BacktrackWindow': 123,
        'BacktrackConsumedChangeRecords': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'Capacity': 123,
        'EngineMode': 'string',
        'ScalingConfigurationInfo': {
            'MinCapacity': 123,
            'MaxCapacity': 123,
            'AutoPause': True|False,
            'SecondsUntilAutoPause': 123,
            'TimeoutAction': 'string'
        },
        'DeletionProtection': True|False,
        'HttpEndpointEnabled': True|False,
        'ActivityStreamMode': 'sync'|'async',
        'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
        'ActivityStreamKmsKeyId': 'string',
        'ActivityStreamKinesisStreamName': 'string',
        'CopyTagsToSnapshot': True|False,
        'CrossAccountClone': True|False,
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ]
    }
}


Response Structure

(dict) --
DBCluster (dict) --Contains the details of an Amazon Aurora DB cluster.
This data type is used as a response element in the DescribeDBClusters , StopDBCluster , and StartDBCluster actions.

AllocatedStorage (integer) --For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn\'t fixed, but instead automatically adjusts as needed.

AvailabilityZones (list) --Provides the list of Availability Zones (AZs) where instances in the DB cluster can be created.

(string) --


BackupRetentionPeriod (integer) --Specifies the number of days for which automatic DB snapshots are retained.

CharacterSetName (string) --If present, specifies the name of the character set that this cluster is associated with.

DatabaseName (string) --Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.

DBClusterIdentifier (string) --Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.

DBClusterParameterGroup (string) --Specifies the name of the DB cluster parameter group for the DB cluster.

DBSubnetGroup (string) --Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.

Status (string) --Specifies the current state of this DB cluster.

PercentProgress (string) --Specifies the progress of the operation as a percentage.

EarliestRestorableTime (datetime) --The earliest time to which a database can be restored with point-in-time restore.

Endpoint (string) --Specifies the connection endpoint for the primary instance of the DB cluster.

ReaderEndpoint (string) --The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster.
If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.

CustomEndpoints (list) --Identifies all custom endpoints associated with the cluster.

(string) --


MultiAZ (boolean) --Specifies whether the DB cluster has instances in multiple Availability Zones.

Engine (string) --Provides the name of the database engine to be used for this DB cluster.

EngineVersion (string) --Indicates the database engine version.

LatestRestorableTime (datetime) --Specifies the latest time to which a database can be restored with point-in-time restore.

Port (integer) --Specifies the port that the database engine is listening on.

MasterUsername (string) --Contains the master username for the DB cluster.

DBClusterOptionGroupMemberships (list) --Provides the list of option group memberships for this DB cluster.

(dict) --Contains status information for a DB cluster option group.

DBClusterOptionGroupName (string) --Specifies the name of the DB cluster option group.

Status (string) --Specifies the status of the DB cluster option group.





PreferredBackupWindow (string) --Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

PreferredMaintenanceWindow (string) --Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

ReplicationSourceIdentifier (string) --Contains the identifier of the source DB cluster if this DB cluster is a read replica.

ReadReplicaIdentifiers (list) --Contains one or more identifiers of the read replicas associated with this DB cluster.

(string) --


DBClusterMembers (list) --Provides the list of instances that make up the DB cluster.

(dict) --Contains information about an instance that is part of a DB cluster.

DBInstanceIdentifier (string) --Specifies the instance identifier for this member of the DB cluster.

IsClusterWriter (boolean) --Value that is true if the cluster member is the primary instance for the DB cluster and false otherwise.

DBClusterParameterGroupStatus (string) --Specifies the status of the DB cluster parameter group for this member of the DB cluster.

PromotionTier (integer) --A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .





VpcSecurityGroups (list) --Provides a list of VPC security groups that the DB cluster belongs to.

(dict) --This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --The name of the VPC security group.

Status (string) --The status of the VPC security group.





HostedZoneId (string) --Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

StorageEncrypted (boolean) --Specifies whether the DB cluster is encrypted.

KmsKeyId (string) --If StorageEncrypted is enabled, the AWS KMS key identifier for the encrypted DB cluster.

DbClusterResourceId (string) --The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.

DBClusterArn (string) --The Amazon Resource Name (ARN) for the DB cluster.

AssociatedRoles (list) --Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.

(dict) --Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.

RoleArn (string) --The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.

Status (string) --Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB cluster.
INVALID - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.


FeatureName (string) --The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see  DBEngineVersion .





IAMDatabaseAuthenticationEnabled (boolean) --A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.

CloneGroupId (string) --Identifies the clone group to which the DB cluster is associated.

ClusterCreateTime (datetime) --Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).

EarliestBacktrackTime (datetime) --The earliest time to which a DB cluster can be backtracked.

BacktrackWindow (integer) --The target backtrack window, in seconds. If this value is set to 0, backtracking is disabled for the DB cluster. Otherwise, backtracking is enabled.

BacktrackConsumedChangeRecords (integer) --The number of change records stored for Backtrack.

EnabledCloudwatchLogsExports (list) --A list of log types that this DB cluster is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon Aurora User Guide.

(string) --


Capacity (integer) --The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused.
For more information about Aurora Serverless, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

EngineMode (string) --The DB engine mode of the DB cluster, either provisioned , serverless , parallelquery , global , or multimaster .

Note
global engine mode only applies for global database clusters created with Aurora MySQL version 5.6.10a. For higher Aurora MySQL versions, the clusters in a global database use provisioned engine mode. To check if a DB cluster is part of a global database, use DescribeGlobalClusters instead of checking the EngineMode return value from DescribeDBClusters .


ScalingConfigurationInfo (dict) --Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode.
For more information, see Using Amazon Aurora Serverless in the Amazon Aurora User Guide .

MinCapacity (integer) --The maximum capacity for the Aurora DB cluster in serverless DB engine mode.

MaxCapacity (integer) --The maximum capacity for an Aurora DB cluster in serverless DB engine mode.

AutoPause (boolean) --A value that indicates whether automatic pause is allowed for the Aurora DB cluster in serverless DB engine mode.
When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.

SecondsUntilAutoPause (integer) --The remaining amount of time, in seconds, before the Aurora DB cluster in serverless mode is paused. A DB cluster can be paused only when it\'s idle (it has no connections).

TimeoutAction (string) --The timeout action of a call to ModifyCurrentDBClusterCapacity , either ForceApplyCapacityChange or RollbackCapacityChange .



DeletionProtection (boolean) --Indicates if the DB cluster has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled.

HttpEndpointEnabled (boolean) --A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.
For more information, see Using the Data API for Aurora Serverless in the Amazon Aurora User Guide .

ActivityStreamMode (string) --The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.

ActivityStreamStatus (string) --The status of the database activity stream.

ActivityStreamKmsKeyId (string) --The AWS KMS key identifier used for encrypting messages in the database activity stream.

ActivityStreamKinesisStreamName (string) --The name of the Amazon Kinesis data stream used for the database activity stream.

CopyTagsToSnapshot (boolean) --Specifies whether tags are copied from the DB cluster to snapshots of the DB cluster.

CrossAccountClone (boolean) --Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account.

DomainMemberships (list) --The Active Directory Domain membership records associated with the DB cluster.

(dict) --An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --The identifier of the Active Directory Domain.

Status (string) --The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --The name of the IAM role to be used when making API calls to the Directory Service.












Exceptions

RDS.Client.exceptions.DBClusterNotFoundFault
RDS.Client.exceptions.InvalidDBClusterStateFault
RDS.Client.exceptions.InvalidDBInstanceStateFault


    :return: {
        'DBCluster': {
            'AllocatedStorage': 123,
            'AvailabilityZones': [
                'string',
            ],
            'BackupRetentionPeriod': 123,
            'CharacterSetName': 'string',
            'DatabaseName': 'string',
            'DBClusterIdentifier': 'string',
            'DBClusterParameterGroup': 'string',
            'DBSubnetGroup': 'string',
            'Status': 'string',
            'PercentProgress': 'string',
            'EarliestRestorableTime': datetime(2015, 1, 1),
            'Endpoint': 'string',
            'ReaderEndpoint': 'string',
            'CustomEndpoints': [
                'string',
            ],
            'MultiAZ': True|False,
            'Engine': 'string',
            'EngineVersion': 'string',
            'LatestRestorableTime': datetime(2015, 1, 1),
            'Port': 123,
            'MasterUsername': 'string',
            'DBClusterOptionGroupMemberships': [
                {
                    'DBClusterOptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'PreferredBackupWindow': 'string',
            'PreferredMaintenanceWindow': 'string',
            'ReplicationSourceIdentifier': 'string',
            'ReadReplicaIdentifiers': [
                'string',
            ],
            'DBClusterMembers': [
                {
                    'DBInstanceIdentifier': 'string',
                    'IsClusterWriter': True|False,
                    'DBClusterParameterGroupStatus': 'string',
                    'PromotionTier': 123
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'HostedZoneId': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbClusterResourceId': 'string',
            'DBClusterArn': 'string',
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'Status': 'string',
                    'FeatureName': 'string'
                },
            ],
            'IAMDatabaseAuthenticationEnabled': True|False,
            'CloneGroupId': 'string',
            'ClusterCreateTime': datetime(2015, 1, 1),
            'EarliestBacktrackTime': datetime(2015, 1, 1),
            'BacktrackWindow': 123,
            'BacktrackConsumedChangeRecords': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'Capacity': 123,
            'EngineMode': 'string',
            'ScalingConfigurationInfo': {
                'MinCapacity': 123,
                'MaxCapacity': 123,
                'AutoPause': True|False,
                'SecondsUntilAutoPause': 123,
                'TimeoutAction': 'string'
            },
            'DeletionProtection': True|False,
            'HttpEndpointEnabled': True|False,
            'ActivityStreamMode': 'sync'|'async',
            'ActivityStreamStatus': 'stopped'|'starting'|'started'|'stopping',
            'ActivityStreamKmsKeyId': 'string',
            'ActivityStreamKinesisStreamName': 'string',
            'CopyTagsToSnapshot': True|False,
            'CrossAccountClone': True|False,
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ]
        }
    }
    
    
    :returns: 
    (string) --
    
    """
    pass

def stop_db_instance(DBInstanceIdentifier=None, DBSnapshotIdentifier=None):
    """
    Stops an Amazon RDS DB instance. When you stop a DB instance, Amazon RDS retains the DB instance\'s metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary.
    For more information, see Stopping an Amazon RDS DB Instance Temporarily in the Amazon RDS User Guide.
    See also: AWS API Documentation
    
    Exceptions
    
    :example: response = client.stop_db_instance(
        DBInstanceIdentifier='string',
        DBSnapshotIdentifier='string'
    )
    
    
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: [REQUIRED]\nThe user-supplied instance identifier.\n

    :type DBSnapshotIdentifier: string
    :param DBSnapshotIdentifier: The user-supplied instance identifier of the DB Snapshot created immediately before the DB instance is stopped.

    :rtype: dict

ReturnsResponse Syntax
{
    'DBInstance': {
        'DBInstanceIdentifier': 'string',
        'DBInstanceClass': 'string',
        'Engine': 'string',
        'DBInstanceStatus': 'string',
        'MasterUsername': 'string',
        'DBName': 'string',
        'Endpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'AllocatedStorage': 123,
        'InstanceCreateTime': datetime(2015, 1, 1),
        'PreferredBackupWindow': 'string',
        'BackupRetentionPeriod': 123,
        'DBSecurityGroups': [
            {
                'DBSecurityGroupName': 'string',
                'Status': 'string'
            },
        ],
        'VpcSecurityGroups': [
            {
                'VpcSecurityGroupId': 'string',
                'Status': 'string'
            },
        ],
        'DBParameterGroups': [
            {
                'DBParameterGroupName': 'string',
                'ParameterApplyStatus': 'string'
            },
        ],
        'AvailabilityZone': 'string',
        'DBSubnetGroup': {
            'DBSubnetGroupName': 'string',
            'DBSubnetGroupDescription': 'string',
            'VpcId': 'string',
            'SubnetGroupStatus': 'string',
            'Subnets': [
                {
                    'SubnetIdentifier': 'string',
                    'SubnetAvailabilityZone': {
                        'Name': 'string'
                    },
                    'SubnetStatus': 'string'
                },
            ],
            'DBSubnetGroupArn': 'string'
        },
        'PreferredMaintenanceWindow': 'string',
        'PendingModifiedValues': {
            'DBInstanceClass': 'string',
            'AllocatedStorage': 123,
            'MasterUserPassword': 'string',
            'Port': 123,
            'BackupRetentionPeriod': 123,
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'LicenseModel': 'string',
            'Iops': 123,
            'DBInstanceIdentifier': 'string',
            'StorageType': 'string',
            'CACertificateIdentifier': 'string',
            'DBSubnetGroupName': 'string',
            'PendingCloudwatchLogsExports': {
                'LogTypesToEnable': [
                    'string',
                ],
                'LogTypesToDisable': [
                    'string',
                ]
            },
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ]
        },
        'LatestRestorableTime': datetime(2015, 1, 1),
        'MultiAZ': True|False,
        'EngineVersion': 'string',
        'AutoMinorVersionUpgrade': True|False,
        'ReadReplicaSourceDBInstanceIdentifier': 'string',
        'ReadReplicaDBInstanceIdentifiers': [
            'string',
        ],
        'ReadReplicaDBClusterIdentifiers': [
            'string',
        ],
        'LicenseModel': 'string',
        'Iops': 123,
        'OptionGroupMemberships': [
            {
                'OptionGroupName': 'string',
                'Status': 'string'
            },
        ],
        'CharacterSetName': 'string',
        'SecondaryAvailabilityZone': 'string',
        'PubliclyAccessible': True|False,
        'StatusInfos': [
            {
                'StatusType': 'string',
                'Normal': True|False,
                'Status': 'string',
                'Message': 'string'
            },
        ],
        'StorageType': 'string',
        'TdeCredentialArn': 'string',
        'DbInstancePort': 123,
        'DBClusterIdentifier': 'string',
        'StorageEncrypted': True|False,
        'KmsKeyId': 'string',
        'DbiResourceId': 'string',
        'CACertificateIdentifier': 'string',
        'DomainMemberships': [
            {
                'Domain': 'string',
                'Status': 'string',
                'FQDN': 'string',
                'IAMRoleName': 'string'
            },
        ],
        'CopyTagsToSnapshot': True|False,
        'MonitoringInterval': 123,
        'EnhancedMonitoringResourceArn': 'string',
        'MonitoringRoleArn': 'string',
        'PromotionTier': 123,
        'DBInstanceArn': 'string',
        'Timezone': 'string',
        'IAMDatabaseAuthenticationEnabled': True|False,
        'PerformanceInsightsEnabled': True|False,
        'PerformanceInsightsKMSKeyId': 'string',
        'PerformanceInsightsRetentionPeriod': 123,
        'EnabledCloudwatchLogsExports': [
            'string',
        ],
        'ProcessorFeatures': [
            {
                'Name': 'string',
                'Value': 'string'
            },
        ],
        'DeletionProtection': True|False,
        'AssociatedRoles': [
            {
                'RoleArn': 'string',
                'FeatureName': 'string',
                'Status': 'string'
            },
        ],
        'ListenerEndpoint': {
            'Address': 'string',
            'Port': 123,
            'HostedZoneId': 'string'
        },
        'MaxAllocatedStorage': 123
    }
}


Response Structure

(dict) --

DBInstance (dict) --
Contains the details of an Amazon RDS DB instance.
This data type is used as a response element in the DescribeDBInstances action.

DBInstanceIdentifier (string) --
Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.

DBInstanceClass (string) --
Contains the name of the compute and memory capacity class of the DB instance.

Engine (string) --
Provides the name of the database engine to be used for this DB instance.

DBInstanceStatus (string) --
Specifies the current state of this database.
For information about DB instance statuses, see DB Instance Status in the Amazon RDS User Guide.

MasterUsername (string) --
Contains the master username for the DB instance.

DBName (string) --
The meaning of this parameter differs according to the database engine you use.

MySQL, MariaDB, SQL Server, PostgreSQL

Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.
Type: String

Oracle

Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.

Endpoint (dict) --
Specifies the connection endpoint.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



AllocatedStorage (integer) --
Specifies the allocated storage size specified in gibibytes.

InstanceCreateTime (datetime) --
Provides the date and time the DB instance was created.

PreferredBackupWindow (string) --
Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod .

BackupRetentionPeriod (integer) --
Specifies the number of days for which automatic DB snapshots are retained.

DBSecurityGroups (list) --
A list of DB security group elements containing DBSecurityGroup.Name and DBSecurityGroup.Status subelements.

(dict) --
This data type is used as a response element in the following actions:

ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceToPointInTime


DBSecurityGroupName (string) --
The name of the DB security group.

Status (string) --
The status of the DB security group.





VpcSecurityGroups (list) --
Provides a list of VPC security group elements that the DB instance belongs to.

(dict) --
This data type is used as a response element for queries on VPC security group membership.

VpcSecurityGroupId (string) --
The name of the VPC security group.

Status (string) --
The status of the VPC security group.





DBParameterGroups (list) --
Provides the list of DB parameter groups applied to this DB instance.

(dict) --
The status of the DB parameter group.
This data type is used as a response element in the following actions:

CreateDBInstance
CreateDBInstanceReadReplica
DeleteDBInstance
ModifyDBInstance
RebootDBInstance
RestoreDBInstanceFromDBSnapshot


DBParameterGroupName (string) --
The name of the DB parameter group.

ParameterApplyStatus (string) --
The status of parameter updates.





AvailabilityZone (string) --
Specifies the name of the Availability Zone the DB instance is located in.

DBSubnetGroup (dict) --
Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.

DBSubnetGroupName (string) --
The name of the DB subnet group.

DBSubnetGroupDescription (string) --
Provides the description of the DB subnet group.

VpcId (string) --
Provides the VpcId of the DB subnet group.

SubnetGroupStatus (string) --
Provides the status of the DB subnet group.

Subnets (list) --
Contains a list of Subnet elements.

(dict) --
This data type is used as a response element in the DescribeDBSubnetGroups action.

SubnetIdentifier (string) --
Specifies the identifier of the subnet.

SubnetAvailabilityZone (dict) --
Contains Availability Zone information.
This data type is used as an element in the OrderableDBInstanceOption data type.

Name (string) --
The name of the Availability Zone.



SubnetStatus (string) --
Specifies the status of the subnet.





DBSubnetGroupArn (string) --
The Amazon Resource Name (ARN) for the DB subnet group.



PreferredMaintenanceWindow (string) --
Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

PendingModifiedValues (dict) --
Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.

DBInstanceClass (string) --
Contains the new DBInstanceClass for the DB instance that will be applied or is currently being applied.

AllocatedStorage (integer) --
Contains the new AllocatedStorage size for the DB instance that will be applied or is currently being applied.

MasterUserPassword (string) --
Contains the pending or currently-in-progress change of the master credentials for the DB instance.

Port (integer) --
Specifies the pending port for the DB instance.

BackupRetentionPeriod (integer) --
Specifies the pending number of days for which automated backups are retained.

MultiAZ (boolean) --
Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

LicenseModel (string) --
The license model for the DB instance.
Valid values: license-included | bring-your-own-license | general-public-license

Iops (integer) --
Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.

DBInstanceIdentifier (string) --
Contains the new DBInstanceIdentifier for the DB instance that will be applied or is currently being applied.

StorageType (string) --
Specifies the storage type to be associated with the DB instance.

CACertificateIdentifier (string) --
Specifies the identifier of the CA certificate for the DB instance.

DBSubnetGroupName (string) --
The new DB subnet group for the DB instance.

PendingCloudwatchLogsExports (dict) --
A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.

LogTypesToEnable (list) --
Log types that are in the process of being deactivated. After they are deactivated, these log types aren\'t exported to CloudWatch Logs.

(string) --


LogTypesToDisable (list) --
Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.

(string) --




ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.







LatestRestorableTime (datetime) --
Specifies the latest time to which a database can be restored with point-in-time restore.

MultiAZ (boolean) --
Specifies if the DB instance is a Multi-AZ deployment.

EngineVersion (string) --
Indicates the database engine version.

AutoMinorVersionUpgrade (boolean) --
Indicates that minor version patches are applied automatically.

ReadReplicaSourceDBInstanceIdentifier (string) --
Contains the identifier of the source DB instance if this DB instance is a read replica.

ReadReplicaDBInstanceIdentifiers (list) --
Contains one or more identifiers of the read replicas associated with this DB instance.

(string) --


ReadReplicaDBClusterIdentifiers (list) --
Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas.

Note
Currently, each RDS DB instance can have only one Aurora read replica.


(string) --


LicenseModel (string) --
License model information for this DB instance.

Iops (integer) --
Specifies the Provisioned IOPS (I/O operations per second) value.

OptionGroupMemberships (list) --
Provides the list of option group memberships for this DB instance.

(dict) --
Provides information on the option groups the DB instance is a member of.

OptionGroupName (string) --
The name of the option group that the instance belongs to.

Status (string) --
The status of the DB instance\'s option group membership. Valid values are: in-sync , pending-apply , pending-removal , pending-maintenance-apply , pending-maintenance-removal , applying , removing , and failed .





CharacterSetName (string) --
If present, specifies the name of the character set that this instance is associated with.

SecondaryAvailabilityZone (string) --
If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.

PubliclyAccessible (boolean) --
Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.

StatusInfos (list) --
The status of a read replica. If the instance isn\'t a read replica, this is blank.

(dict) --
Provides a list of status information for a DB instance.

StatusType (string) --
This value is currently "read replication."

Normal (boolean) --
Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.

Status (string) --
Status of the DB instance. For a StatusType of read replica, the values can be replicating, replication stop point set, replication stop point reached, error, stopped, or terminated.

Message (string) --
Details of the error if there is an error for the instance. If the instance isn\'t in an error state, this value is blank.





StorageType (string) --
Specifies the storage type associated with DB instance.

TdeCredentialArn (string) --
The ARN from the key store with which the instance is associated for TDE encryption.

DbInstancePort (integer) --
Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.

DBClusterIdentifier (string) --
If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.

StorageEncrypted (boolean) --
Specifies whether the DB instance is encrypted.

KmsKeyId (string) --
If StorageEncrypted is true, the AWS KMS key identifier for the encrypted DB instance.

DbiResourceId (string) --
The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.

CACertificateIdentifier (string) --
The identifier of the CA certificate for this DB instance.

DomainMemberships (list) --
The Active Directory Domain membership records associated with the DB instance.

(dict) --
An Active Directory Domain membership record associated with the DB instance or cluster.

Domain (string) --
The identifier of the Active Directory Domain.

Status (string) --
The status of the Active Directory Domain membership for the DB instance or cluster. Values include joined, pending-join, failed, and so on.

FQDN (string) --
The fully qualified domain name of the Active Directory Domain.

IAMRoleName (string) --
The name of the IAM role to be used when making API calls to the Directory Service.





CopyTagsToSnapshot (boolean) --
Specifies whether tags are copied from the DB instance to snapshots of the DB instance.

Amazon Aurora

Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see DBCluster .

MonitoringInterval (integer) --
The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.

EnhancedMonitoringResourceArn (string) --
The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.

MonitoringRoleArn (string) --
The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.

PromotionTier (integer) --
A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster in the Amazon Aurora User Guide .

DBInstanceArn (string) --
The Amazon Resource Name (ARN) for the DB instance.

Timezone (string) --
The time zone of the DB instance. In most cases, the Timezone element is empty. Timezone content appears only for Microsoft SQL Server DB instances that were created with a time zone specified.

IAMDatabaseAuthenticationEnabled (boolean) --
True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
IAM database authentication can be enabled for the following database engines

For MySQL 5.6, minor version 5.6.34 or higher
For MySQL 5.7, minor version 5.7.16 or higher
Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.


PerformanceInsightsEnabled (boolean) --
True if Performance Insights is enabled for the DB instance, and otherwise false.

PerformanceInsightsKMSKeyId (string) --
The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.

PerformanceInsightsRetentionPeriod (integer) --
The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).

EnabledCloudwatchLogsExports (list) --
A list of log types that this DB instance is configured to export to CloudWatch Logs.
Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files in the Amazon RDS User Guide.

(string) --


ProcessorFeatures (list) --
The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.

(dict) --
Contains the processor features of a DB instance class.
To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter.
You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:

CreateDBInstance
ModifyDBInstance
RestoreDBInstanceFromDBSnapshot
RestoreDBInstanceFromS3
RestoreDBInstanceToPointInTime

You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter.
In addition, you can use the following actions for DB instance class processor information:

DescribeDBInstances
DescribeDBSnapshots
DescribeValidDBInstanceModifications

For more information, see Configuring the Processor of the DB Instance Class in the Amazon RDS User Guide.

Name (string) --
The name of the processor feature. Valid names are coreCount and threadsPerCore .

Value (string) --
The value of a processor feature name.





DeletionProtection (boolean) --
Indicates if the DB instance has deletion protection enabled. The database can\'t be deleted when deletion protection is enabled. For more information, see Deleting a DB Instance .

AssociatedRoles (list) --
The AWS Identity and Access Management (IAM) roles associated with the DB instance.

(dict) --
Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance.

RoleArn (string) --
The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.

FeatureName (string) --
The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion .

Status (string) --
Describes the state of association between the IAM role and the DB instance. The Status property returns one of the following values:

ACTIVE - the IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.
PENDING - the IAM role ARN is being associated with the DB instance.
INVALID - the IAM role ARN is associated with the DB instance, but the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf.






ListenerEndpoint (dict) --
Specifies the listener connection endpoint for SQL Server Always On.

Address (string) --
Specifies the DNS address of the DB instance.

Port (integer) --
Specifies the port that the database engine is listening on.

HostedZoneId (string) --
Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.



MaxAllocatedStorage (integer) --
The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.









Exceptions

RDS.Client.exceptions.DBInstanceNotFoundFault
RDS.Client.exceptions.InvalidDBInstanceStateFault
RDS.Client.exceptions.DBSnapshotAlreadyExistsFault
RDS.Client.exceptions.SnapshotQuotaExceededFault
RDS.Client.exceptions.InvalidDBClusterStateFault


    :return: {
        'DBInstance': {
            'DBInstanceIdentifier': 'string',
            'DBInstanceClass': 'string',
            'Engine': 'string',
            'DBInstanceStatus': 'string',
            'MasterUsername': 'string',
            'DBName': 'string',
            'Endpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'AllocatedStorage': 123,
            'InstanceCreateTime': datetime(2015, 1, 1),
            'PreferredBackupWindow': 'string',
            'BackupRetentionPeriod': 123,
            'DBSecurityGroups': [
                {
                    'DBSecurityGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'VpcSecurityGroups': [
                {
                    'VpcSecurityGroupId': 'string',
                    'Status': 'string'
                },
            ],
            'DBParameterGroups': [
                {
                    'DBParameterGroupName': 'string',
                    'ParameterApplyStatus': 'string'
                },
            ],
            'AvailabilityZone': 'string',
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            },
            'PreferredMaintenanceWindow': 'string',
            'PendingModifiedValues': {
                'DBInstanceClass': 'string',
                'AllocatedStorage': 123,
                'MasterUserPassword': 'string',
                'Port': 123,
                'BackupRetentionPeriod': 123,
                'MultiAZ': True|False,
                'EngineVersion': 'string',
                'LicenseModel': 'string',
                'Iops': 123,
                'DBInstanceIdentifier': 'string',
                'StorageType': 'string',
                'CACertificateIdentifier': 'string',
                'DBSubnetGroupName': 'string',
                'PendingCloudwatchLogsExports': {
                    'LogTypesToEnable': [
                        'string',
                    ],
                    'LogTypesToDisable': [
                        'string',
                    ]
                },
                'ProcessorFeatures': [
                    {
                        'Name': 'string',
                        'Value': 'string'
                    },
                ]
            },
            'LatestRestorableTime': datetime(2015, 1, 1),
            'MultiAZ': True|False,
            'EngineVersion': 'string',
            'AutoMinorVersionUpgrade': True|False,
            'ReadReplicaSourceDBInstanceIdentifier': 'string',
            'ReadReplicaDBInstanceIdentifiers': [
                'string',
            ],
            'ReadReplicaDBClusterIdentifiers': [
                'string',
            ],
            'LicenseModel': 'string',
            'Iops': 123,
            'OptionGroupMemberships': [
                {
                    'OptionGroupName': 'string',
                    'Status': 'string'
                },
            ],
            'CharacterSetName': 'string',
            'SecondaryAvailabilityZone': 'string',
            'PubliclyAccessible': True|False,
            'StatusInfos': [
                {
                    'StatusType': 'string',
                    'Normal': True|False,
                    'Status': 'string',
                    'Message': 'string'
                },
            ],
            'StorageType': 'string',
            'TdeCredentialArn': 'string',
            'DbInstancePort': 123,
            'DBClusterIdentifier': 'string',
            'StorageEncrypted': True|False,
            'KmsKeyId': 'string',
            'DbiResourceId': 'string',
            'CACertificateIdentifier': 'string',
            'DomainMemberships': [
                {
                    'Domain': 'string',
                    'Status': 'string',
                    'FQDN': 'string',
                    'IAMRoleName': 'string'
                },
            ],
            'CopyTagsToSnapshot': True|False,
            'MonitoringInterval': 123,
            'EnhancedMonitoringResourceArn': 'string',
            'MonitoringRoleArn': 'string',
            'PromotionTier': 123,
            'DBInstanceArn': 'string',
            'Timezone': 'string',
            'IAMDatabaseAuthenticationEnabled': True|False,
            'PerformanceInsightsEnabled': True|False,
            'PerformanceInsightsKMSKeyId': 'string',
            'PerformanceInsightsRetentionPeriod': 123,
            'EnabledCloudwatchLogsExports': [
                'string',
            ],
            'ProcessorFeatures': [
                {
                    'Name': 'string',
                    'Value': 'string'
                },
            ],
            'DeletionProtection': True|False,
            'AssociatedRoles': [
                {
                    'RoleArn': 'string',
                    'FeatureName': 'string',
                    'Status': 'string'
                },
            ],
            'ListenerEndpoint': {
                'Address': 'string',
                'Port': 123,
                'HostedZoneId': 'string'
            },
            'MaxAllocatedStorage': 123
        }
    }
    
    
    :returns: 
    ModifyDBInstance
    RebootDBInstance
    RestoreDBInstanceFromDBSnapshot
    RestoreDBInstanceToPointInTime
    
    """
    pass

