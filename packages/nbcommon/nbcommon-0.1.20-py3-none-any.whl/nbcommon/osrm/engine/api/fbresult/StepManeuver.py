# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbresult

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StepManeuver(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsStepManeuver(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StepManeuver()
        x.Init(buf, n + offset)
        return x

    # StepManeuver
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StepManeuver
    def Location(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from osrm.engine.api.fbresult.Position import Position
            obj = Position()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # StepManeuver
    def BearingBefore(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # StepManeuver
    def BearingAfter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # StepManeuver
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # StepManeuver
    def Modifier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # StepManeuver
    def Exit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def StepManeuverStart(builder): builder.StartObject(6)
def StepManeuverAddLocation(builder, location): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(location), 0)
def StepManeuverAddBearingBefore(builder, bearingBefore): builder.PrependUint16Slot(1, bearingBefore, 0)
def StepManeuverAddBearingAfter(builder, bearingAfter): builder.PrependUint16Slot(2, bearingAfter, 0)
def StepManeuverAddType(builder, type): builder.PrependInt8Slot(3, type, 0)
def StepManeuverAddModifier(builder, modifier): builder.PrependInt8Slot(4, modifier, 0)
def StepManeuverAddExit(builder, exit): builder.PrependUint8Slot(5, exit, 0)
def StepManeuverEnd(builder): return builder.EndObject()
