import element as el

##TODO: Come up with a less shitty way of matching strings to class
element_dict = {##MISB KLV names
                "checksum" : el.ChecksumElement,
                "timestamp" : el.TimestampElement,
                "missionId" : el.MissionIDElement,
                "platformHeadingAngle" : el.PlatformHeadingAngleElement,
                "platformPitchAngleShort" : el.PlatformPitchAngleElement,
                "platformPitchAngleFull" : el.PlatformPitchAngleElement,
                "platformRollAngleShort" : el.PlatformRollAngleShortElement,
                "platformRollAngleFull" : el.PlatformRollAngleFullElement,
                "platformDesignation" : el.PlatformDesignationElement,
                "imageSourceSensor" : el.ImageSourceSensorElement,
                "imageCoordinateSystem" : el.ImageCoordinateSystemElement,
                "sensorLatitude" : el.SensorLatitudeElement,
                "sensorLongitude" : el.SensorLongitudeElement,
                "sensorTrueAltitude" : el.SensorTrueAltitudeElement,
                "sensorEllipsoidHeight" : el.SensorEllipsoidHeightElement,
                "sensorEllipsoidHeightExtended" : el.SensorEllipsoidHeightExtendedElement,
                "sensorHorizontalFov" : el.SensorHorizontalFOVElement,
                "sensorVerticalFov" : el.SensorVerticalFOVElement,
                "sensorRelativeAzimuthAngle" : el.SensorRelativeAzimuthAngleElement,
                "sensorRelativeElevationAngle" : el.SensorRelativeElevationAngleElement,
                "sensorRelativeRollAngle" : el.SensorRelativeRollAngleElement,
                "slantRange" : el.SlantRangeElement,
                "targetWidth" : el.TargetWidthElement,
                "targetWidthExtended" : el.TargetWidthExtendedElement,
                "frameCenterLatitude" : el.FrameCenterLatitudeElement,
                "frameCenterLongitude" : el.FrameCenterLongitudeElement,
                "frameCenterElevation" : el.FrameCenterElevationElement,
                "frameCenterHeightAboveEllipsoid" : el.FrameCenterHeightAboveEllipsoidElement,
                "uasLocalSetVersion" : el.UASLocalSetVersionElement,
                "motionImageryCoreIdentifier" : el.MotionImageryCoreIdentifierElement,
                "sensorWGS84Altitude" : el.SensorWGS84AltitudeElement,
                "sensorGroundAltitude" : el.SensorGroundAltitudeElement,
                "sensorLaunchAltitude" : el.SensorLaunchAltitudeElement,
                #SRT specific
                "timeframeBegin" : el.TimeframeBeginElement,
                "timeframeEnd" : el.TimeframeEndElement,
                ##Other names
                "Latitude" : el.SensorLatitudeElement,
                "Longitude" : el.SensorLongitudeElement,
                "Altitude (m)" : el.SensorTrueAltitudeElement,
                "Horizontal FOV (deg)" : el.SensorHorizontalFOVElement,
                "Vertical FOV (deg)" : el.SensorVerticalFOVElement,
                "Pan (deg)" : el.SensorRelativeAzimuthAngleElement,
                "Tilt (deg)" : el.SensorRelativeElevationAngleElement,
                "Roll (deg)" : el.SensorRelativeRollAngleElement,
                "Slant Range (m)" : el.SlantRangeElement,
                "Horizontal Span (m)" : el.TargetWidthElement,
                "Center Latitude" : el.FrameCenterLatitudeElement,
                "Center Longitude" : el.FrameCenterLongitudeElement,
                "Center Altitude (m)" : el.FrameCenterElevationElement
                }
