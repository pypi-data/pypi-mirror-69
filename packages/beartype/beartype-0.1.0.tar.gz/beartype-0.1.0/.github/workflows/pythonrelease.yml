---
# --------------------( LICENSE                           )--------------------
# Copyright (c) 2014-2020 Cecil Curry.
# See "LICENSE" for further details.
#
# --------------------( SYNOPSIS                          )--------------------
# GitHub-specific continuous deployment (CD) configuration, enabling automated
# publication of both source tarballs and binary wheels in various popular
# formats to both GitHub itself and PyPI on each push of a tag to the "master"
# branch of this repository.
#
# --------------------( SEE ALSO                          )--------------------
# * https://blog.chezo.uno/how-to-release-python-package-from-github-actions-d5a1d8edba6e
#   Well-authored blog post strongly inspiring this configuration.
# * https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows
#   Official PyPA workflow also inspiring this configuration.

# ....................{ METADATA                          }....................
# Non-human-readable (i.e., machine-readable) label associated with this
# GitHub Actions workflow.
name: release

on:
  push:
    branches: [ master ]

    # Sequence of glob expressions matched against "refs/tags" pushed to the
    # branches above.
    tags:
      - 'v*'   # Match "v"-prefixed tags (e.g., "v6.9.6").

# ....................{ MAIN                              }....................
jobs:
  # ...................{ GITHUB                            }...................
  github:
    name: "Publish tagged release to GitHub"
    runs-on: ubuntu-latest

    steps:
    - name: "Checking out repository..."
      uses: 'actions/checkout@v2'
    - name: "Publishing GitHub release from tag..."
      uses: 'actions/create-release@v1'
      id: create_release
      env:
        # Boilerplate token auto-generated by GitHub Actions.
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: "Stable Release ${{ github.ref }}"
        body: ${{ github.event.commits[0].message }}

  # ...................{ PYPI                              }...................
  pypi:
    needs: github

    name: "Publish tagged release to PyPI"
    runs-on: ubuntu-latest

    steps:
    - name: "Checking out repository..."
      uses: 'actions/checkout@v2'
    - name: "Installing latest stable Python 3.x..."
      uses: 'actions/setup-python@v1'
      with:
        python-version: '3.x'

    # See "pythonpackage.yml" for further details.
    - name: 'Installing package dependencies...'
      run: |
        set -xe
        python -VV
        python -m site
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade twine
    - name: "Creating source tarball and binary wheel..."
      run: |
        set -xe
        python setup.py sdist bdist_wheel
    - name: "Publishing PyPI release from tag..."
      uses: 'pypa/gh-action-pypi-publish@master'
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
