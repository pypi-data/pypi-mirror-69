##################### generated by xml-casa (v2) from vishead.xml ###################
##################### c2c847dc9fbae1aabbc57e693d144aa4 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from .private.task_vishead import vishead as _vishead_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log

class _vishead:
    """
    vishead ---- List, summary, get, and put metadata in a measurement set

    
    
    This task allows the user to manipulate some meta-data keywords in a
    measurement set.  The mode='list' shows those keywords that are
    presently implemented, with their values.  The contents associated
    with the keywords can be obtained with mode='get' and changed with mode='put'.
    
    The modes that are available are:
    
    list    --- List all keywords that are recognized, and list the
    value(s) for each.  Only these keywords can be obtained
    (get) or changed (put)
    summary --- Provides a summary that is equivalent to running listobs(verbose=False)
    get     --- Get the specified keyword value(s) from the ms
    put     --- Put the specified keyword value(s) into the ms
    
    Keywords currently implemented are:
    
    cal_grp
    field                 Field names
    fld_code              Field Observing codes
    freq_group_name
    log
    observer              Observer name
    project               Project name
    ptcs                  Phase tracking centers for each field
    release_date
    schedule
    schedule_type
    spw_name              Spectral parameters?
    source_name           Source Names (=Field Names?)
    telescope             Telescope Name
    
    Note that the default list of keywords is a subset of the former list. To get
    all the keywords set listitemts=[]. See task parameter listitems for more details.

    --------- parameter descriptions ---------------------------------------------

    vis       Name of input visibility file
    mode      Mode of operation for vishead
    listitems Keyword items to list. This parameter is only relevant in list mode. Note that the default list is a subset of the possible keywords. To get all the keywords set listitems=[]
    hdkey     Keyword to get/put
    hdindex   Index (counting from 0) if keyword is an array (used in get/put mode only). The empty string means all elements
    hdvalue   Value of the keywords to be put in the MS (used in put mode only)

    --------- examples -----------------------------------------------------------

    


    """

    _info_group_ = """information, manipulation"""
    _info_desc_ = """List, summary, get, and put metadata in a measurement set"""

    def __call__( self, vis='', mode='summary', listitems=[ 'telescope','observer','project','field','freq_group_name','spw_name','schedule','schedule_type','release_date' ], hdkey='', hdindex='', hdvalue='' ):
        schema = {'vis': {'type': 'cReqPath', 'coerce': _coerce.expand_path}, 'mode': {'type': 'cStr', 'allowed': [ 'put', 'get', 'summary', 'list', '' ]}, 'listitems': {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}, 'hdkey': {'type': 'cStr'}, 'hdindex': {'type': 'cStr'}, 'hdvalue': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}}
        doc = {'vis': vis, 'mode': mode, 'listitems': listitems, 'hdkey': hdkey, 'hdindex': hdindex, 'hdvalue': hdvalue}
        assert _pc.validate(doc,schema), str(_pc.errors)
        _logging_state_ = _start_log( 'vishead', [ 'vis=' + repr(_pc.document['vis']), 'mode=' + repr(_pc.document['mode']), 'listitems=' + repr(_pc.document['listitems']), 'hdkey=' + repr(_pc.document['hdkey']), 'hdindex=' + repr(_pc.document['hdindex']), 'hdvalue=' + repr(_pc.document['hdvalue']) ] )
        return _end_log( _logging_state_, 'vishead', _vishead_t( _pc.document['vis'], _pc.document['mode'], _pc.document['listitems'], _pc.document['hdkey'], _pc.document['hdindex'], _pc.document['hdvalue'] ) )

vishead = _vishead( )

