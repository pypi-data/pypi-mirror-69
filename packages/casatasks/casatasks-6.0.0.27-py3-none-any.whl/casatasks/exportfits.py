##################### generated by xml-casa (v2) from exportfits.xml ################
##################### 26c81b83025f4fbfa3801ec2ff525110 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from .private.task_exportfits import exportfits as _exportfits_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log

class _exportfits:
    """
    exportfits ---- Convert a CASA image to a FITS file

    
    CASA-produced images can be exported as FITS files for transporting to
    other software packages or publication.
    No subimaging of the fits image can be made with this task.
    The spectral reference frame can be changed prior to export using the
    task imreframe.

    --------- parameter descriptions ---------------------------------------------

    imagename  Name of input CASA image
               Default: none
               
                  Example: fitsimage='3C273XC1.image'
    fitsimage  Name of output image FITS file
               Default: none
               
                  Example: fitsimage='3C273XC1.fits'
    velocity   Use velocity (rather than frequency) as spectral axis
               Default: False
               Options: False|True
    optical    Use the optical (rather than radio) velocity convention
               Default: False
               Options: False|True
    bitpix     Bits per pixel
               Default: -32
               
                  Example: bitpix=16
    minpix     Minimum pixel value (if minpix > maxpix, value is automatically determined)
    maxpix     Maximum pixel value (if minpix > maxpix, value is
               automatically determined)
               Default: -1
    overwrite  Overwrite output file if it exists?
               Default: False
               Options: False|True
    dropstokes Drop the Stokes axis?
    stokeslast Put Stokes axis last in header?
               Default: True
               Options: True|False
    history    Write history to the FITS image?
               Default: True
               Options: True|False
    dropdeg    Drop all degenerate axes (e.g. Stokes and/or Frequency)?
               Default: False
               Options: False|True

    --------- examples -----------------------------------------------------------

    
    FOR MORE INFORMATION, SEE THE TASK PAGES OF EXPORTFITS IN CASA DOCS:
    https://casa.nrao.edu/casadocs/


    """

    _info_group_ = """import/export"""
    _info_desc_ = """Convert a CASA image to a FITS file"""

    def __call__( self, imagename='', fitsimage='', velocity=False, optical=False, bitpix=int(-32), minpix=int(0), maxpix=int(-1), overwrite=False, dropstokes=False, stokeslast=True, history=True, dropdeg=False ):
        schema = {'imagename': {'type': 'cReqPath', 'coerce': _coerce.expand_path}, 'fitsimage': {'type': 'cStr'}, 'velocity': {'type': 'cBool'}, 'optical': {'type': 'cBool'}, 'bitpix': {'type': 'cInt', 'allowed': [ -32, 16 ]}, 'minpix': {'anyof': [{'type': 'cInt'}, {'type': 'cFloat', 'coerce': _coerce.to_float}]}, 'maxpix': {'anyof': [{'type': 'cInt'}, {'type': 'cFloat', 'coerce': _coerce.to_float}]}, 'overwrite': {'type': 'cBool'}, 'dropstokes': {'type': 'cBool'}, 'stokeslast': {'type': 'cBool'}, 'history': {'type': 'cBool'}, 'dropdeg': {'type': 'cBool'}}
        doc = {'imagename': imagename, 'fitsimage': fitsimage, 'velocity': velocity, 'optical': optical, 'bitpix': bitpix, 'minpix': minpix, 'maxpix': maxpix, 'overwrite': overwrite, 'dropstokes': dropstokes, 'stokeslast': stokeslast, 'history': history, 'dropdeg': dropdeg}
        assert _pc.validate(doc,schema), str(_pc.errors)
        _logging_state_ = _start_log( 'exportfits', [ 'imagename=' + repr(_pc.document['imagename']), 'fitsimage=' + repr(_pc.document['fitsimage']), 'velocity=' + repr(_pc.document['velocity']), 'optical=' + repr(_pc.document['optical']), 'bitpix=' + repr(_pc.document['bitpix']), 'minpix=' + repr(_pc.document['minpix']), 'maxpix=' + repr(_pc.document['maxpix']), 'overwrite=' + repr(_pc.document['overwrite']), 'dropstokes=' + repr(_pc.document['dropstokes']), 'stokeslast=' + repr(_pc.document['stokeslast']), 'history=' + repr(_pc.document['history']), 'dropdeg=' + repr(_pc.document['dropdeg']) ] )
        return _end_log( _logging_state_, 'exportfits', _exportfits_t( _pc.document['imagename'], _pc.document['fitsimage'], _pc.document['velocity'], _pc.document['optical'], _pc.document['bitpix'], _pc.document['minpix'], _pc.document['maxpix'], _pc.document['overwrite'], _pc.document['dropstokes'], _pc.document['stokeslast'], _pc.document['history'], _pc.document['dropdeg'] ) )

exportfits = _exportfits( )

