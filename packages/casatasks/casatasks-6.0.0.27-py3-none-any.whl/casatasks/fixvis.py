##################### generated by xml-casa (v2) from fixvis.xml ####################
##################### cfbacc059790b904d0d8c601276617e5 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from .private.task_fixvis import fixvis as _fixvis_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log

class _fixvis:
    """
    fixvis ---- Recalculates (u, v, w) and/or changes Phase Center

    
    Recalculates (u, v, w) and/or changes Phase Center.
    
    If the phase center is changed, the corresponding modifications
    are applied to the visibility columns given by the parameter
    "datacolumn" which is by default set to "all" (DATA, CORRECTED,
    and MODEL).

    --------- parameter descriptions ---------------------------------------------

    vis         Name of input visibility file
                Default: none
                
                   Example: vis='ngc5921.ms'
    outputvis   Name of output visibility file
                Default: '' (same as vis)
                
                   Example: outputvis='ngc5921_out.ms'
    field       Select field using field id(s) or field name(s)
                Default: '' (all fields)
                
                Use 'go listobs' to obtain the list id's or
                names. If field string is a non-negative integer,
                it is assumed a field index,  otherwise, it is
                assumed a field name.
                
                   Examples:
                   field='0~2'; field ids 0,1,2
                   field='0,4,5~7'; field ids 0,4,5,6,7
                   field='3C286,3C295'; field named 3C286 and
                   3C295
                   field = '3,4C*'; field id 3, all names
                   starting with 4C
    refcode     Reference frame to convert UVW coordinates to
                Default: '' (refcode of PHASE_DIR in the FIELD
                table)
                
                   Example: refcode='B1950'
    reuse       Base UVW calculation on the old values?
                Default: True
                Options: True|False
                
                Note: ignored if parameter 'phasecenter' is set
    phasecenter If set to a valid direction: change the phase center for
                the given field to this value
                If given without the equinox, e.g. '0h01m00s
                +00d12m00s', the parameter is interpreted as a
                pair of offsets in RA and DEC to the present
                phasecenter.
                
                   Example: phasecenter='J2000 9h25m00s
                   -05d12m00s'
                
                Note: The RA offset can be given in units of time
                or angle. If given as a time (i.e. as a single
                number with a time unit as in, e.g., 12s or in
                the XXhXXmXXs or XX:XX:XX.XXX formats), it is
                applied as is. If given as an angle (e.g.,
                0.01deg), it is divided by the cos(DEC) before it
                is applied.
    distances   (experimental) List of the distances (as quanta) of the
                fields selected by field.
                Default: [] (the distances of all fields are
                assumed to be infinity.)
                
                If not a list but just a single value is given,
                this is applied to all fields.
                
                   Examples: 
                   distances=['2E6km', '3E6km']   
                   distances='15au'
    datacolumn  when applying a phase center shift, modify visibilities
                only in this/these column(s)
                Default: 'all' (DATA, CORRECTED, and MODEL)
                
                   Example: datacolumn='DATA,CORRECTED' (will not
                   modify MODEL)

    --------- examples -----------------------------------------------------------

    
    
    For more information, see the task pages of fixvis in CASA Docs:
    
    https://casa.nrao.edu/casadocs/


    """

    _info_group_ = """editing, manipulation"""
    _info_desc_ = """Recalculates (u, v, w) and/or changes Phase Center """

    def __call__( self, vis='', outputvis='', field=[ ], refcode='', reuse=True, phasecenter='', distances=[ ], datacolumn='all' ):
        schema = {'vis': {'type': 'cReqPath', 'coerce': _coerce.expand_path}, 'outputvis': {'type': 'cStr'}, 'field': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'refcode': {'type': 'cStr'}, 'reuse': {'type': 'cBool'}, 'phasecenter': {'type': 'cStr'}, 'distances': {'type': 'cVariant', 'coerce': [_coerce.to_variant]}, 'datacolumn': {'type': 'cStr'}}
        doc = {'vis': vis, 'outputvis': outputvis, 'field': field, 'refcode': refcode, 'reuse': reuse, 'phasecenter': phasecenter, 'distances': distances, 'datacolumn': datacolumn}
        assert _pc.validate(doc,schema), str(_pc.errors)
        _logging_state_ = _start_log( 'fixvis', [ 'vis=' + repr(_pc.document['vis']), 'outputvis=' + repr(_pc.document['outputvis']), 'field=' + repr(_pc.document['field']), 'refcode=' + repr(_pc.document['refcode']), 'reuse=' + repr(_pc.document['reuse']), 'phasecenter=' + repr(_pc.document['phasecenter']), 'distances=' + repr(_pc.document['distances']), 'datacolumn=' + repr(_pc.document['datacolumn']) ] )
        return _end_log( _logging_state_, 'fixvis', _fixvis_t( _pc.document['vis'], _pc.document['outputvis'], _pc.document['field'], _pc.document['refcode'], _pc.document['reuse'], _pc.document['phasecenter'], _pc.document['distances'], _pc.document['datacolumn'] ) )

fixvis = _fixvis( )

