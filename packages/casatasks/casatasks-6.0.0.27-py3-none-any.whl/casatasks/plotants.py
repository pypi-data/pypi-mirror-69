##################### generated by xml-casa (v2) from plotants.xml ##################
##################### 585f5ca3df085ef3510f43da605ba766 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from .private.task_plotants import plotants as _plotants_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log

class _plotants:
    """
    plotants ---- Plot the antenna distribution in the local reference frame:

    
    The location of the antennas in the MS will be plotted with
    X-toward local east; Y-toward local north.
    

    --------- parameter descriptions ---------------------------------------------

    vis            Name of input visibility file (MS)
    figfile        Save the plotted figure to this file
    antindex       Label antennas with name and antenna ID
    logpos         Whether to plot logarithmic positions
    exclude        Antenna name/id selection to exclude from plot
    checkbaselines Whether to check baselines in the main table.
    title          Title for the plot
    showgui        Show plot on gui.
    [1;42mRETURNS[1;m           void

    --------- examples -----------------------------------------------------------

    
    Plot the antenna distribution in the local reference frame:
    
    The location of the antennas in the MS will be plotted with
    X-toward local east; Y-toward local north. The name of each
    antenna is shown next to its respective location.
    
    Keyword arguments:
    vis -- Name of input visibility file (required)
    Default: none, example: vis='ngc5921.ms'
    
    figfile -- Save the plotted figure in this file
    Default: '', example: figfile='antplot.png'
    
    antindex -- Label antennas with id in addition to name
    Default: False, example: antindex=True
    
    logpos -- Produce a logarithmic position plot
    Default: False, example: logpos=True
    
    exclude -- Antenna selection string to exclude from plotting
    Note: integers are treated as names first then as index
    Default: '', examples: "DV23,DA02" "1,5,7" "0~3"
    
    checkbaselines -- Only plot antennas in the MAIN table
    This can be useful after a split.  WARNING: Setting
    checkbaselines to True will add to runtime in
    proportion to the number of rows in the dataset.
    Default: False, example: checkbaselines=True
    
    title -- Title written along top of plot
    Default: '', example: "ALMA Antenna Positions"
    showgui -- Whether or not to display the plotting GUI
    Default: True; example showgui=False
    
    You can zoom in by pressing the magnifier button (bottom,
    third from right) and making a rectangular region with
    the mouse.  Press the home button (leftmost button) to
    remove zoom.
    
    A hard-copy of this plot can be obtained by pressing the
    button on the right at the bottom of the display. A file
    dialog will allow you to choose the directory, filename,
    and format of the export.
    


    """

    _info_group_ = """visualization, calibration"""
    _info_desc_ = """Plot the antenna distribution in the local reference frame:"""

    def __call__( self, vis='', figfile='', antindex=False, logpos=False, exclude='', checkbaselines=False, title='', showgui=True ):
        schema = {'vis': {'type': 'cReqPath', 'coerce': _coerce.expand_path}, 'figfile': {'type': 'cStr'}, 'antindex': {'type': 'cBool'}, 'logpos': {'type': 'cBool'}, 'exclude': {'type': 'cStr'}, 'checkbaselines': {'type': 'cBool'}, 'title': {'type': 'cStr'}, 'showgui': {'type': 'cBool'}}
        doc = {'vis': vis, 'figfile': figfile, 'antindex': antindex, 'logpos': logpos, 'exclude': exclude, 'checkbaselines': checkbaselines, 'title': title, 'showgui': showgui}
        assert _pc.validate(doc,schema), str(_pc.errors)
        _logging_state_ = _start_log( 'plotants', [ 'vis=' + repr(_pc.document['vis']), 'figfile=' + repr(_pc.document['figfile']), 'antindex=' + repr(_pc.document['antindex']), 'logpos=' + repr(_pc.document['logpos']), 'exclude=' + repr(_pc.document['exclude']), 'checkbaselines=' + repr(_pc.document['checkbaselines']), 'title=' + repr(_pc.document['title']), 'showgui=' + repr(_pc.document['showgui']) ] )
        return _end_log( _logging_state_, 'plotants', _plotants_t( _pc.document['vis'], _pc.document['figfile'], _pc.document['antindex'], _pc.document['logpos'], _pc.document['exclude'], _pc.document['checkbaselines'], _pc.document['title'], _pc.document['showgui'] ) )

plotants = _plotants( )

