##################### generated by xml-casa (v2) from importmiriad.xml ##############
##################### 717325a8878ef5e5e2ae5e5f1cf8af4c ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from .private.task_importmiriad import importmiriad as _importmiriad_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log

class _importmiriad:
    """
    importmiriad ---- Convert a Miriad visibility file into a CASA MeasurementSet

    
    Convert a Miriad visibility file into a CASA MeasurementSet with
    optional selection of spectral windows and weighting scheme
    

    --------- parameter descriptions ---------------------------------------------

    mirfile Name of input Miriad visibility file
            Default: none
            
               Example: mirfile='mydata.uv'
    vis     Name of output MeasurementSet
            Default: none
            
               Example: vis='mydata.ms'
    tsys    Use the Tsys to set the visibility weights
            Default: False
            Options: False|True
    spw     Select spectral window/channels
                      Default: '' (all spectral windows and channels)
            
                         Examples:
                         spw='0~2,4'; spectral windows 0,1,2,4 (all channels)
                         spw='<2';  spectral windows less than 2 (i.e. 0,1)
                         spw='0:5~61'; spw 0, channels 5 to 61
                         spw='0,10,3:3~45'; spw 0,10 all channels, spw
                         3 - chans 3 to 45.
                         spw='0~2:2~6'; spw 0,1,2 with channels 2
                         through 6 in each.
                         spw = '*:3~64'  channels 3 through 64 for all sp id's
                         spw = ' :3~64' will NOT work.
    vel     Select velocity reference
            Default: telescope dependent, ATCA -> TOPO, CARMA
            -> LSRK
            Options: TOPO|LSRK|LSRD
            
               Example: vel='LSRK'
    linecal (CARMA) Apply line calibration
                                Default: False
                                Options: False|True
            
                                Only useful for CARMA data
    wide    (CARMA) Select wide window averages
            
            Select which of the wide-band channels should be loaded 
            Only useful for CARMA data
    debug   Display increasingly verbose debug messages
            Default: 0
            
               Example: debug=1
    [1;42mRETURNS[1;m    void

    --------- examples -----------------------------------------------------------

    
    FOR MORE INFORMATION, SEE THE TASK PAGES OF IMPORTMIRIAD IN CASA DOCS:
    https://casa.nrao.edu/casadocs/
    


    """

    _info_group_ = """import/export"""
    _info_desc_ = """Convert a Miriad visibility file into a CASA MeasurementSet"""

    def __call__( self, mirfile='', vis='', tsys=False, spw=[ int(-1) ], vel='', linecal=False, wide=[  ], debug=int(0) ):
        schema = {'mirfile': {'type': 'cReqPath', 'coerce': _coerce.expand_path}, 'vis': {'type': 'cStr'}, 'tsys': {'type': 'cBool'}, 'spw': {'type': 'cIntVec', 'coerce': [_coerce.to_list,_coerce.to_intvec]}, 'vel': {'type': 'cStr'}, 'linecal': {'type': 'cBool'}, 'wide': {'type': 'cIntVec', 'coerce': [_coerce.to_list,_coerce.to_intvec]}, 'debug': {'type': 'cInt'}}
        doc = {'mirfile': mirfile, 'vis': vis, 'tsys': tsys, 'spw': spw, 'vel': vel, 'linecal': linecal, 'wide': wide, 'debug': debug}
        assert _pc.validate(doc,schema), str(_pc.errors)
        _logging_state_ = _start_log( 'importmiriad', [ 'mirfile=' + repr(_pc.document['mirfile']), 'vis=' + repr(_pc.document['vis']), 'tsys=' + repr(_pc.document['tsys']), 'spw=' + repr(_pc.document['spw']), 'vel=' + repr(_pc.document['vel']), 'linecal=' + repr(_pc.document['linecal']), 'wide=' + repr(_pc.document['wide']), 'debug=' + repr(_pc.document['debug']) ] )
        return _end_log( _logging_state_, 'importmiriad', _importmiriad_t( _pc.document['mirfile'], _pc.document['vis'], _pc.document['tsys'], _pc.document['spw'], _pc.document['vel'], _pc.document['linecal'], _pc.document['wide'], _pc.document['debug'] ) )

importmiriad = _importmiriad( )

