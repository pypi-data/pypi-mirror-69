##################### generated by xml-casa (v2) from importatca.xml ################
##################### 47fdaf15f7dd6c85a7fff270f29fb113 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from .private.task_importatca import importatca as _importatca_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log

class _importatca:
    """
    importatca ---- Import ATCA RPFITS file(s) to a measurement set

    
    Imports an arbitrary number of ATCA RPFITS format data sets into a
    casa measurement set.  If more than one band is present, they will be
    put in the same measurement set but in a separate spectral window.
    The task will handle both old ATCA and new CABB (after April 2009)
    archive data.

    --------- parameter descriptions ---------------------------------------------

    files    Name of input ATCA RPFits file(s)
    vis      Name of output MeasurementSet
             Default: none
             
                Example: vis='mydata.ms'
    options  Processing options
             Default: none
             Options: birdie, reweight, noxycorr, fastmosaic,
             hires, noac (comma separated list)
             
             * birdie: (pre-CABB data only) discard edge
               channels and channels affected by internal RFI
             * reweight: (pre-CABB data only) suppress ringing
               of RFI spikes by reweighting of the lag
               spectrum 
             * noxycorr: do not apply the xy phase correction
               as derived from the switched noise calibration,
               by default this is applied during loading of
               the data
             * fastmosaic: use this option if you are loading
               mosaic data with many pointings and only one or
               two integrations per pointing; this option
               changes the tiling of the data to avoid
               excessive I/O
             * hires: use this option if you have data in time
               binning mode (as used for pulsars) but you want
               to make it look like data with very short
               integration time (no bins)
             * noac: discard the auto-correlation data
    spw      Select spectral window/channels
                       Default: '' (all spectral windows and channels)
             
                          Examples:
                          spw='0~2,4'; spectral windows 0,1,2,4 (all channels)
                          spw='<2';  spectral windows less than 2 (i.e. 0,1)
                          spw='0:5~61'; spw 0, channels 5 to 61
                          spw='0,10,3:3~45'; spw 0,10 all channels, spw
                          3 - chans 3 to 45.
                          spw='0~2:2~6'; spw 0,1,2 with channels 2
                          through 6 in each.
                          spw = '*:3~64'  channels 3 through 64 for all sp id's
                          spw = ' :3~64' will NOT work.
    nscans   Number of scans to skip followed by number of scans to
             read
             Default: [0, 0]
    lowfreq  Lowest reference frequency to select
             Default: 0.1GHz
    highfreq Highest reference frequency to select
             Default: 999GHz
    fields   List of field names to select
    edge     The edge parameter specifies how many edge channels to
             discard as a percentage of the number of channels in each band.
             Default: 8 (e.g., discard 82 channels from the
             top and bottom of a 2048 channel spectrum)
             
             For combined zooms, this specifies the percentage
             for a single zoom window

    --------- examples -----------------------------------------------------------

    
    FOR MORE INFORMATION, SEE THE TASK PAGES OF IMPORTATCA IN CASA DOCS:
    https://casa.nrao.edu/casadocs/
    


    """

    _info_group_ = """import/export"""
    _info_desc_ = """Import ATCA RPFITS file(s) to a measurement set"""

    def __call__( self, files=[  ], vis='', options='', spw=[ int(-1) ], nscans=[ int(0),int(0) ], lowfreq={'value': float(0.1), 'unit': 'GHz'}, highfreq={'value': float(999), 'unit': 'GHz'}, fields=[  ], edge=float(8) ):
        schema = {'files': {'type': 'cPathVec', 'coerce': [_coerce.to_list,_coerce.expand_pathvec]}, 'vis': {'type': 'cStr'}, 'options': {'type': 'cStr'}, 'spw': {'type': 'cIntVec', 'coerce': [_coerce.to_list,_coerce.to_intvec]}, 'nscans': {'type': 'cIntVec', 'coerce': [_coerce.to_list,_coerce.to_intvec]}, 'lowfreq': {'type': 'cDoubleQuant'}, 'highfreq': {'type': 'cDoubleQuant'}, 'fields': {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}, 'edge': {'type': 'cFloat', 'coerce': _coerce.to_float}}
        doc = {'files': files, 'vis': vis, 'options': options, 'spw': spw, 'nscans': nscans, 'lowfreq': lowfreq, 'highfreq': highfreq, 'fields': fields, 'edge': edge}
        assert _pc.validate(doc,schema), str(_pc.errors)
        _logging_state_ = _start_log( 'importatca', [ 'files=' + repr(_pc.document['files']), 'vis=' + repr(_pc.document['vis']), 'options=' + repr(_pc.document['options']), 'spw=' + repr(_pc.document['spw']), 'nscans=' + repr(_pc.document['nscans']), 'lowfreq=' + repr(_pc.document['lowfreq']), 'highfreq=' + repr(_pc.document['highfreq']), 'fields=' + repr(_pc.document['fields']), 'edge=' + repr(_pc.document['edge']) ] )
        return _end_log( _logging_state_, 'importatca', _importatca_t( _pc.document['files'], _pc.document['vis'], _pc.document['options'], _pc.document['spw'], _pc.document['nscans'], _pc.document['lowfreq'], _pc.document['highfreq'], _pc.document['fields'], _pc.document['edge'] ) )

importatca = _importatca( )

