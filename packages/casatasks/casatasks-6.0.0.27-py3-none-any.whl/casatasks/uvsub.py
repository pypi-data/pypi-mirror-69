##################### generated by xml-casa (v2) from uvsub.xml #####################
##################### bd56e4abc7d49ca5848ca1af91e23d65 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from .private.task_uvsub import uvsub as _uvsub_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log

class _uvsub:
    """
    uvsub ---- Subtract/add model from/to the corrected visibility data.

    
    This function subtracts model visibility data (MODEL_DATA column) from corrected visibility
    data (CORRECTED_DATA column) leaving the residuals in the corrected data column.  If the
    parameter 'reverse' is set true, the process is reversed. Note the DATA column is left untouched.
    If the ms has no CORRECTED _DATA column, one is made, copying DATA column, ahead of doing the
    uvsub process
    

    --------- parameter descriptions ---------------------------------------------

    vis     Name of input visibility file (MS)
    reverse reverse the operation (add rather than subtract)
    [1;42mRETURNS[1;m    void

    --------- examples -----------------------------------------------------------

    
    Help for uvsub task
    
    This function subtracts model visibility data from corrected visibility
    data leaving the residuals in the corrected data column.  If the
    parameter 'reverse' is set true, the process is reversed.
    Please note the model visibility used is the one that has been saved in the MODEL_DATA of the MS and the
    CORRECTED_DATA column is the one that is modified. If no CORRECTED_DATA column exists in the MS, one will be created and
    a copy of the DATA column is saved in it  before the uvsub operation selected is performed. uvsub does not modify the DATA column.
    
    Keyword arguments:
    vis -- Name of input visibility file (MS)
    default: none; example: vis='ngc5921.ms'
    reverse -- Reverse the operation (add rather than subtract)
    default: False; example: reverse=true
    
    uvsub(vis='ngc5921.ms', reverse=False)
    
    


    """

    _info_group_ = """modeling, calibration"""
    _info_desc_ = """Subtract/add model from/to the corrected visibility data."""

    def __call__( self, vis='', reverse=False ):
        schema = {'vis': {'type': 'cReqPath', 'coerce': _coerce.expand_path}, 'reverse': {'type': 'cBool'}}
        doc = {'vis': vis, 'reverse': reverse}
        assert _pc.validate(doc,schema), str(_pc.errors)
        _logging_state_ = _start_log( 'uvsub', [ 'vis=' + repr(_pc.document['vis']), 'reverse=' + repr(_pc.document['reverse']) ] )
        return _end_log( _logging_state_, 'uvsub', _uvsub_t( _pc.document['vis'], _pc.document['reverse'] ) )

uvsub = _uvsub( )

