##################### generated by xml-casa (v2) from fluxscale.xml #################
##################### 9ece0abc9bf57aeb38dbb5c2eb4e6df5 ##############################
from __future__ import absolute_import
import numpy
from casatools.typecheck import CasaValidator as _val_ctor
_pc = _val_ctor( )
from casatools.coercetype import coerce as _coerce
from .private.task_fluxscale import fluxscale as _fluxscale_t
from casatasks.private.task_logging import start_log as _start_log
from casatasks.private.task_logging import end_log as _end_log

class _fluxscale:
    """
    fluxscale ---- Bootstrap the flux density scale from standard calibrators

    
    Bootstrap the flux density scale from standard calibrators.
    

    --------- parameter descriptions ---------------------------------------------

    vis           Name of input visibility file
                  Default: none
                  
                     Example: vis='ngc5921.ms'
    caltable      Name of input calibration table
                  Default: none
                  
                     Example: caltable='ngc5921.gcal'. This cal
                     table was obtained from task gaincal.=
    fluxtable     Name of output, flux-scaled calibration table (required)
                  Default: none
                  
                     Example: fluxtable='ngc5921.gcal2'
                  
                  The gains in this table have been adjusted by the
                  derived flux density each calibrator.  The
                  MODEL_DATA column has NOT been updated for the
                  flux density of the calibrator.  Use setjy to do
                  this if it is a point source.
    reference     Reference field name(s) (transfer flux scale FROM)
                  Default: none
                  
                     Example: reference='1328+307'
                  
                  The names of the fields with a known flux
                  densities or visibilities that have been placed
                  in the MODEL column by setjy or ft for a model
                  not in the CASA system. The syntax is similar to
                  field.  Hence field index or names can be used.
    transfer      Transfer field name(s) (transfer flux scale TO)
                  Default: '' (all sources in caltable that are not
                  specified as reference sources.  Do not include
                  unknown target sources)
                  
                  The names of the fields with unknown flux
                  densities. These should be point-like calibrator
                  sources The syntax is similar to field.  Hence
                  source index or names can be used.
                  
                     Examples: transfer='1445+099, 3C84'; transfer
                     = '0,4'
                  
                  NOTE: All fields in reference and transfer must
                  have solutions in the caltable.
    listfile      Name of listfile that contains the fit information.
                  Default: '' (no fit listfile will be created)
                  
                  The list file contains the flux density, flux
                  density error, S/N, and number of solutions (all
                  antennas and feeds) for each spectral window.  
                  NOTE: The nominal spectral window frequencies
                  will be included in the future.
    append        Append fluxscaled solutions to the fluxtable?
                  Default: False (the fluxtable must not exist)
                  Options: False|True
    refspwmap     Vector of spectral windows enabling scaling across
                  spectral windows
                  Default: [-1] (none)
                  
                     Example with 4 spectral windows:
                     If the reference fields were observed only in
                     spw=1 and 3, and the transfer fields were
                     observed in all 4 spws (0,1,2,3), specify
                     refspwmap=[1,1,3,3]. This will ensure that
                     transfer fields observed in spws 0,1,2,3 will
                     be referenced to reference field solutions
                     only in spw 1 or 3.
    gainthreshold Threshold in the input gain solutions to be used in % deviation from median values.
                  Default: -1 (no threshold)
                  
                     Example: gainthreshold=0.15 (only used the
                     gain solutions within 15% (inclusive) of the
                     median gain value (per field and per spw).
    antenna       Select data based on antenna/baseline
                                     Subparameter of antenna
                                     Default: '' (all)
                  
                                     If antenna string is a non-negative integer, it
                                     is assumed an antenna index, otherwise, it is
                                     assumed as an antenna name
                  
                                         Examples: 
                                         antenna='5&6'; baseline between antenna
                                         index 5 and index 6.
                                         antenna='VA05&VA06'; baseline between VLA
                                         antenna 5 and 6.
                                         antenna='5&6;7&8'; baselines with
                                         indices 5-6 and 7-8
                                         antenna='5'; all baselines with antenna index
                                         5
                                         antenna='05'; all baselines with antenna
                                         number 05 (VLA old name)
                                         antenna='5,6,10'; all baselines with antennas
                                         5,6,10 index numbers
    timerange     Select data based on time range
                  Subparameter of antenna
                  Default = '' (all)
                  
                     Examples:
                     timerange =
                     'YYYY/MM/DD/hh:mm:ss~YYYY/MM/DD/hh:mm:ss'
                     (Note: if YYYY/MM/DD is missing date defaults
                     to first day in data set.)
                     timerange='09:14:0~09:54:0' picks 40 min on
                     first day 
                     timerange= '25:00:00~27:30:00' picks 1 hr to 3
                     hr 30min on NEXT day
                     timerange='09:44:00' pick data within one
                     integration of time
                     timerange='>10:24:00' data after this time
    scan          Scan number range
                  Subparameter of antenna
                  Default: '' = all
    incremental   Create an incremental caltable containing only gain
                  correction factors ( flux density= 1/(gain correction factor)**2)?
                  Default: False
                  Options: False|True
                  
                     Example: incremental=True (output a caltable
                     containing flux scale factors.)
                  
                  NOTE: If you use the incremental option, note
                  that BOTH this incremental fluxscale table AND an
                  amplitude vs. time table should be supplied in
                  applycal.
    fitorder      Polynomial order of the spectral fitting for valid flux
                  densities
                  Default: 1
                  
                  It falls back to a lower fitorder if there are
                  not enough solutions to fit with the requested
                  fitorder.
    display       Display statistics and/or spectral fitting results.
                  Default: False
                  Options: False|True
                  
                  Currently only a histogram of the correction
                  factors to derive the final flux density for each
                  spectral window will be plotted.

    --------- examples -----------------------------------------------------------

    
    For more information, see the task pages of fluxscale in CASA Docs:
    
    https://casa.nrao.edu/casadocs/
    


    """

    _info_group_ = """calibration"""
    _info_desc_ = """Bootstrap the flux density scale from standard calibrators"""

    def __call__( self, vis='', caltable='', fluxtable='', reference=[  ], transfer=[  ], listfile='', append=False, refspwmap=[ int(-1) ], gainthreshold=float(-1.0), antenna='', timerange='', scan='', incremental=False, fitorder=int(1), display=False ):
        schema = {'vis': {'type': 'cReqPath', 'coerce': _coerce.expand_path}, 'caltable': {'type': 'cStr'}, 'fluxtable': {'type': 'cStr'}, 'reference': {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}, 'transfer': {'type': 'cStrVec', 'coerce': [_coerce.to_list,_coerce.to_strvec]}, 'listfile': {'type': 'cStr'}, 'append': {'type': 'cBool'}, 'refspwmap': {'type': 'cIntVec', 'coerce': [_coerce.to_list,_coerce.to_intvec]}, 'gainthreshold': {'type': 'cFloat', 'coerce': _coerce.to_float}, 'antenna': {'type': 'cStr'}, 'timerange': {'type': 'cStr'}, 'scan': {'type': 'cStr'}, 'incremental': {'type': 'cBool'}, 'fitorder': {'type': 'cInt'}, 'display': {'type': 'cBool'}}
        doc = {'vis': vis, 'caltable': caltable, 'fluxtable': fluxtable, 'reference': reference, 'transfer': transfer, 'listfile': listfile, 'append': append, 'refspwmap': refspwmap, 'gainthreshold': gainthreshold, 'antenna': antenna, 'timerange': timerange, 'scan': scan, 'incremental': incremental, 'fitorder': fitorder, 'display': display}
        assert _pc.validate(doc,schema), str(_pc.errors)
        _logging_state_ = _start_log( 'fluxscale', [ 'vis=' + repr(_pc.document['vis']), 'caltable=' + repr(_pc.document['caltable']), 'fluxtable=' + repr(_pc.document['fluxtable']), 'reference=' + repr(_pc.document['reference']), 'transfer=' + repr(_pc.document['transfer']), 'listfile=' + repr(_pc.document['listfile']), 'append=' + repr(_pc.document['append']), 'refspwmap=' + repr(_pc.document['refspwmap']), 'gainthreshold=' + repr(_pc.document['gainthreshold']), 'antenna=' + repr(_pc.document['antenna']), 'timerange=' + repr(_pc.document['timerange']), 'scan=' + repr(_pc.document['scan']), 'incremental=' + repr(_pc.document['incremental']), 'fitorder=' + repr(_pc.document['fitorder']), 'display=' + repr(_pc.document['display']) ] )
        return _end_log( _logging_state_, 'fluxscale', _fluxscale_t( _pc.document['vis'], _pc.document['caltable'], _pc.document['fluxtable'], _pc.document['reference'], _pc.document['transfer'], _pc.document['listfile'], _pc.document['append'], _pc.document['refspwmap'], _pc.document['gainthreshold'], _pc.document['antenna'], _pc.document['timerange'], _pc.document['scan'], _pc.document['incremental'], _pc.document['fitorder'], _pc.document['display'] ) )

fluxscale = _fluxscale( )

