# coding: utf-8

"""
    MN Frontoffice CORE & PERE

    Highly available and searchable datastore for MN  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.partnerschap import Partnerschap  # noqa: E501
from openapi_client.rest import ApiException

class TestPartnerschap(unittest.TestCase):
    """Partnerschap unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Partnerschap
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.partnerschap.Partnerschap()  # noqa: E501
        if include_optional :
            return Partnerschap(
                partner = openapi_client.models.persoons_gegevens_basic.PersoonsGegevensBasic(
                    burgerservicenummer = '0', 
                    persoonsnummer = '0', 
                    relatienummer = '0', 
                    anummer = '0', 
                    naam = '0', 
                    voornamen = '0', 
                    voorlettes = '0', 
                    voorvoegsels = '0', 
                    naamgebruik = '0', 
                    opgemaakte_naam = '0', 
                    voorkeursnaam = '0', 
                    geboortedatum = openapi_client.models.datum_delen.DatumDelen(
                        dag = 56, 
                        maand = 56, 
                        jaar = 56, ), 
                    overlijdensdatum = openapi_client.models.datum_delen.DatumDelen(
                        dag = 56, 
                        maand = 56, 
                        jaar = 56, ), 
                    geslacht = '0', 
                    partner_naam = '0', 
                    partner_voorvoegsels = '0', ), 
                soort = '0', 
                begindatum = openapi_client.models.datum_delen.DatumDelen(
                    dag = 56, 
                    maand = 56, 
                    jaar = 56, ), 
                einddatum = openapi_client.models.datum_delen.DatumDelen(
                    dag = 56, 
                    maand = 56, 
                    jaar = 56, )
            )
        else :
            return Partnerschap(
                partner = openapi_client.models.persoons_gegevens_basic.PersoonsGegevensBasic(
                    burgerservicenummer = '0', 
                    persoonsnummer = '0', 
                    relatienummer = '0', 
                    anummer = '0', 
                    naam = '0', 
                    voornamen = '0', 
                    voorlettes = '0', 
                    voorvoegsels = '0', 
                    naamgebruik = '0', 
                    opgemaakte_naam = '0', 
                    voorkeursnaam = '0', 
                    geboortedatum = openapi_client.models.datum_delen.DatumDelen(
                        dag = 56, 
                        maand = 56, 
                        jaar = 56, ), 
                    overlijdensdatum = openapi_client.models.datum_delen.DatumDelen(
                        dag = 56, 
                        maand = 56, 
                        jaar = 56, ), 
                    geslacht = '0', 
                    partner_naam = '0', 
                    partner_voorvoegsels = '0', ),
                soort = '0',
                begindatum = openapi_client.models.datum_delen.DatumDelen(
                    dag = 56, 
                    maand = 56, 
                    jaar = 56, ),
        )

    def testPartnerschap(self):
        """Test Partnerschap"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
