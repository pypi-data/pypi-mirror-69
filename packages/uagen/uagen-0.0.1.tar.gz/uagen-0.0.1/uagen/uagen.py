import random
from argparse import ArgumentParser, RawTextHelpFormatter


def base_platform():
    # ----------- win platform ------------
    NT_version = ['6.0', '6.1', '6.2', '6.3', '10.0']
    bit_type = ['86', '64']
    windows_pf = 'Windows NT {NT_version}; Win{bit_type}; x{bit_type};'.format(
        NT_version=random.choice(NT_version), bit_type=random.choice(bit_type))

    # ----------- linux platform ------------
    linux_system = ['CentOS', 'Ubuntu', 'Redhat', 'Debian', 'OpenSUSE', 'Fedora', 'RHEL']
    linux_pf = "X11; {linux_system}; Linux x86_64;".format(linux_system=random.choice(linux_system))

    # ----------- mac platform ------------
    mac_os_versions = ['10.{}'.format(x) for x in range(6, 16)]
    mac_pf = "Macintosh; Intel Mac OS X {mac_os_version};".format(
        mac_os_version=random.choice(mac_os_versions))

    platforms = [windows_pf, linux_pf, mac_pf]
    return random.choice(platforms)


def firefox_ua():
    gecko_versions = ['52.2.0esr', '53.0b2', '51.0b5', '52.0.2esr', '58.0b9', '70.0b12', '69.0b4', '63.0.3', '62.0b14', '69.0b5', '70.0', '60.0b15', '60.0', '54.0b2', '70.0b8', '62.0b6', '58.0b5', '58.0b12', '66.0', '66.0.2', '58.0b11', '52.0b7', '52.0b2', '63.0b11', '72.0b9', '60.4.0esr', '52.0.2', '69.0b7', '58.0b3', '69.0b6', '62.0b8', '68.0.1', '63.0b6', '57.0b7', '52.0b1', '52.5.2esr', '62.0b17', '61.0', '60.7.0esr', '58.0b14', '70.0b7', '66.0b9', '61.0b10', '55.0b1', '56.0b2', '59.0b13', '59.0b6', '65.0b7', '68.0.2', '67.0', '66.0b10', '54.0b3', '64.0b13', '60.0b7', '55.0b7', '51.0b7', '50.0b1', '67.0b17', '67.0.2', '71.0b7', '64.0b10', '65.0b6', '69.0b14', '72.0b1', '54.0b6', '67.0.3', '57.0b3', '52.1.1esr', '72.0b8', '64.0.2', '71.0b12', '62.0b3', '56.0b8', '69.0.3', '72.0b5', '50.0b3', '67.0b3', '59.0.3', '62.0b11', '52.0', '60.0b8', '60.3.0esr', '60.0b12', '63.0b14', '66.0b7', '59.0b14', '53.0.3', '55.0b12', '68.0b8', '72.0b3', '70.0b9', '67.0.1', '66.0b14', '63.0b12', '51.0b9', '57.0b14', '60.6.3esr', '60.8.0esr', '62.0b7', '50.1.0', '53.0b5', '66.0b12', '68.0b14', '50.0', '68.0b4', '72.0b2', '60.0b13', '56.0b12', '54.0b7', '64.0b8', '52.0b6', '69.0b16', '63.0b8', '70.0b11', '52.7.3esr', '54.0b11', '52.0b3', '52.1.2esr', '52.4.0esr', '55.0b8', '68.0b3', '58.0b15', '64.0b9', '50.0b7', '61.0b9', '65.0.2', '68.0esr', '58.0b10', '63.0.1', '57.0.3', '60.2.2esr', '60.0.1', '65.0b4', '63.0b5', '71.0b3', '53.0b1', '70.0b13', '68.1.0esr', '62.0b15', '61.0b8', '71.0b4', '54.0b9', '59.0b9', '65.0b11', '57.0b4', '63.0', '58.0b8', '57.0b12', '52.9.0esr', '68.0b5', '66.0b3', '70.0b10', '60.9.0esr', '57.0b9', '53.0.2', '68.3.0esr', '67.0b14', '52.1.0esr', '53.0b3', '57.0b8', '67.0.4', '53.0b8', '58.0b6', '52.7.4esr', '57.0b10', '51.0', '57.0b11', '52.0b5', '55.0b6', '51.0.1', '62.0.3', '70.0b14', '60.1.0esr', '60.7.1esr', '53.0', '56.0', '66.0.3', '67.0b6', '60.0b16', '64.0b14', '62.0', '58.0.1', '66.0.4', '63.0b4', '67.0b9', '57.0.4', '57.0.1', '66.0b6', '53.0b10', '60.6.1esr', '72.0b4', '58.0b4', '69.0b10', '64.0b5', '55.0b11', '59.0b8', '62.0b10', '62.0b5', '59.0b3', '52.8.0esr', '55.0.1', '55.0b9', '53.0b4', '55.0', '66.0b8', '50.0b8', '55.0.2', '52.3.0esr', '60.0b3', '67.0b8', '55.0b4', '51.0b13', '51.0b14', '55.0b13', '59.0', '67.0b4', '64.0b6', '56.0b11', '60.5.1esr', '63.0b10', '62.0b13', '69.0b8', '69.0b11', '61.0b3', '51.0b2', '57.0b6', '68.0b11', '51.0b8', '66.0.1', '56.0b1', '60.2.1esr', '54.0b4', '52.0.1esr', '63.0b3', '60.0b4', '63.0b13', '61.0b5', '52.0b9', '59.0b12', '59.0.2', '71.0b8', '56.0b9', '52.6.0esr', '57.0.2', '71.0b5', '60.0b14', '67.0b7', '52.0b8', '72.0b7', '56.0b6', '52.0.1', '67.0b13', '54.0.1', '52.8.1esr', '60.0b11', '67.0b12', '58.0b13', '68.0.1esr', '56.0b5', '66.0b4', '51.0b11', '57.0', '56.0b3', '57.0b13', '66.0b5', '67.0b19', '67.0b5', '54.0b8', '71.0b6', '71.0b11', '64.0b7', '69.0', '52.7.0esr', '65.0b5', '50.0.1', '70.0b6', '56.0.2', '62.0.2', '71.0b9', '58.0b7', '55.0b3', '57.0b5', '62.0b9', '70.0.1', '56.0b7', '60.0b10', '60.7.2esr', '65.0.1', '65.0b3', '52.0esr', '52.4.1esr', '54.0b13', '66.0b13', '50.0b9', '61.0b12', '59.0b10', '54.0b1', '58.0b16', '66.0.5', '59.0b7', '59.0b5', '61.0.1', '61.0.2', '51.0b3', '65.0b8', '67.0b15', '50.0.2', '50.0b4', '69.0b12', '69.0b3', '61.0b6', '51.0b1', '59.0b4', '61.0b11', '70.0b5', '72.0b6', '50.0b6', '50.0b11', '69.0.1', '69.0b9', '71.0b10', '69.0.2', '59.0b11', '64.0b11', '52.5.0esr', '58.0.2', '68.0b12', '68.0b7', '58.0', '61.0b4', '63.0b7', '55.0b5', '60.2.0esr', '51.0b10', '65.0b12', '61.0b13', '67.0b16', '63.0b9', '68.2.0esr', '53.0b9', '62.0b20', '53.0b7', '60.0b6', '68.0b9', '60.0.2', '66.0b11', '50.0b10', '68.0b13', '68.0b10', '54.0b12', '60.0.2esr', '60.6.2esr', '52.2.1esr', '55.0b2', '62.0b19', '64.0b3', '52.7.1esr', '68.0', '67.0b18', '64.0', '61.0b7', '56.0b4', '64.0b12', '53.0b6', '62.0b18', '56.0.1', '51.0b12', '60.6.0esr', '60.0b9', '64.0b4', '65.0b9', '56.0b10', '55.0b10', '62.0b4', '65.0', '60.5.0esr', '60.5.2esr', '61.0b14', '50.0b5', '54.0b5', '62.0b16', '60.0b5', '68.0b6', '62.0b12', '51.0b6', '60.0esr', '68.0.2esr', '52.0b4', '60.0.1esr', '70.0b3', '54.0', '59.0.1', '51.0b4', '71.0', '55.0.3', '69.0b13', '67.0b10', '52.5.3esr', '70.0b4', '67.0b11', '54.0b10', '52.7.2esr', '69.0b15', '65.0b10', '50.0b2']
    f_ua = "Mozilla/5.0 ({platform} rv:{geckoversion}) Gecko/20100101 Firefox/{geckoversion}".format(
        platform=base_platform(), geckoversion=random.choice(gecko_versions))
    return f_ua


def chrome_ua():
    apple_versions = ['534.51.22', '537.50', '537.36', '534.44', '534.46', '534.52.7', '534.53.11', '534.54.16 ', '534.55.3', '534.57.2', '534.59.8', '535.11', '535.20', '535.24', '535.6', '535.7', '535.8', '536.11', '536.2', '536.3', '536.29.13', '536.26', '537.36']
    chrome_versions = ['69.0.3493.3', '77.0.3865.90', '69.0.3497.42', '76.0.3809.71', '74.0.3729.169', '68.0.3440.84', '74.0.3724.8', '73.0.3683.10', '67.0.3386.1', '66.0.3359.170', '65.0.3325.146', '72.0.3626.64', '68.0.3440.15', '73.0.3683.20', '64.0.3282.168', '72.0.3626.96', '69.0.3464.0', '73.0.3683.103', '77.0.3865.120', '80.0.3970.5', '78.0.3904.9', '64.0.3282.71', '76.0.3806.1', '70.0.3510.2', '72.0.3610.2', '75.0.3770.90', '66.0.3343.3', '64.0.3282.140', '65.0.3311.3', '70.0.3528.4', '73.0.3683.86', '72.0.3626.119', '80.0.3964.0', '75.0.3770.142', '78.0.3904.87', '67.0.3396.10', '75.0.3753.4', '72.0.3595.2', '79.0.3945.79', '76.0.3809.80', '68.0.3440.106', '79.0.3945.36', '75.0.3770.66', '66.0.3359.181', '67.0.3393.4', '68.0.3440.68', '65.0.3322.3', '80.0.3987.7', '78.0.3895.5', '66.0.3359.139', '76.0.3788.1', '70.0.3538.77', '69.0.3497.32', '69.0.3486.0', '68.0.3423.2', '66.0.3359.45', '78.0.3904.97', '65.0.3325.181', '79.0.3945.88', '77.0.3865.42', '68.0.3440.59', '67.0.3396.62', '72.0.3626.17', '76.0.3809.87', '73.0.3683.75', '69.0.3497.57', '74.0.3717.0', '73.0.3683.56', '70.0.3521.2', '68.0.3440.42', '79.0.3945.29', '80.0.3987.16', '71.0.3554.0', '75.0.3745.4', '77.0.3865.70', '75.0.3770.80', '65.0.3325.18', '78.0.3904.44', '74.0.3702.0', '76.0.3809.62', '70.0.3538.110', '67.0.3396.40', '71.0.3573.0', '79.0.3945.45', '76.0.3809.46', '67.0.3396.56', '74.0.3729.75', '75.0.3770.8', '67.0.3381.1', '72.0.3622.0', '66.0.3346.8', '67.0.3396.30', '77.0.3854.3', '65.0.3315.3', '66.0.3359.66', '77.0.3865.56', '69.0.3497.72', '77.0.3831.6', '76.0.3809.132', '69.0.3497.81', '73.0.3639.1', '73.0.3679.0', '79.0.3945.70', '76.0.3809.36', '66.0.3350.0', '68.0.3440.25', '65.0.3325.162', '76.0.3809.25', '64.0.3282.113', '77.0.3865.19', '74.0.3710.0', '68.0.3438.3', '77.0.3865.65', '70.0.3534.4', '69.0.3497.100', '78.0.3904.108', '71.0.3559.6', '67.0.3377.1', '74.0.3729.157', '66.0.3359.33', '78.0.3902.4', '69.0.3497.92', '78.0.3904.34', '75.0.3770.52', '65.0.3325.88', '72.0.3590.0', '72.0.3626.14', '67.0.3396.99', '76.0.3809.12', '64.0.3282.85', '75.0.3770.38', '77.0.3860.5', '70.0.3514.0', '81.0.4000.3', '69.0.3452.0', '68.0.3418.2', '67.0.3371.0', '68.0.3440.75', '78.0.3904.70', '74.0.3729.61', '71.0.3578.30', '64.0.3282.167', '71.0.3578.53', '71.0.3578.10', '69.0.3497.12', '77.0.3865.10', '75.0.3770.87', '67.0.3396.18', '73.0.3664.3', '68.0.3440.7', '79.0.3945.16', '78.0.3904.21', '66.0.3359.117', '76.0.3800.0', '67.0.3396.48', '78.0.3887.7', '74.0.3729.131', '65.0.3325.51', '79.0.3945.56', '64.0.3282.119', '72.0.3626.7', '71.0.3578.62', '73.0.3683.39', '77.0.3865.35', '72.0.3626.53', '79.0.3928.4', '75.0.3759.4', '72.0.3626.28', '71.0.3551.3', '77.0.3833.0', '71.0.3578.98', '70.0.3538.54', '78.0.3904.50', '73.0.3683.27', '70.0.3538.102', '72.0.3626.121', '70.0.3538.9', '79.0.3921.0', '71.0.3578.80', '68.0.3440.33', '65.0.3325.73', '70.0.3538.22', '72.0.3626.109', '68.0.3440.17', '73.0.3642.0', '75.0.3770.15', '75.0.3766.2', '71.0.3578.20', '67.0.3396.87', '64.0.3282.99', '75.0.3770.27', '78.0.3880.4', '68.0.3432.3', '71.0.3569.0', '80.0.3983.2', '74.0.3729.91', '69.0.3497.23', '75.0.3770.100', '68.0.3409.2', '63.0.3239.132', '69.0.3472.3', '70.0.3538.67', '67.0.3396.79', '64.0.3282.186', '76.0.3809.21', '72.0.3626.81', '78.0.3904.17', '77.0.3865.75', '70.0.3538.16', '78.0.3876.0', '70.0.3538.45', '66.0.3359.81', '66.0.3355.0', '76.0.3809.100', '77.0.3824.6', '74.0.3729.40', '74.0.3729.108', '71.0.3578.44', '65.0.3325.32', '79.0.3941.4', '70.0.3538.35', '66.0.3359.106']
    ch_ua = "Mozilla/5.0 ({platform}) AppleWebKit/{ap_version} (KHTML, like Gecko) Chrome/{chrome_v} Safari/{ap_version}".format(
        platform=base_platform(), ap_version=random.choice(apple_versions),
        chrome_v=random.choice(chrome_versions)
    )
    return ch_ua


def opera_ua():
    opr_versions = ['55.0.2994.59', '53.0.2907.110', '63.0.3368.54789', '56.0.3051.52', '45.0.2552.892', '60.0.3255.170', '62.0.3331.81', '63.0.3368.43', '62.0.3331.116', '46.0.2597.61', '60.0.3255.151', '56.0.3051.116', '62.0.3331.117', '63.0.3368.57388', '42.0.2393.85', '45.0.2552.635', '54.0.2952.60', '44.0.2510.1159', '44.0.2510.1449', '49.0.2725.56', '60.0.3255.109', '42.0.2393.137', '54.0.2952.71', '62.0.3331.119', '49.0.2725.34', '62.0.3331.66', '43.0.2442.1165', '65.0.3467.42', '53.0.2907.99', '64.0.3417.61', '60.0.3255.50962', '51.0.2830.26', '64.0.3417.92', '62.0.3331.105', '62.0.3331.52', '48.0.2685.39', '57.0.3098.106', '56.0.3051.36', '63.0.3368.55362', '50.0.2762.67', '63.0.3368.94', '62.0.3331.132', '58.0.3135.132', '65.0.3467.72', '60.0.3255.50747', '55.0.2994.56', '52.0.2871.99', '57.0.3098.116', '49.0.2725.39', '58.0.3135.47', '60.0.3255.27', '62.0.3331.101', '63.0.3368.107', '48.0.2685.52', '58.0.3135.127', '62.0.3331.96', '55.0.2994.61', '63.0.3368.75', '65.0.3467.78', '60.0.3255.141', '47.0.2631.39', '49.0.2725.47', '46.0.2597.57', '40.0.2308.54', '53.0.2907.88', '63.0.3368.56078', '53.0.2907.57', '64.0.3417.119', '53.0.2907.37', '56.0.3051.31', '54.0.2952.41', '62.0.3331.99', '44.0.2510.857', '63.0.3368.54979', '56.0.3051.104', '41.0.2353.56', '48.0.2685.35', '53.0.2907.106', '58.0.3135.79', '60.0.3255.51199', '43.0.2442.1144', '47.0.2631.71', '62.0.3331.43', '58.0.3135.65', '45.0.2552.884', '58.0.3135.117', '50.0.2762.45', '46.0.2597.26', '45.0.2552.881', '42.0.2393.351', '46.0.2597.46', '40.0.2308.90', '64.0.3417.54', '43.0.2442.806', '64.0.3417.70', '52.0.2871.97', '51.0.2830.34', '63.0.3368.57756', '52.0.2871.64', '44.0.2510.1218', '56.0.3051.35', '63.0.3368.66', '64.0.3417.73', '49.0.2725.43', '58.0.3135.68', '62.0.3331.18', '64.0.3417.47', '63.0.3368.35', '45.0.2552.812', '56.0.3051.99', '54.0.2952.51', '65.0.3467.48', '45.0.2552.869', '48.0.2685.50', '62.0.3331.72', '63.0.3368.53', '47.0.2631.48', '53.0.2907.68', '52.0.2871.37', '46.0.2597.32', '58.0.3135.107', '58.0.3135.90', '60.0.3255.160', '42.0.2393.94', '60.0.3255.56', '42.0.2393.517', '60.0.3255.84', '63.0.3368.55666', '48.0.2685.32', '47.0.2631.83', '51.0.2830.62', '41.0.2353.69', '45.0.2552.888', '56.0.3051.43', '57.0.3098.110', '65.0.3467.38', '54.0.2952.54', '58.0.3135.53', '52.0.2871.30', '40.0.2308.81', '57.0.3098.91', '57.0.3098.102', '60.0.3255.116', '40.0.2308.75', '64.0.3417.83', '43.0.2442.991', '63.0.3368.71', '41.0.2353.46', '55.0.2994.44', '46.0.2597.39', '65.0.3467.69', '60.0.3255.59', '63.0.3368.88', '49.0.2725.64', '60.0.3255.125', '63.0.3368.56786', '55.0.2994.37', '47.0.2631.55', '58.0.3135.118', '50.0.2762.58', '64.0.3417.126', '65.0.3467.62', '51.0.2830.55', '60.0.3255.95', '54.0.2952.46', '54.0.2952.64', '57.0.3098.76', '51.0.2830.40', '52.0.2871.40', '56.0.3051.102', '47.0.2631.80', '60.0.3255.83', '45.0.2552.898', '60.0.3255.70', '40.0.2308.62']
    op_ua = chrome_ua() + ' OPR/' + random.choice(opr_versions)
    return op_ua


def random_ua():
    ua_func = random.choice([
        firefox_ua,
        chrome_ua,
        opera_ua
    ])
    return ua_func()


def uagen():
    dp = '    这是一个随机 UA 生成工具，如果你不确定怎么使用，请参考 README.md。\n' \
         '    https://github.com/ga1008/uagen'
    da = ""
    parser = ArgumentParser(description=dp, formatter_class=RawTextHelpFormatter, add_help=True)
    parser.add_argument("-m", "--mode", type=str, dest="mode", default='random',
                        help=f'{da}生成模式：random/firefox/chrome/opera，默认 random')
    args = parser.parse_args()
    mode = args.mode
    mode_dic = {
        "random": random_ua,
        "firefox": firefox_ua,
        "chrome": chrome_ua,
        "opera": opera_ua
    }
    print(mode_dic.get(mode, random_ua)())


if __name__ == '__main__':
    # print(opera())
    print(random_ua())
