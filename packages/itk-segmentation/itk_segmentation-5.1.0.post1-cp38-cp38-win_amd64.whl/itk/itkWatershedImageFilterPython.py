# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkWatershedImageFilterPython
else:
    import _itkWatershedImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkWatershedImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkWatershedImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImagePython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkWatershedImageFilterID2_New():
    return itkWatershedImageFilterID2.New()

class itkWatershedImageFilterID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IULL2):
    r"""Proxy of C++ itkWatershedImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterID2_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterID2_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterID2_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterID2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterID2
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterID2

        Create a new object of the class itkWatershedImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterID2 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterID2_swigregister(itkWatershedImageFilterID2)
itkWatershedImageFilterID2___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterID2___New_orig__
itkWatershedImageFilterID2_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterID2_cast


def itkWatershedImageFilterID3_New():
    return itkWatershedImageFilterID3.New()

class itkWatershedImageFilterID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IULL3):
    r"""Proxy of C++ itkWatershedImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterID3_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterID3_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterID3_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterID3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterID3
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterID3

        Create a new object of the class itkWatershedImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterID3 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterID3_swigregister(itkWatershedImageFilterID3)
itkWatershedImageFilterID3___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterID3___New_orig__
itkWatershedImageFilterID3_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterID3_cast


def itkWatershedImageFilterIF2_New():
    return itkWatershedImageFilterIF2.New()

class itkWatershedImageFilterIF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IULL2):
    r"""Proxy of C++ itkWatershedImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIF2_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIF2_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIF2_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIF2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterIF2
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterIF2

        Create a new object of the class itkWatershedImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterIF2 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterIF2_swigregister(itkWatershedImageFilterIF2)
itkWatershedImageFilterIF2___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterIF2___New_orig__
itkWatershedImageFilterIF2_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterIF2_cast


def itkWatershedImageFilterIF3_New():
    return itkWatershedImageFilterIF3.New()

class itkWatershedImageFilterIF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IULL3):
    r"""Proxy of C++ itkWatershedImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIF3_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIF3_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIF3_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIF3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterIF3
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterIF3

        Create a new object of the class itkWatershedImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterIF3 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterIF3_swigregister(itkWatershedImageFilterIF3)
itkWatershedImageFilterIF3___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterIF3___New_orig__
itkWatershedImageFilterIF3_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterIF3_cast


def itkWatershedImageFilterISS2_New():
    return itkWatershedImageFilterISS2.New()

class itkWatershedImageFilterISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IULL2):
    r"""Proxy of C++ itkWatershedImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterISS2_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterISS2_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterISS2_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterISS2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterISS2
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterISS2

        Create a new object of the class itkWatershedImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterISS2 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterISS2_swigregister(itkWatershedImageFilterISS2)
itkWatershedImageFilterISS2___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterISS2___New_orig__
itkWatershedImageFilterISS2_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterISS2_cast


def itkWatershedImageFilterISS3_New():
    return itkWatershedImageFilterISS3.New()

class itkWatershedImageFilterISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IULL3):
    r"""Proxy of C++ itkWatershedImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterISS3_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterISS3_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterISS3_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterISS3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterISS3
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterISS3

        Create a new object of the class itkWatershedImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterISS3 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterISS3_swigregister(itkWatershedImageFilterISS3)
itkWatershedImageFilterISS3___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterISS3___New_orig__
itkWatershedImageFilterISS3_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterISS3_cast


def itkWatershedImageFilterIUC2_New():
    return itkWatershedImageFilterIUC2.New()

class itkWatershedImageFilterIUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IULL2):
    r"""Proxy of C++ itkWatershedImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterIUC2
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterIUC2

        Create a new object of the class itkWatershedImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterIUC2 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_swigregister(itkWatershedImageFilterIUC2)
itkWatershedImageFilterIUC2___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC2___New_orig__
itkWatershedImageFilterIUC2_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC2_cast


def itkWatershedImageFilterIUC3_New():
    return itkWatershedImageFilterIUC3.New()

class itkWatershedImageFilterIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IULL3):
    r"""Proxy of C++ itkWatershedImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterIUC3
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterIUC3

        Create a new object of the class itkWatershedImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterIUC3 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_swigregister(itkWatershedImageFilterIUC3)
itkWatershedImageFilterIUC3___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC3___New_orig__
itkWatershedImageFilterIUC3_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterIUC3_cast


def itkWatershedImageFilterIUS2_New():
    return itkWatershedImageFilterIUS2.New()

class itkWatershedImageFilterIUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IULL2):
    r"""Proxy of C++ itkWatershedImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterIUS2
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterIUS2

        Create a new object of the class itkWatershedImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterIUS2 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_swigregister(itkWatershedImageFilterIUS2)
itkWatershedImageFilterIUS2___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS2___New_orig__
itkWatershedImageFilterIUS2_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS2_cast


def itkWatershedImageFilterIUS3_New():
    return itkWatershedImageFilterIUS3.New()

class itkWatershedImageFilterIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IULL3):
    r"""Proxy of C++ itkWatershedImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_Clone)
    GenerateData = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_GenerateData)
    SetInput = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_SetInput)
    SetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_GetThreshold)
    SetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_SetLevel)
    GetLevel = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_GetLevel)
    GetBasicSegmentation = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_GetBasicSegmentation)
    GetSegmentTree = _swig_new_instance_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_GetSegmentTree)
    InputEqualityComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_InputEqualityComparableCheck
    
    InputAdditiveOperatorsCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_InputAdditiveOperatorsCheck
    
    DoubleInputMultiplyOperatorCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_DoubleInputMultiplyOperatorCheck
    
    InputLessThanComparableCheck = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkWatershedImageFilterPython.delete_itkWatershedImageFilterIUS3
    cast = _swig_new_static_method(_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkWatershedImageFilterIUS3

        Create a new object of the class itkWatershedImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWatershedImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWatershedImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWatershedImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWatershedImageFilterIUS3 in _itkWatershedImageFilterPython:
_itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_swigregister(itkWatershedImageFilterIUS3)
itkWatershedImageFilterIUS3___New_orig__ = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS3___New_orig__
itkWatershedImageFilterIUS3_cast = _itkWatershedImageFilterPython.itkWatershedImageFilterIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def watershed_image_filter(*args, **kwargs):
    """Procedural interface for WatershedImageFilter"""
    import itk
    instance = itk.WatershedImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def watershed_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.WatershedImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.WatershedImageFilter.values()[0]
    else:
        filter_object = itk.WatershedImageFilter

    watershed_image_filter.__doc__ = filter_object.__doc__
    watershed_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    watershed_image_filter.__doc__ += "Available Keyword Arguments:\n"
    watershed_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



